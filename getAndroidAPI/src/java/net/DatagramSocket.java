// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   DatagramSocket.java

package java.net;

import java.io.Closeable;
import java.io.IOException;
import java.nio.channels.DatagramChannel;

// Referenced classes of package java.net:
//            SocketException, DatagramSocketImpl, SocketAddress, InetAddress, 
//            DatagramPacket, DatagramSocketImplFactory

public class DatagramSocket
    implements Closeable
{

    public DatagramSocket()
        throws SocketException
    {
        throw new RuntimeException("Stub!");
    }

    protected DatagramSocket(DatagramSocketImpl impl)
    {
        throw new RuntimeException("Stub!");
    }

    public DatagramSocket(SocketAddress bindaddr)
        throws SocketException
    {
        throw new RuntimeException("Stub!");
    }

    public DatagramSocket(int port)
        throws SocketException
    {
        throw new RuntimeException("Stub!");
    }

    public DatagramSocket(int port, InetAddress laddr)
        throws SocketException
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized void bind(SocketAddress addr)
        throws SocketException
    {
        throw new RuntimeException("Stub!");
    }

    public void connect(InetAddress address, int port)
    {
        throw new RuntimeException("Stub!");
    }

    public void connect(SocketAddress addr)
        throws SocketException
    {
        throw new RuntimeException("Stub!");
    }

    public void disconnect()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isBound()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isConnected()
    {
        throw new RuntimeException("Stub!");
    }

    public InetAddress getInetAddress()
    {
        throw new RuntimeException("Stub!");
    }

    public int getPort()
    {
        throw new RuntimeException("Stub!");
    }

    public SocketAddress getRemoteSocketAddress()
    {
        throw new RuntimeException("Stub!");
    }

    public SocketAddress getLocalSocketAddress()
    {
        throw new RuntimeException("Stub!");
    }

    public void send(DatagramPacket p)
        throws IOException
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized void receive(DatagramPacket p)
        throws IOException
    {
        throw new RuntimeException("Stub!");
    }

    public InetAddress getLocalAddress()
    {
        throw new RuntimeException("Stub!");
    }

    public int getLocalPort()
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized void setSoTimeout(int timeout)
        throws SocketException
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized int getSoTimeout()
        throws SocketException
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized void setSendBufferSize(int size)
        throws SocketException
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized int getSendBufferSize()
        throws SocketException
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized void setReceiveBufferSize(int size)
        throws SocketException
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized int getReceiveBufferSize()
        throws SocketException
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized void setReuseAddress(boolean on)
        throws SocketException
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized boolean getReuseAddress()
        throws SocketException
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized void setBroadcast(boolean on)
        throws SocketException
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized boolean getBroadcast()
        throws SocketException
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized void setTrafficClass(int tc)
        throws SocketException
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized int getTrafficClass()
        throws SocketException
    {
        throw new RuntimeException("Stub!");
    }

    public void close()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isClosed()
    {
        throw new RuntimeException("Stub!");
    }

    public DatagramChannel getChannel()
    {
        throw new RuntimeException("Stub!");
    }

    public static synchronized void setDatagramSocketImplFactory(DatagramSocketImplFactory fac)
        throws IOException
    {
        throw new RuntimeException("Stub!");
    }
}
