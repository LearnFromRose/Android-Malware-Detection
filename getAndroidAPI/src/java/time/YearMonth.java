// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   YearMonth.java

package java.time;

import java.io.Serializable;
import java.time.format.DateTimeFormatter;
import java.time.temporal.*;

// Referenced classes of package java.time:
//            ZoneId, Clock, Month, LocalDate

public final class YearMonth
    implements Temporal, TemporalAdjuster, Comparable, Serializable
{

    YearMonth(int year, int month)
    {
        throw new RuntimeException("Stub!");
    }

    public static YearMonth now()
    {
        throw new RuntimeException("Stub!");
    }

    public static YearMonth now(ZoneId zone)
    {
        throw new RuntimeException("Stub!");
    }

    public static YearMonth now(Clock clock)
    {
        throw new RuntimeException("Stub!");
    }

    public static YearMonth of(int year, Month month)
    {
        throw new RuntimeException("Stub!");
    }

    public static YearMonth of(int year, int month)
    {
        throw new RuntimeException("Stub!");
    }

    public static YearMonth from(TemporalAccessor temporal)
    {
        throw new RuntimeException("Stub!");
    }

    public static YearMonth parse(CharSequence text)
    {
        throw new RuntimeException("Stub!");
    }

    public static YearMonth parse(CharSequence text, DateTimeFormatter formatter)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isSupported(TemporalField field)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isSupported(TemporalUnit unit)
    {
        throw new RuntimeException("Stub!");
    }

    public ValueRange range(TemporalField field)
    {
        throw new RuntimeException("Stub!");
    }

    public int get(TemporalField field)
    {
        throw new RuntimeException("Stub!");
    }

    public long getLong(TemporalField field)
    {
        throw new RuntimeException("Stub!");
    }

    public int getYear()
    {
        throw new RuntimeException("Stub!");
    }

    public int getMonthValue()
    {
        throw new RuntimeException("Stub!");
    }

    public Month getMonth()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isLeapYear()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isValidDay(int dayOfMonth)
    {
        throw new RuntimeException("Stub!");
    }

    public int lengthOfMonth()
    {
        throw new RuntimeException("Stub!");
    }

    public int lengthOfYear()
    {
        throw new RuntimeException("Stub!");
    }

    public YearMonth with(TemporalAdjuster adjuster)
    {
        throw new RuntimeException("Stub!");
    }

    public YearMonth with(TemporalField field, long newValue)
    {
        throw new RuntimeException("Stub!");
    }

    public YearMonth withYear(int year)
    {
        throw new RuntimeException("Stub!");
    }

    public YearMonth withMonth(int month)
    {
        throw new RuntimeException("Stub!");
    }

    public YearMonth plus(TemporalAmount amountToAdd)
    {
        throw new RuntimeException("Stub!");
    }

    public YearMonth plus(long amountToAdd, TemporalUnit unit)
    {
        throw new RuntimeException("Stub!");
    }

    public YearMonth plusYears(long yearsToAdd)
    {
        throw new RuntimeException("Stub!");
    }

    public YearMonth plusMonths(long monthsToAdd)
    {
        throw new RuntimeException("Stub!");
    }

    public YearMonth minus(TemporalAmount amountToSubtract)
    {
        throw new RuntimeException("Stub!");
    }

    public YearMonth minus(long amountToSubtract, TemporalUnit unit)
    {
        throw new RuntimeException("Stub!");
    }

    public YearMonth minusYears(long yearsToSubtract)
    {
        throw new RuntimeException("Stub!");
    }

    public YearMonth minusMonths(long monthsToSubtract)
    {
        throw new RuntimeException("Stub!");
    }

    public Object query(TemporalQuery query)
    {
        throw new RuntimeException("Stub!");
    }

    public Temporal adjustInto(Temporal temporal)
    {
        throw new RuntimeException("Stub!");
    }

    public long until(Temporal endExclusive, TemporalUnit unit)
    {
        throw new RuntimeException("Stub!");
    }

    public String format(DateTimeFormatter formatter)
    {
        throw new RuntimeException("Stub!");
    }

    public LocalDate atDay(int dayOfMonth)
    {
        throw new RuntimeException("Stub!");
    }

    public LocalDate atEndOfMonth()
    {
        throw new RuntimeException("Stub!");
    }

    public int compareTo(YearMonth other)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isAfter(YearMonth other)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isBefore(YearMonth other)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean equals(Object obj)
    {
        throw new RuntimeException("Stub!");
    }

    public int hashCode()
    {
        throw new RuntimeException("Stub!");
    }

    public String toString()
    {
        throw new RuntimeException("Stub!");
    }

    public volatile Temporal minus(long l, TemporalUnit temporalunit)
    {
        return minus(l, temporalunit);
    }

    public volatile Temporal minus(TemporalAmount temporalamount)
    {
        return minus(temporalamount);
    }

    public volatile Temporal plus(long l, TemporalUnit temporalunit)
    {
        return plus(l, temporalunit);
    }

    public volatile Temporal plus(TemporalAmount temporalamount)
    {
        return plus(temporalamount);
    }

    public volatile Temporal with(TemporalField temporalfield, long l)
    {
        return with(temporalfield, l);
    }

    public volatile Temporal with(TemporalAdjuster temporaladjuster)
    {
        return with(temporaladjuster);
    }

    public volatile int compareTo(Object obj)
    {
        return compareTo((YearMonth)obj);
    }
}
