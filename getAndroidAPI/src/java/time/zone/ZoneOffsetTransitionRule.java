// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   ZoneOffsetTransitionRule.java

package java.time.zone;

import java.io.Serializable;
import java.time.*;

// Referenced classes of package java.time.zone:
//            ZoneOffsetTransition

public final class ZoneOffsetTransitionRule
    implements Serializable
{
    public static final class TimeDefinition extends Enum
    {

        public static TimeDefinition[] values()
        {
            return (TimeDefinition[])$VALUES.clone();
        }

        public static TimeDefinition valueOf(String name)
        {
            return (TimeDefinition)Enum.valueOf(java/time/zone/ZoneOffsetTransitionRule$TimeDefinition, name);
        }

        public LocalDateTime createDateTime(LocalDateTime dateTime, ZoneOffset standardOffset, ZoneOffset wallOffset)
        {
            throw new RuntimeException("Stub!");
        }

        public static final TimeDefinition UTC;
        public static final TimeDefinition WALL;
        public static final TimeDefinition STANDARD;
        private static final TimeDefinition $VALUES[];

        static 
        {
            UTC = new TimeDefinition("UTC", 0);
            WALL = new TimeDefinition("WALL", 1);
            STANDARD = new TimeDefinition("STANDARD", 2);
            $VALUES = (new TimeDefinition[] {
                UTC, WALL, STANDARD
            });
        }

        private TimeDefinition(String s, int i)
        {
            super(s, i);
        }
    }


    ZoneOffsetTransitionRule(Month month, int dayOfMonthIndicator, DayOfWeek dayOfWeek, LocalTime time, boolean timeEndOfDay, TimeDefinition timeDefnition, ZoneOffset standardOffset, 
            ZoneOffset offsetBefore, ZoneOffset offsetAfter)
    {
        throw new RuntimeException("Stub!");
    }

    public static ZoneOffsetTransitionRule of(Month month, int dayOfMonthIndicator, DayOfWeek dayOfWeek, LocalTime time, boolean timeEndOfDay, TimeDefinition timeDefnition, ZoneOffset standardOffset, ZoneOffset offsetBefore, 
            ZoneOffset offsetAfter)
    {
        throw new RuntimeException("Stub!");
    }

    public Month getMonth()
    {
        throw new RuntimeException("Stub!");
    }

    public int getDayOfMonthIndicator()
    {
        throw new RuntimeException("Stub!");
    }

    public DayOfWeek getDayOfWeek()
    {
        throw new RuntimeException("Stub!");
    }

    public LocalTime getLocalTime()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isMidnightEndOfDay()
    {
        throw new RuntimeException("Stub!");
    }

    public TimeDefinition getTimeDefinition()
    {
        throw new RuntimeException("Stub!");
    }

    public ZoneOffset getStandardOffset()
    {
        throw new RuntimeException("Stub!");
    }

    public ZoneOffset getOffsetBefore()
    {
        throw new RuntimeException("Stub!");
    }

    public ZoneOffset getOffsetAfter()
    {
        throw new RuntimeException("Stub!");
    }

    public ZoneOffsetTransition createTransition(int year)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean equals(Object otherRule)
    {
        throw new RuntimeException("Stub!");
    }

    public int hashCode()
    {
        throw new RuntimeException("Stub!");
    }

    public String toString()
    {
        throw new RuntimeException("Stub!");
    }
}
