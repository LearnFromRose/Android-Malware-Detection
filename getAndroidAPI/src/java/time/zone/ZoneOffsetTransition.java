// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   ZoneOffsetTransition.java

package java.time.zone;

import java.io.Serializable;
import java.time.*;

public final class ZoneOffsetTransition
    implements Comparable, Serializable
{

    ZoneOffsetTransition(LocalDateTime transition, ZoneOffset offsetBefore, ZoneOffset offsetAfter)
    {
        throw new RuntimeException("Stub!");
    }

    public static ZoneOffsetTransition of(LocalDateTime transition, ZoneOffset offsetBefore, ZoneOffset offsetAfter)
    {
        throw new RuntimeException("Stub!");
    }

    public Instant getInstant()
    {
        throw new RuntimeException("Stub!");
    }

    public long toEpochSecond()
    {
        throw new RuntimeException("Stub!");
    }

    public LocalDateTime getDateTimeBefore()
    {
        throw new RuntimeException("Stub!");
    }

    public LocalDateTime getDateTimeAfter()
    {
        throw new RuntimeException("Stub!");
    }

    public ZoneOffset getOffsetBefore()
    {
        throw new RuntimeException("Stub!");
    }

    public ZoneOffset getOffsetAfter()
    {
        throw new RuntimeException("Stub!");
    }

    public Duration getDuration()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isGap()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isOverlap()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isValidOffset(ZoneOffset offset)
    {
        throw new RuntimeException("Stub!");
    }

    public int compareTo(ZoneOffsetTransition transition)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean equals(Object other)
    {
        throw new RuntimeException("Stub!");
    }

    public int hashCode()
    {
        throw new RuntimeException("Stub!");
    }

    public String toString()
    {
        throw new RuntimeException("Stub!");
    }

    public volatile int compareTo(Object obj)
    {
        return compareTo((ZoneOffsetTransition)obj);
    }
}
