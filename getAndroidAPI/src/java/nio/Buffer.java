// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   Buffer.java

package java.nio;


public abstract class Buffer
{

    Buffer(int mark, int pos, int lim, int cap, int elementSizeShift)
    {
        throw new RuntimeException("Stub!");
    }

    public final int capacity()
    {
        throw new RuntimeException("Stub!");
    }

    public final int position()
    {
        throw new RuntimeException("Stub!");
    }

    public Buffer position(int newPosition)
    {
        throw new RuntimeException("Stub!");
    }

    public final int limit()
    {
        throw new RuntimeException("Stub!");
    }

    public Buffer limit(int newLimit)
    {
        throw new RuntimeException("Stub!");
    }

    public Buffer mark()
    {
        throw new RuntimeException("Stub!");
    }

    public Buffer reset()
    {
        throw new RuntimeException("Stub!");
    }

    public Buffer clear()
    {
        throw new RuntimeException("Stub!");
    }

    public Buffer flip()
    {
        throw new RuntimeException("Stub!");
    }

    public Buffer rewind()
    {
        throw new RuntimeException("Stub!");
    }

    public final int remaining()
    {
        throw new RuntimeException("Stub!");
    }

    public final boolean hasRemaining()
    {
        throw new RuntimeException("Stub!");
    }

    public abstract boolean isReadOnly();

    public abstract boolean hasArray();

    public abstract Object array();

    public abstract int arrayOffset();

    public abstract boolean isDirect();
}
