// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   Path.java

package java.nio.file;

import java.io.File;
import java.io.IOException;
import java.net.URI;
import java.util.Iterator;

// Referenced classes of package java.nio.file:
//            Watchable, WatchEvent, FileSystem, LinkOption, 
//            WatchService, WatchKey

public interface Path
    extends Comparable, Iterable, Watchable
{

    public abstract FileSystem getFileSystem();

    public abstract boolean isAbsolute();

    public abstract Path getRoot();

    public abstract Path getFileName();

    public abstract Path getParent();

    public abstract int getNameCount();

    public abstract Path getName(int i);

    public abstract Path subpath(int i, int j);

    public abstract boolean startsWith(Path path);

    public abstract boolean startsWith(String s);

    public abstract boolean endsWith(Path path);

    public abstract boolean endsWith(String s);

    public abstract Path normalize();

    public abstract Path resolve(Path path);

    public abstract Path resolve(String s);

    public abstract Path resolveSibling(Path path);

    public abstract Path resolveSibling(String s);

    public abstract Path relativize(Path path);

    public abstract URI toUri();

    public abstract Path toAbsolutePath();

    public transient abstract Path toRealPath(LinkOption alinkoption[])
        throws IOException;

    public abstract File toFile();

    public transient abstract WatchKey register(WatchService watchservice, WatchEvent.Kind akind[], WatchEvent.Modifier amodifier[])
        throws IOException;

    public transient abstract WatchKey register(WatchService watchservice, WatchEvent.Kind akind[])
        throws IOException;

    public abstract Iterator iterator();

    public abstract int compareTo(Path path);

    public abstract boolean equals(Object obj);

    public abstract int hashCode();

    public abstract String toString();

    public volatile int compareTo(Object obj)
    {
        return compareTo((Path)obj);
    }
}
