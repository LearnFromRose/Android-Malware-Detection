// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   Map.java

package java.util;

import java.util.function.*;

// Referenced classes of package java.util:
//            Set, Collection, Comparator

public interface Map
{
    public static interface Entry
    {

        public abstract Object getKey();

        public abstract Object getValue();

        public abstract Object setValue(Object obj);

        public abstract boolean equals(Object obj);

        public abstract int hashCode();

        public static Comparator comparingByKey()
        {
            throw new RuntimeException("Stub!");
        }

        public static Comparator comparingByValue()
        {
            throw new RuntimeException("Stub!");
        }

        public static Comparator comparingByKey(Comparator cmp)
        {
            throw new RuntimeException("Stub!");
        }

        public static Comparator comparingByValue(Comparator cmp)
        {
            throw new RuntimeException("Stub!");
        }
    }


    public abstract int size();

    public abstract boolean isEmpty();

    public abstract boolean containsKey(Object obj);

    public abstract boolean containsValue(Object obj);

    public abstract Object get(Object obj);

    public abstract Object put(Object obj, Object obj1);

    public abstract Object remove(Object obj);

    public abstract void putAll(Map map);

    public abstract void clear();

    public abstract Set keySet();

    public abstract Collection values();

    public abstract Set entrySet();

    public abstract boolean equals(Object obj);

    public abstract int hashCode();

    public Object getOrDefault(Object key, Object defaultValue)
    {
        throw new RuntimeException("Stub!");
    }

    public void forEach(BiConsumer action)
    {
        throw new RuntimeException("Stub!");
    }

    public void replaceAll(BiFunction function)
    {
        throw new RuntimeException("Stub!");
    }

    public Object putIfAbsent(Object key, Object value)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean remove(Object key, Object value)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean replace(Object key, Object oldValue, Object newValue)
    {
        throw new RuntimeException("Stub!");
    }

    public Object replace(Object key, Object value)
    {
        throw new RuntimeException("Stub!");
    }

    public Object computeIfAbsent(Object key, Function mappingFunction)
    {
        throw new RuntimeException("Stub!");
    }

    public Object computeIfPresent(Object key, BiFunction remappingFunction)
    {
        throw new RuntimeException("Stub!");
    }

    public Object compute(Object key, BiFunction remappingFunction)
    {
        throw new RuntimeException("Stub!");
    }

    public Object merge(Object key, Object value, BiFunction remappingFunction)
    {
        throw new RuntimeException("Stub!");
    }
}
