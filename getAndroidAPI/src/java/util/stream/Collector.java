// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   Collector.java

package java.util.stream;

import java.util.Set;
import java.util.function.*;

public interface Collector
{
    public static final class Characteristics extends Enum
    {

        public static Characteristics[] values()
        {
            return (Characteristics[])$VALUES.clone();
        }

        public static Characteristics valueOf(String name)
        {
            return (Characteristics)Enum.valueOf(java/util/stream/Collector$Characteristics, name);
        }

        public static final Characteristics CONCURRENT;
        public static final Characteristics UNORDERED;
        public static final Characteristics IDENTITY_FINISH;
        private static final Characteristics $VALUES[];

        static 
        {
            CONCURRENT = new Characteristics("CONCURRENT", 0);
            UNORDERED = new Characteristics("UNORDERED", 1);
            IDENTITY_FINISH = new Characteristics("IDENTITY_FINISH", 2);
            $VALUES = (new Characteristics[] {
                CONCURRENT, UNORDERED, IDENTITY_FINISH
            });
        }

        private Characteristics(String s, int i)
        {
            super(s, i);
        }
    }


    public abstract Supplier supplier();

    public abstract BiConsumer accumulator();

    public abstract BinaryOperator combiner();

    public abstract Function finisher();

    public abstract Set characteristics();

    public static transient Collector of(Supplier supplier, BiConsumer accumulator, BinaryOperator combiner, Characteristics characteristics[])
    {
        throw new RuntimeException("Stub!");
    }

    public static transient Collector of(Supplier supplier, BiConsumer accumulator, BinaryOperator combiner, Function finisher, Characteristics characteristics[])
    {
        throw new RuntimeException("Stub!");
    }
}
