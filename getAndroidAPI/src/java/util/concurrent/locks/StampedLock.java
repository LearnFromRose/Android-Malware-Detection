// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   StampedLock.java

package java.util.concurrent.locks;

import java.io.Serializable;
import java.util.concurrent.TimeUnit;

// Referenced classes of package java.util.concurrent.locks:
//            Lock, ReadWriteLock

public class StampedLock
    implements Serializable
{

    public StampedLock()
    {
        throw new RuntimeException("Stub!");
    }

    public long writeLock()
    {
        throw new RuntimeException("Stub!");
    }

    public long tryWriteLock()
    {
        throw new RuntimeException("Stub!");
    }

    public long tryWriteLock(long time, TimeUnit unit)
        throws InterruptedException
    {
        throw new RuntimeException("Stub!");
    }

    public long writeLockInterruptibly()
        throws InterruptedException
    {
        throw new RuntimeException("Stub!");
    }

    public long readLock()
    {
        throw new RuntimeException("Stub!");
    }

    public long tryReadLock()
    {
        throw new RuntimeException("Stub!");
    }

    public long tryReadLock(long time, TimeUnit unit)
        throws InterruptedException
    {
        throw new RuntimeException("Stub!");
    }

    public long readLockInterruptibly()
        throws InterruptedException
    {
        throw new RuntimeException("Stub!");
    }

    public long tryOptimisticRead()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean validate(long stamp)
    {
        throw new RuntimeException("Stub!");
    }

    public void unlockWrite(long stamp)
    {
        throw new RuntimeException("Stub!");
    }

    public void unlockRead(long stamp)
    {
        throw new RuntimeException("Stub!");
    }

    public void unlock(long stamp)
    {
        throw new RuntimeException("Stub!");
    }

    public long tryConvertToWriteLock(long stamp)
    {
        throw new RuntimeException("Stub!");
    }

    public long tryConvertToReadLock(long stamp)
    {
        throw new RuntimeException("Stub!");
    }

    public long tryConvertToOptimisticRead(long stamp)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean tryUnlockWrite()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean tryUnlockRead()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isWriteLocked()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isReadLocked()
    {
        throw new RuntimeException("Stub!");
    }

    public int getReadLockCount()
    {
        throw new RuntimeException("Stub!");
    }

    public String toString()
    {
        throw new RuntimeException("Stub!");
    }

    public Lock asReadLock()
    {
        throw new RuntimeException("Stub!");
    }

    public Lock asWriteLock()
    {
        throw new RuntimeException("Stub!");
    }

    public ReadWriteLock asReadWriteLock()
    {
        throw new RuntimeException("Stub!");
    }
}
