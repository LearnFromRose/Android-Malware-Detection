// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   BlockingDeque.java

package java.util.concurrent;

import java.util.Deque;
import java.util.Iterator;

// Referenced classes of package java.util.concurrent:
//            BlockingQueue, TimeUnit

public interface BlockingDeque
    extends BlockingQueue, Deque
{

    public abstract void addFirst(Object obj);

    public abstract void addLast(Object obj);

    public abstract boolean offerFirst(Object obj);

    public abstract boolean offerLast(Object obj);

    public abstract void putFirst(Object obj)
        throws InterruptedException;

    public abstract void putLast(Object obj)
        throws InterruptedException;

    public abstract boolean offerFirst(Object obj, long l, TimeUnit timeunit)
        throws InterruptedException;

    public abstract boolean offerLast(Object obj, long l, TimeUnit timeunit)
        throws InterruptedException;

    public abstract Object takeFirst()
        throws InterruptedException;

    public abstract Object takeLast()
        throws InterruptedException;

    public abstract Object pollFirst(long l, TimeUnit timeunit)
        throws InterruptedException;

    public abstract Object pollLast(long l, TimeUnit timeunit)
        throws InterruptedException;

    public abstract boolean removeFirstOccurrence(Object obj);

    public abstract boolean removeLastOccurrence(Object obj);

    public abstract boolean add(Object obj);

    public abstract boolean offer(Object obj);

    public abstract void put(Object obj)
        throws InterruptedException;

    public abstract boolean offer(Object obj, long l, TimeUnit timeunit)
        throws InterruptedException;

    public abstract Object remove();

    public abstract Object poll();

    public abstract Object take()
        throws InterruptedException;

    public abstract Object poll(long l, TimeUnit timeunit)
        throws InterruptedException;

    public abstract Object element();

    public abstract Object peek();

    public abstract boolean remove(Object obj);

    public abstract boolean contains(Object obj);

    public abstract int size();

    public abstract Iterator iterator();

    public abstract void push(Object obj);
}
