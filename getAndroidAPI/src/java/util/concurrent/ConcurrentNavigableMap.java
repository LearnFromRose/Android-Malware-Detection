// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   ConcurrentNavigableMap.java

package java.util.concurrent;

import java.util.*;

// Referenced classes of package java.util.concurrent:
//            ConcurrentMap

public interface ConcurrentNavigableMap
    extends ConcurrentMap, NavigableMap
{

    public abstract ConcurrentNavigableMap subMap(Object obj, boolean flag, Object obj1, boolean flag1);

    public abstract ConcurrentNavigableMap headMap(Object obj, boolean flag);

    public abstract ConcurrentNavigableMap tailMap(Object obj, boolean flag);

    public abstract ConcurrentNavigableMap subMap(Object obj, Object obj1);

    public abstract ConcurrentNavigableMap headMap(Object obj);

    public abstract ConcurrentNavigableMap tailMap(Object obj);

    public abstract ConcurrentNavigableMap descendingMap();

    public abstract NavigableSet navigableKeySet();

    public abstract NavigableSet keySet();

    public abstract NavigableSet descendingKeySet();

    public volatile Set keySet()
    {
        return keySet();
    }

    public volatile SortedMap tailMap(Object obj)
    {
        return tailMap(obj);
    }

    public volatile SortedMap headMap(Object obj)
    {
        return headMap(obj);
    }

    public volatile SortedMap subMap(Object obj, Object obj1)
    {
        return subMap(obj, obj1);
    }

    public volatile NavigableMap tailMap(Object obj, boolean flag)
    {
        return tailMap(obj, flag);
    }

    public volatile NavigableMap headMap(Object obj, boolean flag)
    {
        return headMap(obj, flag);
    }

    public volatile NavigableMap subMap(Object obj, boolean flag, Object obj1, boolean flag1)
    {
        return subMap(obj, flag, obj1, flag1);
    }

    public volatile NavigableMap descendingMap()
    {
        return descendingMap();
    }
}
