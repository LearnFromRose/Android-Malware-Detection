// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   AtomicMarkableReference.java

package java.util.concurrent.atomic;


public class AtomicMarkableReference
{

    public AtomicMarkableReference(Object initialRef, boolean initialMark)
    {
        throw new RuntimeException("Stub!");
    }

    public Object getReference()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isMarked()
    {
        throw new RuntimeException("Stub!");
    }

    public Object get(boolean markHolder[])
    {
        throw new RuntimeException("Stub!");
    }

    public boolean weakCompareAndSet(Object expectedReference, Object newReference, boolean expectedMark, boolean newMark)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean compareAndSet(Object expectedReference, Object newReference, boolean expectedMark, boolean newMark)
    {
        throw new RuntimeException("Stub!");
    }

    public void set(Object newReference, boolean newMark)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean attemptMark(Object expectedReference, boolean newMark)
    {
        throw new RuntimeException("Stub!");
    }
}
