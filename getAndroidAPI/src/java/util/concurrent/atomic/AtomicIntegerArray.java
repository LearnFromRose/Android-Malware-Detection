// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   AtomicIntegerArray.java

package java.util.concurrent.atomic;

import java.io.Serializable;
import java.util.function.IntBinaryOperator;
import java.util.function.IntUnaryOperator;

public class AtomicIntegerArray
    implements Serializable
{

    public AtomicIntegerArray(int length)
    {
        throw new RuntimeException("Stub!");
    }

    public AtomicIntegerArray(int array[])
    {
        throw new RuntimeException("Stub!");
    }

    public final int length()
    {
        throw new RuntimeException("Stub!");
    }

    public final int get(int i)
    {
        throw new RuntimeException("Stub!");
    }

    public final void set(int i, int newValue)
    {
        throw new RuntimeException("Stub!");
    }

    public final void lazySet(int i, int newValue)
    {
        throw new RuntimeException("Stub!");
    }

    public final int getAndSet(int i, int newValue)
    {
        throw new RuntimeException("Stub!");
    }

    public final boolean compareAndSet(int i, int expect, int update)
    {
        throw new RuntimeException("Stub!");
    }

    public final boolean weakCompareAndSet(int i, int expect, int update)
    {
        throw new RuntimeException("Stub!");
    }

    public final int getAndIncrement(int i)
    {
        throw new RuntimeException("Stub!");
    }

    public final int getAndDecrement(int i)
    {
        throw new RuntimeException("Stub!");
    }

    public final int getAndAdd(int i, int delta)
    {
        throw new RuntimeException("Stub!");
    }

    public final int incrementAndGet(int i)
    {
        throw new RuntimeException("Stub!");
    }

    public final int decrementAndGet(int i)
    {
        throw new RuntimeException("Stub!");
    }

    public final int addAndGet(int i, int delta)
    {
        throw new RuntimeException("Stub!");
    }

    public final int getAndUpdate(int i, IntUnaryOperator updateFunction)
    {
        throw new RuntimeException("Stub!");
    }

    public final int updateAndGet(int i, IntUnaryOperator updateFunction)
    {
        throw new RuntimeException("Stub!");
    }

    public final int getAndAccumulate(int i, int x, IntBinaryOperator accumulatorFunction)
    {
        throw new RuntimeException("Stub!");
    }

    public final int accumulateAndGet(int i, int x, IntBinaryOperator accumulatorFunction)
    {
        throw new RuntimeException("Stub!");
    }

    public String toString()
    {
        throw new RuntimeException("Stub!");
    }
}
