// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   AtomicLong.java

package java.util.concurrent.atomic;

import java.io.Serializable;
import java.util.function.LongBinaryOperator;
import java.util.function.LongUnaryOperator;

public class AtomicLong extends Number
    implements Serializable
{

    public AtomicLong(long initialValue)
    {
        throw new RuntimeException("Stub!");
    }

    public AtomicLong()
    {
        throw new RuntimeException("Stub!");
    }

    public final long get()
    {
        throw new RuntimeException("Stub!");
    }

    public final void set(long newValue)
    {
        throw new RuntimeException("Stub!");
    }

    public final void lazySet(long newValue)
    {
        throw new RuntimeException("Stub!");
    }

    public final long getAndSet(long newValue)
    {
        throw new RuntimeException("Stub!");
    }

    public final boolean compareAndSet(long expect, long update)
    {
        throw new RuntimeException("Stub!");
    }

    public final boolean weakCompareAndSet(long expect, long update)
    {
        throw new RuntimeException("Stub!");
    }

    public final long getAndIncrement()
    {
        throw new RuntimeException("Stub!");
    }

    public final long getAndDecrement()
    {
        throw new RuntimeException("Stub!");
    }

    public final long getAndAdd(long delta)
    {
        throw new RuntimeException("Stub!");
    }

    public final long incrementAndGet()
    {
        throw new RuntimeException("Stub!");
    }

    public final long decrementAndGet()
    {
        throw new RuntimeException("Stub!");
    }

    public final long addAndGet(long delta)
    {
        throw new RuntimeException("Stub!");
    }

    public final long getAndUpdate(LongUnaryOperator updateFunction)
    {
        throw new RuntimeException("Stub!");
    }

    public final long updateAndGet(LongUnaryOperator updateFunction)
    {
        throw new RuntimeException("Stub!");
    }

    public final long getAndAccumulate(long x, LongBinaryOperator accumulatorFunction)
    {
        throw new RuntimeException("Stub!");
    }

    public final long accumulateAndGet(long x, LongBinaryOperator accumulatorFunction)
    {
        throw new RuntimeException("Stub!");
    }

    public String toString()
    {
        throw new RuntimeException("Stub!");
    }

    public int intValue()
    {
        throw new RuntimeException("Stub!");
    }

    public long longValue()
    {
        throw new RuntimeException("Stub!");
    }

    public float floatValue()
    {
        throw new RuntimeException("Stub!");
    }

    public double doubleValue()
    {
        throw new RuntimeException("Stub!");
    }
}
