// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   AtomicReferenceArray.java

package java.util.concurrent.atomic;

import java.io.Serializable;
import java.util.function.BinaryOperator;
import java.util.function.UnaryOperator;

public class AtomicReferenceArray
    implements Serializable
{

    public AtomicReferenceArray(int length)
    {
        throw new RuntimeException("Stub!");
    }

    public AtomicReferenceArray(Object array[])
    {
        throw new RuntimeException("Stub!");
    }

    public final int length()
    {
        throw new RuntimeException("Stub!");
    }

    public final Object get(int i)
    {
        throw new RuntimeException("Stub!");
    }

    public final void set(int i, Object newValue)
    {
        throw new RuntimeException("Stub!");
    }

    public final void lazySet(int i, Object newValue)
    {
        throw new RuntimeException("Stub!");
    }

    public final Object getAndSet(int i, Object newValue)
    {
        throw new RuntimeException("Stub!");
    }

    public final boolean compareAndSet(int i, Object expect, Object update)
    {
        throw new RuntimeException("Stub!");
    }

    public final boolean weakCompareAndSet(int i, Object expect, Object update)
    {
        throw new RuntimeException("Stub!");
    }

    public final Object getAndUpdate(int i, UnaryOperator updateFunction)
    {
        throw new RuntimeException("Stub!");
    }

    public final Object updateAndGet(int i, UnaryOperator updateFunction)
    {
        throw new RuntimeException("Stub!");
    }

    public final Object getAndAccumulate(int i, Object x, BinaryOperator accumulatorFunction)
    {
        throw new RuntimeException("Stub!");
    }

    public final Object accumulateAndGet(int i, Object x, BinaryOperator accumulatorFunction)
    {
        throw new RuntimeException("Stub!");
    }

    public String toString()
    {
        throw new RuntimeException("Stub!");
    }
}
