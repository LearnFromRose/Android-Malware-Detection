// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   AtomicLongFieldUpdater.java

package java.util.concurrent.atomic;

import java.util.function.LongBinaryOperator;
import java.util.function.LongUnaryOperator;

public abstract class AtomicLongFieldUpdater
{

    protected AtomicLongFieldUpdater()
    {
        throw new RuntimeException("Stub!");
    }

    public static AtomicLongFieldUpdater newUpdater(Class tclass, String fieldName)
    {
        throw new RuntimeException("Stub!");
    }

    public abstract boolean compareAndSet(Object obj, long l, long l1);

    public abstract boolean weakCompareAndSet(Object obj, long l, long l1);

    public abstract void set(Object obj, long l);

    public abstract void lazySet(Object obj, long l);

    public abstract long get(Object obj);

    public long getAndSet(Object obj, long newValue)
    {
        throw new RuntimeException("Stub!");
    }

    public long getAndIncrement(Object obj)
    {
        throw new RuntimeException("Stub!");
    }

    public long getAndDecrement(Object obj)
    {
        throw new RuntimeException("Stub!");
    }

    public long getAndAdd(Object obj, long delta)
    {
        throw new RuntimeException("Stub!");
    }

    public long incrementAndGet(Object obj)
    {
        throw new RuntimeException("Stub!");
    }

    public long decrementAndGet(Object obj)
    {
        throw new RuntimeException("Stub!");
    }

    public long addAndGet(Object obj, long delta)
    {
        throw new RuntimeException("Stub!");
    }

    public final long getAndUpdate(Object obj, LongUnaryOperator updateFunction)
    {
        throw new RuntimeException("Stub!");
    }

    public final long updateAndGet(Object obj, LongUnaryOperator updateFunction)
    {
        throw new RuntimeException("Stub!");
    }

    public final long getAndAccumulate(Object obj, long x, LongBinaryOperator accumulatorFunction)
    {
        throw new RuntimeException("Stub!");
    }

    public final long accumulateAndGet(Object obj, long x, LongBinaryOperator accumulatorFunction)
    {
        throw new RuntimeException("Stub!");
    }
}
