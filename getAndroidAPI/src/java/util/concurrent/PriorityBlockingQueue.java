// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   PriorityBlockingQueue.java

package java.util.concurrent;

import java.io.Serializable;
import java.util.*;

// Referenced classes of package java.util.concurrent:
//            BlockingQueue, TimeUnit

public class PriorityBlockingQueue extends AbstractQueue
    implements BlockingQueue, Serializable
{

    public PriorityBlockingQueue()
    {
        throw new RuntimeException("Stub!");
    }

    public PriorityBlockingQueue(int initialCapacity)
    {
        throw new RuntimeException("Stub!");
    }

    public PriorityBlockingQueue(int initialCapacity, Comparator comparator)
    {
        throw new RuntimeException("Stub!");
    }

    public PriorityBlockingQueue(Collection c)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean add(Object e)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean offer(Object e)
    {
        throw new RuntimeException("Stub!");
    }

    public void put(Object e)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean offer(Object e, long timeout, TimeUnit unit)
    {
        throw new RuntimeException("Stub!");
    }

    public Object poll()
    {
        throw new RuntimeException("Stub!");
    }

    public Object take()
        throws InterruptedException
    {
        throw new RuntimeException("Stub!");
    }

    public Object poll(long timeout, TimeUnit unit)
        throws InterruptedException
    {
        throw new RuntimeException("Stub!");
    }

    public Object peek()
    {
        throw new RuntimeException("Stub!");
    }

    public Comparator comparator()
    {
        throw new RuntimeException("Stub!");
    }

    public int size()
    {
        throw new RuntimeException("Stub!");
    }

    public int remainingCapacity()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean remove(Object o)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean contains(Object o)
    {
        throw new RuntimeException("Stub!");
    }

    public String toString()
    {
        throw new RuntimeException("Stub!");
    }

    public int drainTo(Collection c)
    {
        throw new RuntimeException("Stub!");
    }

    public int drainTo(Collection c, int maxElements)
    {
        throw new RuntimeException("Stub!");
    }

    public void clear()
    {
        throw new RuntimeException("Stub!");
    }

    public Object[] toArray()
    {
        throw new RuntimeException("Stub!");
    }

    public Object[] toArray(Object a[])
    {
        throw new RuntimeException("Stub!");
    }

    public Iterator iterator()
    {
        throw new RuntimeException("Stub!");
    }

    public Spliterator spliterator()
    {
        throw new RuntimeException("Stub!");
    }
}
