// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   ConcurrentMap.java

package java.util.concurrent;

import java.util.Map;
import java.util.function.*;

public interface ConcurrentMap
    extends Map
{

    public Object getOrDefault(Object key, Object defaultValue)
    {
        throw new RuntimeException("Stub!");
    }

    public void forEach(BiConsumer action)
    {
        throw new RuntimeException("Stub!");
    }

    public abstract Object putIfAbsent(Object obj, Object obj1);

    public abstract boolean remove(Object obj, Object obj1);

    public abstract boolean replace(Object obj, Object obj1, Object obj2);

    public abstract Object replace(Object obj, Object obj1);

    public void replaceAll(BiFunction function)
    {
        throw new RuntimeException("Stub!");
    }

    public Object computeIfAbsent(Object key, Function mappingFunction)
    {
        throw new RuntimeException("Stub!");
    }

    public Object computeIfPresent(Object key, BiFunction remappingFunction)
    {
        throw new RuntimeException("Stub!");
    }

    public Object compute(Object key, BiFunction remappingFunction)
    {
        throw new RuntimeException("Stub!");
    }

    public Object merge(Object key, Object value, BiFunction remappingFunction)
    {
        throw new RuntimeException("Stub!");
    }
}
