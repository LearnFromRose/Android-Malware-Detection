// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   CountedCompleter.java

package java.util.concurrent;


// Referenced classes of package java.util.concurrent:
//            ForkJoinTask

public abstract class CountedCompleter extends ForkJoinTask
{

    protected CountedCompleter(CountedCompleter completer, int initialPendingCount)
    {
        throw new RuntimeException("Stub!");
    }

    protected CountedCompleter(CountedCompleter completer)
    {
        throw new RuntimeException("Stub!");
    }

    protected CountedCompleter()
    {
        throw new RuntimeException("Stub!");
    }

    public abstract void compute();

    public void onCompletion(CountedCompleter caller)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean onExceptionalCompletion(Throwable ex, CountedCompleter caller)
    {
        throw new RuntimeException("Stub!");
    }

    public final CountedCompleter getCompleter()
    {
        throw new RuntimeException("Stub!");
    }

    public final int getPendingCount()
    {
        throw new RuntimeException("Stub!");
    }

    public final void setPendingCount(int count)
    {
        throw new RuntimeException("Stub!");
    }

    public final void addToPendingCount(int delta)
    {
        throw new RuntimeException("Stub!");
    }

    public final boolean compareAndSetPendingCount(int expected, int count)
    {
        throw new RuntimeException("Stub!");
    }

    public final int decrementPendingCountUnlessZero()
    {
        throw new RuntimeException("Stub!");
    }

    public final CountedCompleter getRoot()
    {
        throw new RuntimeException("Stub!");
    }

    public final void tryComplete()
    {
        throw new RuntimeException("Stub!");
    }

    public final void propagateCompletion()
    {
        throw new RuntimeException("Stub!");
    }

    public void complete(Object rawResult)
    {
        throw new RuntimeException("Stub!");
    }

    public final CountedCompleter firstComplete()
    {
        throw new RuntimeException("Stub!");
    }

    public final CountedCompleter nextComplete()
    {
        throw new RuntimeException("Stub!");
    }

    public final void quietlyCompleteRoot()
    {
        throw new RuntimeException("Stub!");
    }

    public final void helpComplete(int maxTasks)
    {
        throw new RuntimeException("Stub!");
    }

    protected final boolean exec()
    {
        throw new RuntimeException("Stub!");
    }

    public Object getRawResult()
    {
        throw new RuntimeException("Stub!");
    }

    protected void setRawResult(Object t)
    {
        throw new RuntimeException("Stub!");
    }
}
