// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   TimeUnit.java

package java.util.concurrent;


public final class TimeUnit extends Enum
{

    public static TimeUnit[] values()
    {
        return (TimeUnit[])$VALUES.clone();
    }

    public static TimeUnit valueOf(String name)
    {
        return (TimeUnit)Enum.valueOf(java/util/concurrent/TimeUnit, name);
    }

    private TimeUnit(String s, int i)
    {
        super(s, i);
    }

    public long convert(long sourceDuration, TimeUnit sourceUnit)
    {
        throw new RuntimeException("Stub!");
    }

    public long toNanos(long duration)
    {
        throw new RuntimeException("Stub!");
    }

    public long toMicros(long duration)
    {
        throw new RuntimeException("Stub!");
    }

    public long toMillis(long duration)
    {
        throw new RuntimeException("Stub!");
    }

    public long toSeconds(long duration)
    {
        throw new RuntimeException("Stub!");
    }

    public long toMinutes(long duration)
    {
        throw new RuntimeException("Stub!");
    }

    public long toHours(long duration)
    {
        throw new RuntimeException("Stub!");
    }

    public long toDays(long duration)
    {
        throw new RuntimeException("Stub!");
    }

    public void timedWait(Object obj, long timeout)
        throws InterruptedException
    {
        throw new RuntimeException("Stub!");
    }

    public void timedJoin(Thread thread, long timeout)
        throws InterruptedException
    {
        throw new RuntimeException("Stub!");
    }

    public void sleep(long timeout)
        throws InterruptedException
    {
        throw new RuntimeException("Stub!");
    }

    public static final TimeUnit NANOSECONDS;
    public static final TimeUnit MICROSECONDS;
    public static final TimeUnit MILLISECONDS;
    public static final TimeUnit SECONDS;
    public static final TimeUnit MINUTES;
    public static final TimeUnit HOURS;
    public static final TimeUnit DAYS;
    private static final TimeUnit $VALUES[];

    static 
    {
        NANOSECONDS = new TimeUnit("NANOSECONDS", 0);
        MICROSECONDS = new TimeUnit("MICROSECONDS", 1);
        MILLISECONDS = new TimeUnit("MILLISECONDS", 2);
        SECONDS = new TimeUnit("SECONDS", 3);
        MINUTES = new TimeUnit("MINUTES", 4);
        HOURS = new TimeUnit("HOURS", 5);
        DAYS = new TimeUnit("DAYS", 6);
        $VALUES = (new TimeUnit[] {
            NANOSECONDS, MICROSECONDS, MILLISECONDS, SECONDS, MINUTES, HOURS, DAYS
        });
    }
}
