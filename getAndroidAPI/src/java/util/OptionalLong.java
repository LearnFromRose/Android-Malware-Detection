// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   OptionalLong.java

package java.util;

import java.util.function.*;

public final class OptionalLong
{

    OptionalLong()
    {
        throw new RuntimeException("Stub!");
    }

    public static OptionalLong empty()
    {
        throw new RuntimeException("Stub!");
    }

    public static OptionalLong of(long value)
    {
        throw new RuntimeException("Stub!");
    }

    public long getAsLong()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isPresent()
    {
        throw new RuntimeException("Stub!");
    }

    public void ifPresent(LongConsumer consumer)
    {
        throw new RuntimeException("Stub!");
    }

    public long orElse(long other)
    {
        throw new RuntimeException("Stub!");
    }

    public long orElseGet(LongSupplier other)
    {
        throw new RuntimeException("Stub!");
    }

    public long orElseThrow(Supplier exceptionSupplier)
        throws Throwable
    {
        throw new RuntimeException("Stub!");
    }

    public boolean equals(Object obj)
    {
        throw new RuntimeException("Stub!");
    }

    public int hashCode()
    {
        throw new RuntimeException("Stub!");
    }

    public String toString()
    {
        throw new RuntimeException("Stub!");
    }
}
