// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   ArrayDeque.java

package java.util;

import java.io.Serializable;

// Referenced classes of package java.util:
//            AbstractCollection, Deque, Collection, Iterator, 
//            Spliterator

public class ArrayDeque extends AbstractCollection
    implements Deque, Cloneable, Serializable
{

    public ArrayDeque()
    {
        throw new RuntimeException("Stub!");
    }

    public ArrayDeque(int numElements)
    {
        throw new RuntimeException("Stub!");
    }

    public ArrayDeque(Collection c)
    {
        throw new RuntimeException("Stub!");
    }

    public void addFirst(Object e)
    {
        throw new RuntimeException("Stub!");
    }

    public void addLast(Object e)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean offerFirst(Object e)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean offerLast(Object e)
    {
        throw new RuntimeException("Stub!");
    }

    public Object removeFirst()
    {
        throw new RuntimeException("Stub!");
    }

    public Object removeLast()
    {
        throw new RuntimeException("Stub!");
    }

    public Object pollFirst()
    {
        throw new RuntimeException("Stub!");
    }

    public Object pollLast()
    {
        throw new RuntimeException("Stub!");
    }

    public Object getFirst()
    {
        throw new RuntimeException("Stub!");
    }

    public Object getLast()
    {
        throw new RuntimeException("Stub!");
    }

    public Object peekFirst()
    {
        throw new RuntimeException("Stub!");
    }

    public Object peekLast()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean removeFirstOccurrence(Object o)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean removeLastOccurrence(Object o)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean add(Object e)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean offer(Object e)
    {
        throw new RuntimeException("Stub!");
    }

    public Object remove()
    {
        throw new RuntimeException("Stub!");
    }

    public Object poll()
    {
        throw new RuntimeException("Stub!");
    }

    public Object element()
    {
        throw new RuntimeException("Stub!");
    }

    public Object peek()
    {
        throw new RuntimeException("Stub!");
    }

    public void push(Object e)
    {
        throw new RuntimeException("Stub!");
    }

    public Object pop()
    {
        throw new RuntimeException("Stub!");
    }

    public int size()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isEmpty()
    {
        throw new RuntimeException("Stub!");
    }

    public Iterator iterator()
    {
        throw new RuntimeException("Stub!");
    }

    public Iterator descendingIterator()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean contains(Object o)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean remove(Object o)
    {
        throw new RuntimeException("Stub!");
    }

    public void clear()
    {
        throw new RuntimeException("Stub!");
    }

    public Object[] toArray()
    {
        throw new RuntimeException("Stub!");
    }

    public Object[] toArray(Object a[])
    {
        throw new RuntimeException("Stub!");
    }

    public ArrayDeque clone()
    {
        throw new RuntimeException("Stub!");
    }

    public Spliterator spliterator()
    {
        throw new RuntimeException("Stub!");
    }

    public volatile Object clone()
        throws CloneNotSupportedException
    {
        return clone();
    }
}
