// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   PrimitiveIterator.java

package java.util;

import java.util.function.*;

// Referenced classes of package java.util:
//            Iterator

public interface PrimitiveIterator
    extends Iterator
{
    public static interface OfLong
        extends PrimitiveIterator
    {

        public abstract long nextLong();

        public void forEachRemaining(LongConsumer action)
        {
            throw new RuntimeException("Stub!");
        }

        public Long next()
        {
            throw new RuntimeException("Stub!");
        }

        public void forEachRemaining(Consumer action)
        {
            throw new RuntimeException("Stub!");
        }

        public volatile void forEachRemaining(Object obj)
        {
            forEachRemaining((LongConsumer)obj);
        }

        public volatile Object next()
        {
            return next();
        }
    }

    public static interface OfInt
        extends PrimitiveIterator
    {

        public abstract int nextInt();

        public void forEachRemaining(IntConsumer action)
        {
            throw new RuntimeException("Stub!");
        }

        public Integer next()
        {
            throw new RuntimeException("Stub!");
        }

        public void forEachRemaining(Consumer action)
        {
            throw new RuntimeException("Stub!");
        }

        public volatile void forEachRemaining(Object obj)
        {
            forEachRemaining((IntConsumer)obj);
        }

        public volatile Object next()
        {
            return next();
        }
    }

    public static interface OfDouble
        extends PrimitiveIterator
    {

        public abstract double nextDouble();

        public void forEachRemaining(DoubleConsumer action)
        {
            throw new RuntimeException("Stub!");
        }

        public Double next()
        {
            throw new RuntimeException("Stub!");
        }

        public void forEachRemaining(Consumer action)
        {
            throw new RuntimeException("Stub!");
        }

        public volatile void forEachRemaining(Object obj)
        {
            forEachRemaining((DoubleConsumer)obj);
        }

        public volatile Object next()
        {
            return next();
        }
    }


    public abstract void forEachRemaining(Object obj);
}
