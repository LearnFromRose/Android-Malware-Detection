// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   BitSet.java

package java.util;

import java.io.Serializable;
import java.nio.ByteBuffer;
import java.nio.LongBuffer;
import java.util.stream.IntStream;

public class BitSet
    implements Cloneable, Serializable
{

    public BitSet()
    {
        throw new RuntimeException("Stub!");
    }

    public BitSet(int nbits)
    {
        throw new RuntimeException("Stub!");
    }

    public static BitSet valueOf(long longs[])
    {
        throw new RuntimeException("Stub!");
    }

    public static BitSet valueOf(LongBuffer lb)
    {
        throw new RuntimeException("Stub!");
    }

    public static BitSet valueOf(byte bytes[])
    {
        throw new RuntimeException("Stub!");
    }

    public static BitSet valueOf(ByteBuffer bb)
    {
        throw new RuntimeException("Stub!");
    }

    public byte[] toByteArray()
    {
        throw new RuntimeException("Stub!");
    }

    public long[] toLongArray()
    {
        throw new RuntimeException("Stub!");
    }

    public void flip(int bitIndex)
    {
        throw new RuntimeException("Stub!");
    }

    public void flip(int fromIndex, int toIndex)
    {
        throw new RuntimeException("Stub!");
    }

    public void set(int bitIndex)
    {
        throw new RuntimeException("Stub!");
    }

    public void set(int bitIndex, boolean value)
    {
        throw new RuntimeException("Stub!");
    }

    public void set(int fromIndex, int toIndex)
    {
        throw new RuntimeException("Stub!");
    }

    public void set(int fromIndex, int toIndex, boolean value)
    {
        throw new RuntimeException("Stub!");
    }

    public void clear(int bitIndex)
    {
        throw new RuntimeException("Stub!");
    }

    public void clear(int fromIndex, int toIndex)
    {
        throw new RuntimeException("Stub!");
    }

    public void clear()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean get(int bitIndex)
    {
        throw new RuntimeException("Stub!");
    }

    public BitSet get(int fromIndex, int toIndex)
    {
        throw new RuntimeException("Stub!");
    }

    public int nextSetBit(int fromIndex)
    {
        throw new RuntimeException("Stub!");
    }

    public int nextClearBit(int fromIndex)
    {
        throw new RuntimeException("Stub!");
    }

    public int previousSetBit(int fromIndex)
    {
        throw new RuntimeException("Stub!");
    }

    public int previousClearBit(int fromIndex)
    {
        throw new RuntimeException("Stub!");
    }

    public int length()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isEmpty()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean intersects(BitSet set)
    {
        throw new RuntimeException("Stub!");
    }

    public int cardinality()
    {
        throw new RuntimeException("Stub!");
    }

    public void and(BitSet set)
    {
        throw new RuntimeException("Stub!");
    }

    public void or(BitSet set)
    {
        throw new RuntimeException("Stub!");
    }

    public void xor(BitSet set)
    {
        throw new RuntimeException("Stub!");
    }

    public void andNot(BitSet set)
    {
        throw new RuntimeException("Stub!");
    }

    public int hashCode()
    {
        throw new RuntimeException("Stub!");
    }

    public int size()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean equals(Object obj)
    {
        throw new RuntimeException("Stub!");
    }

    public Object clone()
    {
        throw new RuntimeException("Stub!");
    }

    public String toString()
    {
        throw new RuntimeException("Stub!");
    }

    public IntStream stream()
    {
        throw new RuntimeException("Stub!");
    }
}
