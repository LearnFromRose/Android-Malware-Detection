// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   Hashtable.java

package java.util;

import java.io.Serializable;
import java.util.function.*;

// Referenced classes of package java.util:
//            Dictionary, Map, Enumeration, Set, 
//            Collection

public class Hashtable extends Dictionary
    implements Map, Cloneable, Serializable
{

    public Hashtable(int initialCapacity, float loadFactor)
    {
        throw new RuntimeException("Stub!");
    }

    public Hashtable(int initialCapacity)
    {
        throw new RuntimeException("Stub!");
    }

    public Hashtable()
    {
        throw new RuntimeException("Stub!");
    }

    public Hashtable(Map t)
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized int size()
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized boolean isEmpty()
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized Enumeration keys()
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized Enumeration elements()
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized boolean contains(Object value)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean containsValue(Object value)
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized boolean containsKey(Object key)
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized Object get(Object key)
    {
        throw new RuntimeException("Stub!");
    }

    protected void rehash()
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized Object put(Object key, Object value)
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized Object remove(Object key)
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized void putAll(Map t)
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized void clear()
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized Object clone()
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized String toString()
    {
        throw new RuntimeException("Stub!");
    }

    public Set keySet()
    {
        throw new RuntimeException("Stub!");
    }

    public Set entrySet()
    {
        throw new RuntimeException("Stub!");
    }

    public Collection values()
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized boolean equals(Object o)
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized int hashCode()
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized Object getOrDefault(Object key, Object defaultValue)
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized void forEach(BiConsumer action)
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized void replaceAll(BiFunction function)
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized Object putIfAbsent(Object key, Object value)
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized boolean remove(Object key, Object value)
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized boolean replace(Object key, Object oldValue, Object newValue)
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized Object replace(Object key, Object value)
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized Object computeIfAbsent(Object key, Function mappingFunction)
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized Object computeIfPresent(Object key, BiFunction remappingFunction)
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized Object compute(Object key, BiFunction remappingFunction)
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized Object merge(Object key, Object value, BiFunction remappingFunction)
    {
        throw new RuntimeException("Stub!");
    }
}
