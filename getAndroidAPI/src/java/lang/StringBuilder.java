// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   StringBuilder.java

package java.lang;

import java.io.IOException;
import java.io.Serializable;

// Referenced classes of package java.lang:
//            Object, RuntimeException, Appendable, CharSequence, 
//            String, StringBuffer

public final class StringBuilder
    implements Appendable, CharSequence, Serializable
{

    public StringBuilder()
    {
        throw new RuntimeException("Stub!");
    }

    public StringBuilder(int capacity)
    {
        throw new RuntimeException("Stub!");
    }

    public StringBuilder(String str)
    {
        throw new RuntimeException("Stub!");
    }

    public StringBuilder(CharSequence seq)
    {
        throw new RuntimeException("Stub!");
    }

    public StringBuilder append(Object obj)
    {
        throw new RuntimeException("Stub!");
    }

    public StringBuilder append(String str)
    {
        throw new RuntimeException("Stub!");
    }

    public StringBuilder append(StringBuffer sb)
    {
        throw new RuntimeException("Stub!");
    }

    public StringBuilder append(CharSequence s)
    {
        throw new RuntimeException("Stub!");
    }

    public StringBuilder append(CharSequence s, int start, int end)
    {
        throw new RuntimeException("Stub!");
    }

    public StringBuilder append(char str[])
    {
        throw new RuntimeException("Stub!");
    }

    public StringBuilder append(char str[], int offset, int len)
    {
        throw new RuntimeException("Stub!");
    }

    public StringBuilder append(boolean b)
    {
        throw new RuntimeException("Stub!");
    }

    public StringBuilder append(char c)
    {
        throw new RuntimeException("Stub!");
    }

    public StringBuilder append(int i)
    {
        throw new RuntimeException("Stub!");
    }

    public StringBuilder append(long lng)
    {
        throw new RuntimeException("Stub!");
    }

    public StringBuilder append(float f)
    {
        throw new RuntimeException("Stub!");
    }

    public StringBuilder append(double d)
    {
        throw new RuntimeException("Stub!");
    }

    public StringBuilder appendCodePoint(int codePoint)
    {
        throw new RuntimeException("Stub!");
    }

    public StringBuilder delete(int start, int end)
    {
        throw new RuntimeException("Stub!");
    }

    public StringBuilder deleteCharAt(int index)
    {
        throw new RuntimeException("Stub!");
    }

    public StringBuilder replace(int start, int end, String str)
    {
        throw new RuntimeException("Stub!");
    }

    public StringBuilder insert(int index, char str[], int offset, int len)
    {
        throw new RuntimeException("Stub!");
    }

    public StringBuilder insert(int offset, Object obj)
    {
        throw new RuntimeException("Stub!");
    }

    public StringBuilder insert(int offset, String str)
    {
        throw new RuntimeException("Stub!");
    }

    public StringBuilder insert(int offset, char str[])
    {
        throw new RuntimeException("Stub!");
    }

    public StringBuilder insert(int dstOffset, CharSequence s)
    {
        throw new RuntimeException("Stub!");
    }

    public StringBuilder insert(int dstOffset, CharSequence s, int start, int end)
    {
        throw new RuntimeException("Stub!");
    }

    public StringBuilder insert(int offset, boolean b)
    {
        throw new RuntimeException("Stub!");
    }

    public StringBuilder insert(int offset, char c)
    {
        throw new RuntimeException("Stub!");
    }

    public StringBuilder insert(int offset, int i)
    {
        throw new RuntimeException("Stub!");
    }

    public StringBuilder insert(int offset, long l)
    {
        throw new RuntimeException("Stub!");
    }

    public StringBuilder insert(int offset, float f)
    {
        throw new RuntimeException("Stub!");
    }

    public StringBuilder insert(int offset, double d)
    {
        throw new RuntimeException("Stub!");
    }

    public int indexOf(String str)
    {
        throw new RuntimeException("Stub!");
    }

    public int indexOf(String str, int fromIndex)
    {
        throw new RuntimeException("Stub!");
    }

    public int lastIndexOf(String str)
    {
        throw new RuntimeException("Stub!");
    }

    public int lastIndexOf(String str, int fromIndex)
    {
        throw new RuntimeException("Stub!");
    }

    public StringBuilder reverse()
    {
        throw new RuntimeException("Stub!");
    }

    public String toString()
    {
        throw new RuntimeException("Stub!");
    }

    public void trimToSize()
    {
        throw new RuntimeException("Stub!");
    }

    public int codePointAt(int index)
    {
        throw new RuntimeException("Stub!");
    }

    public void getChars(int srcBegin, int srcEnd, char dst[], int dstBegin)
    {
        throw new RuntimeException("Stub!");
    }

    public int length()
    {
        throw new RuntimeException("Stub!");
    }

    public void setCharAt(int index, char ch)
    {
        throw new RuntimeException("Stub!");
    }

    public CharSequence subSequence(int start, int end)
    {
        throw new RuntimeException("Stub!");
    }

    public String substring(int start)
    {
        throw new RuntimeException("Stub!");
    }

    public String substring(int start, int end)
    {
        throw new RuntimeException("Stub!");
    }

    public int capacity()
    {
        throw new RuntimeException("Stub!");
    }

    public void setLength(int newLength)
    {
        throw new RuntimeException("Stub!");
    }

    public void ensureCapacity(int minimumCapacity)
    {
        throw new RuntimeException("Stub!");
    }

    public int codePointBefore(int index)
    {
        throw new RuntimeException("Stub!");
    }

    public char charAt(int index)
    {
        throw new RuntimeException("Stub!");
    }

    public int codePointCount(int beginIndex, int endIndex)
    {
        throw new RuntimeException("Stub!");
    }

    public int offsetByCodePoints(int index, int codePointOffset)
    {
        throw new RuntimeException("Stub!");
    }

    public volatile Appendable append(char c)
        throws IOException
    {
        return append(c);
    }

    public volatile Appendable append(CharSequence charsequence, int i, int j)
        throws IOException
    {
        return append(charsequence, i, j);
    }

    public volatile Appendable append(CharSequence charsequence)
        throws IOException
    {
        return append(charsequence);
    }
}
