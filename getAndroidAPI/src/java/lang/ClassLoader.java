// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   ClassLoader.java

package java.lang;

import java.io.IOException;
import java.io.InputStream;
import java.net.URL;
import java.nio.ByteBuffer;
import java.security.ProtectionDomain;
import java.util.Enumeration;

// Referenced classes of package java.lang:
//            Object, RuntimeException, ClassNotFoundException, ClassFormatError, 
//            IllegalArgumentException, String, Class, Package

public abstract class ClassLoader
{

    protected ClassLoader(ClassLoader parent)
    {
        throw new RuntimeException("Stub!");
    }

    protected ClassLoader()
    {
        throw new RuntimeException("Stub!");
    }

    public Class loadClass(String name)
        throws ClassNotFoundException
    {
        throw new RuntimeException("Stub!");
    }

    protected Class loadClass(String name, boolean resolve)
        throws ClassNotFoundException
    {
        throw new RuntimeException("Stub!");
    }

    protected Class findClass(String name)
        throws ClassNotFoundException
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method defineClass is deprecated
     */

    protected final Class defineClass(byte b[], int off, int len)
        throws ClassFormatError
    {
        throw new RuntimeException("Stub!");
    }

    protected final Class defineClass(String name, byte b[], int off, int len)
        throws ClassFormatError
    {
        throw new RuntimeException("Stub!");
    }

    protected final Class defineClass(String name, byte b[], int off, int len, ProtectionDomain protectionDomain)
        throws ClassFormatError
    {
        throw new RuntimeException("Stub!");
    }

    protected final Class defineClass(String name, ByteBuffer b, ProtectionDomain protectionDomain)
        throws ClassFormatError
    {
        throw new RuntimeException("Stub!");
    }

    protected final void resolveClass(Class c)
    {
        throw new RuntimeException("Stub!");
    }

    protected final Class findSystemClass(String name)
        throws ClassNotFoundException
    {
        throw new RuntimeException("Stub!");
    }

    protected final Class findLoadedClass(String name)
    {
        throw new RuntimeException("Stub!");
    }

    protected final void setSigners(Class c, Object signers[])
    {
        throw new RuntimeException("Stub!");
    }

    public URL getResource(String name)
    {
        throw new RuntimeException("Stub!");
    }

    public Enumeration getResources(String name)
        throws IOException
    {
        throw new RuntimeException("Stub!");
    }

    protected URL findResource(String name)
    {
        throw new RuntimeException("Stub!");
    }

    protected Enumeration findResources(String name)
        throws IOException
    {
        throw new RuntimeException("Stub!");
    }

    protected static boolean registerAsParallelCapable()
    {
        throw new RuntimeException("Stub!");
    }

    public static URL getSystemResource(String name)
    {
        throw new RuntimeException("Stub!");
    }

    public static Enumeration getSystemResources(String name)
        throws IOException
    {
        throw new RuntimeException("Stub!");
    }

    public InputStream getResourceAsStream(String name)
    {
        throw new RuntimeException("Stub!");
    }

    public static InputStream getSystemResourceAsStream(String name)
    {
        throw new RuntimeException("Stub!");
    }

    public final ClassLoader getParent()
    {
        throw new RuntimeException("Stub!");
    }

    public static ClassLoader getSystemClassLoader()
    {
        throw new RuntimeException("Stub!");
    }

    protected Package definePackage(String name, String specTitle, String specVersion, String specVendor, String implTitle, String implVersion, String implVendor, 
            URL sealBase)
        throws IllegalArgumentException
    {
        throw new RuntimeException("Stub!");
    }

    protected Package getPackage(String name)
    {
        throw new RuntimeException("Stub!");
    }

    protected Package[] getPackages()
    {
        throw new RuntimeException("Stub!");
    }

    protected String findLibrary(String libname)
    {
        throw new RuntimeException("Stub!");
    }

    public void setDefaultAssertionStatus(boolean enabled)
    {
        throw new RuntimeException("Stub!");
    }

    public void setPackageAssertionStatus(String packageName, boolean enabled)
    {
        throw new RuntimeException("Stub!");
    }

    public void setClassAssertionStatus(String className, boolean enabled)
    {
        throw new RuntimeException("Stub!");
    }

    public void clearAssertionStatus()
    {
        throw new RuntimeException("Stub!");
    }
}
