// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   String.java

package java.lang;

import java.io.Serializable;
import java.io.UnsupportedEncodingException;
import java.nio.charset.Charset;
import java.util.Comparator;
import java.util.Locale;

// Referenced classes of package java.lang:
//            Object, RuntimeException, Comparable, CharSequence, 
//            StringBuffer, StringBuilder, Iterable

public final class String
    implements Serializable, Comparable, CharSequence
{

    public String()
    {
        throw new RuntimeException("Stub!");
    }

    public String(String original)
    {
        throw new RuntimeException("Stub!");
    }

    public String(char value[])
    {
        throw new RuntimeException("Stub!");
    }

    public String(char value[], int offset, int count)
    {
        throw new RuntimeException("Stub!");
    }

    public String(int codePoints[], int offset, int count)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method String is deprecated
     */

    public String(byte ascii[], int hibyte, int offset, int count)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method String is deprecated
     */

    public String(byte ascii[], int hibyte)
    {
        throw new RuntimeException("Stub!");
    }

    public String(byte bytes[], int offset, int length, String charsetName)
        throws UnsupportedEncodingException
    {
        throw new RuntimeException("Stub!");
    }

    public String(byte bytes[], int offset, int length, Charset charset)
    {
        throw new RuntimeException("Stub!");
    }

    public String(byte bytes[], String charsetName)
        throws UnsupportedEncodingException
    {
        throw new RuntimeException("Stub!");
    }

    public String(byte bytes[], Charset charset)
    {
        throw new RuntimeException("Stub!");
    }

    public String(byte bytes[], int offset, int length)
    {
        throw new RuntimeException("Stub!");
    }

    public String(byte bytes[])
    {
        throw new RuntimeException("Stub!");
    }

    public String(StringBuffer buffer)
    {
        throw new RuntimeException("Stub!");
    }

    public String(StringBuilder builder)
    {
        throw new RuntimeException("Stub!");
    }

    public int length()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isEmpty()
    {
        throw new RuntimeException("Stub!");
    }

    public native char charAt(int i);

    public int codePointAt(int index)
    {
        throw new RuntimeException("Stub!");
    }

    public int codePointBefore(int index)
    {
        throw new RuntimeException("Stub!");
    }

    public int codePointCount(int beginIndex, int endIndex)
    {
        throw new RuntimeException("Stub!");
    }

    public int offsetByCodePoints(int index, int codePointOffset)
    {
        throw new RuntimeException("Stub!");
    }

    public void getChars(int srcBegin, int srcEnd, char dst[], int dstBegin)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method getBytes is deprecated
     */

    public void getBytes(int srcBegin, int srcEnd, byte dst[], int dstBegin)
    {
        throw new RuntimeException("Stub!");
    }

    public byte[] getBytes(String charsetName)
        throws UnsupportedEncodingException
    {
        throw new RuntimeException("Stub!");
    }

    public byte[] getBytes(Charset charset)
    {
        throw new RuntimeException("Stub!");
    }

    public byte[] getBytes()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean equals(Object anObject)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean contentEquals(StringBuffer sb)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean contentEquals(CharSequence cs)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean equalsIgnoreCase(String anotherString)
    {
        throw new RuntimeException("Stub!");
    }

    public native int compareTo(String s);

    public int compareToIgnoreCase(String str)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean regionMatches(int toffset, String other, int ooffset, int len)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean regionMatches(boolean ignoreCase, int toffset, String other, int ooffset, int len)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean startsWith(String prefix, int toffset)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean startsWith(String prefix)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean endsWith(String suffix)
    {
        throw new RuntimeException("Stub!");
    }

    public int hashCode()
    {
        throw new RuntimeException("Stub!");
    }

    public int indexOf(int ch)
    {
        throw new RuntimeException("Stub!");
    }

    public int indexOf(int ch, int fromIndex)
    {
        throw new RuntimeException("Stub!");
    }

    public int lastIndexOf(int ch)
    {
        throw new RuntimeException("Stub!");
    }

    public int lastIndexOf(int ch, int fromIndex)
    {
        throw new RuntimeException("Stub!");
    }

    public int indexOf(String str)
    {
        throw new RuntimeException("Stub!");
    }

    public int indexOf(String str, int fromIndex)
    {
        throw new RuntimeException("Stub!");
    }

    public int lastIndexOf(String str)
    {
        throw new RuntimeException("Stub!");
    }

    public int lastIndexOf(String str, int fromIndex)
    {
        throw new RuntimeException("Stub!");
    }

    public String substring(int beginIndex)
    {
        throw new RuntimeException("Stub!");
    }

    public String substring(int beginIndex, int endIndex)
    {
        throw new RuntimeException("Stub!");
    }

    public CharSequence subSequence(int beginIndex, int endIndex)
    {
        throw new RuntimeException("Stub!");
    }

    public native String concat(String s);

    public String replace(char oldChar, char newChar)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean matches(String regex)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean contains(CharSequence s)
    {
        throw new RuntimeException("Stub!");
    }

    public String replaceFirst(String regex, String replacement)
    {
        throw new RuntimeException("Stub!");
    }

    public String replaceAll(String regex, String replacement)
    {
        throw new RuntimeException("Stub!");
    }

    public String replace(CharSequence target, CharSequence replacement)
    {
        throw new RuntimeException("Stub!");
    }

    public String[] split(String regex, int limit)
    {
        throw new RuntimeException("Stub!");
    }

    public String[] split(String regex)
    {
        throw new RuntimeException("Stub!");
    }

    public static transient String join(CharSequence delimiter, CharSequence elements[])
    {
        throw new RuntimeException("Stub!");
    }

    public static String join(CharSequence delimiter, Iterable elements)
    {
        throw new RuntimeException("Stub!");
    }

    public String toLowerCase(Locale locale)
    {
        throw new RuntimeException("Stub!");
    }

    public String toLowerCase()
    {
        throw new RuntimeException("Stub!");
    }

    public String toUpperCase(Locale locale)
    {
        throw new RuntimeException("Stub!");
    }

    public String toUpperCase()
    {
        throw new RuntimeException("Stub!");
    }

    public String trim()
    {
        throw new RuntimeException("Stub!");
    }

    public String toString()
    {
        throw new RuntimeException("Stub!");
    }

    public native char[] toCharArray();

    public static transient String format(String format, Object args[])
    {
        throw new RuntimeException("Stub!");
    }

    public static transient String format(Locale l, String format, Object args[])
    {
        throw new RuntimeException("Stub!");
    }

    public static String valueOf(Object obj)
    {
        throw new RuntimeException("Stub!");
    }

    public static String valueOf(char data[])
    {
        throw new RuntimeException("Stub!");
    }

    public static String valueOf(char data[], int offset, int count)
    {
        throw new RuntimeException("Stub!");
    }

    public static String copyValueOf(char data[], int offset, int count)
    {
        throw new RuntimeException("Stub!");
    }

    public static String copyValueOf(char data[])
    {
        throw new RuntimeException("Stub!");
    }

    public static String valueOf(boolean b)
    {
        throw new RuntimeException("Stub!");
    }

    public static String valueOf(char c)
    {
        throw new RuntimeException("Stub!");
    }

    public static String valueOf(int i)
    {
        throw new RuntimeException("Stub!");
    }

    public static String valueOf(long l)
    {
        throw new RuntimeException("Stub!");
    }

    public static String valueOf(float f)
    {
        throw new RuntimeException("Stub!");
    }

    public static String valueOf(double d)
    {
        throw new RuntimeException("Stub!");
    }

    public native String intern();

    public volatile int compareTo(Object obj)
    {
        return compareTo((String)obj);
    }

    public static final Comparator CASE_INSENSITIVE_ORDER = null;

}
