// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   ProcessBuilder.java

package java.lang;

import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.Map;

// Referenced classes of package java.lang:
//            Object, RuntimeException, String, Process, 
//            Enum

public final class ProcessBuilder
{
    public static abstract class Redirect
    {
        public static final class Type extends Enum
        {

            public static Type[] values()
            {
                return (Type[])$VALUES.clone();
            }

            public static Type valueOf(String name)
            {
                return (Type)Enum.valueOf(java/lang/ProcessBuilder$Redirect$Type, name);
            }

            public static final Type PIPE;
            public static final Type INHERIT;
            public static final Type READ;
            public static final Type WRITE;
            public static final Type APPEND;
            private static final Type $VALUES[];

            static 
            {
                PIPE = new Type("PIPE", 0);
                INHERIT = new Type("INHERIT", 1);
                READ = new Type("READ", 2);
                WRITE = new Type("WRITE", 3);
                APPEND = new Type("APPEND", 4);
                $VALUES = (new Type[] {
                    PIPE, INHERIT, READ, WRITE, APPEND
                });
            }

            private Type(String s, int i)
            {
                super(s, i);
            }
        }


        public abstract Type type();

        public File file()
        {
            throw new RuntimeException("Stub!");
        }

        public static Redirect from(File file)
        {
            throw new RuntimeException("Stub!");
        }

        public static Redirect to(File file)
        {
            throw new RuntimeException("Stub!");
        }

        public static Redirect appendTo(File file)
        {
            throw new RuntimeException("Stub!");
        }

        public boolean equals(Object obj)
        {
            throw new RuntimeException("Stub!");
        }

        public int hashCode()
        {
            throw new RuntimeException("Stub!");
        }

        public static final Redirect INHERIT = null;
        public static final Redirect PIPE = null;


        Redirect()
        {
            throw new RuntimeException("Stub!");
        }
    }


    public ProcessBuilder(List command)
    {
        throw new RuntimeException("Stub!");
    }

    public transient ProcessBuilder(String command[])
    {
        throw new RuntimeException("Stub!");
    }

    public ProcessBuilder command(List command)
    {
        throw new RuntimeException("Stub!");
    }

    public transient ProcessBuilder command(String command[])
    {
        throw new RuntimeException("Stub!");
    }

    public List command()
    {
        throw new RuntimeException("Stub!");
    }

    public Map environment()
    {
        throw new RuntimeException("Stub!");
    }

    public File directory()
    {
        throw new RuntimeException("Stub!");
    }

    public ProcessBuilder directory(File directory)
    {
        throw new RuntimeException("Stub!");
    }

    public ProcessBuilder redirectInput(Redirect source)
    {
        throw new RuntimeException("Stub!");
    }

    public ProcessBuilder redirectOutput(Redirect destination)
    {
        throw new RuntimeException("Stub!");
    }

    public ProcessBuilder redirectError(Redirect destination)
    {
        throw new RuntimeException("Stub!");
    }

    public ProcessBuilder redirectInput(File file)
    {
        throw new RuntimeException("Stub!");
    }

    public ProcessBuilder redirectOutput(File file)
    {
        throw new RuntimeException("Stub!");
    }

    public ProcessBuilder redirectError(File file)
    {
        throw new RuntimeException("Stub!");
    }

    public Redirect redirectInput()
    {
        throw new RuntimeException("Stub!");
    }

    public Redirect redirectOutput()
    {
        throw new RuntimeException("Stub!");
    }

    public Redirect redirectError()
    {
        throw new RuntimeException("Stub!");
    }

    public ProcessBuilder inheritIO()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean redirectErrorStream()
    {
        throw new RuntimeException("Stub!");
    }

    public ProcessBuilder redirectErrorStream(boolean redirectErrorStream)
    {
        throw new RuntimeException("Stub!");
    }

    public Process start()
        throws IOException
    {
        throw new RuntimeException("Stub!");
    }
}
