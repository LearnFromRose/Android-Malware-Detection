// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   Long.java

package java.lang;

// Referenced classes of package java.lang:
//            Number, RuntimeException, Comparable, NumberFormatException, 
//            Class, String, Object

public final class Long extends Number
    implements Comparable
{

    public Long(long value)
    {
        throw new RuntimeException("Stub!");
    }

    public Long(String s)
        throws NumberFormatException
    {
        throw new RuntimeException("Stub!");
    }

    public static String toString(long i, int radix)
    {
        throw new RuntimeException("Stub!");
    }

    public static String toUnsignedString(long i, int radix)
    {
        throw new RuntimeException("Stub!");
    }

    public static String toHexString(long i)
    {
        throw new RuntimeException("Stub!");
    }

    public static String toOctalString(long i)
    {
        throw new RuntimeException("Stub!");
    }

    public static String toBinaryString(long i)
    {
        throw new RuntimeException("Stub!");
    }

    public static String toString(long i)
    {
        throw new RuntimeException("Stub!");
    }

    public static String toUnsignedString(long i)
    {
        throw new RuntimeException("Stub!");
    }

    public static long parseLong(String s, int radix)
        throws NumberFormatException
    {
        throw new RuntimeException("Stub!");
    }

    public static long parseLong(String s)
        throws NumberFormatException
    {
        throw new RuntimeException("Stub!");
    }

    public static long parseUnsignedLong(String s, int radix)
        throws NumberFormatException
    {
        throw new RuntimeException("Stub!");
    }

    public static long parseUnsignedLong(String s)
        throws NumberFormatException
    {
        throw new RuntimeException("Stub!");
    }

    public static Long valueOf(String s, int radix)
        throws NumberFormatException
    {
        throw new RuntimeException("Stub!");
    }

    public static Long valueOf(String s)
        throws NumberFormatException
    {
        throw new RuntimeException("Stub!");
    }

    public static Long valueOf(long l)
    {
        throw new RuntimeException("Stub!");
    }

    public static Long decode(String nm)
        throws NumberFormatException
    {
        throw new RuntimeException("Stub!");
    }

    public byte byteValue()
    {
        throw new RuntimeException("Stub!");
    }

    public short shortValue()
    {
        throw new RuntimeException("Stub!");
    }

    public int intValue()
    {
        throw new RuntimeException("Stub!");
    }

    public long longValue()
    {
        throw new RuntimeException("Stub!");
    }

    public float floatValue()
    {
        throw new RuntimeException("Stub!");
    }

    public double doubleValue()
    {
        throw new RuntimeException("Stub!");
    }

    public String toString()
    {
        throw new RuntimeException("Stub!");
    }

    public int hashCode()
    {
        throw new RuntimeException("Stub!");
    }

    public static int hashCode(long value)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean equals(Object obj)
    {
        throw new RuntimeException("Stub!");
    }

    public static Long getLong(String nm)
    {
        throw new RuntimeException("Stub!");
    }

    public static Long getLong(String nm, long val)
    {
        throw new RuntimeException("Stub!");
    }

    public static Long getLong(String nm, Long val)
    {
        throw new RuntimeException("Stub!");
    }

    public int compareTo(Long anotherLong)
    {
        throw new RuntimeException("Stub!");
    }

    public static int compare(long x, long y)
    {
        throw new RuntimeException("Stub!");
    }

    public static int compareUnsigned(long x, long y)
    {
        throw new RuntimeException("Stub!");
    }

    public static long divideUnsigned(long dividend, long divisor)
    {
        throw new RuntimeException("Stub!");
    }

    public static long remainderUnsigned(long dividend, long divisor)
    {
        throw new RuntimeException("Stub!");
    }

    public static long highestOneBit(long i)
    {
        throw new RuntimeException("Stub!");
    }

    public static long lowestOneBit(long i)
    {
        throw new RuntimeException("Stub!");
    }

    public static int numberOfLeadingZeros(long i)
    {
        throw new RuntimeException("Stub!");
    }

    public static int numberOfTrailingZeros(long i)
    {
        throw new RuntimeException("Stub!");
    }

    public static int bitCount(long i)
    {
        throw new RuntimeException("Stub!");
    }

    public static long rotateLeft(long i, int distance)
    {
        throw new RuntimeException("Stub!");
    }

    public static long rotateRight(long i, int distance)
    {
        throw new RuntimeException("Stub!");
    }

    public static long reverse(long i)
    {
        throw new RuntimeException("Stub!");
    }

    public static int signum(long i)
    {
        throw new RuntimeException("Stub!");
    }

    public static long reverseBytes(long i)
    {
        throw new RuntimeException("Stub!");
    }

    public static long sum(long a, long b)
    {
        throw new RuntimeException("Stub!");
    }

    public static long max(long a, long b)
    {
        throw new RuntimeException("Stub!");
    }

    public static long min(long a, long b)
    {
        throw new RuntimeException("Stub!");
    }

    public volatile int compareTo(Object obj)
    {
        return compareTo((Long)obj);
    }

    public static final int BYTES = 8;
    public static final long MAX_VALUE = 0x7fffffffffffffffL;
    public static final long MIN_VALUE = 0x8000000000000000L;
    public static final int SIZE = 64;
    public static final Class TYPE = null;

}
