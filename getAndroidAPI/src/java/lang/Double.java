// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   Double.java

package java.lang;

// Referenced classes of package java.lang:
//            Number, RuntimeException, Comparable, NumberFormatException, 
//            Class, String, Object

public final class Double extends Number
    implements Comparable
{

    public Double(double value)
    {
        throw new RuntimeException("Stub!");
    }

    public Double(String s)
        throws NumberFormatException
    {
        throw new RuntimeException("Stub!");
    }

    public static String toString(double d)
    {
        throw new RuntimeException("Stub!");
    }

    public static String toHexString(double d)
    {
        throw new RuntimeException("Stub!");
    }

    public static Double valueOf(String s)
        throws NumberFormatException
    {
        throw new RuntimeException("Stub!");
    }

    public static Double valueOf(double d)
    {
        throw new RuntimeException("Stub!");
    }

    public static double parseDouble(String s)
        throws NumberFormatException
    {
        throw new RuntimeException("Stub!");
    }

    public static boolean isNaN(double v)
    {
        throw new RuntimeException("Stub!");
    }

    public static boolean isInfinite(double v)
    {
        throw new RuntimeException("Stub!");
    }

    public static boolean isFinite(double d)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isNaN()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isInfinite()
    {
        throw new RuntimeException("Stub!");
    }

    public String toString()
    {
        throw new RuntimeException("Stub!");
    }

    public byte byteValue()
    {
        throw new RuntimeException("Stub!");
    }

    public short shortValue()
    {
        throw new RuntimeException("Stub!");
    }

    public int intValue()
    {
        throw new RuntimeException("Stub!");
    }

    public long longValue()
    {
        throw new RuntimeException("Stub!");
    }

    public float floatValue()
    {
        throw new RuntimeException("Stub!");
    }

    public double doubleValue()
    {
        throw new RuntimeException("Stub!");
    }

    public int hashCode()
    {
        throw new RuntimeException("Stub!");
    }

    public static int hashCode(double value)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean equals(Object obj)
    {
        throw new RuntimeException("Stub!");
    }

    public static long doubleToLongBits(double value)
    {
        throw new RuntimeException("Stub!");
    }

    public static native long doubleToRawLongBits(double d);

    public static native double longBitsToDouble(long l);

    public int compareTo(Double anotherDouble)
    {
        throw new RuntimeException("Stub!");
    }

    public static int compare(double d1, double d2)
    {
        throw new RuntimeException("Stub!");
    }

    public static double sum(double a, double b)
    {
        throw new RuntimeException("Stub!");
    }

    public static double max(double a, double b)
    {
        throw new RuntimeException("Stub!");
    }

    public static double min(double a, double b)
    {
        throw new RuntimeException("Stub!");
    }

    public volatile int compareTo(Object obj)
    {
        return compareTo((Double)obj);
    }

    public static final int BYTES = 8;
    public static final int MAX_EXPONENT = 1023;
    public static final double MAX_VALUE = 1.7976931348623157E+308D;
    public static final int MIN_EXPONENT = -1022;
    public static final double MIN_NORMAL = 2.2250738585072014E-308D;
    public static final double MIN_VALUE = 4.9406564584124654E-324D;
    public static final double NEGATIVE_INFINITY = (-1.0D / 0.0D);
    public static final double NaN = (0.0D / 0.0D);
    public static final double POSITIVE_INFINITY = (1.0D / 0.0D);
    public static final int SIZE = 64;
    public static final Class TYPE = null;

}
