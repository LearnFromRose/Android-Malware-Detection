// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   ThreadGroup.java

package java.lang;

// Referenced classes of package java.lang:
//            Object, RuntimeException, Thread, String, 
//            Throwable

public class ThreadGroup
    implements Thread.UncaughtExceptionHandler
{

    public ThreadGroup(String name)
    {
        throw new RuntimeException("Stub!");
    }

    public ThreadGroup(ThreadGroup parent, String name)
    {
        throw new RuntimeException("Stub!");
    }

    public final String getName()
    {
        throw new RuntimeException("Stub!");
    }

    public final ThreadGroup getParent()
    {
        throw new RuntimeException("Stub!");
    }

    public final int getMaxPriority()
    {
        throw new RuntimeException("Stub!");
    }

    public final boolean isDaemon()
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized boolean isDestroyed()
    {
        throw new RuntimeException("Stub!");
    }

    public final void setDaemon(boolean daemon)
    {
        throw new RuntimeException("Stub!");
    }

    public final void setMaxPriority(int pri)
    {
        throw new RuntimeException("Stub!");
    }

    public final boolean parentOf(ThreadGroup g)
    {
        throw new RuntimeException("Stub!");
    }

    public final void checkAccess()
    {
        throw new RuntimeException("Stub!");
    }

    public int activeCount()
    {
        throw new RuntimeException("Stub!");
    }

    public int enumerate(Thread list[])
    {
        throw new RuntimeException("Stub!");
    }

    public int enumerate(Thread list[], boolean recurse)
    {
        throw new RuntimeException("Stub!");
    }

    public int activeGroupCount()
    {
        throw new RuntimeException("Stub!");
    }

    public int enumerate(ThreadGroup list[])
    {
        throw new RuntimeException("Stub!");
    }

    public int enumerate(ThreadGroup list[], boolean recurse)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method stop is deprecated
     */

    public final void stop()
    {
        throw new RuntimeException("Stub!");
    }

    public final void interrupt()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method suspend is deprecated
     */

    public final void suspend()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method resume is deprecated
     */

    public final void resume()
    {
        throw new RuntimeException("Stub!");
    }

    public final void destroy()
    {
        throw new RuntimeException("Stub!");
    }

    public void list()
    {
        throw new RuntimeException("Stub!");
    }

    public void uncaughtException(Thread t, Throwable e)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method allowThreadSuspension is deprecated
     */

    public boolean allowThreadSuspension(boolean b)
    {
        throw new RuntimeException("Stub!");
    }

    public String toString()
    {
        throw new RuntimeException("Stub!");
    }
}
