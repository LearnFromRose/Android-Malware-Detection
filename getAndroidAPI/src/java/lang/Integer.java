// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   Integer.java

package java.lang;

// Referenced classes of package java.lang:
//            Number, RuntimeException, Comparable, NumberFormatException, 
//            Class, String, Object

public final class Integer extends Number
    implements Comparable
{

    public Integer(int value)
    {
        throw new RuntimeException("Stub!");
    }

    public Integer(String s)
        throws NumberFormatException
    {
        throw new RuntimeException("Stub!");
    }

    public static String toString(int i, int radix)
    {
        throw new RuntimeException("Stub!");
    }

    public static String toUnsignedString(int i, int radix)
    {
        throw new RuntimeException("Stub!");
    }

    public static String toHexString(int i)
    {
        throw new RuntimeException("Stub!");
    }

    public static String toOctalString(int i)
    {
        throw new RuntimeException("Stub!");
    }

    public static String toBinaryString(int i)
    {
        throw new RuntimeException("Stub!");
    }

    public static String toString(int i)
    {
        throw new RuntimeException("Stub!");
    }

    public static String toUnsignedString(int i)
    {
        throw new RuntimeException("Stub!");
    }

    public static int parseInt(String s, int radix)
        throws NumberFormatException
    {
        throw new RuntimeException("Stub!");
    }

    public static int parseInt(String s)
        throws NumberFormatException
    {
        throw new RuntimeException("Stub!");
    }

    public static int parseUnsignedInt(String s, int radix)
        throws NumberFormatException
    {
        throw new RuntimeException("Stub!");
    }

    public static int parseUnsignedInt(String s)
        throws NumberFormatException
    {
        throw new RuntimeException("Stub!");
    }

    public static Integer valueOf(String s, int radix)
        throws NumberFormatException
    {
        throw new RuntimeException("Stub!");
    }

    public static Integer valueOf(String s)
        throws NumberFormatException
    {
        throw new RuntimeException("Stub!");
    }

    public static Integer valueOf(int i)
    {
        throw new RuntimeException("Stub!");
    }

    public byte byteValue()
    {
        throw new RuntimeException("Stub!");
    }

    public short shortValue()
    {
        throw new RuntimeException("Stub!");
    }

    public int intValue()
    {
        throw new RuntimeException("Stub!");
    }

    public long longValue()
    {
        throw new RuntimeException("Stub!");
    }

    public float floatValue()
    {
        throw new RuntimeException("Stub!");
    }

    public double doubleValue()
    {
        throw new RuntimeException("Stub!");
    }

    public String toString()
    {
        throw new RuntimeException("Stub!");
    }

    public int hashCode()
    {
        throw new RuntimeException("Stub!");
    }

    public static int hashCode(int value)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean equals(Object obj)
    {
        throw new RuntimeException("Stub!");
    }

    public static Integer getInteger(String nm)
    {
        throw new RuntimeException("Stub!");
    }

    public static Integer getInteger(String nm, int val)
    {
        throw new RuntimeException("Stub!");
    }

    public static Integer getInteger(String nm, Integer val)
    {
        throw new RuntimeException("Stub!");
    }

    public static Integer decode(String nm)
        throws NumberFormatException
    {
        throw new RuntimeException("Stub!");
    }

    public int compareTo(Integer anotherInteger)
    {
        throw new RuntimeException("Stub!");
    }

    public static int compare(int x, int y)
    {
        throw new RuntimeException("Stub!");
    }

    public static int compareUnsigned(int x, int y)
    {
        throw new RuntimeException("Stub!");
    }

    public static long toUnsignedLong(int x)
    {
        throw new RuntimeException("Stub!");
    }

    public static int divideUnsigned(int dividend, int divisor)
    {
        throw new RuntimeException("Stub!");
    }

    public static int remainderUnsigned(int dividend, int divisor)
    {
        throw new RuntimeException("Stub!");
    }

    public static int highestOneBit(int i)
    {
        throw new RuntimeException("Stub!");
    }

    public static int lowestOneBit(int i)
    {
        throw new RuntimeException("Stub!");
    }

    public static int numberOfLeadingZeros(int i)
    {
        throw new RuntimeException("Stub!");
    }

    public static int numberOfTrailingZeros(int i)
    {
        throw new RuntimeException("Stub!");
    }

    public static int bitCount(int i)
    {
        throw new RuntimeException("Stub!");
    }

    public static int rotateLeft(int i, int distance)
    {
        throw new RuntimeException("Stub!");
    }

    public static int rotateRight(int i, int distance)
    {
        throw new RuntimeException("Stub!");
    }

    public static int reverse(int i)
    {
        throw new RuntimeException("Stub!");
    }

    public static int signum(int i)
    {
        throw new RuntimeException("Stub!");
    }

    public static int reverseBytes(int i)
    {
        throw new RuntimeException("Stub!");
    }

    public static int sum(int a, int b)
    {
        throw new RuntimeException("Stub!");
    }

    public static int max(int a, int b)
    {
        throw new RuntimeException("Stub!");
    }

    public static int min(int a, int b)
    {
        throw new RuntimeException("Stub!");
    }

    public volatile int compareTo(Object obj)
    {
        return compareTo((Integer)obj);
    }

    public static final int BYTES = 4;
    public static final int MAX_VALUE = 0x7fffffff;
    public static final int MIN_VALUE = 0x80000000;
    public static final int SIZE = 32;
    public static final Class TYPE = null;

}
