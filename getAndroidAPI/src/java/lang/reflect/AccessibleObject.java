// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   AccessibleObject.java

package java.lang.reflect;

import java.lang.annotation.Annotation;

// Referenced classes of package java.lang.reflect:
//            AnnotatedElement

public class AccessibleObject
    implements AnnotatedElement
{

    protected AccessibleObject()
    {
        throw new RuntimeException("Stub!");
    }

    public static void setAccessible(AccessibleObject array[], boolean flag)
        throws SecurityException
    {
        throw new RuntimeException("Stub!");
    }

    public void setAccessible(boolean flag)
        throws SecurityException
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isAccessible()
    {
        throw new RuntimeException("Stub!");
    }

    public Annotation getAnnotation(Class annotationClass)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isAnnotationPresent(Class annotationClass)
    {
        throw new RuntimeException("Stub!");
    }

    public Annotation[] getAnnotationsByType(Class annotationClass)
    {
        throw new RuntimeException("Stub!");
    }

    public Annotation[] getAnnotations()
    {
        throw new RuntimeException("Stub!");
    }

    public Annotation getDeclaredAnnotation(Class annotationClass)
    {
        throw new RuntimeException("Stub!");
    }

    public Annotation[] getDeclaredAnnotationsByType(Class annotationClass)
    {
        throw new RuntimeException("Stub!");
    }

    public Annotation[] getDeclaredAnnotations()
    {
        throw new RuntimeException("Stub!");
    }
}
