// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   Class.java

package java.lang;

import java.io.InputStream;
import java.io.Serializable;
import java.lang.annotation.Annotation;
import java.lang.reflect.*;
import java.net.URL;
import java.security.ProtectionDomain;

// Referenced classes of package java.lang:
//            Object, RuntimeException, ClassNotFoundException, IllegalAccessException, 
//            InstantiationException, SecurityException, NoSuchFieldException, NoSuchMethodException, 
//            String, ClassLoader, Package

public final class Class
    implements Serializable, GenericDeclaration, Type, AnnotatedElement
{

    Class()
    {
        throw new RuntimeException("Stub!");
    }

    public String toString()
    {
        throw new RuntimeException("Stub!");
    }

    public String toGenericString()
    {
        throw new RuntimeException("Stub!");
    }

    public static Class forName(String className)
        throws ClassNotFoundException
    {
        throw new RuntimeException("Stub!");
    }

    public static Class forName(String name, boolean initialize, ClassLoader loader)
        throws ClassNotFoundException
    {
        throw new RuntimeException("Stub!");
    }

    public native Object newInstance()
        throws IllegalAccessException, InstantiationException;

    public boolean isInstance(Object obj)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isAssignableFrom(Class cls)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isInterface()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isArray()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isPrimitive()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isAnnotation()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isSynthetic()
    {
        throw new RuntimeException("Stub!");
    }

    public String getName()
    {
        throw new RuntimeException("Stub!");
    }

    public ClassLoader getClassLoader()
    {
        throw new RuntimeException("Stub!");
    }

    public synchronized TypeVariable[] getTypeParameters()
    {
        throw new RuntimeException("Stub!");
    }

    public Class getSuperclass()
    {
        throw new RuntimeException("Stub!");
    }

    public Type getGenericSuperclass()
    {
        throw new RuntimeException("Stub!");
    }

    public Package getPackage()
    {
        throw new RuntimeException("Stub!");
    }

    public Class[] getInterfaces()
    {
        throw new RuntimeException("Stub!");
    }

    public Type[] getGenericInterfaces()
    {
        throw new RuntimeException("Stub!");
    }

    public Class getComponentType()
    {
        throw new RuntimeException("Stub!");
    }

    public int getModifiers()
    {
        throw new RuntimeException("Stub!");
    }

    public Object[] getSigners()
    {
        throw new RuntimeException("Stub!");
    }

    public Method getEnclosingMethod()
    {
        throw new RuntimeException("Stub!");
    }

    public Constructor getEnclosingConstructor()
    {
        throw new RuntimeException("Stub!");
    }

    public native Class getDeclaringClass();

    public native Class getEnclosingClass();

    public String getSimpleName()
    {
        throw new RuntimeException("Stub!");
    }

    public String getTypeName()
    {
        throw new RuntimeException("Stub!");
    }

    public String getCanonicalName()
    {
        throw new RuntimeException("Stub!");
    }

    public native boolean isAnonymousClass();

    public boolean isLocalClass()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isMemberClass()
    {
        throw new RuntimeException("Stub!");
    }

    public Class[] getClasses()
    {
        throw new RuntimeException("Stub!");
    }

    public Field[] getFields()
        throws SecurityException
    {
        throw new RuntimeException("Stub!");
    }

    public Method[] getMethods()
        throws SecurityException
    {
        throw new RuntimeException("Stub!");
    }

    public Constructor[] getConstructors()
        throws SecurityException
    {
        throw new RuntimeException("Stub!");
    }

    public Field getField(String name)
        throws NoSuchFieldException
    {
        throw new RuntimeException("Stub!");
    }

    public transient Method getMethod(String name, Class parameterTypes[])
        throws NoSuchMethodException, SecurityException
    {
        throw new RuntimeException("Stub!");
    }

    public transient Constructor getConstructor(Class parameterTypes[])
        throws NoSuchMethodException, SecurityException
    {
        throw new RuntimeException("Stub!");
    }

    public native Class[] getDeclaredClasses();

    public native Field[] getDeclaredFields();

    public Method[] getDeclaredMethods()
        throws SecurityException
    {
        throw new RuntimeException("Stub!");
    }

    public Constructor[] getDeclaredConstructors()
        throws SecurityException
    {
        throw new RuntimeException("Stub!");
    }

    public native Field getDeclaredField(String s)
        throws NoSuchFieldException;

    public transient Method getDeclaredMethod(String name, Class parameterTypes[])
        throws NoSuchMethodException, SecurityException
    {
        throw new RuntimeException("Stub!");
    }

    public transient Constructor getDeclaredConstructor(Class parameterTypes[])
        throws NoSuchMethodException, SecurityException
    {
        throw new RuntimeException("Stub!");
    }

    public InputStream getResourceAsStream(String name)
    {
        throw new RuntimeException("Stub!");
    }

    public URL getResource(String name)
    {
        throw new RuntimeException("Stub!");
    }

    public ProtectionDomain getProtectionDomain()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean desiredAssertionStatus()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isEnum()
    {
        throw new RuntimeException("Stub!");
    }

    public Object[] getEnumConstants()
    {
        throw new RuntimeException("Stub!");
    }

    public Object cast(Object obj)
    {
        throw new RuntimeException("Stub!");
    }

    public Class asSubclass(Class clazz)
    {
        throw new RuntimeException("Stub!");
    }

    public Annotation getAnnotation(Class annotationClass)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isAnnotationPresent(Class annotationClass)
    {
        throw new RuntimeException("Stub!");
    }

    public Annotation[] getAnnotationsByType(Class annotationClass)
    {
        throw new RuntimeException("Stub!");
    }

    public Annotation[] getAnnotations()
    {
        throw new RuntimeException("Stub!");
    }

    public native Annotation getDeclaredAnnotation(Class class1);

    public native Annotation[] getDeclaredAnnotations();
}
