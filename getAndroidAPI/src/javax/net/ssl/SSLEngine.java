// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   SSLEngine.java

package javax.net.ssl;

import java.nio.ByteBuffer;
import java.util.function.BiFunction;

// Referenced classes of package javax.net.ssl:
//            SSLException, SSLEngineResult, SSLSession, SSLParameters

public abstract class SSLEngine
{

    protected SSLEngine()
    {
        throw new RuntimeException("Stub!");
    }

    protected SSLEngine(String peerHost, int peerPort)
    {
        throw new RuntimeException("Stub!");
    }

    public String getPeerHost()
    {
        throw new RuntimeException("Stub!");
    }

    public int getPeerPort()
    {
        throw new RuntimeException("Stub!");
    }

    public SSLEngineResult wrap(ByteBuffer src, ByteBuffer dst)
        throws SSLException
    {
        throw new RuntimeException("Stub!");
    }

    public SSLEngineResult wrap(ByteBuffer srcs[], ByteBuffer dst)
        throws SSLException
    {
        throw new RuntimeException("Stub!");
    }

    public abstract SSLEngineResult wrap(ByteBuffer abytebuffer[], int i, int j, ByteBuffer bytebuffer)
        throws SSLException;

    public SSLEngineResult unwrap(ByteBuffer src, ByteBuffer dst)
        throws SSLException
    {
        throw new RuntimeException("Stub!");
    }

    public SSLEngineResult unwrap(ByteBuffer src, ByteBuffer dsts[])
        throws SSLException
    {
        throw new RuntimeException("Stub!");
    }

    public abstract SSLEngineResult unwrap(ByteBuffer bytebuffer, ByteBuffer abytebuffer[], int i, int j)
        throws SSLException;

    public abstract Runnable getDelegatedTask();

    public abstract void closeInbound()
        throws SSLException;

    public abstract boolean isInboundDone();

    public abstract void closeOutbound();

    public abstract boolean isOutboundDone();

    public abstract String[] getSupportedCipherSuites();

    public abstract String[] getEnabledCipherSuites();

    public abstract void setEnabledCipherSuites(String as[]);

    public abstract String[] getSupportedProtocols();

    public abstract String[] getEnabledProtocols();

    public abstract void setEnabledProtocols(String as[]);

    public abstract SSLSession getSession();

    public SSLSession getHandshakeSession()
    {
        throw new RuntimeException("Stub!");
    }

    public abstract void beginHandshake()
        throws SSLException;

    public abstract SSLEngineResult.HandshakeStatus getHandshakeStatus();

    public abstract void setUseClientMode(boolean flag);

    public abstract boolean getUseClientMode();

    public abstract void setNeedClientAuth(boolean flag);

    public abstract boolean getNeedClientAuth();

    public abstract void setWantClientAuth(boolean flag);

    public abstract boolean getWantClientAuth();

    public abstract void setEnableSessionCreation(boolean flag);

    public abstract boolean getEnableSessionCreation();

    public SSLParameters getSSLParameters()
    {
        throw new RuntimeException("Stub!");
    }

    public void setSSLParameters(SSLParameters params)
    {
        throw new RuntimeException("Stub!");
    }

    public String getApplicationProtocol()
    {
        throw new RuntimeException("Stub!");
    }

    public String getHandshakeApplicationProtocol()
    {
        throw new RuntimeException("Stub!");
    }

    public void setHandshakeApplicationProtocolSelector(BiFunction selector)
    {
        throw new RuntimeException("Stub!");
    }

    public BiFunction getHandshakeApplicationProtocolSelector()
    {
        throw new RuntimeException("Stub!");
    }
}
