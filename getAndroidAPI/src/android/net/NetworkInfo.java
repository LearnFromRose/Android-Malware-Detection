// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   NetworkInfo.java

package android.net;

import android.os.Parcel;
import android.os.Parcelable;

/**
 * @deprecated Class NetworkInfo is deprecated
 */

public class NetworkInfo
    implements Parcelable
{
    /**
     * @deprecated Class State is deprecated
     */

    public static final class State extends Enum
    {

        public static State[] values()
        {
            return (State[])$VALUES.clone();
        }

        public static State valueOf(String name)
        {
            return (State)Enum.valueOf(android/net/NetworkInfo$State, name);
        }

        /**
         * @deprecated Field CONNECTING is deprecated
         */
        public static final State CONNECTING;
        /**
         * @deprecated Field CONNECTED is deprecated
         */
        public static final State CONNECTED;
        /**
         * @deprecated Field SUSPENDED is deprecated
         */
        public static final State SUSPENDED;
        /**
         * @deprecated Field DISCONNECTING is deprecated
         */
        public static final State DISCONNECTING;
        /**
         * @deprecated Field DISCONNECTED is deprecated
         */
        public static final State DISCONNECTED;
        /**
         * @deprecated Field UNKNOWN is deprecated
         */
        public static final State UNKNOWN;
        private static final State $VALUES[];

        static 
        {
            CONNECTING = new State("CONNECTING", 0);
            CONNECTED = new State("CONNECTED", 1);
            SUSPENDED = new State("SUSPENDED", 2);
            DISCONNECTING = new State("DISCONNECTING", 3);
            DISCONNECTED = new State("DISCONNECTED", 4);
            UNKNOWN = new State("UNKNOWN", 5);
            $VALUES = (new State[] {
                CONNECTING, CONNECTED, SUSPENDED, DISCONNECTING, DISCONNECTED, UNKNOWN
            });
        }

        private State(String s, int i)
        {
            super(s, i);
        }
    }

    /**
     * @deprecated Class DetailedState is deprecated
     */

    public static final class DetailedState extends Enum
    {

        public static DetailedState[] values()
        {
            return (DetailedState[])$VALUES.clone();
        }

        public static DetailedState valueOf(String name)
        {
            return (DetailedState)Enum.valueOf(android/net/NetworkInfo$DetailedState, name);
        }

        /**
         * @deprecated Field IDLE is deprecated
         */
        public static final DetailedState IDLE;
        /**
         * @deprecated Field SCANNING is deprecated
         */
        public static final DetailedState SCANNING;
        /**
         * @deprecated Field CONNECTING is deprecated
         */
        public static final DetailedState CONNECTING;
        /**
         * @deprecated Field AUTHENTICATING is deprecated
         */
        public static final DetailedState AUTHENTICATING;
        /**
         * @deprecated Field OBTAINING_IPADDR is deprecated
         */
        public static final DetailedState OBTAINING_IPADDR;
        /**
         * @deprecated Field CONNECTED is deprecated
         */
        public static final DetailedState CONNECTED;
        /**
         * @deprecated Field SUSPENDED is deprecated
         */
        public static final DetailedState SUSPENDED;
        /**
         * @deprecated Field DISCONNECTING is deprecated
         */
        public static final DetailedState DISCONNECTING;
        /**
         * @deprecated Field DISCONNECTED is deprecated
         */
        public static final DetailedState DISCONNECTED;
        /**
         * @deprecated Field FAILED is deprecated
         */
        public static final DetailedState FAILED;
        /**
         * @deprecated Field BLOCKED is deprecated
         */
        public static final DetailedState BLOCKED;
        /**
         * @deprecated Field VERIFYING_POOR_LINK is deprecated
         */
        public static final DetailedState VERIFYING_POOR_LINK;
        /**
         * @deprecated Field CAPTIVE_PORTAL_CHECK is deprecated
         */
        public static final DetailedState CAPTIVE_PORTAL_CHECK;
        private static final DetailedState $VALUES[];

        static 
        {
            IDLE = new DetailedState("IDLE", 0);
            SCANNING = new DetailedState("SCANNING", 1);
            CONNECTING = new DetailedState("CONNECTING", 2);
            AUTHENTICATING = new DetailedState("AUTHENTICATING", 3);
            OBTAINING_IPADDR = new DetailedState("OBTAINING_IPADDR", 4);
            CONNECTED = new DetailedState("CONNECTED", 5);
            SUSPENDED = new DetailedState("SUSPENDED", 6);
            DISCONNECTING = new DetailedState("DISCONNECTING", 7);
            DISCONNECTED = new DetailedState("DISCONNECTED", 8);
            FAILED = new DetailedState("FAILED", 9);
            BLOCKED = new DetailedState("BLOCKED", 10);
            VERIFYING_POOR_LINK = new DetailedState("VERIFYING_POOR_LINK", 11);
            CAPTIVE_PORTAL_CHECK = new DetailedState("CAPTIVE_PORTAL_CHECK", 12);
            $VALUES = (new DetailedState[] {
                IDLE, SCANNING, CONNECTING, AUTHENTICATING, OBTAINING_IPADDR, CONNECTED, SUSPENDED, DISCONNECTING, DISCONNECTED, FAILED, 
                BLOCKED, VERIFYING_POOR_LINK, CAPTIVE_PORTAL_CHECK
            });
        }

        private DetailedState(String s, int i)
        {
            super(s, i);
        }
    }


    NetworkInfo(NetworkInfo source)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method getType is deprecated
     */

    public int getType()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method getSubtype is deprecated
     */

    public int getSubtype()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method getTypeName is deprecated
     */

    public String getTypeName()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method getSubtypeName is deprecated
     */

    public String getSubtypeName()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method isConnectedOrConnecting is deprecated
     */

    public boolean isConnectedOrConnecting()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method isConnected is deprecated
     */

    public boolean isConnected()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method isAvailable is deprecated
     */

    public boolean isAvailable()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method isFailover is deprecated
     */

    public boolean isFailover()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method isRoaming is deprecated
     */

    public boolean isRoaming()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method getState is deprecated
     */

    public State getState()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method getDetailedState is deprecated
     */

    public DetailedState getDetailedState()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method getReason is deprecated
     */

    public String getReason()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method getExtraInfo is deprecated
     */

    public String getExtraInfo()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method toString is deprecated
     */

    public String toString()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method describeContents is deprecated
     */

    public int describeContents()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method writeToParcel is deprecated
     */

    public void writeToParcel(Parcel dest, int flags)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Field CREATOR is deprecated
     */
    public static final android.os.Parcelable.Creator CREATOR = null;

}
