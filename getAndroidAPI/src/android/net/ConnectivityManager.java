// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   ConnectivityManager.java

package android.net;

import android.app.PendingIntent;
import android.os.Handler;
import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.util.concurrent.Executor;

// Referenced classes of package android.net:
//            IpSecManager, SocketKeepalive, NetworkInfo, Network, 
//            LinkProperties, NetworkCapabilities, ProxyInfo, NetworkRequest

public class ConnectivityManager
{
    public static interface OnNetworkActiveListener
    {

        public abstract void onNetworkActive();
    }

    public static class NetworkCallback
    {

        public void onAvailable(Network network)
        {
            throw new RuntimeException("Stub!");
        }

        public void onLosing(Network network, int maxMsToLive)
        {
            throw new RuntimeException("Stub!");
        }

        public void onLost(Network network)
        {
            throw new RuntimeException("Stub!");
        }

        public void onUnavailable()
        {
            throw new RuntimeException("Stub!");
        }

        public void onCapabilitiesChanged(Network network, NetworkCapabilities networkCapabilities)
        {
            throw new RuntimeException("Stub!");
        }

        public void onLinkPropertiesChanged(Network network, LinkProperties linkProperties)
        {
            throw new RuntimeException("Stub!");
        }

        public void onBlockedStatusChanged(Network network, boolean blocked)
        {
            throw new RuntimeException("Stub!");
        }

        public NetworkCallback()
        {
            throw new RuntimeException("Stub!");
        }
    }


    ConnectivityManager()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method isNetworkTypeValid is deprecated
     */

    public static boolean isNetworkTypeValid(int networkType)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method setNetworkPreference is deprecated
     */

    public void setNetworkPreference(int preference)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method getNetworkPreference is deprecated
     */

    public int getNetworkPreference()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method getActiveNetworkInfo is deprecated
     */

    public NetworkInfo getActiveNetworkInfo()
    {
        throw new RuntimeException("Stub!");
    }

    public Network getActiveNetwork()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method getNetworkInfo is deprecated
     */

    public NetworkInfo getNetworkInfo(int networkType)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method getNetworkInfo is deprecated
     */

    public NetworkInfo getNetworkInfo(Network network)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method getAllNetworkInfo is deprecated
     */

    public NetworkInfo[] getAllNetworkInfo()
    {
        throw new RuntimeException("Stub!");
    }

    public Network[] getAllNetworks()
    {
        throw new RuntimeException("Stub!");
    }

    public LinkProperties getLinkProperties(Network network)
    {
        throw new RuntimeException("Stub!");
    }

    public NetworkCapabilities getNetworkCapabilities(Network network)
    {
        throw new RuntimeException("Stub!");
    }

    public SocketKeepalive createSocketKeepalive(Network network, IpSecManager.UdpEncapsulationSocket socket, InetAddress source, InetAddress destination, Executor executor, SocketKeepalive.Callback callback)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method getBackgroundDataSetting is deprecated
     */

    public boolean getBackgroundDataSetting()
    {
        throw new RuntimeException("Stub!");
    }

    public void addDefaultNetworkActiveListener(OnNetworkActiveListener l)
    {
        throw new RuntimeException("Stub!");
    }

    public void removeDefaultNetworkActiveListener(OnNetworkActiveListener l)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isDefaultNetworkActive()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method reportBadNetwork is deprecated
     */

    public void reportBadNetwork(Network network)
    {
        throw new RuntimeException("Stub!");
    }

    public void reportNetworkConnectivity(Network network, boolean hasConnectivity)
    {
        throw new RuntimeException("Stub!");
    }

    public ProxyInfo getDefaultProxy()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isActiveNetworkMetered()
    {
        throw new RuntimeException("Stub!");
    }

    public void requestNetwork(NetworkRequest request, NetworkCallback networkCallback)
    {
        throw new RuntimeException("Stub!");
    }

    public void requestNetwork(NetworkRequest request, NetworkCallback networkCallback, Handler handler)
    {
        throw new RuntimeException("Stub!");
    }

    public void requestNetwork(NetworkRequest request, NetworkCallback networkCallback, int timeoutMs)
    {
        throw new RuntimeException("Stub!");
    }

    public void requestNetwork(NetworkRequest request, NetworkCallback networkCallback, Handler handler, int timeoutMs)
    {
        throw new RuntimeException("Stub!");
    }

    public void requestNetwork(NetworkRequest request, PendingIntent operation)
    {
        throw new RuntimeException("Stub!");
    }

    public void releaseNetworkRequest(PendingIntent operation)
    {
        throw new RuntimeException("Stub!");
    }

    public void registerNetworkCallback(NetworkRequest request, NetworkCallback networkCallback)
    {
        throw new RuntimeException("Stub!");
    }

    public void registerNetworkCallback(NetworkRequest request, NetworkCallback networkCallback, Handler handler)
    {
        throw new RuntimeException("Stub!");
    }

    public void registerNetworkCallback(NetworkRequest request, PendingIntent operation)
    {
        throw new RuntimeException("Stub!");
    }

    public void registerDefaultNetworkCallback(NetworkCallback networkCallback)
    {
        throw new RuntimeException("Stub!");
    }

    public void registerDefaultNetworkCallback(NetworkCallback networkCallback, Handler handler)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean requestBandwidthUpdate(Network network)
    {
        throw new RuntimeException("Stub!");
    }

    public void unregisterNetworkCallback(NetworkCallback networkCallback)
    {
        throw new RuntimeException("Stub!");
    }

    public void unregisterNetworkCallback(PendingIntent operation)
    {
        throw new RuntimeException("Stub!");
    }

    public int getMultipathPreference(Network network)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean bindProcessToNetwork(Network network)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method setProcessDefaultNetwork is deprecated
     */

    public static boolean setProcessDefaultNetwork(Network network)
    {
        throw new RuntimeException("Stub!");
    }

    public Network getBoundNetworkForProcess()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method getProcessDefaultNetwork is deprecated
     */

    public static Network getProcessDefaultNetwork()
    {
        throw new RuntimeException("Stub!");
    }

    public int getRestrictBackgroundStatus()
    {
        throw new RuntimeException("Stub!");
    }

    public byte[] getNetworkWatchlistConfigHash()
    {
        throw new RuntimeException("Stub!");
    }

    public int getConnectionOwnerUid(int protocol, InetSocketAddress local, InetSocketAddress remote)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Field ACTION_BACKGROUND_DATA_SETTING_CHANGED is deprecated
     */
    public static final String ACTION_BACKGROUND_DATA_SETTING_CHANGED = "android.net.conn.BACKGROUND_DATA_SETTING_CHANGED";
    public static final String ACTION_CAPTIVE_PORTAL_SIGN_IN = "android.net.conn.CAPTIVE_PORTAL";
    public static final String ACTION_RESTRICT_BACKGROUND_CHANGED = "android.net.conn.RESTRICT_BACKGROUND_CHANGED";
    /**
     * @deprecated Field CONNECTIVITY_ACTION is deprecated
     */
    public static final String CONNECTIVITY_ACTION = "android.net.conn.CONNECTIVITY_CHANGE";
    /**
     * @deprecated Field DEFAULT_NETWORK_PREFERENCE is deprecated
     */
    public static final int DEFAULT_NETWORK_PREFERENCE = 1;
    public static final String EXTRA_CAPTIVE_PORTAL = "android.net.extra.CAPTIVE_PORTAL";
    public static final String EXTRA_CAPTIVE_PORTAL_URL = "android.net.extra.CAPTIVE_PORTAL_URL";
    /**
     * @deprecated Field EXTRA_EXTRA_INFO is deprecated
     */
    public static final String EXTRA_EXTRA_INFO = "extraInfo";
    /**
     * @deprecated Field EXTRA_IS_FAILOVER is deprecated
     */
    public static final String EXTRA_IS_FAILOVER = "isFailover";
    public static final String EXTRA_NETWORK = "android.net.extra.NETWORK";
    /**
     * @deprecated Field EXTRA_NETWORK_INFO is deprecated
     */
    public static final String EXTRA_NETWORK_INFO = "networkInfo";
    public static final String EXTRA_NETWORK_REQUEST = "android.net.extra.NETWORK_REQUEST";
    /**
     * @deprecated Field EXTRA_NETWORK_TYPE is deprecated
     */
    public static final String EXTRA_NETWORK_TYPE = "networkType";
    public static final String EXTRA_NO_CONNECTIVITY = "noConnectivity";
    /**
     * @deprecated Field EXTRA_OTHER_NETWORK_INFO is deprecated
     */
    public static final String EXTRA_OTHER_NETWORK_INFO = "otherNetwork";
    public static final String EXTRA_REASON = "reason";
    public static final int MULTIPATH_PREFERENCE_HANDOVER = 1;
    public static final int MULTIPATH_PREFERENCE_PERFORMANCE = 4;
    public static final int MULTIPATH_PREFERENCE_RELIABILITY = 2;
    public static final int RESTRICT_BACKGROUND_STATUS_DISABLED = 1;
    public static final int RESTRICT_BACKGROUND_STATUS_ENABLED = 3;
    public static final int RESTRICT_BACKGROUND_STATUS_WHITELISTED = 2;
    /**
     * @deprecated Field TYPE_BLUETOOTH is deprecated
     */
    public static final int TYPE_BLUETOOTH = 7;
    /**
     * @deprecated Field TYPE_DUMMY is deprecated
     */
    public static final int TYPE_DUMMY = 8;
    /**
     * @deprecated Field TYPE_ETHERNET is deprecated
     */
    public static final int TYPE_ETHERNET = 9;
    /**
     * @deprecated Field TYPE_MOBILE is deprecated
     */
    public static final int TYPE_MOBILE = 0;
    /**
     * @deprecated Field TYPE_MOBILE_DUN is deprecated
     */
    public static final int TYPE_MOBILE_DUN = 4;
    /**
     * @deprecated Field TYPE_MOBILE_HIPRI is deprecated
     */
    public static final int TYPE_MOBILE_HIPRI = 5;
    /**
     * @deprecated Field TYPE_MOBILE_MMS is deprecated
     */
    public static final int TYPE_MOBILE_MMS = 2;
    /**
     * @deprecated Field TYPE_MOBILE_SUPL is deprecated
     */
    public static final int TYPE_MOBILE_SUPL = 3;
    /**
     * @deprecated Field TYPE_VPN is deprecated
     */
    public static final int TYPE_VPN = 17;
    /**
     * @deprecated Field TYPE_WIFI is deprecated
     */
    public static final int TYPE_WIFI = 1;
    /**
     * @deprecated Field TYPE_WIMAX is deprecated
     */
    public static final int TYPE_WIMAX = 6;
}
