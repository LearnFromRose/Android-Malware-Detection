// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   ImageReader.java

package android.media;

import android.os.Handler;
import android.view.Surface;

// Referenced classes of package android.media:
//            Image

public class ImageReader
    implements AutoCloseable
{
    public static interface OnImageAvailableListener
    {

        public abstract void onImageAvailable(ImageReader imagereader);
    }


    ImageReader(int width, int height, int format, int maxImages, long usage)
    {
        throw new RuntimeException("Stub!");
    }

    public static ImageReader newInstance(int width, int height, int format, int maxImages)
    {
        throw new RuntimeException("Stub!");
    }

    public static ImageReader newInstance(int width, int height, int format, int maxImages, long usage)
    {
        throw new RuntimeException("Stub!");
    }

    public int getWidth()
    {
        throw new RuntimeException("Stub!");
    }

    public int getHeight()
    {
        throw new RuntimeException("Stub!");
    }

    public int getImageFormat()
    {
        throw new RuntimeException("Stub!");
    }

    public int getMaxImages()
    {
        throw new RuntimeException("Stub!");
    }

    public Surface getSurface()
    {
        throw new RuntimeException("Stub!");
    }

    public Image acquireLatestImage()
    {
        throw new RuntimeException("Stub!");
    }

    public Image acquireNextImage()
    {
        throw new RuntimeException("Stub!");
    }

    public void setOnImageAvailableListener(OnImageAvailableListener listener, Handler handler)
    {
        throw new RuntimeException("Stub!");
    }

    public void close()
    {
        throw new RuntimeException("Stub!");
    }

    public void discardFreeBuffers()
    {
        throw new RuntimeException("Stub!");
    }

    protected void finalize()
        throws Throwable
    {
        throw new RuntimeException("Stub!");
    }
}
