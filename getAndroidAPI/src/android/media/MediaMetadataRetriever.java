// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   MediaMetadataRetriever.java

package android.media;

import android.content.Context;
import android.graphics.Bitmap;
import android.net.Uri;
import java.io.FileDescriptor;
import java.util.List;
import java.util.Map;

// Referenced classes of package android.media:
//            MediaDataSource

public class MediaMetadataRetriever
    implements AutoCloseable
{
    public static final class BitmapParams
    {

        public void setPreferredConfig(android.graphics.Bitmap.Config config)
        {
            throw new RuntimeException("Stub!");
        }

        public android.graphics.Bitmap.Config getPreferredConfig()
        {
            throw new RuntimeException("Stub!");
        }

        public android.graphics.Bitmap.Config getActualConfig()
        {
            throw new RuntimeException("Stub!");
        }

        public BitmapParams()
        {
            throw new RuntimeException("Stub!");
        }
    }


    public MediaMetadataRetriever()
    {
        throw new RuntimeException("Stub!");
    }

    public void setDataSource(String path)
        throws IllegalArgumentException
    {
        throw new RuntimeException("Stub!");
    }

    public void setDataSource(String uri, Map headers)
        throws IllegalArgumentException
    {
        throw new RuntimeException("Stub!");
    }

    public native void setDataSource(FileDescriptor filedescriptor, long l, long l1)
        throws IllegalArgumentException;

    public void setDataSource(FileDescriptor fd)
        throws IllegalArgumentException
    {
        throw new RuntimeException("Stub!");
    }

    public void setDataSource(Context context, Uri uri)
        throws IllegalArgumentException, SecurityException
    {
        throw new RuntimeException("Stub!");
    }

    public void setDataSource(MediaDataSource dataSource)
        throws IllegalArgumentException
    {
        throw new RuntimeException("Stub!");
    }

    public native String extractMetadata(int i);

    public Bitmap getFrameAtTime(long timeUs, int option)
    {
        throw new RuntimeException("Stub!");
    }

    public Bitmap getScaledFrameAtTime(long timeUs, int option, int dstWidth, int dstHeight)
    {
        throw new RuntimeException("Stub!");
    }

    public Bitmap getFrameAtTime(long timeUs)
    {
        throw new RuntimeException("Stub!");
    }

    public Bitmap getFrameAtTime()
    {
        throw new RuntimeException("Stub!");
    }

    public Bitmap getFrameAtIndex(int frameIndex, BitmapParams params)
    {
        throw new RuntimeException("Stub!");
    }

    public Bitmap getFrameAtIndex(int frameIndex)
    {
        throw new RuntimeException("Stub!");
    }

    public List getFramesAtIndex(int frameIndex, int numFrames, BitmapParams params)
    {
        throw new RuntimeException("Stub!");
    }

    public List getFramesAtIndex(int frameIndex, int numFrames)
    {
        throw new RuntimeException("Stub!");
    }

    public Bitmap getImageAtIndex(int imageIndex, BitmapParams params)
    {
        throw new RuntimeException("Stub!");
    }

    public Bitmap getImageAtIndex(int imageIndex)
    {
        throw new RuntimeException("Stub!");
    }

    public Bitmap getPrimaryImage(BitmapParams params)
    {
        throw new RuntimeException("Stub!");
    }

    public Bitmap getPrimaryImage()
    {
        throw new RuntimeException("Stub!");
    }

    public byte[] getEmbeddedPicture()
    {
        throw new RuntimeException("Stub!");
    }

    public void close()
    {
        throw new RuntimeException("Stub!");
    }

    public native void release();

    protected void finalize()
        throws Throwable
    {
        throw new RuntimeException("Stub!");
    }

    public static final int METADATA_KEY_ALBUM = 1;
    public static final int METADATA_KEY_ALBUMARTIST = 13;
    public static final int METADATA_KEY_ARTIST = 2;
    public static final int METADATA_KEY_AUTHOR = 3;
    public static final int METADATA_KEY_BITRATE = 20;
    public static final int METADATA_KEY_CAPTURE_FRAMERATE = 25;
    public static final int METADATA_KEY_CD_TRACK_NUMBER = 0;
    public static final int METADATA_KEY_COMPILATION = 15;
    public static final int METADATA_KEY_COMPOSER = 4;
    public static final int METADATA_KEY_DATE = 5;
    public static final int METADATA_KEY_DISC_NUMBER = 14;
    public static final int METADATA_KEY_DURATION = 9;
    public static final int METADATA_KEY_EXIF_LENGTH = 34;
    public static final int METADATA_KEY_EXIF_OFFSET = 33;
    public static final int METADATA_KEY_GENRE = 6;
    public static final int METADATA_KEY_HAS_AUDIO = 16;
    public static final int METADATA_KEY_HAS_IMAGE = 26;
    public static final int METADATA_KEY_HAS_VIDEO = 17;
    public static final int METADATA_KEY_IMAGE_COUNT = 27;
    public static final int METADATA_KEY_IMAGE_HEIGHT = 30;
    public static final int METADATA_KEY_IMAGE_PRIMARY = 28;
    public static final int METADATA_KEY_IMAGE_ROTATION = 31;
    public static final int METADATA_KEY_IMAGE_WIDTH = 29;
    public static final int METADATA_KEY_LOCATION = 23;
    public static final int METADATA_KEY_MIMETYPE = 12;
    public static final int METADATA_KEY_NUM_TRACKS = 10;
    public static final int METADATA_KEY_TITLE = 7;
    public static final int METADATA_KEY_VIDEO_FRAME_COUNT = 32;
    public static final int METADATA_KEY_VIDEO_HEIGHT = 19;
    public static final int METADATA_KEY_VIDEO_ROTATION = 24;
    public static final int METADATA_KEY_VIDEO_WIDTH = 18;
    public static final int METADATA_KEY_WRITER = 11;
    public static final int METADATA_KEY_YEAR = 8;
    public static final int OPTION_CLOSEST = 3;
    public static final int OPTION_CLOSEST_SYNC = 2;
    public static final int OPTION_NEXT_SYNC = 1;
    public static final int OPTION_PREVIOUS_SYNC = 0;
}
