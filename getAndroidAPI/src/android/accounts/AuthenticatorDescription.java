// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   AuthenticatorDescription.java

package android.accounts;

import android.os.Parcel;
import android.os.Parcelable;

public class AuthenticatorDescription
    implements Parcelable
{

    public AuthenticatorDescription(String type, String packageName, int labelId, int iconId, int smallIconId, int prefId, boolean customTokens)
    {
        accountPreferencesId = 0;
        this.customTokens = false;
        this.iconId = 0;
        this.labelId = 0;
        this.packageName = null;
        this.smallIconId = 0;
        this.type = null;
        throw new RuntimeException("Stub!");
    }

    public AuthenticatorDescription(String type, String packageName, int labelId, int iconId, int smallIconId, int prefId)
    {
        accountPreferencesId = 0;
        customTokens = false;
        this.iconId = 0;
        this.labelId = 0;
        this.packageName = null;
        this.smallIconId = 0;
        this.type = null;
        throw new RuntimeException("Stub!");
    }

    public static AuthenticatorDescription newKey(String type)
    {
        throw new RuntimeException("Stub!");
    }

    public int describeContents()
    {
        throw new RuntimeException("Stub!");
    }

    public int hashCode()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean equals(Object o)
    {
        throw new RuntimeException("Stub!");
    }

    public String toString()
    {
        throw new RuntimeException("Stub!");
    }

    public void writeToParcel(Parcel dest, int flags)
    {
        throw new RuntimeException("Stub!");
    }

    public static final android.os.Parcelable.Creator CREATOR = null;
    public final int accountPreferencesId;
    public final boolean customTokens;
    public final int iconId;
    public final int labelId;
    public final String packageName;
    public final int smallIconId;
    public final String type;

}
