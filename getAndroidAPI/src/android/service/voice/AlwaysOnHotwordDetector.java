// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   AlwaysOnHotwordDetector.java

package android.service.voice;

import android.content.Intent;
import android.media.AudioFormat;

public class AlwaysOnHotwordDetector
{
    public static class EventPayload
    {

        public AudioFormat getCaptureAudioFormat()
        {
            throw new RuntimeException("Stub!");
        }

        public byte[] getTriggerAudio()
        {
            throw new RuntimeException("Stub!");
        }

        EventPayload(boolean triggerAvailable, boolean captureAvailable, AudioFormat audioFormat, int captureSession, byte data[])
        {
            throw new RuntimeException("Stub!");
        }
    }

    public static abstract class Callback
    {

        public abstract void onAvailabilityChanged(int i);

        public abstract void onDetected(EventPayload eventpayload);

        public abstract void onError();

        public abstract void onRecognitionPaused();

        public abstract void onRecognitionResumed();

        public Callback()
        {
            throw new RuntimeException("Stub!");
        }
    }


    AlwaysOnHotwordDetector()
    {
        throw new RuntimeException("Stub!");
    }

    public int getSupportedRecognitionModes()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean startRecognition(int recognitionFlags)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean stopRecognition()
    {
        throw new RuntimeException("Stub!");
    }

    public Intent createEnrollIntent()
    {
        throw new RuntimeException("Stub!");
    }

    public Intent createUnEnrollIntent()
    {
        throw new RuntimeException("Stub!");
    }

    public Intent createReEnrollIntent()
    {
        throw new RuntimeException("Stub!");
    }

    public static final int RECOGNITION_FLAG_ALLOW_MULTIPLE_TRIGGERS = 2;
    public static final int RECOGNITION_FLAG_CAPTURE_TRIGGER_AUDIO = 1;
    public static final int RECOGNITION_MODE_USER_IDENTIFICATION = 2;
    public static final int RECOGNITION_MODE_VOICE_TRIGGER = 1;
    public static final int STATE_HARDWARE_UNAVAILABLE = -2;
    public static final int STATE_KEYPHRASE_ENROLLED = 2;
    public static final int STATE_KEYPHRASE_UNENROLLED = 1;
    public static final int STATE_KEYPHRASE_UNSUPPORTED = -1;
}
