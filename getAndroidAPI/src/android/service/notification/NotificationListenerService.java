// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   NotificationListenerService.java

package android.service.notification;

import android.app.*;
import android.content.*;
import android.os.*;
import java.util.List;

// Referenced classes of package android.service.notification:
//            StatusBarNotification

public abstract class NotificationListenerService extends Service
{
    public static class RankingMap
        implements Parcelable
    {

        public boolean equals(Object o)
        {
            throw new RuntimeException("Stub!");
        }

        public int describeContents()
        {
            throw new RuntimeException("Stub!");
        }

        public void writeToParcel(Parcel out, int flags)
        {
            throw new RuntimeException("Stub!");
        }

        public String[] getOrderedKeys()
        {
            throw new RuntimeException("Stub!");
        }

        public boolean getRanking(String key, Ranking outRanking)
        {
            throw new RuntimeException("Stub!");
        }

        public static final android.os.Parcelable.Creator CREATOR = null;


        RankingMap(Ranking rankings[])
        {
            throw new RuntimeException("Stub!");
        }
    }

    public static class Ranking
    {

        public String getKey()
        {
            throw new RuntimeException("Stub!");
        }

        public int getRank()
        {
            throw new RuntimeException("Stub!");
        }

        public boolean isAmbient()
        {
            throw new RuntimeException("Stub!");
        }

        public int getSuppressedVisualEffects()
        {
            throw new RuntimeException("Stub!");
        }

        public boolean matchesInterruptionFilter()
        {
            throw new RuntimeException("Stub!");
        }

        public int getImportance()
        {
            throw new RuntimeException("Stub!");
        }

        public CharSequence getImportanceExplanation()
        {
            throw new RuntimeException("Stub!");
        }

        public String getOverrideGroupKey()
        {
            throw new RuntimeException("Stub!");
        }

        public NotificationChannel getChannel()
        {
            throw new RuntimeException("Stub!");
        }

        public int getUserSentiment()
        {
            throw new RuntimeException("Stub!");
        }

        public List getSmartActions()
        {
            throw new RuntimeException("Stub!");
        }

        public List getSmartReplies()
        {
            throw new RuntimeException("Stub!");
        }

        public boolean canShowBadge()
        {
            throw new RuntimeException("Stub!");
        }

        public boolean isSuspended()
        {
            throw new RuntimeException("Stub!");
        }

        public long getLastAudiblyAlertedMillis()
        {
            throw new RuntimeException("Stub!");
        }

        public boolean canBubble()
        {
            throw new RuntimeException("Stub!");
        }

        public boolean equals(Object o)
        {
            throw new RuntimeException("Stub!");
        }

        public static final int USER_SENTIMENT_NEGATIVE = -1;
        public static final int USER_SENTIMENT_NEUTRAL = 0;
        public static final int USER_SENTIMENT_POSITIVE = 1;

        public Ranking()
        {
            throw new RuntimeException("Stub!");
        }
    }


    public NotificationListenerService()
    {
        throw new RuntimeException("Stub!");
    }

    protected void attachBaseContext(Context base)
    {
        throw new RuntimeException("Stub!");
    }

    public void onNotificationPosted(StatusBarNotification sbn)
    {
        throw new RuntimeException("Stub!");
    }

    public void onNotificationPosted(StatusBarNotification sbn, RankingMap rankingMap)
    {
        throw new RuntimeException("Stub!");
    }

    public void onNotificationRemoved(StatusBarNotification sbn)
    {
        throw new RuntimeException("Stub!");
    }

    public void onNotificationRemoved(StatusBarNotification sbn, RankingMap rankingMap)
    {
        throw new RuntimeException("Stub!");
    }

    public void onNotificationRemoved(StatusBarNotification sbn, RankingMap rankingMap, int reason)
    {
        throw new RuntimeException("Stub!");
    }

    public void onListenerConnected()
    {
        throw new RuntimeException("Stub!");
    }

    public void onListenerDisconnected()
    {
        throw new RuntimeException("Stub!");
    }

    public void onNotificationRankingUpdate(RankingMap rankingMap)
    {
        throw new RuntimeException("Stub!");
    }

    public void onListenerHintsChanged(int hints)
    {
        throw new RuntimeException("Stub!");
    }

    public void onSilentStatusBarIconsVisibilityChanged(boolean hideSilentStatusIcons)
    {
        throw new RuntimeException("Stub!");
    }

    public void onNotificationChannelModified(String pkg, UserHandle user, NotificationChannel channel, int modificationType)
    {
        throw new RuntimeException("Stub!");
    }

    public void onNotificationChannelGroupModified(String pkg, UserHandle user, NotificationChannelGroup group, int modificationType)
    {
        throw new RuntimeException("Stub!");
    }

    public void onInterruptionFilterChanged(int interruptionFilter)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method cancelNotification is deprecated
     */

    public final void cancelNotification(String pkg, String tag, int id)
    {
        throw new RuntimeException("Stub!");
    }

    public final void cancelNotification(String key)
    {
        throw new RuntimeException("Stub!");
    }

    public final void cancelAllNotifications()
    {
        throw new RuntimeException("Stub!");
    }

    public final void cancelNotifications(String keys[])
    {
        throw new RuntimeException("Stub!");
    }

    public final void snoozeNotification(String key, long durationMs)
    {
        throw new RuntimeException("Stub!");
    }

    public final void setNotificationsShown(String keys[])
    {
        throw new RuntimeException("Stub!");
    }

    public final void updateNotificationChannel(String pkg, UserHandle user, NotificationChannel channel)
    {
        throw new RuntimeException("Stub!");
    }

    public final List getNotificationChannels(String pkg, UserHandle user)
    {
        throw new RuntimeException("Stub!");
    }

    public final List getNotificationChannelGroups(String pkg, UserHandle user)
    {
        throw new RuntimeException("Stub!");
    }

    public StatusBarNotification[] getActiveNotifications()
    {
        throw new RuntimeException("Stub!");
    }

    public final StatusBarNotification[] getSnoozedNotifications()
    {
        throw new RuntimeException("Stub!");
    }

    public StatusBarNotification[] getActiveNotifications(String keys[])
    {
        throw new RuntimeException("Stub!");
    }

    public final int getCurrentListenerHints()
    {
        throw new RuntimeException("Stub!");
    }

    public final int getCurrentInterruptionFilter()
    {
        throw new RuntimeException("Stub!");
    }

    public final void clearRequestedListenerHints()
    {
        throw new RuntimeException("Stub!");
    }

    public final void requestListenerHints(int hints)
    {
        throw new RuntimeException("Stub!");
    }

    public final void requestInterruptionFilter(int interruptionFilter)
    {
        throw new RuntimeException("Stub!");
    }

    public RankingMap getCurrentRanking()
    {
        throw new RuntimeException("Stub!");
    }

    public IBinder onBind(Intent intent)
    {
        throw new RuntimeException("Stub!");
    }

    public void onDestroy()
    {
        throw new RuntimeException("Stub!");
    }

    public static void requestRebind(ComponentName componentName)
    {
        throw new RuntimeException("Stub!");
    }

    public final void requestUnbind()
    {
        throw new RuntimeException("Stub!");
    }

    public static final int HINT_HOST_DISABLE_CALL_EFFECTS = 4;
    public static final int HINT_HOST_DISABLE_EFFECTS = 1;
    public static final int HINT_HOST_DISABLE_NOTIFICATION_EFFECTS = 2;
    public static final int INTERRUPTION_FILTER_ALARMS = 4;
    public static final int INTERRUPTION_FILTER_ALL = 1;
    public static final int INTERRUPTION_FILTER_NONE = 3;
    public static final int INTERRUPTION_FILTER_PRIORITY = 2;
    public static final int INTERRUPTION_FILTER_UNKNOWN = 0;
    public static final int NOTIFICATION_CHANNEL_OR_GROUP_ADDED = 1;
    public static final int NOTIFICATION_CHANNEL_OR_GROUP_DELETED = 3;
    public static final int NOTIFICATION_CHANNEL_OR_GROUP_UPDATED = 2;
    public static final int REASON_APP_CANCEL = 8;
    public static final int REASON_APP_CANCEL_ALL = 9;
    public static final int REASON_CANCEL = 2;
    public static final int REASON_CANCEL_ALL = 3;
    public static final int REASON_CHANNEL_BANNED = 17;
    public static final int REASON_CLICK = 1;
    public static final int REASON_ERROR = 4;
    public static final int REASON_GROUP_OPTIMIZATION = 13;
    public static final int REASON_GROUP_SUMMARY_CANCELED = 12;
    public static final int REASON_LISTENER_CANCEL = 10;
    public static final int REASON_LISTENER_CANCEL_ALL = 11;
    public static final int REASON_PACKAGE_BANNED = 7;
    public static final int REASON_PACKAGE_CHANGED = 5;
    public static final int REASON_PACKAGE_SUSPENDED = 14;
    public static final int REASON_PROFILE_TURNED_OFF = 15;
    public static final int REASON_SNOOZED = 18;
    public static final int REASON_TIMEOUT = 19;
    public static final int REASON_UNAUTOBUNDLED = 16;
    public static final int REASON_USER_STOPPED = 6;
    public static final String SERVICE_INTERFACE = "android.service.notification.NotificationListenerService";
    /**
     * @deprecated Field SUPPRESSED_EFFECT_SCREEN_OFF is deprecated
     */
    public static final int SUPPRESSED_EFFECT_SCREEN_OFF = 1;
    /**
     * @deprecated Field SUPPRESSED_EFFECT_SCREEN_ON is deprecated
     */
    public static final int SUPPRESSED_EFFECT_SCREEN_ON = 2;
}
