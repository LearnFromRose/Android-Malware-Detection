// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   MifareClassic.java

package android.nfc.tech;

import android.nfc.Tag;
import android.os.RemoteException;
import java.io.IOException;

// Referenced classes of package android.nfc.tech:
//            TagTechnology

public final class MifareClassic
    implements TagTechnology
{

    MifareClassic(Tag tag)
        throws RemoteException
    {
        throw new RuntimeException("Stub!");
    }

    public static MifareClassic get(Tag tag)
    {
        throw new RuntimeException("Stub!");
    }

    public int getType()
    {
        throw new RuntimeException("Stub!");
    }

    public int getSize()
    {
        throw new RuntimeException("Stub!");
    }

    public int getSectorCount()
    {
        throw new RuntimeException("Stub!");
    }

    public int getBlockCount()
    {
        throw new RuntimeException("Stub!");
    }

    public int getBlockCountInSector(int sectorIndex)
    {
        throw new RuntimeException("Stub!");
    }

    public int blockToSector(int blockIndex)
    {
        throw new RuntimeException("Stub!");
    }

    public int sectorToBlock(int sectorIndex)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean authenticateSectorWithKeyA(int sectorIndex, byte key[])
        throws IOException
    {
        throw new RuntimeException("Stub!");
    }

    public boolean authenticateSectorWithKeyB(int sectorIndex, byte key[])
        throws IOException
    {
        throw new RuntimeException("Stub!");
    }

    public byte[] readBlock(int blockIndex)
        throws IOException
    {
        throw new RuntimeException("Stub!");
    }

    public void writeBlock(int blockIndex, byte data[])
        throws IOException
    {
        throw new RuntimeException("Stub!");
    }

    public void increment(int blockIndex, int value)
        throws IOException
    {
        throw new RuntimeException("Stub!");
    }

    public void decrement(int blockIndex, int value)
        throws IOException
    {
        throw new RuntimeException("Stub!");
    }

    public void transfer(int blockIndex)
        throws IOException
    {
        throw new RuntimeException("Stub!");
    }

    public void restore(int blockIndex)
        throws IOException
    {
        throw new RuntimeException("Stub!");
    }

    public byte[] transceive(byte data[])
        throws IOException
    {
        throw new RuntimeException("Stub!");
    }

    public int getMaxTransceiveLength()
    {
        throw new RuntimeException("Stub!");
    }

    public void setTimeout(int timeout)
    {
        throw new RuntimeException("Stub!");
    }

    public int getTimeout()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isConnected()
    {
        throw new RuntimeException("Stub!");
    }

    public Tag getTag()
    {
        throw new RuntimeException("Stub!");
    }

    public void close()
        throws IOException
    {
        throw new RuntimeException("Stub!");
    }

    public void connect()
        throws IOException
    {
        throw new RuntimeException("Stub!");
    }

    public static final int BLOCK_SIZE = 16;
    public static final byte KEY_DEFAULT[] = new byte[0];
    public static final byte KEY_MIFARE_APPLICATION_DIRECTORY[] = new byte[0];
    public static final byte KEY_NFC_FORUM[] = new byte[0];
    public static final int SIZE_1K = 1024;
    public static final int SIZE_2K = 2048;
    public static final int SIZE_4K = 4096;
    public static final int SIZE_MINI = 320;
    public static final int TYPE_CLASSIC = 0;
    public static final int TYPE_PLUS = 1;
    public static final int TYPE_PRO = 2;
    public static final int TYPE_UNKNOWN = -1;

}
