// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   ParcelFileDescriptor.java

package android.os;

import java.io.*;
import java.net.DatagramSocket;
import java.net.Socket;

// Referenced classes of package android.os:
//            Parcelable, Handler, Parcel

public class ParcelFileDescriptor
    implements Parcelable, Closeable
{
    public static interface OnCloseListener
    {

        public abstract void onClose(IOException ioexception);
    }

    public static class FileDescriptorDetachedException extends IOException
    {

        public FileDescriptorDetachedException()
        {
            throw new RuntimeException("Stub!");
        }
    }

    public static class AutoCloseOutputStream extends FileOutputStream
    {

        public void close()
            throws IOException
        {
            throw new RuntimeException("Stub!");
        }

        public AutoCloseOutputStream(ParcelFileDescriptor pfd)
        {
            super((FileDescriptor)null);
            throw new RuntimeException("Stub!");
        }
    }

    public static class AutoCloseInputStream extends FileInputStream
    {

        public void close()
            throws IOException
        {
            throw new RuntimeException("Stub!");
        }

        public int read()
            throws IOException
        {
            throw new RuntimeException("Stub!");
        }

        public int read(byte b[])
            throws IOException
        {
            throw new RuntimeException("Stub!");
        }

        public int read(byte b[], int off, int len)
            throws IOException
        {
            throw new RuntimeException("Stub!");
        }

        public AutoCloseInputStream(ParcelFileDescriptor pfd)
        {
            super((FileDescriptor)null);
            throw new RuntimeException("Stub!");
        }
    }


    public ParcelFileDescriptor(ParcelFileDescriptor wrapped)
    {
        throw new RuntimeException("Stub!");
    }

    public static ParcelFileDescriptor open(File file, int mode)
        throws FileNotFoundException
    {
        throw new RuntimeException("Stub!");
    }

    public static ParcelFileDescriptor open(File file, int mode, Handler handler, OnCloseListener listener)
        throws IOException
    {
        throw new RuntimeException("Stub!");
    }

    public static ParcelFileDescriptor dup(FileDescriptor orig)
        throws IOException
    {
        throw new RuntimeException("Stub!");
    }

    public ParcelFileDescriptor dup()
        throws IOException
    {
        throw new RuntimeException("Stub!");
    }

    public static ParcelFileDescriptor fromFd(int fd)
        throws IOException
    {
        throw new RuntimeException("Stub!");
    }

    public static ParcelFileDescriptor adoptFd(int fd)
    {
        throw new RuntimeException("Stub!");
    }

    public static ParcelFileDescriptor fromSocket(Socket socket)
    {
        throw new RuntimeException("Stub!");
    }

    public static ParcelFileDescriptor fromDatagramSocket(DatagramSocket datagramSocket)
    {
        throw new RuntimeException("Stub!");
    }

    public static ParcelFileDescriptor[] createPipe()
        throws IOException
    {
        throw new RuntimeException("Stub!");
    }

    public static ParcelFileDescriptor[] createReliablePipe()
        throws IOException
    {
        throw new RuntimeException("Stub!");
    }

    public static ParcelFileDescriptor[] createSocketPair()
        throws IOException
    {
        throw new RuntimeException("Stub!");
    }

    public static ParcelFileDescriptor[] createReliableSocketPair()
        throws IOException
    {
        throw new RuntimeException("Stub!");
    }

    public static int parseMode(String mode)
    {
        throw new RuntimeException("Stub!");
    }

    public FileDescriptor getFileDescriptor()
    {
        throw new RuntimeException("Stub!");
    }

    public long getStatSize()
    {
        throw new RuntimeException("Stub!");
    }

    public int getFd()
    {
        throw new RuntimeException("Stub!");
    }

    public int detachFd()
    {
        throw new RuntimeException("Stub!");
    }

    public void close()
        throws IOException
    {
        throw new RuntimeException("Stub!");
    }

    public void closeWithError(String msg)
        throws IOException
    {
        throw new RuntimeException("Stub!");
    }

    public boolean canDetectErrors()
    {
        throw new RuntimeException("Stub!");
    }

    public void checkError()
        throws IOException
    {
        throw new RuntimeException("Stub!");
    }

    public String toString()
    {
        throw new RuntimeException("Stub!");
    }

    protected void finalize()
        throws Throwable
    {
        throw new RuntimeException("Stub!");
    }

    public int describeContents()
    {
        throw new RuntimeException("Stub!");
    }

    public void writeToParcel(Parcel out, int flags)
    {
        throw new RuntimeException("Stub!");
    }

    public static final Parcelable.Creator CREATOR = null;
    public static final int MODE_APPEND = 0x2000000;
    public static final int MODE_CREATE = 0x8000000;
    public static final int MODE_READ_ONLY = 0x10000000;
    public static final int MODE_READ_WRITE = 0x30000000;
    public static final int MODE_TRUNCATE = 0x4000000;
    /**
     * @deprecated Field MODE_WORLD_READABLE is deprecated
     */
    public static final int MODE_WORLD_READABLE = 1;
    /**
     * @deprecated Field MODE_WORLD_WRITEABLE is deprecated
     */
    public static final int MODE_WORLD_WRITEABLE = 2;
    public static final int MODE_WRITE_ONLY = 0x20000000;

}
