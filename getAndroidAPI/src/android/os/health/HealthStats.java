// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   HealthStats.java

package android.os.health;

import java.util.Map;

// Referenced classes of package android.os.health:
//            TimerStat

public class HealthStats
{

    HealthStats()
    {
        throw new RuntimeException("Stub!");
    }

    public String getDataType()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean hasTimer(int key)
    {
        throw new RuntimeException("Stub!");
    }

    public TimerStat getTimer(int key)
    {
        throw new RuntimeException("Stub!");
    }

    public int getTimerCount(int key)
    {
        throw new RuntimeException("Stub!");
    }

    public long getTimerTime(int key)
    {
        throw new RuntimeException("Stub!");
    }

    public int getTimerKeyCount()
    {
        throw new RuntimeException("Stub!");
    }

    public int getTimerKeyAt(int index)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean hasMeasurement(int key)
    {
        throw new RuntimeException("Stub!");
    }

    public long getMeasurement(int key)
    {
        throw new RuntimeException("Stub!");
    }

    public int getMeasurementKeyCount()
    {
        throw new RuntimeException("Stub!");
    }

    public int getMeasurementKeyAt(int index)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean hasStats(int key)
    {
        throw new RuntimeException("Stub!");
    }

    public Map getStats(int key)
    {
        throw new RuntimeException("Stub!");
    }

    public int getStatsKeyCount()
    {
        throw new RuntimeException("Stub!");
    }

    public int getStatsKeyAt(int index)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean hasTimers(int key)
    {
        throw new RuntimeException("Stub!");
    }

    public Map getTimers(int key)
    {
        throw new RuntimeException("Stub!");
    }

    public int getTimersKeyCount()
    {
        throw new RuntimeException("Stub!");
    }

    public int getTimersKeyAt(int index)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean hasMeasurements(int key)
    {
        throw new RuntimeException("Stub!");
    }

    public Map getMeasurements(int key)
    {
        throw new RuntimeException("Stub!");
    }

    public int getMeasurementsKeyCount()
    {
        throw new RuntimeException("Stub!");
    }

    public int getMeasurementsKeyAt(int index)
    {
        throw new RuntimeException("Stub!");
    }
}
