// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   GLSurfaceView.java

package android.opengl;

import android.content.Context;
import android.util.AttributeSet;
import android.view.SurfaceHolder;
import android.view.SurfaceView;
import javax.microedition.khronos.egl.*;
import javax.microedition.khronos.opengles.GL;
import javax.microedition.khronos.opengles.GL10;

public class GLSurfaceView extends SurfaceView
    implements android.view.SurfaceHolder.Callback2
{
    public static interface Renderer
    {

        public abstract void onSurfaceCreated(GL10 gl10, EGLConfig eglconfig);

        public abstract void onSurfaceChanged(GL10 gl10, int i, int j);

        public abstract void onDrawFrame(GL10 gl10);
    }

    public static interface GLWrapper
    {

        public abstract GL wrap(GL gl);
    }

    public static interface EGLWindowSurfaceFactory
    {

        public abstract EGLSurface createWindowSurface(EGL10 egl10, EGLDisplay egldisplay, EGLConfig eglconfig, Object obj);

        public abstract void destroySurface(EGL10 egl10, EGLDisplay egldisplay, EGLSurface eglsurface);
    }

    public static interface EGLContextFactory
    {

        public abstract EGLContext createContext(EGL10 egl10, EGLDisplay egldisplay, EGLConfig eglconfig);

        public abstract void destroyContext(EGL10 egl10, EGLDisplay egldisplay, EGLContext eglcontext);
    }

    public static interface EGLConfigChooser
    {

        public abstract EGLConfig chooseConfig(EGL10 egl10, EGLDisplay egldisplay);
    }


    public GLSurfaceView(Context context)
    {
        super((Context)null);
        throw new RuntimeException("Stub!");
    }

    public GLSurfaceView(Context context, AttributeSet attrs)
    {
        super((Context)null);
        throw new RuntimeException("Stub!");
    }

    protected void finalize()
        throws Throwable
    {
        throw new RuntimeException("Stub!");
    }

    public void setGLWrapper(GLWrapper glWrapper)
    {
        throw new RuntimeException("Stub!");
    }

    public void setDebugFlags(int debugFlags)
    {
        throw new RuntimeException("Stub!");
    }

    public int getDebugFlags()
    {
        throw new RuntimeException("Stub!");
    }

    public void setPreserveEGLContextOnPause(boolean preserveOnPause)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean getPreserveEGLContextOnPause()
    {
        throw new RuntimeException("Stub!");
    }

    public void setRenderer(Renderer renderer)
    {
        throw new RuntimeException("Stub!");
    }

    public void setEGLContextFactory(EGLContextFactory factory)
    {
        throw new RuntimeException("Stub!");
    }

    public void setEGLWindowSurfaceFactory(EGLWindowSurfaceFactory factory)
    {
        throw new RuntimeException("Stub!");
    }

    public void setEGLConfigChooser(EGLConfigChooser configChooser)
    {
        throw new RuntimeException("Stub!");
    }

    public void setEGLConfigChooser(boolean needDepth)
    {
        throw new RuntimeException("Stub!");
    }

    public void setEGLConfigChooser(int redSize, int greenSize, int blueSize, int alphaSize, int depthSize, int stencilSize)
    {
        throw new RuntimeException("Stub!");
    }

    public void setEGLContextClientVersion(int version)
    {
        throw new RuntimeException("Stub!");
    }

    public void setRenderMode(int renderMode)
    {
        throw new RuntimeException("Stub!");
    }

    public int getRenderMode()
    {
        throw new RuntimeException("Stub!");
    }

    public void requestRender()
    {
        throw new RuntimeException("Stub!");
    }

    public void surfaceCreated(SurfaceHolder holder)
    {
        throw new RuntimeException("Stub!");
    }

    public void surfaceDestroyed(SurfaceHolder holder)
    {
        throw new RuntimeException("Stub!");
    }

    public void surfaceChanged(SurfaceHolder holder, int format, int w, int h)
    {
        throw new RuntimeException("Stub!");
    }

    public void surfaceRedrawNeededAsync(SurfaceHolder holder, Runnable finishDrawing)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method surfaceRedrawNeeded is deprecated
     */

    public void surfaceRedrawNeeded(SurfaceHolder holder)
    {
        throw new RuntimeException("Stub!");
    }

    public void onPause()
    {
        throw new RuntimeException("Stub!");
    }

    public void onResume()
    {
        throw new RuntimeException("Stub!");
    }

    public void queueEvent(Runnable r)
    {
        throw new RuntimeException("Stub!");
    }

    protected void onAttachedToWindow()
    {
        throw new RuntimeException("Stub!");
    }

    protected void onDetachedFromWindow()
    {
        throw new RuntimeException("Stub!");
    }

    public static final int DEBUG_CHECK_GL_ERROR = 1;
    public static final int DEBUG_LOG_GL_CALLS = 2;
    public static final int RENDERMODE_CONTINUOUSLY = 1;
    public static final int RENDERMODE_WHEN_DIRTY = 0;
}
