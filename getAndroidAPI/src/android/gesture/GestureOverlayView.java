// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   GestureOverlayView.java

package android.gesture;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.Path;
import android.util.AttributeSet;
import android.view.MotionEvent;
import android.widget.FrameLayout;
import java.util.ArrayList;

// Referenced classes of package android.gesture:
//            Gesture

public class GestureOverlayView extends FrameLayout
{
    public static interface OnGesturingListener
    {

        public abstract void onGesturingStarted(GestureOverlayView gestureoverlayview);

        public abstract void onGesturingEnded(GestureOverlayView gestureoverlayview);
    }

    public static interface OnGesturePerformedListener
    {

        public abstract void onGesturePerformed(GestureOverlayView gestureoverlayview, Gesture gesture);
    }

    public static interface OnGestureListener
    {

        public abstract void onGestureStarted(GestureOverlayView gestureoverlayview, MotionEvent motionevent);

        public abstract void onGesture(GestureOverlayView gestureoverlayview, MotionEvent motionevent);

        public abstract void onGestureEnded(GestureOverlayView gestureoverlayview, MotionEvent motionevent);

        public abstract void onGestureCancelled(GestureOverlayView gestureoverlayview, MotionEvent motionevent);
    }


    public GestureOverlayView(Context context)
    {
        super((Context)null);
        throw new RuntimeException("Stub!");
    }

    public GestureOverlayView(Context context, AttributeSet attrs)
    {
        super((Context)null);
        throw new RuntimeException("Stub!");
    }

    public GestureOverlayView(Context context, AttributeSet attrs, int defStyleAttr)
    {
        super((Context)null);
        throw new RuntimeException("Stub!");
    }

    public GestureOverlayView(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes)
    {
        super((Context)null);
        throw new RuntimeException("Stub!");
    }

    public ArrayList getCurrentStroke()
    {
        throw new RuntimeException("Stub!");
    }

    public int getOrientation()
    {
        throw new RuntimeException("Stub!");
    }

    public void setOrientation(int orientation)
    {
        throw new RuntimeException("Stub!");
    }

    public void setGestureColor(int color)
    {
        throw new RuntimeException("Stub!");
    }

    public void setUncertainGestureColor(int color)
    {
        throw new RuntimeException("Stub!");
    }

    public int getUncertainGestureColor()
    {
        throw new RuntimeException("Stub!");
    }

    public int getGestureColor()
    {
        throw new RuntimeException("Stub!");
    }

    public float getGestureStrokeWidth()
    {
        throw new RuntimeException("Stub!");
    }

    public void setGestureStrokeWidth(float gestureStrokeWidth)
    {
        throw new RuntimeException("Stub!");
    }

    public int getGestureStrokeType()
    {
        throw new RuntimeException("Stub!");
    }

    public void setGestureStrokeType(int gestureStrokeType)
    {
        throw new RuntimeException("Stub!");
    }

    public float getGestureStrokeLengthThreshold()
    {
        throw new RuntimeException("Stub!");
    }

    public void setGestureStrokeLengthThreshold(float gestureStrokeLengthThreshold)
    {
        throw new RuntimeException("Stub!");
    }

    public float getGestureStrokeSquarenessTreshold()
    {
        throw new RuntimeException("Stub!");
    }

    public void setGestureStrokeSquarenessTreshold(float gestureStrokeSquarenessTreshold)
    {
        throw new RuntimeException("Stub!");
    }

    public float getGestureStrokeAngleThreshold()
    {
        throw new RuntimeException("Stub!");
    }

    public void setGestureStrokeAngleThreshold(float gestureStrokeAngleThreshold)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isEventsInterceptionEnabled()
    {
        throw new RuntimeException("Stub!");
    }

    public void setEventsInterceptionEnabled(boolean enabled)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isFadeEnabled()
    {
        throw new RuntimeException("Stub!");
    }

    public void setFadeEnabled(boolean fadeEnabled)
    {
        throw new RuntimeException("Stub!");
    }

    public Gesture getGesture()
    {
        throw new RuntimeException("Stub!");
    }

    public void setGesture(Gesture gesture)
    {
        throw new RuntimeException("Stub!");
    }

    public Path getGesturePath()
    {
        throw new RuntimeException("Stub!");
    }

    public Path getGesturePath(Path path)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isGestureVisible()
    {
        throw new RuntimeException("Stub!");
    }

    public void setGestureVisible(boolean visible)
    {
        throw new RuntimeException("Stub!");
    }

    public long getFadeOffset()
    {
        throw new RuntimeException("Stub!");
    }

    public void setFadeOffset(long fadeOffset)
    {
        throw new RuntimeException("Stub!");
    }

    public void addOnGestureListener(OnGestureListener listener)
    {
        throw new RuntimeException("Stub!");
    }

    public void removeOnGestureListener(OnGestureListener listener)
    {
        throw new RuntimeException("Stub!");
    }

    public void removeAllOnGestureListeners()
    {
        throw new RuntimeException("Stub!");
    }

    public void addOnGesturePerformedListener(OnGesturePerformedListener listener)
    {
        throw new RuntimeException("Stub!");
    }

    public void removeOnGesturePerformedListener(OnGesturePerformedListener listener)
    {
        throw new RuntimeException("Stub!");
    }

    public void removeAllOnGesturePerformedListeners()
    {
        throw new RuntimeException("Stub!");
    }

    public void addOnGesturingListener(OnGesturingListener listener)
    {
        throw new RuntimeException("Stub!");
    }

    public void removeOnGesturingListener(OnGesturingListener listener)
    {
        throw new RuntimeException("Stub!");
    }

    public void removeAllOnGesturingListeners()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isGesturing()
    {
        throw new RuntimeException("Stub!");
    }

    public void draw(Canvas canvas)
    {
        throw new RuntimeException("Stub!");
    }

    public void clear(boolean animated)
    {
        throw new RuntimeException("Stub!");
    }

    public void cancelClearAnimation()
    {
        throw new RuntimeException("Stub!");
    }

    public void cancelGesture()
    {
        throw new RuntimeException("Stub!");
    }

    protected void onDetachedFromWindow()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean dispatchTouchEvent(MotionEvent event)
    {
        throw new RuntimeException("Stub!");
    }

    public static final int GESTURE_STROKE_TYPE_MULTIPLE = 1;
    public static final int GESTURE_STROKE_TYPE_SINGLE = 0;
    public static final int ORIENTATION_HORIZONTAL = 0;
    public static final int ORIENTATION_VERTICAL = 1;
}
