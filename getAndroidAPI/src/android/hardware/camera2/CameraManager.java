// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   CameraManager.java

package android.hardware.camera2;

import android.content.Context;
import android.os.Handler;
import java.util.concurrent.Executor;

// Referenced classes of package android.hardware.camera2:
//            CameraAccessException, CameraDevice, CameraCharacteristics

public final class CameraManager
{
    public static abstract class TorchCallback
    {

        public void onTorchModeUnavailable(String cameraId)
        {
            throw new RuntimeException("Stub!");
        }

        public void onTorchModeChanged(String cameraId, boolean enabled)
        {
            throw new RuntimeException("Stub!");
        }

        public TorchCallback()
        {
            throw new RuntimeException("Stub!");
        }
    }

    public static abstract class AvailabilityCallback
    {

        public void onCameraAvailable(String cameraId)
        {
            throw new RuntimeException("Stub!");
        }

        public void onCameraUnavailable(String cameraId)
        {
            throw new RuntimeException("Stub!");
        }

        public void onCameraAccessPrioritiesChanged()
        {
            throw new RuntimeException("Stub!");
        }

        public AvailabilityCallback()
        {
            throw new RuntimeException("Stub!");
        }
    }


    CameraManager(Context context)
    {
        throw new RuntimeException("Stub!");
    }

    public String[] getCameraIdList()
        throws CameraAccessException
    {
        throw new RuntimeException("Stub!");
    }

    public void registerAvailabilityCallback(AvailabilityCallback callback, Handler handler)
    {
        throw new RuntimeException("Stub!");
    }

    public void registerAvailabilityCallback(Executor executor, AvailabilityCallback callback)
    {
        throw new RuntimeException("Stub!");
    }

    public void unregisterAvailabilityCallback(AvailabilityCallback callback)
    {
        throw new RuntimeException("Stub!");
    }

    public void registerTorchCallback(TorchCallback callback, Handler handler)
    {
        throw new RuntimeException("Stub!");
    }

    public void registerTorchCallback(Executor executor, TorchCallback callback)
    {
        throw new RuntimeException("Stub!");
    }

    public void unregisterTorchCallback(TorchCallback callback)
    {
        throw new RuntimeException("Stub!");
    }

    public CameraCharacteristics getCameraCharacteristics(String cameraId)
        throws CameraAccessException
    {
        throw new RuntimeException("Stub!");
    }

    public void openCamera(String cameraId, CameraDevice.StateCallback callback, Handler handler)
        throws CameraAccessException
    {
        throw new RuntimeException("Stub!");
    }

    public void openCamera(String cameraId, Executor executor, CameraDevice.StateCallback callback)
        throws CameraAccessException
    {
        throw new RuntimeException("Stub!");
    }

    public void setTorchMode(String cameraId, boolean enabled)
        throws CameraAccessException
    {
        throw new RuntimeException("Stub!");
    }
}
