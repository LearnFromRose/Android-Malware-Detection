// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   FingerprintManager.java

package android.hardware.fingerprint;

import android.os.CancellationSignal;
import android.os.Handler;
import java.security.Signature;
import javax.crypto.Cipher;
import javax.crypto.Mac;

/**
 * @deprecated Class FingerprintManager is deprecated
 */

public class FingerprintManager
{
    /**
     * @deprecated Class CryptoObject is deprecated
     */

    public static final class CryptoObject
    {

        /**
         * @deprecated Method getSignature is deprecated
         */

        public Signature getSignature()
        {
            throw new RuntimeException("Stub!");
        }

        /**
         * @deprecated Method getCipher is deprecated
         */

        public Cipher getCipher()
        {
            throw new RuntimeException("Stub!");
        }

        /**
         * @deprecated Method getMac is deprecated
         */

        public Mac getMac()
        {
            throw new RuntimeException("Stub!");
        }

        /**
         * @deprecated Method CryptoObject is deprecated
         */

        public CryptoObject(Signature signature)
        {
            throw new RuntimeException("Stub!");
        }

        /**
         * @deprecated Method CryptoObject is deprecated
         */

        public CryptoObject(Cipher cipher)
        {
            throw new RuntimeException("Stub!");
        }

        /**
         * @deprecated Method CryptoObject is deprecated
         */

        public CryptoObject(Mac mac)
        {
            throw new RuntimeException("Stub!");
        }
    }

    /**
     * @deprecated Class AuthenticationResult is deprecated
     */

    public static class AuthenticationResult
    {

        /**
         * @deprecated Method getCryptoObject is deprecated
         */

        public CryptoObject getCryptoObject()
        {
            throw new RuntimeException("Stub!");
        }

        AuthenticationResult()
        {
            throw new RuntimeException("Stub!");
        }
    }

    /**
     * @deprecated Class AuthenticationCallback is deprecated
     */

    public static abstract class AuthenticationCallback
    {

        /**
         * @deprecated Method onAuthenticationError is deprecated
         */

        public void onAuthenticationError(int errorCode, CharSequence errString)
        {
            throw new RuntimeException("Stub!");
        }

        /**
         * @deprecated Method onAuthenticationHelp is deprecated
         */

        public void onAuthenticationHelp(int helpCode, CharSequence helpString)
        {
            throw new RuntimeException("Stub!");
        }

        /**
         * @deprecated Method onAuthenticationSucceeded is deprecated
         */

        public void onAuthenticationSucceeded(AuthenticationResult result)
        {
            throw new RuntimeException("Stub!");
        }

        /**
         * @deprecated Method onAuthenticationFailed is deprecated
         */

        public void onAuthenticationFailed()
        {
            throw new RuntimeException("Stub!");
        }

        /**
         * @deprecated Method AuthenticationCallback is deprecated
         */

        public AuthenticationCallback()
        {
            throw new RuntimeException("Stub!");
        }
    }


    FingerprintManager()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method authenticate is deprecated
     */

    public void authenticate(CryptoObject crypto, CancellationSignal cancel, int flags, AuthenticationCallback callback, Handler handler)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method hasEnrolledFingerprints is deprecated
     */

    public boolean hasEnrolledFingerprints()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method isHardwareDetected is deprecated
     */

    public boolean isHardwareDetected()
    {
        throw new RuntimeException("Stub!");
    }

    public static final int FINGERPRINT_ACQUIRED_GOOD = 0;
    public static final int FINGERPRINT_ACQUIRED_IMAGER_DIRTY = 3;
    public static final int FINGERPRINT_ACQUIRED_INSUFFICIENT = 2;
    public static final int FINGERPRINT_ACQUIRED_PARTIAL = 1;
    public static final int FINGERPRINT_ACQUIRED_TOO_FAST = 5;
    public static final int FINGERPRINT_ACQUIRED_TOO_SLOW = 4;
    public static final int FINGERPRINT_ERROR_CANCELED = 5;
    public static final int FINGERPRINT_ERROR_HW_NOT_PRESENT = 12;
    public static final int FINGERPRINT_ERROR_HW_UNAVAILABLE = 1;
    public static final int FINGERPRINT_ERROR_LOCKOUT = 7;
    public static final int FINGERPRINT_ERROR_LOCKOUT_PERMANENT = 9;
    public static final int FINGERPRINT_ERROR_NO_FINGERPRINTS = 11;
    public static final int FINGERPRINT_ERROR_NO_SPACE = 4;
    public static final int FINGERPRINT_ERROR_TIMEOUT = 3;
    public static final int FINGERPRINT_ERROR_UNABLE_TO_PROCESS = 2;
    public static final int FINGERPRINT_ERROR_USER_CANCELED = 10;
    public static final int FINGERPRINT_ERROR_VENDOR = 8;
}
