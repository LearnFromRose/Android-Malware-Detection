// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   NotificationManager.java

package android.app;

import android.content.ComponentName;
import android.content.Context;
import android.os.*;
import android.service.notification.Condition;
import android.service.notification.StatusBarNotification;
import java.util.List;
import java.util.Map;

// Referenced classes of package android.app:
//            Notification, NotificationChannelGroup, NotificationChannel, AutomaticZenRule

public class NotificationManager
{
    public static class Policy
        implements Parcelable
    {

        public void writeToParcel(Parcel dest, int flags)
        {
            throw new RuntimeException("Stub!");
        }

        public int describeContents()
        {
            throw new RuntimeException("Stub!");
        }

        public int hashCode()
        {
            throw new RuntimeException("Stub!");
        }

        public boolean equals(Object o)
        {
            throw new RuntimeException("Stub!");
        }

        public String toString()
        {
            throw new RuntimeException("Stub!");
        }

        public static String suppressedEffectsToString(int effects)
        {
            throw new RuntimeException("Stub!");
        }

        public static String priorityCategoriesToString(int priorityCategories)
        {
            throw new RuntimeException("Stub!");
        }

        public static String prioritySendersToString(int prioritySenders)
        {
            throw new RuntimeException("Stub!");
        }

        public static final android.os.Parcelable.Creator CREATOR = null;
        public static final int PRIORITY_CATEGORY_ALARMS = 32;
        public static final int PRIORITY_CATEGORY_CALLS = 8;
        public static final int PRIORITY_CATEGORY_EVENTS = 2;
        public static final int PRIORITY_CATEGORY_MEDIA = 64;
        public static final int PRIORITY_CATEGORY_MESSAGES = 4;
        public static final int PRIORITY_CATEGORY_REMINDERS = 1;
        public static final int PRIORITY_CATEGORY_REPEAT_CALLERS = 16;
        public static final int PRIORITY_CATEGORY_SYSTEM = 128;
        public static final int PRIORITY_SENDERS_ANY = 0;
        public static final int PRIORITY_SENDERS_CONTACTS = 1;
        public static final int PRIORITY_SENDERS_STARRED = 2;
        public static final int SUPPRESSED_EFFECT_AMBIENT = 128;
        public static final int SUPPRESSED_EFFECT_BADGE = 64;
        public static final int SUPPRESSED_EFFECT_FULL_SCREEN_INTENT = 4;
        public static final int SUPPRESSED_EFFECT_LIGHTS = 8;
        public static final int SUPPRESSED_EFFECT_NOTIFICATION_LIST = 256;
        public static final int SUPPRESSED_EFFECT_PEEK = 16;
        /**
         * @deprecated Field SUPPRESSED_EFFECT_SCREEN_OFF is deprecated
         */
        public static final int SUPPRESSED_EFFECT_SCREEN_OFF = 1;
        /**
         * @deprecated Field SUPPRESSED_EFFECT_SCREEN_ON is deprecated
         */
        public static final int SUPPRESSED_EFFECT_SCREEN_ON = 2;
        public static final int SUPPRESSED_EFFECT_STATUS_BAR = 32;
        public final int priorityCallSenders;
        public final int priorityCategories;
        public final int priorityMessageSenders;
        public final int suppressedVisualEffects;


        public Policy(int priorityCategories, int priorityCallSenders, int priorityMessageSenders)
        {
            this.priorityCallSenders = 0;
            this.priorityCategories = 0;
            this.priorityMessageSenders = 0;
            suppressedVisualEffects = 0;
            throw new RuntimeException("Stub!");
        }

        public Policy(int priorityCategories, int priorityCallSenders, int priorityMessageSenders, int suppressedVisualEffects)
        {
            this.priorityCallSenders = 0;
            this.priorityCategories = 0;
            this.priorityMessageSenders = 0;
            this.suppressedVisualEffects = 0;
            throw new RuntimeException("Stub!");
        }
    }


    NotificationManager(Context context, Handler handler)
    {
        throw new RuntimeException("Stub!");
    }

    public void notify(int id, Notification notification)
    {
        throw new RuntimeException("Stub!");
    }

    public void notify(String tag, int id, Notification notification)
    {
        throw new RuntimeException("Stub!");
    }

    public void notifyAsPackage(String targetPackage, String tag, int id, Notification notification)
    {
        throw new RuntimeException("Stub!");
    }

    public void cancel(int id)
    {
        throw new RuntimeException("Stub!");
    }

    public void cancel(String tag, int id)
    {
        throw new RuntimeException("Stub!");
    }

    public void cancelAll()
    {
        throw new RuntimeException("Stub!");
    }

    public void setNotificationDelegate(String delegate)
    {
        throw new RuntimeException("Stub!");
    }

    public String getNotificationDelegate()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean canNotifyAsPackage(String pkg)
    {
        throw new RuntimeException("Stub!");
    }

    public void createNotificationChannelGroup(NotificationChannelGroup group)
    {
        throw new RuntimeException("Stub!");
    }

    public void createNotificationChannelGroups(List groups)
    {
        throw new RuntimeException("Stub!");
    }

    public void createNotificationChannel(NotificationChannel channel)
    {
        throw new RuntimeException("Stub!");
    }

    public void createNotificationChannels(List channels)
    {
        throw new RuntimeException("Stub!");
    }

    public NotificationChannel getNotificationChannel(String channelId)
    {
        throw new RuntimeException("Stub!");
    }

    public List getNotificationChannels()
    {
        throw new RuntimeException("Stub!");
    }

    public void deleteNotificationChannel(String channelId)
    {
        throw new RuntimeException("Stub!");
    }

    public NotificationChannelGroup getNotificationChannelGroup(String channelGroupId)
    {
        throw new RuntimeException("Stub!");
    }

    public List getNotificationChannelGroups()
    {
        throw new RuntimeException("Stub!");
    }

    public void deleteNotificationChannelGroup(String groupId)
    {
        throw new RuntimeException("Stub!");
    }

    public Map getAutomaticZenRules()
    {
        throw new RuntimeException("Stub!");
    }

    public AutomaticZenRule getAutomaticZenRule(String id)
    {
        throw new RuntimeException("Stub!");
    }

    public String addAutomaticZenRule(AutomaticZenRule automaticZenRule)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean updateAutomaticZenRule(String id, AutomaticZenRule automaticZenRule)
    {
        throw new RuntimeException("Stub!");
    }

    public void setAutomaticZenRuleState(String id, Condition condition)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean removeAutomaticZenRule(String id)
    {
        throw new RuntimeException("Stub!");
    }

    public int getImportance()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean areNotificationsEnabled()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean areBubblesAllowed()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean areNotificationsPaused()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isNotificationPolicyAccessGranted()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isNotificationListenerAccessGranted(ComponentName listener)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean shouldHideSilentStatusBarIcons()
    {
        throw new RuntimeException("Stub!");
    }

    public Policy getNotificationPolicy()
    {
        throw new RuntimeException("Stub!");
    }

    public void setNotificationPolicy(Policy policy)
    {
        throw new RuntimeException("Stub!");
    }

    public StatusBarNotification[] getActiveNotifications()
    {
        throw new RuntimeException("Stub!");
    }

    public final int getCurrentInterruptionFilter()
    {
        throw new RuntimeException("Stub!");
    }

    public final void setInterruptionFilter(int interruptionFilter)
    {
        throw new RuntimeException("Stub!");
    }

    public static final String ACTION_APP_BLOCK_STATE_CHANGED = "android.app.action.APP_BLOCK_STATE_CHANGED";
    public static final String ACTION_AUTOMATIC_ZEN_RULE = "android.app.action.AUTOMATIC_ZEN_RULE";
    public static final String ACTION_INTERRUPTION_FILTER_CHANGED = "android.app.action.INTERRUPTION_FILTER_CHANGED";
    public static final String ACTION_NOTIFICATION_CHANNEL_BLOCK_STATE_CHANGED = "android.app.action.NOTIFICATION_CHANNEL_BLOCK_STATE_CHANGED";
    public static final String ACTION_NOTIFICATION_CHANNEL_GROUP_BLOCK_STATE_CHANGED = "android.app.action.NOTIFICATION_CHANNEL_GROUP_BLOCK_STATE_CHANGED";
    public static final String ACTION_NOTIFICATION_POLICY_ACCESS_GRANTED_CHANGED = "android.app.action.NOTIFICATION_POLICY_ACCESS_GRANTED_CHANGED";
    public static final String ACTION_NOTIFICATION_POLICY_CHANGED = "android.app.action.NOTIFICATION_POLICY_CHANGED";
    public static final String EXTRA_AUTOMATIC_RULE_ID = "android.app.extra.AUTOMATIC_RULE_ID";
    public static final String EXTRA_BLOCKED_STATE = "android.app.extra.BLOCKED_STATE";
    public static final String EXTRA_NOTIFICATION_CHANNEL_GROUP_ID = "android.app.extra.NOTIFICATION_CHANNEL_GROUP_ID";
    public static final String EXTRA_NOTIFICATION_CHANNEL_ID = "android.app.extra.NOTIFICATION_CHANNEL_ID";
    public static final int IMPORTANCE_DEFAULT = 3;
    public static final int IMPORTANCE_HIGH = 4;
    public static final int IMPORTANCE_LOW = 2;
    public static final int IMPORTANCE_MAX = 5;
    public static final int IMPORTANCE_MIN = 1;
    public static final int IMPORTANCE_NONE = 0;
    public static final int IMPORTANCE_UNSPECIFIED = -1000;
    public static final int INTERRUPTION_FILTER_ALARMS = 4;
    public static final int INTERRUPTION_FILTER_ALL = 1;
    public static final int INTERRUPTION_FILTER_NONE = 3;
    public static final int INTERRUPTION_FILTER_PRIORITY = 2;
    public static final int INTERRUPTION_FILTER_UNKNOWN = 0;
    public static final String META_DATA_AUTOMATIC_RULE_TYPE = "android.service.zen.automatic.ruleType";
    public static final String META_DATA_RULE_INSTANCE_LIMIT = "android.service.zen.automatic.ruleInstanceLimit";
}
