// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   AlarmManager.java

package android.app;

import android.os.*;

// Referenced classes of package android.app:
//            PendingIntent

public class AlarmManager
{
    public static interface OnAlarmListener
    {

        public abstract void onAlarm();
    }

    public static final class AlarmClockInfo
        implements Parcelable
    {

        public long getTriggerTime()
        {
            throw new RuntimeException("Stub!");
        }

        public PendingIntent getShowIntent()
        {
            throw new RuntimeException("Stub!");
        }

        public int describeContents()
        {
            throw new RuntimeException("Stub!");
        }

        public void writeToParcel(Parcel dest, int flags)
        {
            throw new RuntimeException("Stub!");
        }

        public static final android.os.Parcelable.Creator CREATOR = null;


        public AlarmClockInfo(long triggerTime, PendingIntent showIntent)
        {
            throw new RuntimeException("Stub!");
        }
    }


    AlarmManager()
    {
        throw new RuntimeException("Stub!");
    }

    public void set(int type, long triggerAtMillis, PendingIntent operation)
    {
        throw new RuntimeException("Stub!");
    }

    public void set(int type, long triggerAtMillis, String tag, OnAlarmListener listener, Handler targetHandler)
    {
        throw new RuntimeException("Stub!");
    }

    public void setRepeating(int type, long triggerAtMillis, long intervalMillis, PendingIntent operation)
    {
        throw new RuntimeException("Stub!");
    }

    public void setWindow(int type, long windowStartMillis, long windowLengthMillis, PendingIntent operation)
    {
        throw new RuntimeException("Stub!");
    }

    public void setWindow(int type, long windowStartMillis, long windowLengthMillis, String tag, OnAlarmListener listener, 
            Handler targetHandler)
    {
        throw new RuntimeException("Stub!");
    }

    public void setExact(int type, long triggerAtMillis, PendingIntent operation)
    {
        throw new RuntimeException("Stub!");
    }

    public void setExact(int type, long triggerAtMillis, String tag, OnAlarmListener listener, Handler targetHandler)
    {
        throw new RuntimeException("Stub!");
    }

    public void setAlarmClock(AlarmClockInfo info, PendingIntent operation)
    {
        throw new RuntimeException("Stub!");
    }

    public void setInexactRepeating(int type, long triggerAtMillis, long intervalMillis, PendingIntent operation)
    {
        throw new RuntimeException("Stub!");
    }

    public void setAndAllowWhileIdle(int type, long triggerAtMillis, PendingIntent operation)
    {
        throw new RuntimeException("Stub!");
    }

    public void setExactAndAllowWhileIdle(int type, long triggerAtMillis, PendingIntent operation)
    {
        throw new RuntimeException("Stub!");
    }

    public void cancel(PendingIntent operation)
    {
        throw new RuntimeException("Stub!");
    }

    public void cancel(OnAlarmListener listener)
    {
        throw new RuntimeException("Stub!");
    }

    public void setTime(long millis)
    {
        throw new RuntimeException("Stub!");
    }

    public void setTimeZone(String timeZone)
    {
        throw new RuntimeException("Stub!");
    }

    public AlarmClockInfo getNextAlarmClock()
    {
        throw new RuntimeException("Stub!");
    }

    public static final String ACTION_NEXT_ALARM_CLOCK_CHANGED = "android.app.action.NEXT_ALARM_CLOCK_CHANGED";
    public static final int ELAPSED_REALTIME = 3;
    public static final int ELAPSED_REALTIME_WAKEUP = 2;
    public static final long INTERVAL_DAY = 0x5265c00L;
    public static final long INTERVAL_FIFTEEN_MINUTES = 0xdbba0L;
    public static final long INTERVAL_HALF_DAY = 0x2932e00L;
    public static final long INTERVAL_HALF_HOUR = 0x1b7740L;
    public static final long INTERVAL_HOUR = 0x36ee80L;
    public static final int RTC = 1;
    public static final int RTC_WAKEUP = 0;
}
