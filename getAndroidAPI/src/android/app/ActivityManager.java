// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   ActivityManager.java

package android.app;

import android.content.*;
import android.content.pm.ConfigurationInfo;
import android.graphics.Bitmap;
import android.os.*;
import android.util.Size;
import java.io.FileDescriptor;
import java.util.List;

// Referenced classes of package android.app:
//            Activity, PendingIntent, TaskInfo

public class ActivityManager
{
    public static class TaskDescription
        implements Parcelable
    {

        public String getLabel()
        {
            throw new RuntimeException("Stub!");
        }

        public Bitmap getIcon()
        {
            throw new RuntimeException("Stub!");
        }

        public int getPrimaryColor()
        {
            throw new RuntimeException("Stub!");
        }

        public int describeContents()
        {
            throw new RuntimeException("Stub!");
        }

        public void writeToParcel(Parcel dest, int flags)
        {
            throw new RuntimeException("Stub!");
        }

        public void readFromParcel(Parcel source)
        {
            throw new RuntimeException("Stub!");
        }

        public String toString()
        {
            throw new RuntimeException("Stub!");
        }

        public static final android.os.Parcelable.Creator CREATOR = null;


        /**
         * @deprecated Method TaskDescription is deprecated
         */

        public TaskDescription(String label, Bitmap icon, int colorPrimary)
        {
            throw new RuntimeException("Stub!");
        }

        public TaskDescription(String label, int iconRes, int colorPrimary)
        {
            throw new RuntimeException("Stub!");
        }

        /**
         * @deprecated Method TaskDescription is deprecated
         */

        public TaskDescription(String label, Bitmap icon)
        {
            throw new RuntimeException("Stub!");
        }

        public TaskDescription(String label, int iconRes)
        {
            throw new RuntimeException("Stub!");
        }

        public TaskDescription(String label)
        {
            throw new RuntimeException("Stub!");
        }

        public TaskDescription()
        {
            throw new RuntimeException("Stub!");
        }

        public TaskDescription(TaskDescription td)
        {
            throw new RuntimeException("Stub!");
        }
    }

    public static class RunningTaskInfo extends TaskInfo
        implements Parcelable
    {

        public int describeContents()
        {
            throw new RuntimeException("Stub!");
        }

        public void readFromParcel(Parcel source)
        {
            throw new RuntimeException("Stub!");
        }

        public void writeToParcel(Parcel dest, int flags)
        {
            throw new RuntimeException("Stub!");
        }

        public static final android.os.Parcelable.Creator CREATOR = null;
        /**
         * @deprecated Field description is deprecated
         */
        public CharSequence description;
        /**
         * @deprecated Field id is deprecated
         */
        public int id;
        /**
         * @deprecated Field numRunning is deprecated
         */
        public int numRunning;
        /**
         * @deprecated Field thumbnail is deprecated
         */
        public Bitmap thumbnail;


        public RunningTaskInfo()
        {
            throw new RuntimeException("Stub!");
        }
    }

    public static class RunningServiceInfo
        implements Parcelable
    {

        public int describeContents()
        {
            throw new RuntimeException("Stub!");
        }

        public void writeToParcel(Parcel dest, int flags)
        {
            throw new RuntimeException("Stub!");
        }

        public void readFromParcel(Parcel source)
        {
            throw new RuntimeException("Stub!");
        }

        public static final android.os.Parcelable.Creator CREATOR = null;
        public static final int FLAG_FOREGROUND = 2;
        public static final int FLAG_PERSISTENT_PROCESS = 8;
        public static final int FLAG_STARTED = 1;
        public static final int FLAG_SYSTEM_PROCESS = 4;
        public long activeSince;
        public int clientCount;
        public int clientLabel;
        public String clientPackage;
        public int crashCount;
        public int flags;
        public boolean foreground;
        public long lastActivityTime;
        public int pid;
        public String process;
        public long restarting;
        public ComponentName service;
        public boolean started;
        public int uid;


        public RunningServiceInfo()
        {
            throw new RuntimeException("Stub!");
        }
    }

    public static class RunningAppProcessInfo
        implements Parcelable
    {

        public int describeContents()
        {
            throw new RuntimeException("Stub!");
        }

        public void writeToParcel(Parcel dest, int flags)
        {
            throw new RuntimeException("Stub!");
        }

        public void readFromParcel(Parcel source)
        {
            throw new RuntimeException("Stub!");
        }

        public static final android.os.Parcelable.Creator CREATOR = null;
        /**
         * @deprecated Field IMPORTANCE_BACKGROUND is deprecated
         */
        public static final int IMPORTANCE_BACKGROUND = 400;
        public static final int IMPORTANCE_CACHED = 400;
        public static final int IMPORTANCE_CANT_SAVE_STATE = 350;
        /**
         * @deprecated Field IMPORTANCE_EMPTY is deprecated
         */
        public static final int IMPORTANCE_EMPTY = 500;
        public static final int IMPORTANCE_FOREGROUND = 100;
        public static final int IMPORTANCE_FOREGROUND_SERVICE = 125;
        public static final int IMPORTANCE_GONE = 1000;
        public static final int IMPORTANCE_PERCEPTIBLE = 230;
        public static final int IMPORTANCE_PERCEPTIBLE_PRE_26 = 130;
        public static final int IMPORTANCE_SERVICE = 300;
        public static final int IMPORTANCE_TOP_SLEEPING = 325;
        /**
         * @deprecated Field IMPORTANCE_TOP_SLEEPING_PRE_28 is deprecated
         */
        public static final int IMPORTANCE_TOP_SLEEPING_PRE_28 = 150;
        public static final int IMPORTANCE_VISIBLE = 200;
        public static final int REASON_PROVIDER_IN_USE = 1;
        public static final int REASON_SERVICE_IN_USE = 2;
        public static final int REASON_UNKNOWN = 0;
        public int importance;
        public int importanceReasonCode;
        public ComponentName importanceReasonComponent;
        public int importanceReasonPid;
        public int lastTrimLevel;
        public int lru;
        public int pid;
        public String pkgList[];
        public String processName;
        public int uid;


        public RunningAppProcessInfo()
        {
            throw new RuntimeException("Stub!");
        }

        public RunningAppProcessInfo(String pProcessName, int pPid, String pArr[])
        {
            throw new RuntimeException("Stub!");
        }
    }

    public static class RecentTaskInfo extends TaskInfo
        implements Parcelable
    {

        public int describeContents()
        {
            throw new RuntimeException("Stub!");
        }

        public void readFromParcel(Parcel source)
        {
            throw new RuntimeException("Stub!");
        }

        public void writeToParcel(Parcel dest, int flags)
        {
            throw new RuntimeException("Stub!");
        }

        public static final android.os.Parcelable.Creator CREATOR = null;
        /**
         * @deprecated Field affiliatedTaskId is deprecated
         */
        public int affiliatedTaskId;
        /**
         * @deprecated Field description is deprecated
         */
        public CharSequence description;
        /**
         * @deprecated Field id is deprecated
         */
        public int id;
        /**
         * @deprecated Field persistentId is deprecated
         */
        public int persistentId;


        public RecentTaskInfo()
        {
            throw new RuntimeException("Stub!");
        }
    }

    public static class ProcessErrorStateInfo
        implements Parcelable
    {

        public int describeContents()
        {
            throw new RuntimeException("Stub!");
        }

        public void writeToParcel(Parcel dest, int flags)
        {
            throw new RuntimeException("Stub!");
        }

        public void readFromParcel(Parcel source)
        {
            throw new RuntimeException("Stub!");
        }

        public static final int CRASHED = 1;
        public static final android.os.Parcelable.Creator CREATOR = null;
        public static final int NOT_RESPONDING = 2;
        public static final int NO_ERROR = 0;
        public int condition;
        public byte crashData[];
        public String longMsg;
        public int pid;
        public String processName;
        public String shortMsg;
        public String stackTrace;
        public String tag;
        public int uid;


        public ProcessErrorStateInfo()
        {
            throw new RuntimeException("Stub!");
        }
    }

    public static class MemoryInfo
        implements Parcelable
    {

        public int describeContents()
        {
            throw new RuntimeException("Stub!");
        }

        public void writeToParcel(Parcel dest, int flags)
        {
            throw new RuntimeException("Stub!");
        }

        public void readFromParcel(Parcel source)
        {
            throw new RuntimeException("Stub!");
        }

        public static final android.os.Parcelable.Creator CREATOR = null;
        public long availMem;
        public boolean lowMemory;
        public long threshold;
        public long totalMem;


        public MemoryInfo()
        {
            throw new RuntimeException("Stub!");
        }
    }

    public static class AppTask
    {

        public void finishAndRemoveTask()
        {
            throw new RuntimeException("Stub!");
        }

        public RecentTaskInfo getTaskInfo()
        {
            throw new RuntimeException("Stub!");
        }

        public void moveToFront()
        {
            throw new RuntimeException("Stub!");
        }

        public void startActivity(Context context, Intent intent, Bundle options)
        {
            throw new RuntimeException("Stub!");
        }

        public void setExcludeFromRecents(boolean exclude)
        {
            throw new RuntimeException("Stub!");
        }

        AppTask()
        {
            throw new RuntimeException("Stub!");
        }
    }


    ActivityManager(Context context, Handler handler)
    {
        throw new RuntimeException("Stub!");
    }

    public int getMemoryClass()
    {
        throw new RuntimeException("Stub!");
    }

    public int getLargeMemoryClass()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isLowRamDevice()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method getRecentTasks is deprecated
     */

    public List getRecentTasks(int maxNum, int flags)
        throws SecurityException
    {
        throw new RuntimeException("Stub!");
    }

    public List getAppTasks()
    {
        throw new RuntimeException("Stub!");
    }

    public Size getAppTaskThumbnailSize()
    {
        throw new RuntimeException("Stub!");
    }

    public int addAppTask(Activity activity, Intent intent, TaskDescription description, Bitmap thumbnail)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method getRunningTasks is deprecated
     */

    public List getRunningTasks(int maxNum)
        throws SecurityException
    {
        throw new RuntimeException("Stub!");
    }

    public void moveTaskToFront(int taskId, int flags)
    {
        throw new RuntimeException("Stub!");
    }

    public void moveTaskToFront(int taskId, int flags, Bundle options)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isActivityStartAllowedOnDisplay(Context context, int displayId, Intent intent)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method getRunningServices is deprecated
     */

    public List getRunningServices(int maxNum)
        throws SecurityException
    {
        throw new RuntimeException("Stub!");
    }

    public PendingIntent getRunningServiceControlPanel(ComponentName service)
        throws SecurityException
    {
        throw new RuntimeException("Stub!");
    }

    public void getMemoryInfo(MemoryInfo outInfo)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean clearApplicationUserData()
    {
        throw new RuntimeException("Stub!");
    }

    public List getProcessesInErrorState()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isBackgroundRestricted()
    {
        throw new RuntimeException("Stub!");
    }

    public List getRunningAppProcesses()
    {
        throw new RuntimeException("Stub!");
    }

    public static void getMyMemoryState(RunningAppProcessInfo outState)
    {
        throw new RuntimeException("Stub!");
    }

    public android.os.Debug.MemoryInfo[] getProcessMemoryInfo(int pids[])
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method restartPackage is deprecated
     */

    public void restartPackage(String packageName)
    {
        throw new RuntimeException("Stub!");
    }

    public void killBackgroundProcesses(String packageName)
    {
        throw new RuntimeException("Stub!");
    }

    public ConfigurationInfo getDeviceConfigurationInfo()
    {
        throw new RuntimeException("Stub!");
    }

    public int getLauncherLargeIconDensity()
    {
        throw new RuntimeException("Stub!");
    }

    public int getLauncherLargeIconSize()
    {
        throw new RuntimeException("Stub!");
    }

    public static boolean isUserAMonkey()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method isRunningInTestHarness is deprecated
     */

    public static boolean isRunningInTestHarness()
    {
        throw new RuntimeException("Stub!");
    }

    public static boolean isRunningInUserTestHarness()
    {
        throw new RuntimeException("Stub!");
    }

    public void dumpPackageState(FileDescriptor fd, String packageName)
    {
        throw new RuntimeException("Stub!");
    }

    public void setWatchHeapLimit(long pssSize)
    {
        throw new RuntimeException("Stub!");
    }

    public void clearWatchHeapLimit()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method isInLockTaskMode is deprecated
     */

    public boolean isInLockTaskMode()
    {
        throw new RuntimeException("Stub!");
    }

    public int getLockTaskModeState()
    {
        throw new RuntimeException("Stub!");
    }

    public static void setVrThread(int tid)
    {
        throw new RuntimeException("Stub!");
    }

    public static final String ACTION_REPORT_HEAP_LIMIT = "android.app.action.REPORT_HEAP_LIMIT";
    public static final int LOCK_TASK_MODE_LOCKED = 1;
    public static final int LOCK_TASK_MODE_NONE = 0;
    public static final int LOCK_TASK_MODE_PINNED = 2;
    public static final String META_HOME_ALTERNATE = "android.app.home.alternate";
    public static final int MOVE_TASK_NO_USER_ACTION = 2;
    public static final int MOVE_TASK_WITH_HOME = 1;
    public static final int RECENT_IGNORE_UNAVAILABLE = 2;
    public static final int RECENT_WITH_EXCLUDED = 1;
}
