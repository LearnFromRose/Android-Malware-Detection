// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   TransitionSet.java

package android.transition;

import android.animation.TimeInterpolator;
import android.content.Context;
import android.util.AttributeSet;
import android.view.View;

// Referenced classes of package android.transition:
//            Transition, PathMotion, TransitionValues, TransitionPropagation

public class TransitionSet extends Transition
{

    public TransitionSet()
    {
        throw new RuntimeException("Stub!");
    }

    public TransitionSet(Context context, AttributeSet attrs)
    {
        throw new RuntimeException("Stub!");
    }

    public TransitionSet setOrdering(int ordering)
    {
        throw new RuntimeException("Stub!");
    }

    public int getOrdering()
    {
        throw new RuntimeException("Stub!");
    }

    public TransitionSet addTransition(Transition transition)
    {
        throw new RuntimeException("Stub!");
    }

    public int getTransitionCount()
    {
        throw new RuntimeException("Stub!");
    }

    public Transition getTransitionAt(int index)
    {
        throw new RuntimeException("Stub!");
    }

    public TransitionSet setDuration(long duration)
    {
        throw new RuntimeException("Stub!");
    }

    public TransitionSet setStartDelay(long startDelay)
    {
        throw new RuntimeException("Stub!");
    }

    public TransitionSet setInterpolator(TimeInterpolator interpolator)
    {
        throw new RuntimeException("Stub!");
    }

    public TransitionSet addTarget(View target)
    {
        throw new RuntimeException("Stub!");
    }

    public TransitionSet addTarget(int targetId)
    {
        throw new RuntimeException("Stub!");
    }

    public TransitionSet addTarget(String targetName)
    {
        throw new RuntimeException("Stub!");
    }

    public TransitionSet addTarget(Class targetType)
    {
        throw new RuntimeException("Stub!");
    }

    public TransitionSet addListener(Transition.TransitionListener listener)
    {
        throw new RuntimeException("Stub!");
    }

    public TransitionSet removeTarget(int targetId)
    {
        throw new RuntimeException("Stub!");
    }

    public TransitionSet removeTarget(View target)
    {
        throw new RuntimeException("Stub!");
    }

    public TransitionSet removeTarget(Class target)
    {
        throw new RuntimeException("Stub!");
    }

    public TransitionSet removeTarget(String target)
    {
        throw new RuntimeException("Stub!");
    }

    public Transition excludeTarget(View target, boolean exclude)
    {
        throw new RuntimeException("Stub!");
    }

    public Transition excludeTarget(String targetName, boolean exclude)
    {
        throw new RuntimeException("Stub!");
    }

    public Transition excludeTarget(int targetId, boolean exclude)
    {
        throw new RuntimeException("Stub!");
    }

    public Transition excludeTarget(Class type, boolean exclude)
    {
        throw new RuntimeException("Stub!");
    }

    public TransitionSet removeListener(Transition.TransitionListener listener)
    {
        throw new RuntimeException("Stub!");
    }

    public void setPathMotion(PathMotion pathMotion)
    {
        throw new RuntimeException("Stub!");
    }

    public TransitionSet removeTransition(Transition transition)
    {
        throw new RuntimeException("Stub!");
    }

    public void captureStartValues(TransitionValues transitionValues)
    {
        throw new RuntimeException("Stub!");
    }

    public void captureEndValues(TransitionValues transitionValues)
    {
        throw new RuntimeException("Stub!");
    }

    public void setPropagation(TransitionPropagation propagation)
    {
        throw new RuntimeException("Stub!");
    }

    public void setEpicenterCallback(Transition.EpicenterCallback epicenterCallback)
    {
        throw new RuntimeException("Stub!");
    }

    public TransitionSet clone()
    {
        throw new RuntimeException("Stub!");
    }

    public volatile Transition clone()
    {
        return clone();
    }

    public volatile Transition removeListener(Transition.TransitionListener transitionlistener)
    {
        return removeListener(transitionlistener);
    }

    public volatile Transition addListener(Transition.TransitionListener transitionlistener)
    {
        return addListener(transitionlistener);
    }

    public volatile Transition removeTarget(Class class1)
    {
        return removeTarget(class1);
    }

    public volatile Transition removeTarget(View view)
    {
        return removeTarget(view);
    }

    public volatile Transition addTarget(View view)
    {
        return addTarget(view);
    }

    public volatile Transition removeTarget(String s)
    {
        return removeTarget(s);
    }

    public volatile Transition removeTarget(int i)
    {
        return removeTarget(i);
    }

    public volatile Transition addTarget(Class class1)
    {
        return addTarget(class1);
    }

    public volatile Transition addTarget(String s)
    {
        return addTarget(s);
    }

    public volatile Transition addTarget(int i)
    {
        return addTarget(i);
    }

    public volatile Transition setInterpolator(TimeInterpolator timeinterpolator)
    {
        return setInterpolator(timeinterpolator);
    }

    public volatile Transition setStartDelay(long l)
    {
        return setStartDelay(l);
    }

    public volatile Transition setDuration(long l)
    {
        return setDuration(l);
    }

    public volatile Object clone()
        throws CloneNotSupportedException
    {
        return clone();
    }

    public static final int ORDERING_SEQUENTIAL = 1;
    public static final int ORDERING_TOGETHER = 0;
}
