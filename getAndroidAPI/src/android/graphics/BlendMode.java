// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   BlendMode.java

package android.graphics;


public final class BlendMode extends Enum
{

    public static BlendMode[] values()
    {
        return (BlendMode[])$VALUES.clone();
    }

    public static BlendMode valueOf(String name)
    {
        return (BlendMode)Enum.valueOf(android/graphics/BlendMode, name);
    }

    private BlendMode(String s, int i)
    {
        super(s, i);
    }

    public static final BlendMode CLEAR;
    public static final BlendMode SRC;
    public static final BlendMode DST;
    public static final BlendMode SRC_OVER;
    public static final BlendMode DST_OVER;
    public static final BlendMode SRC_IN;
    public static final BlendMode DST_IN;
    public static final BlendMode SRC_OUT;
    public static final BlendMode DST_OUT;
    public static final BlendMode SRC_ATOP;
    public static final BlendMode DST_ATOP;
    public static final BlendMode XOR;
    public static final BlendMode PLUS;
    public static final BlendMode MODULATE;
    public static final BlendMode SCREEN;
    public static final BlendMode OVERLAY;
    public static final BlendMode DARKEN;
    public static final BlendMode LIGHTEN;
    public static final BlendMode COLOR_DODGE;
    public static final BlendMode COLOR_BURN;
    public static final BlendMode HARD_LIGHT;
    public static final BlendMode SOFT_LIGHT;
    public static final BlendMode DIFFERENCE;
    public static final BlendMode EXCLUSION;
    public static final BlendMode MULTIPLY;
    public static final BlendMode HUE;
    public static final BlendMode SATURATION;
    public static final BlendMode COLOR;
    public static final BlendMode LUMINOSITY;
    private static final BlendMode $VALUES[];

    static 
    {
        CLEAR = new BlendMode("CLEAR", 0);
        SRC = new BlendMode("SRC", 1);
        DST = new BlendMode("DST", 2);
        SRC_OVER = new BlendMode("SRC_OVER", 3);
        DST_OVER = new BlendMode("DST_OVER", 4);
        SRC_IN = new BlendMode("SRC_IN", 5);
        DST_IN = new BlendMode("DST_IN", 6);
        SRC_OUT = new BlendMode("SRC_OUT", 7);
        DST_OUT = new BlendMode("DST_OUT", 8);
        SRC_ATOP = new BlendMode("SRC_ATOP", 9);
        DST_ATOP = new BlendMode("DST_ATOP", 10);
        XOR = new BlendMode("XOR", 11);
        PLUS = new BlendMode("PLUS", 12);
        MODULATE = new BlendMode("MODULATE", 13);
        SCREEN = new BlendMode("SCREEN", 14);
        OVERLAY = new BlendMode("OVERLAY", 15);
        DARKEN = new BlendMode("DARKEN", 16);
        LIGHTEN = new BlendMode("LIGHTEN", 17);
        COLOR_DODGE = new BlendMode("COLOR_DODGE", 18);
        COLOR_BURN = new BlendMode("COLOR_BURN", 19);
        HARD_LIGHT = new BlendMode("HARD_LIGHT", 20);
        SOFT_LIGHT = new BlendMode("SOFT_LIGHT", 21);
        DIFFERENCE = new BlendMode("DIFFERENCE", 22);
        EXCLUSION = new BlendMode("EXCLUSION", 23);
        MULTIPLY = new BlendMode("MULTIPLY", 24);
        HUE = new BlendMode("HUE", 25);
        SATURATION = new BlendMode("SATURATION", 26);
        COLOR = new BlendMode("COLOR", 27);
        LUMINOSITY = new BlendMode("LUMINOSITY", 28);
        $VALUES = (new BlendMode[] {
            CLEAR, SRC, DST, SRC_OVER, DST_OVER, SRC_IN, DST_IN, SRC_OUT, DST_OUT, SRC_ATOP, 
            DST_ATOP, XOR, PLUS, MODULATE, SCREEN, OVERLAY, DARKEN, LIGHTEN, COLOR_DODGE, COLOR_BURN, 
            HARD_LIGHT, SOFT_LIGHT, DIFFERENCE, EXCLUSION, MULTIPLY, HUE, SATURATION, COLOR, LUMINOSITY
        });
    }
}
