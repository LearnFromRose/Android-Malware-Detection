// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   Canvas.java

package android.graphics;

import android.graphics.text.MeasuredText;

// Referenced classes of package android.graphics:
//            Region, PorterDuff, Bitmap, RectF, 
//            Paint, Matrix, Rect, Path, 
//            DrawFilter, Picture, BlendMode, RenderNode

public class Canvas
{
    public static final class VertexMode extends Enum
    {

        public static VertexMode[] values()
        {
            return (VertexMode[])$VALUES.clone();
        }

        public static VertexMode valueOf(String name)
        {
            return (VertexMode)Enum.valueOf(android/graphics/Canvas$VertexMode, name);
        }

        public static final VertexMode TRIANGLES;
        public static final VertexMode TRIANGLE_STRIP;
        public static final VertexMode TRIANGLE_FAN;
        private static final VertexMode $VALUES[];

        static 
        {
            TRIANGLES = new VertexMode("TRIANGLES", 0);
            TRIANGLE_STRIP = new VertexMode("TRIANGLE_STRIP", 1);
            TRIANGLE_FAN = new VertexMode("TRIANGLE_FAN", 2);
            $VALUES = (new VertexMode[] {
                TRIANGLES, TRIANGLE_STRIP, TRIANGLE_FAN
            });
        }

        private VertexMode(String s, int i)
        {
            super(s, i);
        }
    }

    public static final class EdgeType extends Enum
    {

        public static EdgeType[] values()
        {
            return (EdgeType[])$VALUES.clone();
        }

        public static EdgeType valueOf(String name)
        {
            return (EdgeType)Enum.valueOf(android/graphics/Canvas$EdgeType, name);
        }

        public static final EdgeType BW;
        public static final EdgeType AA;
        private static final EdgeType $VALUES[];

        static 
        {
            BW = new EdgeType("BW", 0);
            AA = new EdgeType("AA", 1);
            $VALUES = (new EdgeType[] {
                BW, AA
            });
        }

        private EdgeType(String s, int i)
        {
            super(s, i);
        }
    }


    public Canvas()
    {
        throw new RuntimeException("Stub!");
    }

    public Canvas(Bitmap bitmap)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isHardwareAccelerated()
    {
        throw new RuntimeException("Stub!");
    }

    public void setBitmap(Bitmap bitmap)
    {
        throw new RuntimeException("Stub!");
    }

    public void enableZ()
    {
        throw new RuntimeException("Stub!");
    }

    public void disableZ()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isOpaque()
    {
        throw new RuntimeException("Stub!");
    }

    public int getWidth()
    {
        throw new RuntimeException("Stub!");
    }

    public int getHeight()
    {
        throw new RuntimeException("Stub!");
    }

    public int getDensity()
    {
        throw new RuntimeException("Stub!");
    }

    public void setDensity(int density)
    {
        throw new RuntimeException("Stub!");
    }

    public int getMaximumBitmapWidth()
    {
        throw new RuntimeException("Stub!");
    }

    public int getMaximumBitmapHeight()
    {
        throw new RuntimeException("Stub!");
    }

    public int save()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method saveLayer is deprecated
     */

    public int saveLayer(RectF bounds, Paint paint, int saveFlags)
    {
        throw new RuntimeException("Stub!");
    }

    public int saveLayer(RectF bounds, Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method saveLayer is deprecated
     */

    public int saveLayer(float left, float top, float right, float bottom, Paint paint, int saveFlags)
    {
        throw new RuntimeException("Stub!");
    }

    public int saveLayer(float left, float top, float right, float bottom, Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method saveLayerAlpha is deprecated
     */

    public int saveLayerAlpha(RectF bounds, int alpha, int saveFlags)
    {
        throw new RuntimeException("Stub!");
    }

    public int saveLayerAlpha(RectF bounds, int alpha)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method saveLayerAlpha is deprecated
     */

    public int saveLayerAlpha(float left, float top, float right, float bottom, int alpha, int saveFlags)
    {
        throw new RuntimeException("Stub!");
    }

    public int saveLayerAlpha(float left, float top, float right, float bottom, int alpha)
    {
        throw new RuntimeException("Stub!");
    }

    public void restore()
    {
        throw new RuntimeException("Stub!");
    }

    public int getSaveCount()
    {
        throw new RuntimeException("Stub!");
    }

    public void restoreToCount(int saveCount)
    {
        throw new RuntimeException("Stub!");
    }

    public void translate(float dx, float dy)
    {
        throw new RuntimeException("Stub!");
    }

    public void scale(float sx, float sy)
    {
        throw new RuntimeException("Stub!");
    }

    public final void scale(float sx, float sy, float px, float py)
    {
        throw new RuntimeException("Stub!");
    }

    public void rotate(float degrees)
    {
        throw new RuntimeException("Stub!");
    }

    public final void rotate(float degrees, float px, float py)
    {
        throw new RuntimeException("Stub!");
    }

    public void skew(float sx, float sy)
    {
        throw new RuntimeException("Stub!");
    }

    public void concat(Matrix matrix)
    {
        throw new RuntimeException("Stub!");
    }

    public void setMatrix(Matrix matrix)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method getMatrix is deprecated
     */

    public void getMatrix(Matrix ctm)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method getMatrix is deprecated
     */

    public final Matrix getMatrix()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method clipRect is deprecated
     */

    public boolean clipRect(RectF rect, Region.Op op)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method clipRect is deprecated
     */

    public boolean clipRect(Rect rect, Region.Op op)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean clipRect(RectF rect)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean clipOutRect(RectF rect)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean clipRect(Rect rect)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean clipOutRect(Rect rect)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method clipRect is deprecated
     */

    public boolean clipRect(float left, float top, float right, float bottom, Region.Op op)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean clipRect(float left, float top, float right, float bottom)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean clipOutRect(float left, float top, float right, float bottom)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean clipRect(int left, int top, int right, int bottom)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean clipOutRect(int left, int top, int right, int bottom)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method clipPath is deprecated
     */

    public boolean clipPath(Path path, Region.Op op)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean clipPath(Path path)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean clipOutPath(Path path)
    {
        throw new RuntimeException("Stub!");
    }

    public DrawFilter getDrawFilter()
    {
        throw new RuntimeException("Stub!");
    }

    public void setDrawFilter(DrawFilter filter)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean quickReject(RectF rect, EdgeType type)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean quickReject(Path path, EdgeType type)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean quickReject(float left, float top, float right, float bottom, EdgeType type)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean getClipBounds(Rect bounds)
    {
        throw new RuntimeException("Stub!");
    }

    public final Rect getClipBounds()
    {
        throw new RuntimeException("Stub!");
    }

    public void drawPicture(Picture picture)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawPicture(Picture picture, RectF dst)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawPicture(Picture picture, Rect dst)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawArc(RectF oval, float startAngle, float sweepAngle, boolean useCenter, Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawArc(float left, float top, float right, float bottom, float startAngle, float sweepAngle, boolean useCenter, 
            Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawARGB(int a, int r, int g, int b)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawBitmap(Bitmap bitmap, float left, float top, Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawBitmap(Bitmap bitmap, Rect src, RectF dst, Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawBitmap(Bitmap bitmap, Rect src, Rect dst, Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method drawBitmap is deprecated
     */

    public void drawBitmap(int colors[], int offset, int stride, float x, float y, int width, int height, 
            boolean hasAlpha, Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method drawBitmap is deprecated
     */

    public void drawBitmap(int colors[], int offset, int stride, int x, int y, int width, int height, 
            boolean hasAlpha, Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawBitmap(Bitmap bitmap, Matrix matrix, Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawBitmapMesh(Bitmap bitmap, int meshWidth, int meshHeight, float verts[], int vertOffset, int colors[], int colorOffset, 
            Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawCircle(float cx, float cy, float radius, Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawColor(int color)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawColor(long color)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawColor(int color, PorterDuff.Mode mode)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawColor(int color, BlendMode mode)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawColor(long color, BlendMode mode)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawLine(float startX, float startY, float stopX, float stopY, Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawLines(float pts[], int offset, int count, Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawLines(float pts[], Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawOval(RectF oval, Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawOval(float left, float top, float right, float bottom, Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawPaint(Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawPath(Path path, Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawPoint(float x, float y, Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawPoints(float pts[], int offset, int count, Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawPoints(float pts[], Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method drawPosText is deprecated
     */

    public void drawPosText(char text[], int index, int count, float pos[], Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method drawPosText is deprecated
     */

    public void drawPosText(String text, float pos[], Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawRect(RectF rect, Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawRect(Rect r, Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawRect(float left, float top, float right, float bottom, Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawRGB(int r, int g, int b)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawRoundRect(RectF rect, float rx, float ry, Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawRoundRect(float left, float top, float right, float bottom, float rx, float ry, Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawDoubleRoundRect(RectF outer, float outerRx, float outerRy, RectF inner, float innerRx, float innerRy, Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawDoubleRoundRect(RectF outer, float outerRadii[], RectF inner, float innerRadii[], Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawText(char text[], int index, int count, float x, float y, Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawText(String text, float x, float y, Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawText(String text, int start, int end, float x, float y, Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawText(CharSequence text, int start, int end, float x, float y, Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawTextOnPath(char text[], int index, int count, Path path, float hOffset, float vOffset, Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawTextOnPath(String text, Path path, float hOffset, float vOffset, Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawTextRun(char text[], int index, int count, int contextIndex, int contextCount, float x, float y, 
            boolean isRtl, Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawTextRun(CharSequence text, int start, int end, int contextStart, int contextEnd, float x, float y, 
            boolean isRtl, Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawTextRun(MeasuredText text, int start, int end, int contextStart, int contextEnd, float x, float y, 
            boolean isRtl, Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawVertices(VertexMode mode, int vertexCount, float verts[], int vertOffset, float texs[], int texOffset, int colors[], 
            int colorOffset, short indices[], int indexOffset, int indexCount, Paint paint)
    {
        throw new RuntimeException("Stub!");
    }

    public void drawRenderNode(RenderNode renderNode)
    {
        throw new RuntimeException("Stub!");
    }

    public static final int ALL_SAVE_FLAG = 31;
}
