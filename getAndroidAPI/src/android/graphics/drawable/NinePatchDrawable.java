// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   NinePatchDrawable.java

package android.graphics.drawable;

import android.content.res.ColorStateList;
import android.content.res.Resources;
import android.graphics.*;
import android.util.AttributeSet;
import android.util.DisplayMetrics;
import java.io.IOException;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserException;

// Referenced classes of package android.graphics.drawable:
//            Drawable

public class NinePatchDrawable extends Drawable
{

    /**
     * @deprecated Method NinePatchDrawable is deprecated
     */

    public NinePatchDrawable(Bitmap bitmap, byte chunk[], Rect padding, String srcName)
    {
        throw new RuntimeException("Stub!");
    }

    public NinePatchDrawable(Resources res, Bitmap bitmap, byte chunk[], Rect padding, String srcName)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method NinePatchDrawable is deprecated
     */

    public NinePatchDrawable(NinePatch patch)
    {
        throw new RuntimeException("Stub!");
    }

    public NinePatchDrawable(Resources res, NinePatch patch)
    {
        throw new RuntimeException("Stub!");
    }

    public void setTargetDensity(Canvas canvas)
    {
        throw new RuntimeException("Stub!");
    }

    public void setTargetDensity(DisplayMetrics metrics)
    {
        throw new RuntimeException("Stub!");
    }

    public void setTargetDensity(int density)
    {
        throw new RuntimeException("Stub!");
    }

    public void draw(Canvas canvas)
    {
        throw new RuntimeException("Stub!");
    }

    public int getChangingConfigurations()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean getPadding(Rect padding)
    {
        throw new RuntimeException("Stub!");
    }

    public void getOutline(Outline outline)
    {
        throw new RuntimeException("Stub!");
    }

    public Insets getOpticalInsets()
    {
        throw new RuntimeException("Stub!");
    }

    public void setAlpha(int alpha)
    {
        throw new RuntimeException("Stub!");
    }

    public int getAlpha()
    {
        throw new RuntimeException("Stub!");
    }

    public void setColorFilter(ColorFilter colorFilter)
    {
        throw new RuntimeException("Stub!");
    }

    public void setTintList(ColorStateList tint)
    {
        throw new RuntimeException("Stub!");
    }

    public void setTintBlendMode(BlendMode blendMode)
    {
        throw new RuntimeException("Stub!");
    }

    public void setDither(boolean dither)
    {
        throw new RuntimeException("Stub!");
    }

    public void setAutoMirrored(boolean mirrored)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isAutoMirrored()
    {
        throw new RuntimeException("Stub!");
    }

    public void setFilterBitmap(boolean filter)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isFilterBitmap()
    {
        throw new RuntimeException("Stub!");
    }

    public void inflate(Resources r, XmlPullParser parser, AttributeSet attrs, android.content.res.Resources.Theme theme)
        throws IOException, XmlPullParserException
    {
        throw new RuntimeException("Stub!");
    }

    public void applyTheme(android.content.res.Resources.Theme t)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean canApplyTheme()
    {
        throw new RuntimeException("Stub!");
    }

    public Paint getPaint()
    {
        throw new RuntimeException("Stub!");
    }

    public int getIntrinsicWidth()
    {
        throw new RuntimeException("Stub!");
    }

    public int getIntrinsicHeight()
    {
        throw new RuntimeException("Stub!");
    }

    public int getOpacity()
    {
        throw new RuntimeException("Stub!");
    }

    public Region getTransparentRegion()
    {
        throw new RuntimeException("Stub!");
    }

    public Drawable.ConstantState getConstantState()
    {
        throw new RuntimeException("Stub!");
    }

    public Drawable mutate()
    {
        throw new RuntimeException("Stub!");
    }

    protected boolean onStateChange(int stateSet[])
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isStateful()
    {
        throw new RuntimeException("Stub!");
    }
}
