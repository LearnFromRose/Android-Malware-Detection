// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   BaseInputConnection.java

package android.view.inputmethod;

import android.os.Bundle;
import android.os.Handler;
import android.text.Editable;
import android.text.Spannable;
import android.view.KeyEvent;
import android.view.View;

// Referenced classes of package android.view.inputmethod:
//            InputConnection, CompletionInfo, CorrectionInfo, ExtractedTextRequest, 
//            ExtractedText, InputContentInfo

public class BaseInputConnection
    implements InputConnection
{

    public BaseInputConnection(View targetView, boolean fullEditor)
    {
        throw new RuntimeException("Stub!");
    }

    public static final void removeComposingSpans(Spannable text)
    {
        throw new RuntimeException("Stub!");
    }

    public static void setComposingSpans(Spannable text)
    {
        throw new RuntimeException("Stub!");
    }

    public static int getComposingSpanStart(Spannable text)
    {
        throw new RuntimeException("Stub!");
    }

    public static int getComposingSpanEnd(Spannable text)
    {
        throw new RuntimeException("Stub!");
    }

    public Editable getEditable()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean beginBatchEdit()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean endBatchEdit()
    {
        throw new RuntimeException("Stub!");
    }

    public void closeConnection()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean clearMetaKeyStates(int states)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean commitCompletion(CompletionInfo text)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean commitCorrection(CorrectionInfo correctionInfo)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean commitText(CharSequence text, int newCursorPosition)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean deleteSurroundingText(int beforeLength, int afterLength)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean deleteSurroundingTextInCodePoints(int beforeLength, int afterLength)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean finishComposingText()
    {
        throw new RuntimeException("Stub!");
    }

    public int getCursorCapsMode(int reqModes)
    {
        throw new RuntimeException("Stub!");
    }

    public ExtractedText getExtractedText(ExtractedTextRequest request, int flags)
    {
        throw new RuntimeException("Stub!");
    }

    public CharSequence getTextBeforeCursor(int length, int flags)
    {
        throw new RuntimeException("Stub!");
    }

    public CharSequence getSelectedText(int flags)
    {
        throw new RuntimeException("Stub!");
    }

    public CharSequence getTextAfterCursor(int length, int flags)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean performEditorAction(int actionCode)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean performContextMenuAction(int id)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean performPrivateCommand(String action, Bundle data)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean requestCursorUpdates(int cursorUpdateMode)
    {
        throw new RuntimeException("Stub!");
    }

    public Handler getHandler()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean setComposingText(CharSequence text, int newCursorPosition)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean setComposingRegion(int start, int end)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean setSelection(int start, int end)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean sendKeyEvent(KeyEvent event)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean reportFullscreenMode(boolean enabled)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean commitContent(InputContentInfo inputContentInfo, int flags, Bundle opts)
    {
        throw new RuntimeException("Stub!");
    }
}
