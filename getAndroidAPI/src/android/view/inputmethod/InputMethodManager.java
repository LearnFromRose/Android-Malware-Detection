// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   InputMethodManager.java

package android.view.inputmethod;

import android.os.*;
import android.view.KeyEvent;
import android.view.View;
import java.util.List;
import java.util.Map;

// Referenced classes of package android.view.inputmethod:
//            InputMethodInfo, CompletionInfo, ExtractedText, CursorAnchorInfo, 
//            InputMethodSubtype

public final class InputMethodManager
{

    InputMethodManager()
    {
        throw new RuntimeException("Stub!");
    }

    public List getInputMethodList()
    {
        throw new RuntimeException("Stub!");
    }

    public List getEnabledInputMethodList()
    {
        throw new RuntimeException("Stub!");
    }

    public List getEnabledInputMethodSubtypeList(InputMethodInfo imi, boolean allowsImplicitlySelectedSubtypes)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method showStatusIcon is deprecated
     */

    public void showStatusIcon(IBinder imeToken, String packageName, int iconId)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method hideStatusIcon is deprecated
     */

    public void hideStatusIcon(IBinder imeToken)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isFullscreenMode()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isActive(View view)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isActive()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isAcceptingText()
    {
        throw new RuntimeException("Stub!");
    }

    public void displayCompletions(View view, CompletionInfo completions[])
    {
        throw new RuntimeException("Stub!");
    }

    public void updateExtractedText(View view, int token, ExtractedText text)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean showSoftInput(View view, int flags)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean showSoftInput(View view, int flags, ResultReceiver resultReceiver)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean hideSoftInputFromWindow(IBinder windowToken, int flags)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean hideSoftInputFromWindow(IBinder windowToken, int flags, ResultReceiver resultReceiver)
    {
        throw new RuntimeException("Stub!");
    }

    public void toggleSoftInputFromWindow(IBinder windowToken, int showFlags, int hideFlags)
    {
        throw new RuntimeException("Stub!");
    }

    public void toggleSoftInput(int showFlags, int hideFlags)
    {
        throw new RuntimeException("Stub!");
    }

    public void restartInput(View view)
    {
        throw new RuntimeException("Stub!");
    }

    public void updateSelection(View view, int selStart, int selEnd, int candidatesStart, int candidatesEnd)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method viewClicked is deprecated
     */

    public void viewClicked(View view)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method isWatchingCursor is deprecated
     */

    public boolean isWatchingCursor(View view)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method updateCursor is deprecated
     */

    public void updateCursor(View view, int left, int top, int right, int bottom)
    {
        throw new RuntimeException("Stub!");
    }

    public void updateCursorAnchorInfo(View view, CursorAnchorInfo cursorAnchorInfo)
    {
        throw new RuntimeException("Stub!");
    }

    public void sendAppPrivateCommand(View view, String action, Bundle data)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method setInputMethod is deprecated
     */

    public void setInputMethod(IBinder token, String id)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method setInputMethodAndSubtype is deprecated
     */

    public void setInputMethodAndSubtype(IBinder token, String id, InputMethodSubtype subtype)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method hideSoftInputFromInputMethod is deprecated
     */

    public void hideSoftInputFromInputMethod(IBinder token, int flags)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method showSoftInputFromInputMethod is deprecated
     */

    public void showSoftInputFromInputMethod(IBinder token, int flags)
    {
        throw new RuntimeException("Stub!");
    }

    public void dispatchKeyEventFromInputMethod(View targetView, KeyEvent event)
    {
        throw new RuntimeException("Stub!");
    }

    public void showInputMethodPicker()
    {
        throw new RuntimeException("Stub!");
    }

    public void showInputMethodAndSubtypeEnabler(String imiId)
    {
        throw new RuntimeException("Stub!");
    }

    public InputMethodSubtype getCurrentInputMethodSubtype()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method setCurrentInputMethodSubtype is deprecated
     */

    public boolean setCurrentInputMethodSubtype(InputMethodSubtype subtype)
    {
        throw new RuntimeException("Stub!");
    }

    public Map getShortcutInputMethodsAndSubtypes()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method switchToLastInputMethod is deprecated
     */

    public boolean switchToLastInputMethod(IBinder imeToken)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method switchToNextInputMethod is deprecated
     */

    public boolean switchToNextInputMethod(IBinder imeToken, boolean onlyCurrentIme)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method shouldOfferSwitchingToNextInputMethod is deprecated
     */

    public boolean shouldOfferSwitchingToNextInputMethod(IBinder imeToken)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method setAdditionalInputMethodSubtypes is deprecated
     */

    public void setAdditionalInputMethodSubtypes(String imiId, InputMethodSubtype subtypes[])
    {
        throw new RuntimeException("Stub!");
    }

    public InputMethodSubtype getLastInputMethodSubtype()
    {
        throw new RuntimeException("Stub!");
    }

    public static final int HIDE_IMPLICIT_ONLY = 1;
    public static final int HIDE_NOT_ALWAYS = 2;
    public static final int RESULT_HIDDEN = 3;
    public static final int RESULT_SHOWN = 2;
    public static final int RESULT_UNCHANGED_HIDDEN = 1;
    public static final int RESULT_UNCHANGED_SHOWN = 0;
    public static final int SHOW_FORCED = 2;
    public static final int SHOW_IMPLICIT = 1;
}
