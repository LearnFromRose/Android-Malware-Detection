// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   SQLiteQueryBuilder.java

package android.database.sqlite;

import android.content.ContentValues;
import android.database.Cursor;
import android.os.CancellationSignal;
import java.util.Map;
import java.util.Set;

// Referenced classes of package android.database.sqlite:
//            SQLiteDatabase

public class SQLiteQueryBuilder
{

    public SQLiteQueryBuilder()
    {
        throw new RuntimeException("Stub!");
    }

    public void setDistinct(boolean distinct)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isDistinct()
    {
        throw new RuntimeException("Stub!");
    }

    public String getTables()
    {
        throw new RuntimeException("Stub!");
    }

    public void setTables(String inTables)
    {
        throw new RuntimeException("Stub!");
    }

    public void appendWhere(CharSequence inWhere)
    {
        throw new RuntimeException("Stub!");
    }

    public void appendWhereEscapeString(String inWhere)
    {
        throw new RuntimeException("Stub!");
    }

    public void appendWhereStandalone(CharSequence inWhere)
    {
        throw new RuntimeException("Stub!");
    }

    public void setProjectionMap(Map columnMap)
    {
        throw new RuntimeException("Stub!");
    }

    public Map getProjectionMap()
    {
        throw new RuntimeException("Stub!");
    }

    public void setCursorFactory(SQLiteDatabase.CursorFactory factory)
    {
        throw new RuntimeException("Stub!");
    }

    public SQLiteDatabase.CursorFactory getCursorFactory()
    {
        throw new RuntimeException("Stub!");
    }

    public void setStrict(boolean flag)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isStrict()
    {
        throw new RuntimeException("Stub!");
    }

    public static String buildQueryString(boolean distinct, String tables, String columns[], String where, String groupBy, String having, String orderBy, String limit)
    {
        throw new RuntimeException("Stub!");
    }

    public static void appendColumns(StringBuilder s, String columns[])
    {
        throw new RuntimeException("Stub!");
    }

    public Cursor query(SQLiteDatabase db, String projectionIn[], String selection, String selectionArgs[], String groupBy, String having, String sortOrder)
    {
        throw new RuntimeException("Stub!");
    }

    public Cursor query(SQLiteDatabase db, String projectionIn[], String selection, String selectionArgs[], String groupBy, String having, String sortOrder, 
            String limit)
    {
        throw new RuntimeException("Stub!");
    }

    public Cursor query(SQLiteDatabase db, String projectionIn[], String selection, String selectionArgs[], String groupBy, String having, String sortOrder, 
            String limit, CancellationSignal cancellationSignal)
    {
        throw new RuntimeException("Stub!");
    }

    public int update(SQLiteDatabase db, ContentValues values, String selection, String selectionArgs[])
    {
        throw new RuntimeException("Stub!");
    }

    public int delete(SQLiteDatabase db, String selection, String selectionArgs[])
    {
        throw new RuntimeException("Stub!");
    }

    public String buildQuery(String projectionIn[], String selection, String groupBy, String having, String sortOrder, String limit)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method buildQuery is deprecated
     */

    public String buildQuery(String projectionIn[], String selection, String selectionArgs[], String groupBy, String having, String sortOrder, String limit)
    {
        throw new RuntimeException("Stub!");
    }

    public String buildUnionSubQuery(String typeDiscriminatorColumn, String unionColumns[], Set columnsPresentInTable, int computedColumnsOffset, String typeDiscriminatorValue, String selection, String groupBy, 
            String having)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method buildUnionSubQuery is deprecated
     */

    public String buildUnionSubQuery(String typeDiscriminatorColumn, String unionColumns[], Set columnsPresentInTable, int computedColumnsOffset, String typeDiscriminatorValue, String selection, String selectionArgs[], 
            String groupBy, String having)
    {
        throw new RuntimeException("Stub!");
    }

    public String buildUnionQuery(String subQueries[], String sortOrder, String limit)
    {
        throw new RuntimeException("Stub!");
    }
}
