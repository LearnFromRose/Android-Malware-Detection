// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   Switch.java

package android.widget;

import android.content.Context;
import android.content.res.ColorStateList;
import android.graphics.*;
import android.graphics.drawable.Drawable;
import android.util.AttributeSet;
import android.view.MotionEvent;

// Referenced classes of package android.widget:
//            CompoundButton

public class Switch extends CompoundButton
{

    public Switch(Context context)
    {
        super((Context)null);
        throw new RuntimeException("Stub!");
    }

    public Switch(Context context, AttributeSet attrs)
    {
        super((Context)null);
        throw new RuntimeException("Stub!");
    }

    public Switch(Context context, AttributeSet attrs, int defStyleAttr)
    {
        super((Context)null);
        throw new RuntimeException("Stub!");
    }

    public Switch(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes)
    {
        super((Context)null);
        throw new RuntimeException("Stub!");
    }

    public void setSwitchTextAppearance(Context context, int resid)
    {
        throw new RuntimeException("Stub!");
    }

    public void setSwitchTypeface(Typeface tf, int style)
    {
        throw new RuntimeException("Stub!");
    }

    public void setSwitchTypeface(Typeface tf)
    {
        throw new RuntimeException("Stub!");
    }

    public void setSwitchPadding(int pixels)
    {
        throw new RuntimeException("Stub!");
    }

    public int getSwitchPadding()
    {
        throw new RuntimeException("Stub!");
    }

    public void setSwitchMinWidth(int pixels)
    {
        throw new RuntimeException("Stub!");
    }

    public int getSwitchMinWidth()
    {
        throw new RuntimeException("Stub!");
    }

    public void setThumbTextPadding(int pixels)
    {
        throw new RuntimeException("Stub!");
    }

    public int getThumbTextPadding()
    {
        throw new RuntimeException("Stub!");
    }

    public void setTrackDrawable(Drawable track)
    {
        throw new RuntimeException("Stub!");
    }

    public void setTrackResource(int resId)
    {
        throw new RuntimeException("Stub!");
    }

    public Drawable getTrackDrawable()
    {
        throw new RuntimeException("Stub!");
    }

    public void setTrackTintList(ColorStateList tint)
    {
        throw new RuntimeException("Stub!");
    }

    public ColorStateList getTrackTintList()
    {
        throw new RuntimeException("Stub!");
    }

    public void setTrackTintMode(android.graphics.PorterDuff.Mode tintMode)
    {
        throw new RuntimeException("Stub!");
    }

    public void setTrackTintBlendMode(BlendMode blendMode)
    {
        throw new RuntimeException("Stub!");
    }

    public android.graphics.PorterDuff.Mode getTrackTintMode()
    {
        throw new RuntimeException("Stub!");
    }

    public BlendMode getTrackTintBlendMode()
    {
        throw new RuntimeException("Stub!");
    }

    public void setThumbDrawable(Drawable thumb)
    {
        throw new RuntimeException("Stub!");
    }

    public void setThumbResource(int resId)
    {
        throw new RuntimeException("Stub!");
    }

    public Drawable getThumbDrawable()
    {
        throw new RuntimeException("Stub!");
    }

    public void setThumbTintList(ColorStateList tint)
    {
        throw new RuntimeException("Stub!");
    }

    public ColorStateList getThumbTintList()
    {
        throw new RuntimeException("Stub!");
    }

    public void setThumbTintMode(android.graphics.PorterDuff.Mode tintMode)
    {
        throw new RuntimeException("Stub!");
    }

    public void setThumbTintBlendMode(BlendMode blendMode)
    {
        throw new RuntimeException("Stub!");
    }

    public android.graphics.PorterDuff.Mode getThumbTintMode()
    {
        throw new RuntimeException("Stub!");
    }

    public BlendMode getThumbTintBlendMode()
    {
        throw new RuntimeException("Stub!");
    }

    public void setSplitTrack(boolean splitTrack)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean getSplitTrack()
    {
        throw new RuntimeException("Stub!");
    }

    public CharSequence getTextOn()
    {
        throw new RuntimeException("Stub!");
    }

    public void setTextOn(CharSequence textOn)
    {
        throw new RuntimeException("Stub!");
    }

    public CharSequence getTextOff()
    {
        throw new RuntimeException("Stub!");
    }

    public void setTextOff(CharSequence textOff)
    {
        throw new RuntimeException("Stub!");
    }

    public void setShowText(boolean showText)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean getShowText()
    {
        throw new RuntimeException("Stub!");
    }

    public void onMeasure(int widthMeasureSpec, int heightMeasureSpec)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean onTouchEvent(MotionEvent ev)
    {
        throw new RuntimeException("Stub!");
    }

    public void toggle()
    {
        throw new RuntimeException("Stub!");
    }

    public void setChecked(boolean checked)
    {
        throw new RuntimeException("Stub!");
    }

    protected void onLayout(boolean changed, int left, int top, int right, int bottom)
    {
        throw new RuntimeException("Stub!");
    }

    public void draw(Canvas c)
    {
        throw new RuntimeException("Stub!");
    }

    protected void onDraw(Canvas canvas)
    {
        throw new RuntimeException("Stub!");
    }

    public int getCompoundPaddingLeft()
    {
        throw new RuntimeException("Stub!");
    }

    public int getCompoundPaddingRight()
    {
        throw new RuntimeException("Stub!");
    }

    protected int[] onCreateDrawableState(int extraSpace)
    {
        throw new RuntimeException("Stub!");
    }

    protected void drawableStateChanged()
    {
        throw new RuntimeException("Stub!");
    }

    public void drawableHotspotChanged(float x, float y)
    {
        throw new RuntimeException("Stub!");
    }

    protected boolean verifyDrawable(Drawable who)
    {
        throw new RuntimeException("Stub!");
    }

    public void jumpDrawablesToCurrentState()
    {
        throw new RuntimeException("Stub!");
    }

    public CharSequence getAccessibilityClassName()
    {
        throw new RuntimeException("Stub!");
    }
}
