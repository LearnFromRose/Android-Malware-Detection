// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   GridLayout.java

package android.widget;

import android.content.Context;
import android.content.res.TypedArray;
import android.util.AttributeSet;
import android.view.View;
import android.view.ViewGroup;

// Referenced classes of package android.widget:
//            RemoteViews

public class GridLayout extends ViewGroup
{
    public static class Spec
    {

        public boolean equals(Object that)
        {
            throw new RuntimeException("Stub!");
        }

        public int hashCode()
        {
            throw new RuntimeException("Stub!");
        }

        Spec(boolean startDefined, int start, int size, Alignment alignment, float weight)
        {
            throw new RuntimeException("Stub!");
        }
    }

    public static class LayoutParams extends android.view.ViewGroup.MarginLayoutParams
    {

        public void setGravity(int gravity)
        {
            throw new RuntimeException("Stub!");
        }

        protected void setBaseAttributes(TypedArray attributes, int widthAttr, int heightAttr)
        {
            throw new RuntimeException("Stub!");
        }

        public boolean equals(Object o)
        {
            throw new RuntimeException("Stub!");
        }

        public int hashCode()
        {
            throw new RuntimeException("Stub!");
        }

        public Spec columnSpec;
        public Spec rowSpec;

        public LayoutParams(Spec rowSpec, Spec columnSpec)
        {
            super((android.view.ViewGroup.MarginLayoutParams)null);
            throw new RuntimeException("Stub!");
        }

        public LayoutParams()
        {
            super((android.view.ViewGroup.MarginLayoutParams)null);
            throw new RuntimeException("Stub!");
        }

        public LayoutParams(android.view.ViewGroup.LayoutParams params)
        {
            super((android.view.ViewGroup.MarginLayoutParams)null);
            throw new RuntimeException("Stub!");
        }

        public LayoutParams(android.view.ViewGroup.MarginLayoutParams params)
        {
            super((android.view.ViewGroup.MarginLayoutParams)null);
            throw new RuntimeException("Stub!");
        }

        public LayoutParams(LayoutParams source)
        {
            super((android.view.ViewGroup.MarginLayoutParams)null);
            throw new RuntimeException("Stub!");
        }

        public LayoutParams(Context context, AttributeSet attrs)
        {
            super((android.view.ViewGroup.MarginLayoutParams)null);
            throw new RuntimeException("Stub!");
        }
    }

    public static abstract class Alignment
    {

        Alignment()
        {
            throw new RuntimeException("Stub!");
        }
    }


    public GridLayout(Context context)
    {
        super((Context)null);
        throw new RuntimeException("Stub!");
    }

    public GridLayout(Context context, AttributeSet attrs)
    {
        super((Context)null);
        throw new RuntimeException("Stub!");
    }

    public GridLayout(Context context, AttributeSet attrs, int defStyleAttr)
    {
        super((Context)null);
        throw new RuntimeException("Stub!");
    }

    public GridLayout(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes)
    {
        super((Context)null);
        throw new RuntimeException("Stub!");
    }

    public int getOrientation()
    {
        throw new RuntimeException("Stub!");
    }

    public void setOrientation(int orientation)
    {
        throw new RuntimeException("Stub!");
    }

    public int getRowCount()
    {
        throw new RuntimeException("Stub!");
    }

    public void setRowCount(int rowCount)
    {
        throw new RuntimeException("Stub!");
    }

    public int getColumnCount()
    {
        throw new RuntimeException("Stub!");
    }

    public void setColumnCount(int columnCount)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean getUseDefaultMargins()
    {
        throw new RuntimeException("Stub!");
    }

    public void setUseDefaultMargins(boolean useDefaultMargins)
    {
        throw new RuntimeException("Stub!");
    }

    public int getAlignmentMode()
    {
        throw new RuntimeException("Stub!");
    }

    public void setAlignmentMode(int alignmentMode)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isRowOrderPreserved()
    {
        throw new RuntimeException("Stub!");
    }

    public void setRowOrderPreserved(boolean rowOrderPreserved)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isColumnOrderPreserved()
    {
        throw new RuntimeException("Stub!");
    }

    public void setColumnOrderPreserved(boolean columnOrderPreserved)
    {
        throw new RuntimeException("Stub!");
    }

    protected boolean checkLayoutParams(android.view.ViewGroup.LayoutParams p)
    {
        throw new RuntimeException("Stub!");
    }

    protected LayoutParams generateDefaultLayoutParams()
    {
        throw new RuntimeException("Stub!");
    }

    public LayoutParams generateLayoutParams(AttributeSet attrs)
    {
        throw new RuntimeException("Stub!");
    }

    protected LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams lp)
    {
        throw new RuntimeException("Stub!");
    }

    public void onViewAdded(View child)
    {
        throw new RuntimeException("Stub!");
    }

    public void onViewRemoved(View child)
    {
        throw new RuntimeException("Stub!");
    }

    protected void onMeasure(int widthSpec, int heightSpec)
    {
        throw new RuntimeException("Stub!");
    }

    public void requestLayout()
    {
        throw new RuntimeException("Stub!");
    }

    protected void onLayout(boolean changed, int left, int top, int right, int bottom)
    {
        throw new RuntimeException("Stub!");
    }

    public CharSequence getAccessibilityClassName()
    {
        throw new RuntimeException("Stub!");
    }

    public static Spec spec(int start, int size, Alignment alignment, float weight)
    {
        throw new RuntimeException("Stub!");
    }

    public static Spec spec(int start, Alignment alignment, float weight)
    {
        throw new RuntimeException("Stub!");
    }

    public static Spec spec(int start, int size, float weight)
    {
        throw new RuntimeException("Stub!");
    }

    public static Spec spec(int start, float weight)
    {
        throw new RuntimeException("Stub!");
    }

    public static Spec spec(int start, int size, Alignment alignment)
    {
        throw new RuntimeException("Stub!");
    }

    public static Spec spec(int start, Alignment alignment)
    {
        throw new RuntimeException("Stub!");
    }

    public static Spec spec(int start, int size)
    {
        throw new RuntimeException("Stub!");
    }

    public static Spec spec(int start)
    {
        throw new RuntimeException("Stub!");
    }

    protected volatile android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()
    {
        return generateDefaultLayoutParams();
    }

    protected volatile android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams layoutparams)
    {
        return generateLayoutParams(layoutparams);
    }

    public volatile android.view.ViewGroup.LayoutParams generateLayoutParams(AttributeSet attributeset)
    {
        return generateLayoutParams(attributeset);
    }

    public static final int ALIGN_BOUNDS = 0;
    public static final int ALIGN_MARGINS = 1;
    public static final Alignment BASELINE = null;
    public static final Alignment BOTTOM = null;
    public static final Alignment CENTER = null;
    public static final Alignment END = null;
    public static final Alignment FILL = null;
    public static final int HORIZONTAL = 0;
    public static final Alignment LEFT = null;
    public static final Alignment RIGHT = null;
    public static final Alignment START = null;
    public static final Alignment TOP = null;
    public static final int UNDEFINED = 0x80000000;
    public static final int VERTICAL = 1;

}
