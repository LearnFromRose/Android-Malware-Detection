// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   NumberPicker.java

package android.widget;

import android.content.Context;
import android.graphics.Canvas;
import android.util.AttributeSet;
import android.view.KeyEvent;
import android.view.MotionEvent;
import android.view.accessibility.AccessibilityNodeProvider;

// Referenced classes of package android.widget:
//            LinearLayout

public class NumberPicker extends LinearLayout
{
    public static interface OnValueChangeListener
    {

        public abstract void onValueChange(NumberPicker numberpicker, int i, int j);
    }

    public static interface OnScrollListener
    {

        public abstract void onScrollStateChange(NumberPicker numberpicker, int i);

        public static final int SCROLL_STATE_FLING = 2;
        public static final int SCROLL_STATE_IDLE = 0;
        public static final int SCROLL_STATE_TOUCH_SCROLL = 1;
    }

    public static interface Formatter
    {

        public abstract String format(int i);
    }


    public NumberPicker(Context context)
    {
        super((Context)null);
        throw new RuntimeException("Stub!");
    }

    public NumberPicker(Context context, AttributeSet attrs)
    {
        super((Context)null);
        throw new RuntimeException("Stub!");
    }

    public NumberPicker(Context context, AttributeSet attrs, int defStyleAttr)
    {
        super((Context)null);
        throw new RuntimeException("Stub!");
    }

    public NumberPicker(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes)
    {
        super((Context)null);
        throw new RuntimeException("Stub!");
    }

    protected void onLayout(boolean changed, int left, int top, int right, int bottom)
    {
        throw new RuntimeException("Stub!");
    }

    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean onInterceptTouchEvent(MotionEvent event)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean onTouchEvent(MotionEvent event)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean dispatchTouchEvent(MotionEvent event)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean dispatchKeyEvent(KeyEvent event)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean dispatchTrackballEvent(MotionEvent event)
    {
        throw new RuntimeException("Stub!");
    }

    protected boolean dispatchHoverEvent(MotionEvent event)
    {
        throw new RuntimeException("Stub!");
    }

    public void computeScroll()
    {
        throw new RuntimeException("Stub!");
    }

    public void setEnabled(boolean enabled)
    {
        throw new RuntimeException("Stub!");
    }

    public void scrollBy(int x, int y)
    {
        throw new RuntimeException("Stub!");
    }

    protected int computeVerticalScrollOffset()
    {
        throw new RuntimeException("Stub!");
    }

    protected int computeVerticalScrollRange()
    {
        throw new RuntimeException("Stub!");
    }

    protected int computeVerticalScrollExtent()
    {
        throw new RuntimeException("Stub!");
    }

    public int getSolidColor()
    {
        throw new RuntimeException("Stub!");
    }

    public void setOnValueChangedListener(OnValueChangeListener onValueChangedListener)
    {
        throw new RuntimeException("Stub!");
    }

    public void setOnScrollListener(OnScrollListener onScrollListener)
    {
        throw new RuntimeException("Stub!");
    }

    public void setFormatter(Formatter formatter)
    {
        throw new RuntimeException("Stub!");
    }

    public void setValue(int value)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean performClick()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean performLongClick()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean getWrapSelectorWheel()
    {
        throw new RuntimeException("Stub!");
    }

    public void setWrapSelectorWheel(boolean wrapSelectorWheel)
    {
        throw new RuntimeException("Stub!");
    }

    public void setOnLongPressUpdateInterval(long intervalMillis)
    {
        throw new RuntimeException("Stub!");
    }

    public int getValue()
    {
        throw new RuntimeException("Stub!");
    }

    public int getMinValue()
    {
        throw new RuntimeException("Stub!");
    }

    public void setMinValue(int minValue)
    {
        throw new RuntimeException("Stub!");
    }

    public int getMaxValue()
    {
        throw new RuntimeException("Stub!");
    }

    public void setMaxValue(int maxValue)
    {
        throw new RuntimeException("Stub!");
    }

    public String[] getDisplayedValues()
    {
        throw new RuntimeException("Stub!");
    }

    public void setDisplayedValues(String displayedValues[])
    {
        throw new RuntimeException("Stub!");
    }

    public void setSelectionDividerHeight(int height)
    {
        throw new RuntimeException("Stub!");
    }

    public int getSelectionDividerHeight()
    {
        throw new RuntimeException("Stub!");
    }

    protected float getTopFadingEdgeStrength()
    {
        throw new RuntimeException("Stub!");
    }

    protected float getBottomFadingEdgeStrength()
    {
        throw new RuntimeException("Stub!");
    }

    protected void onDetachedFromWindow()
    {
        throw new RuntimeException("Stub!");
    }

    protected void drawableStateChanged()
    {
        throw new RuntimeException("Stub!");
    }

    public void jumpDrawablesToCurrentState()
    {
        throw new RuntimeException("Stub!");
    }

    protected void onDraw(Canvas canvas)
    {
        throw new RuntimeException("Stub!");
    }

    public AccessibilityNodeProvider getAccessibilityNodeProvider()
    {
        throw new RuntimeException("Stub!");
    }

    public void setTextColor(int color)
    {
        throw new RuntimeException("Stub!");
    }

    public int getTextColor()
    {
        throw new RuntimeException("Stub!");
    }

    public void setTextSize(float size)
    {
        throw new RuntimeException("Stub!");
    }

    public float getTextSize()
    {
        throw new RuntimeException("Stub!");
    }
}
