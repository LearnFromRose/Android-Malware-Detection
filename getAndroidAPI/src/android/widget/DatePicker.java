// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   DatePicker.java

package android.widget;

import android.content.Context;
import android.content.res.Configuration;
import android.os.Parcelable;
import android.util.AttributeSet;
import android.util.SparseArray;
import android.view.ViewStructure;
import android.view.autofill.AutofillValue;

// Referenced classes of package android.widget:
//            FrameLayout, CalendarView

public class DatePicker extends FrameLayout
{
    public static interface OnDateChangedListener
    {

        public abstract void onDateChanged(DatePicker datepicker, int i, int j, int k);
    }


    public DatePicker(Context context)
    {
        super((Context)null);
        throw new RuntimeException("Stub!");
    }

    public DatePicker(Context context, AttributeSet attrs)
    {
        super((Context)null);
        throw new RuntimeException("Stub!");
    }

    public DatePicker(Context context, AttributeSet attrs, int defStyleAttr)
    {
        super((Context)null);
        throw new RuntimeException("Stub!");
    }

    public DatePicker(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes)
    {
        super((Context)null);
        throw new RuntimeException("Stub!");
    }

    public void init(int year, int monthOfYear, int dayOfMonth, OnDateChangedListener onDateChangedListener)
    {
        throw new RuntimeException("Stub!");
    }

    public void setOnDateChangedListener(OnDateChangedListener onDateChangedListener)
    {
        throw new RuntimeException("Stub!");
    }

    public void updateDate(int year, int month, int dayOfMonth)
    {
        throw new RuntimeException("Stub!");
    }

    public int getYear()
    {
        throw new RuntimeException("Stub!");
    }

    public int getMonth()
    {
        throw new RuntimeException("Stub!");
    }

    public int getDayOfMonth()
    {
        throw new RuntimeException("Stub!");
    }

    public long getMinDate()
    {
        throw new RuntimeException("Stub!");
    }

    public void setMinDate(long minDate)
    {
        throw new RuntimeException("Stub!");
    }

    public long getMaxDate()
    {
        throw new RuntimeException("Stub!");
    }

    public void setMaxDate(long maxDate)
    {
        throw new RuntimeException("Stub!");
    }

    public void setEnabled(boolean enabled)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isEnabled()
    {
        throw new RuntimeException("Stub!");
    }

    public CharSequence getAccessibilityClassName()
    {
        throw new RuntimeException("Stub!");
    }

    protected void onConfigurationChanged(Configuration newConfig)
    {
        throw new RuntimeException("Stub!");
    }

    public void setFirstDayOfWeek(int firstDayOfWeek)
    {
        throw new RuntimeException("Stub!");
    }

    public int getFirstDayOfWeek()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method getCalendarViewShown is deprecated
     */

    public boolean getCalendarViewShown()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method getCalendarView is deprecated
     */

    public CalendarView getCalendarView()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method setCalendarViewShown is deprecated
     */

    public void setCalendarViewShown(boolean shown)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method getSpinnersShown is deprecated
     */

    public boolean getSpinnersShown()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method setSpinnersShown is deprecated
     */

    public void setSpinnersShown(boolean shown)
    {
        throw new RuntimeException("Stub!");
    }

    protected void dispatchRestoreInstanceState(SparseArray container)
    {
        throw new RuntimeException("Stub!");
    }

    protected Parcelable onSaveInstanceState()
    {
        throw new RuntimeException("Stub!");
    }

    protected void onRestoreInstanceState(Parcelable state)
    {
        throw new RuntimeException("Stub!");
    }

    public void dispatchProvideAutofillStructure(ViewStructure structure, int flags)
    {
        throw new RuntimeException("Stub!");
    }

    public void autofill(AutofillValue value)
    {
        throw new RuntimeException("Stub!");
    }

    public int getAutofillType()
    {
        throw new RuntimeException("Stub!");
    }

    public AutofillValue getAutofillValue()
    {
        throw new RuntimeException("Stub!");
    }
}
