// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   ScrollView.java

package android.widget;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.Rect;
import android.os.Parcelable;
import android.util.AttributeSet;
import android.view.*;

// Referenced classes of package android.widget:
//            FrameLayout

public class ScrollView extends FrameLayout
{

    public ScrollView(Context context)
    {
        super((Context)null);
        throw new RuntimeException("Stub!");
    }

    public ScrollView(Context context, AttributeSet attrs)
    {
        super((Context)null);
        throw new RuntimeException("Stub!");
    }

    public ScrollView(Context context, AttributeSet attrs, int defStyleAttr)
    {
        super((Context)null);
        throw new RuntimeException("Stub!");
    }

    public ScrollView(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes)
    {
        super((Context)null);
        throw new RuntimeException("Stub!");
    }

    public boolean shouldDelayChildPressedState()
    {
        throw new RuntimeException("Stub!");
    }

    protected float getTopFadingEdgeStrength()
    {
        throw new RuntimeException("Stub!");
    }

    protected float getBottomFadingEdgeStrength()
    {
        throw new RuntimeException("Stub!");
    }

    public void setEdgeEffectColor(int color)
    {
        throw new RuntimeException("Stub!");
    }

    public void setBottomEdgeEffectColor(int color)
    {
        throw new RuntimeException("Stub!");
    }

    public void setTopEdgeEffectColor(int color)
    {
        throw new RuntimeException("Stub!");
    }

    public int getTopEdgeEffectColor()
    {
        throw new RuntimeException("Stub!");
    }

    public int getBottomEdgeEffectColor()
    {
        throw new RuntimeException("Stub!");
    }

    public int getMaxScrollAmount()
    {
        throw new RuntimeException("Stub!");
    }

    public void addView(View child)
    {
        throw new RuntimeException("Stub!");
    }

    public void addView(View child, int index)
    {
        throw new RuntimeException("Stub!");
    }

    public void addView(View child, android.view.ViewGroup.LayoutParams params)
    {
        throw new RuntimeException("Stub!");
    }

    public void addView(View child, int index, android.view.ViewGroup.LayoutParams params)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isFillViewport()
    {
        throw new RuntimeException("Stub!");
    }

    public void setFillViewport(boolean fillViewport)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isSmoothScrollingEnabled()
    {
        throw new RuntimeException("Stub!");
    }

    public void setSmoothScrollingEnabled(boolean smoothScrollingEnabled)
    {
        throw new RuntimeException("Stub!");
    }

    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean dispatchKeyEvent(KeyEvent event)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean executeKeyEvent(KeyEvent event)
    {
        throw new RuntimeException("Stub!");
    }

    public void requestDisallowInterceptTouchEvent(boolean disallowIntercept)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean onInterceptTouchEvent(MotionEvent ev)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean onTouchEvent(MotionEvent ev)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean onGenericMotionEvent(MotionEvent event)
    {
        throw new RuntimeException("Stub!");
    }

    protected void onOverScrolled(int scrollX, int scrollY, boolean clampedX, boolean clampedY)
    {
        throw new RuntimeException("Stub!");
    }

    public CharSequence getAccessibilityClassName()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean pageScroll(int direction)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean fullScroll(int direction)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean arrowScroll(int direction)
    {
        throw new RuntimeException("Stub!");
    }

    public final void smoothScrollBy(int dx, int dy)
    {
        throw new RuntimeException("Stub!");
    }

    public final void smoothScrollTo(int x, int y)
    {
        throw new RuntimeException("Stub!");
    }

    protected int computeVerticalScrollRange()
    {
        throw new RuntimeException("Stub!");
    }

    protected int computeVerticalScrollOffset()
    {
        throw new RuntimeException("Stub!");
    }

    protected void measureChild(View child, int parentWidthMeasureSpec, int parentHeightMeasureSpec)
    {
        throw new RuntimeException("Stub!");
    }

    protected void measureChildWithMargins(View child, int parentWidthMeasureSpec, int widthUsed, int parentHeightMeasureSpec, int heightUsed)
    {
        throw new RuntimeException("Stub!");
    }

    public void computeScroll()
    {
        throw new RuntimeException("Stub!");
    }

    public void scrollToDescendant(View child)
    {
        throw new RuntimeException("Stub!");
    }

    protected int computeScrollDeltaToGetChildRectOnScreen(Rect rect)
    {
        throw new RuntimeException("Stub!");
    }

    public void requestChildFocus(View child, View focused)
    {
        throw new RuntimeException("Stub!");
    }

    protected boolean onRequestFocusInDescendants(int direction, Rect previouslyFocusedRect)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean requestChildRectangleOnScreen(View child, Rect rectangle, boolean immediate)
    {
        throw new RuntimeException("Stub!");
    }

    public void requestLayout()
    {
        throw new RuntimeException("Stub!");
    }

    protected void onDetachedFromWindow()
    {
        throw new RuntimeException("Stub!");
    }

    protected void onLayout(boolean changed, int l, int t, int r, int b)
    {
        throw new RuntimeException("Stub!");
    }

    protected void onSizeChanged(int w, int h, int oldw, int oldh)
    {
        throw new RuntimeException("Stub!");
    }

    public void fling(int velocityY)
    {
        throw new RuntimeException("Stub!");
    }

    public void scrollTo(int x, int y)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean onStartNestedScroll(View child, View target, int nestedScrollAxes)
    {
        throw new RuntimeException("Stub!");
    }

    public void onNestedScrollAccepted(View child, View target, int axes)
    {
        throw new RuntimeException("Stub!");
    }

    public void onStopNestedScroll(View target)
    {
        throw new RuntimeException("Stub!");
    }

    public void onNestedScroll(View target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean onNestedFling(View target, float velocityX, float velocityY, boolean consumed)
    {
        throw new RuntimeException("Stub!");
    }

    public void draw(Canvas canvas)
    {
        throw new RuntimeException("Stub!");
    }

    protected void onRestoreInstanceState(Parcelable state)
    {
        throw new RuntimeException("Stub!");
    }

    protected Parcelable onSaveInstanceState()
    {
        throw new RuntimeException("Stub!");
    }
}
