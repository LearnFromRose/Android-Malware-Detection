// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   GregorianCalendar.java

package android.icu.util;

import java.util.Date;
import java.util.Locale;

// Referenced classes of package android.icu.util:
//            Calendar, TimeZone, ULocale

public class GregorianCalendar extends Calendar
{

    public GregorianCalendar()
    {
        throw new RuntimeException("Stub!");
    }

    public GregorianCalendar(TimeZone zone)
    {
        throw new RuntimeException("Stub!");
    }

    public GregorianCalendar(Locale aLocale)
    {
        throw new RuntimeException("Stub!");
    }

    public GregorianCalendar(ULocale locale)
    {
        throw new RuntimeException("Stub!");
    }

    public GregorianCalendar(TimeZone zone, Locale aLocale)
    {
        throw new RuntimeException("Stub!");
    }

    public GregorianCalendar(TimeZone zone, ULocale locale)
    {
        throw new RuntimeException("Stub!");
    }

    public GregorianCalendar(int year, int month, int date)
    {
        throw new RuntimeException("Stub!");
    }

    public GregorianCalendar(int year, int month, int date, int hour, int minute)
    {
        throw new RuntimeException("Stub!");
    }

    public GregorianCalendar(int year, int month, int date, int hour, int minute, int second)
    {
        throw new RuntimeException("Stub!");
    }

    protected int handleGetLimit(int field, int limitType)
    {
        throw new RuntimeException("Stub!");
    }

    public void setGregorianChange(Date date)
    {
        throw new RuntimeException("Stub!");
    }

    public final Date getGregorianChange()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isLeapYear(int year)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isEquivalentTo(Calendar other)
    {
        throw new RuntimeException("Stub!");
    }

    public int hashCode()
    {
        throw new RuntimeException("Stub!");
    }

    public void roll(int field, int amount)
    {
        throw new RuntimeException("Stub!");
    }

    public int getActualMinimum(int field)
    {
        throw new RuntimeException("Stub!");
    }

    public int getActualMaximum(int field)
    {
        throw new RuntimeException("Stub!");
    }

    protected int handleGetMonthLength(int extendedYear, int month)
    {
        throw new RuntimeException("Stub!");
    }

    protected int handleGetYearLength(int eyear)
    {
        throw new RuntimeException("Stub!");
    }

    protected void handleComputeFields(int julianDay)
    {
        throw new RuntimeException("Stub!");
    }

    protected int handleGetExtendedYear()
    {
        throw new RuntimeException("Stub!");
    }

    protected int handleComputeJulianDay(int bestField)
    {
        throw new RuntimeException("Stub!");
    }

    protected int handleComputeMonthStart(int eyear, int month, boolean useMonth)
    {
        throw new RuntimeException("Stub!");
    }

    public String getType()
    {
        throw new RuntimeException("Stub!");
    }

    public static final int AD = 1;
    public static final int BC = 0;
    protected transient boolean invertGregorian;
    protected transient boolean isGregorian;
}
