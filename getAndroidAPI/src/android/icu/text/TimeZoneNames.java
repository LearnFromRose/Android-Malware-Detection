// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   TimeZoneNames.java

package android.icu.text;

import android.icu.util.ULocale;
import java.io.Serializable;
import java.util.Locale;
import java.util.Set;

public abstract class TimeZoneNames
    implements Serializable
{
    public static final class NameType extends Enum
    {

        public static NameType[] values()
        {
            return (NameType[])$VALUES.clone();
        }

        public static NameType valueOf(String name)
        {
            return (NameType)Enum.valueOf(android/icu/text/TimeZoneNames$NameType, name);
        }

        public static final NameType LONG_GENERIC;
        public static final NameType LONG_STANDARD;
        public static final NameType LONG_DAYLIGHT;
        public static final NameType SHORT_GENERIC;
        public static final NameType SHORT_STANDARD;
        public static final NameType SHORT_DAYLIGHT;
        public static final NameType EXEMPLAR_LOCATION;
        private static final NameType $VALUES[];

        static 
        {
            LONG_GENERIC = new NameType("LONG_GENERIC", 0);
            LONG_STANDARD = new NameType("LONG_STANDARD", 1);
            LONG_DAYLIGHT = new NameType("LONG_DAYLIGHT", 2);
            SHORT_GENERIC = new NameType("SHORT_GENERIC", 3);
            SHORT_STANDARD = new NameType("SHORT_STANDARD", 4);
            SHORT_DAYLIGHT = new NameType("SHORT_DAYLIGHT", 5);
            EXEMPLAR_LOCATION = new NameType("EXEMPLAR_LOCATION", 6);
            $VALUES = (new NameType[] {
                LONG_GENERIC, LONG_STANDARD, LONG_DAYLIGHT, SHORT_GENERIC, SHORT_STANDARD, SHORT_DAYLIGHT, EXEMPLAR_LOCATION
            });
        }

        private NameType(String s, int i)
        {
            super(s, i);
        }
    }


    TimeZoneNames()
    {
        throw new RuntimeException("Stub!");
    }

    public static TimeZoneNames getInstance(ULocale locale)
    {
        throw new RuntimeException("Stub!");
    }

    public static TimeZoneNames getInstance(Locale locale)
    {
        throw new RuntimeException("Stub!");
    }

    public static TimeZoneNames getTZDBInstance(ULocale locale)
    {
        throw new RuntimeException("Stub!");
    }

    public abstract Set getAvailableMetaZoneIDs();

    public abstract Set getAvailableMetaZoneIDs(String s);

    public abstract String getMetaZoneID(String s, long l);

    public abstract String getReferenceZoneID(String s, String s1);

    public abstract String getMetaZoneDisplayName(String s, NameType nametype);

    public final String getDisplayName(String tzID, NameType type, long date)
    {
        throw new RuntimeException("Stub!");
    }

    public abstract String getTimeZoneDisplayName(String s, NameType nametype);

    public String getExemplarLocationName(String tzID)
    {
        throw new RuntimeException("Stub!");
    }
}
