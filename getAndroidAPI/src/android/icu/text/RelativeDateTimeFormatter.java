// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   RelativeDateTimeFormatter.java

package android.icu.text;

import android.icu.util.ULocale;
import java.util.EnumMap;
import java.util.Locale;

// Referenced classes of package android.icu.text:
//            PluralRules, NumberFormat, DisplayContext, BreakIterator

public final class RelativeDateTimeFormatter
{
    public static final class Style extends Enum
    {

        public static Style[] values()
        {
            return (Style[])$VALUES.clone();
        }

        public static Style valueOf(String name)
        {
            return (Style)Enum.valueOf(android/icu/text/RelativeDateTimeFormatter$Style, name);
        }

        public static final Style LONG;
        public static final Style SHORT;
        public static final Style NARROW;
        private static final Style $VALUES[];

        static 
        {
            LONG = new Style("LONG", 0);
            SHORT = new Style("SHORT", 1);
            NARROW = new Style("NARROW", 2);
            $VALUES = (new Style[] {
                LONG, SHORT, NARROW
            });
        }

        private Style(String s, int i)
        {
            super(s, i);
        }
    }

    public static final class RelativeUnit extends Enum
    {

        public static RelativeUnit[] values()
        {
            return (RelativeUnit[])$VALUES.clone();
        }

        public static RelativeUnit valueOf(String name)
        {
            return (RelativeUnit)Enum.valueOf(android/icu/text/RelativeDateTimeFormatter$RelativeUnit, name);
        }

        public static final RelativeUnit SECONDS;
        public static final RelativeUnit MINUTES;
        public static final RelativeUnit HOURS;
        public static final RelativeUnit DAYS;
        public static final RelativeUnit WEEKS;
        public static final RelativeUnit MONTHS;
        public static final RelativeUnit YEARS;
        private static final RelativeUnit $VALUES[];

        static 
        {
            SECONDS = new RelativeUnit("SECONDS", 0);
            MINUTES = new RelativeUnit("MINUTES", 1);
            HOURS = new RelativeUnit("HOURS", 2);
            DAYS = new RelativeUnit("DAYS", 3);
            WEEKS = new RelativeUnit("WEEKS", 4);
            MONTHS = new RelativeUnit("MONTHS", 5);
            YEARS = new RelativeUnit("YEARS", 6);
            $VALUES = (new RelativeUnit[] {
                SECONDS, MINUTES, HOURS, DAYS, WEEKS, MONTHS, YEARS
            });
        }

        private RelativeUnit(String s, int i)
        {
            super(s, i);
        }
    }

    public static final class RelativeDateTimeUnit extends Enum
    {

        public static RelativeDateTimeUnit[] values()
        {
            return (RelativeDateTimeUnit[])$VALUES.clone();
        }

        public static RelativeDateTimeUnit valueOf(String name)
        {
            return (RelativeDateTimeUnit)Enum.valueOf(android/icu/text/RelativeDateTimeFormatter$RelativeDateTimeUnit, name);
        }

        public static final RelativeDateTimeUnit YEAR;
        public static final RelativeDateTimeUnit QUARTER;
        public static final RelativeDateTimeUnit MONTH;
        public static final RelativeDateTimeUnit WEEK;
        public static final RelativeDateTimeUnit DAY;
        public static final RelativeDateTimeUnit HOUR;
        public static final RelativeDateTimeUnit MINUTE;
        public static final RelativeDateTimeUnit SECOND;
        public static final RelativeDateTimeUnit SUNDAY;
        public static final RelativeDateTimeUnit MONDAY;
        public static final RelativeDateTimeUnit TUESDAY;
        public static final RelativeDateTimeUnit WEDNESDAY;
        public static final RelativeDateTimeUnit THURSDAY;
        public static final RelativeDateTimeUnit FRIDAY;
        public static final RelativeDateTimeUnit SATURDAY;
        private static final RelativeDateTimeUnit $VALUES[];

        static 
        {
            YEAR = new RelativeDateTimeUnit("YEAR", 0);
            QUARTER = new RelativeDateTimeUnit("QUARTER", 1);
            MONTH = new RelativeDateTimeUnit("MONTH", 2);
            WEEK = new RelativeDateTimeUnit("WEEK", 3);
            DAY = new RelativeDateTimeUnit("DAY", 4);
            HOUR = new RelativeDateTimeUnit("HOUR", 5);
            MINUTE = new RelativeDateTimeUnit("MINUTE", 6);
            SECOND = new RelativeDateTimeUnit("SECOND", 7);
            SUNDAY = new RelativeDateTimeUnit("SUNDAY", 8);
            MONDAY = new RelativeDateTimeUnit("MONDAY", 9);
            TUESDAY = new RelativeDateTimeUnit("TUESDAY", 10);
            WEDNESDAY = new RelativeDateTimeUnit("WEDNESDAY", 11);
            THURSDAY = new RelativeDateTimeUnit("THURSDAY", 12);
            FRIDAY = new RelativeDateTimeUnit("FRIDAY", 13);
            SATURDAY = new RelativeDateTimeUnit("SATURDAY", 14);
            $VALUES = (new RelativeDateTimeUnit[] {
                YEAR, QUARTER, MONTH, WEEK, DAY, HOUR, MINUTE, SECOND, SUNDAY, MONDAY, 
                TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY
            });
        }

        private RelativeDateTimeUnit(String s, int i)
        {
            super(s, i);
        }
    }

    public static final class Direction extends Enum
    {

        public static Direction[] values()
        {
            return (Direction[])$VALUES.clone();
        }

        public static Direction valueOf(String name)
        {
            return (Direction)Enum.valueOf(android/icu/text/RelativeDateTimeFormatter$Direction, name);
        }

        public static final Direction LAST_2;
        public static final Direction LAST;
        public static final Direction THIS;
        public static final Direction NEXT;
        public static final Direction NEXT_2;
        public static final Direction PLAIN;
        private static final Direction $VALUES[];

        static 
        {
            LAST_2 = new Direction("LAST_2", 0);
            LAST = new Direction("LAST", 1);
            THIS = new Direction("THIS", 2);
            NEXT = new Direction("NEXT", 3);
            NEXT_2 = new Direction("NEXT_2", 4);
            PLAIN = new Direction("PLAIN", 5);
            $VALUES = (new Direction[] {
                LAST_2, LAST, THIS, NEXT, NEXT_2, PLAIN
            });
        }

        private Direction(String s, int i)
        {
            super(s, i);
        }
    }

    public static final class AbsoluteUnit extends Enum
    {

        public static AbsoluteUnit[] values()
        {
            return (AbsoluteUnit[])$VALUES.clone();
        }

        public static AbsoluteUnit valueOf(String name)
        {
            return (AbsoluteUnit)Enum.valueOf(android/icu/text/RelativeDateTimeFormatter$AbsoluteUnit, name);
        }

        public static final AbsoluteUnit SUNDAY;
        public static final AbsoluteUnit MONDAY;
        public static final AbsoluteUnit TUESDAY;
        public static final AbsoluteUnit WEDNESDAY;
        public static final AbsoluteUnit THURSDAY;
        public static final AbsoluteUnit FRIDAY;
        public static final AbsoluteUnit SATURDAY;
        public static final AbsoluteUnit DAY;
        public static final AbsoluteUnit WEEK;
        public static final AbsoluteUnit MONTH;
        public static final AbsoluteUnit YEAR;
        public static final AbsoluteUnit NOW;
        private static final AbsoluteUnit $VALUES[];

        static 
        {
            SUNDAY = new AbsoluteUnit("SUNDAY", 0);
            MONDAY = new AbsoluteUnit("MONDAY", 1);
            TUESDAY = new AbsoluteUnit("TUESDAY", 2);
            WEDNESDAY = new AbsoluteUnit("WEDNESDAY", 3);
            THURSDAY = new AbsoluteUnit("THURSDAY", 4);
            FRIDAY = new AbsoluteUnit("FRIDAY", 5);
            SATURDAY = new AbsoluteUnit("SATURDAY", 6);
            DAY = new AbsoluteUnit("DAY", 7);
            WEEK = new AbsoluteUnit("WEEK", 8);
            MONTH = new AbsoluteUnit("MONTH", 9);
            YEAR = new AbsoluteUnit("YEAR", 10);
            NOW = new AbsoluteUnit("NOW", 11);
            $VALUES = (new AbsoluteUnit[] {
                SUNDAY, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, DAY, WEEK, MONTH, 
                YEAR, NOW
            });
        }

        private AbsoluteUnit(String s, int i)
        {
            super(s, i);
        }
    }


    RelativeDateTimeFormatter(EnumMap qualitativeUnitMap, EnumMap patternMap, String combinedDateAndTime, PluralRules pluralRules, NumberFormat numberFormat, Style style, DisplayContext capitalizationContext, 
            BreakIterator breakIterator, ULocale locale)
    {
        throw new RuntimeException("Stub!");
    }

    public static RelativeDateTimeFormatter getInstance()
    {
        throw new RuntimeException("Stub!");
    }

    public static RelativeDateTimeFormatter getInstance(ULocale locale)
    {
        throw new RuntimeException("Stub!");
    }

    public static RelativeDateTimeFormatter getInstance(Locale locale)
    {
        throw new RuntimeException("Stub!");
    }

    public static RelativeDateTimeFormatter getInstance(ULocale locale, NumberFormat nf)
    {
        throw new RuntimeException("Stub!");
    }

    public static RelativeDateTimeFormatter getInstance(ULocale locale, NumberFormat nf, Style style, DisplayContext capitalizationContext)
    {
        throw new RuntimeException("Stub!");
    }

    public static RelativeDateTimeFormatter getInstance(Locale locale, NumberFormat nf)
    {
        throw new RuntimeException("Stub!");
    }

    public String format(double quantity, Direction direction, RelativeUnit unit)
    {
        throw new RuntimeException("Stub!");
    }

    public String formatNumeric(double offset, RelativeDateTimeUnit unit)
    {
        throw new RuntimeException("Stub!");
    }

    public String format(Direction direction, AbsoluteUnit unit)
    {
        throw new RuntimeException("Stub!");
    }

    public String format(double offset, RelativeDateTimeUnit unit)
    {
        throw new RuntimeException("Stub!");
    }

    public String combineDateAndTime(String relativeDateString, String timeString)
    {
        throw new RuntimeException("Stub!");
    }

    public NumberFormat getNumberFormat()
    {
        throw new RuntimeException("Stub!");
    }

    public DisplayContext getCapitalizationContext()
    {
        throw new RuntimeException("Stub!");
    }

    public Style getFormatStyle()
    {
        throw new RuntimeException("Stub!");
    }
}
