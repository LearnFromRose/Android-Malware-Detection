// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   IDNA.java

package android.icu.text;

import java.util.Set;

public abstract class IDNA
{
    public static final class Info
    {

        public boolean hasErrors()
        {
            throw new RuntimeException("Stub!");
        }

        public Set getErrors()
        {
            throw new RuntimeException("Stub!");
        }

        public boolean isTransitionalDifferent()
        {
            throw new RuntimeException("Stub!");
        }

        public Info()
        {
            throw new RuntimeException("Stub!");
        }
    }

    public static final class Error extends Enum
    {

        public static Error[] values()
        {
            return (Error[])$VALUES.clone();
        }

        public static Error valueOf(String name)
        {
            return (Error)Enum.valueOf(android/icu/text/IDNA$Error, name);
        }

        public static final Error EMPTY_LABEL;
        public static final Error LABEL_TOO_LONG;
        public static final Error DOMAIN_NAME_TOO_LONG;
        public static final Error LEADING_HYPHEN;
        public static final Error TRAILING_HYPHEN;
        public static final Error HYPHEN_3_4;
        public static final Error LEADING_COMBINING_MARK;
        public static final Error DISALLOWED;
        public static final Error PUNYCODE;
        public static final Error LABEL_HAS_DOT;
        public static final Error INVALID_ACE_LABEL;
        public static final Error BIDI;
        public static final Error CONTEXTJ;
        public static final Error CONTEXTO_PUNCTUATION;
        public static final Error CONTEXTO_DIGITS;
        private static final Error $VALUES[];

        static 
        {
            EMPTY_LABEL = new Error("EMPTY_LABEL", 0);
            LABEL_TOO_LONG = new Error("LABEL_TOO_LONG", 1);
            DOMAIN_NAME_TOO_LONG = new Error("DOMAIN_NAME_TOO_LONG", 2);
            LEADING_HYPHEN = new Error("LEADING_HYPHEN", 3);
            TRAILING_HYPHEN = new Error("TRAILING_HYPHEN", 4);
            HYPHEN_3_4 = new Error("HYPHEN_3_4", 5);
            LEADING_COMBINING_MARK = new Error("LEADING_COMBINING_MARK", 6);
            DISALLOWED = new Error("DISALLOWED", 7);
            PUNYCODE = new Error("PUNYCODE", 8);
            LABEL_HAS_DOT = new Error("LABEL_HAS_DOT", 9);
            INVALID_ACE_LABEL = new Error("INVALID_ACE_LABEL", 10);
            BIDI = new Error("BIDI", 11);
            CONTEXTJ = new Error("CONTEXTJ", 12);
            CONTEXTO_PUNCTUATION = new Error("CONTEXTO_PUNCTUATION", 13);
            CONTEXTO_DIGITS = new Error("CONTEXTO_DIGITS", 14);
            $VALUES = (new Error[] {
                EMPTY_LABEL, LABEL_TOO_LONG, DOMAIN_NAME_TOO_LONG, LEADING_HYPHEN, TRAILING_HYPHEN, HYPHEN_3_4, LEADING_COMBINING_MARK, DISALLOWED, PUNYCODE, LABEL_HAS_DOT, 
                INVALID_ACE_LABEL, BIDI, CONTEXTJ, CONTEXTO_PUNCTUATION, CONTEXTO_DIGITS
            });
        }

        private Error(String s, int i)
        {
            super(s, i);
        }
    }


    /**
     * @deprecated Method IDNA is deprecated
     */

    IDNA()
    {
        throw new RuntimeException("Stub!");
    }

    public static IDNA getUTS46Instance(int options)
    {
        throw new RuntimeException("Stub!");
    }

    public abstract StringBuilder labelToASCII(CharSequence charsequence, StringBuilder stringbuilder, Info info);

    public abstract StringBuilder labelToUnicode(CharSequence charsequence, StringBuilder stringbuilder, Info info);

    public abstract StringBuilder nameToASCII(CharSequence charsequence, StringBuilder stringbuilder, Info info);

    public abstract StringBuilder nameToUnicode(CharSequence charsequence, StringBuilder stringbuilder, Info info);

    public static final int CHECK_BIDI = 4;
    public static final int CHECK_CONTEXTJ = 8;
    public static final int CHECK_CONTEXTO = 64;
    public static final int DEFAULT = 0;
    public static final int NONTRANSITIONAL_TO_ASCII = 16;
    public static final int NONTRANSITIONAL_TO_UNICODE = 32;
    public static final int USE_STD3_RULES = 2;
}
