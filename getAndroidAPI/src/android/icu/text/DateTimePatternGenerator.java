// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   DateTimePatternGenerator.java

package android.icu.text;

import android.icu.util.Freezable;
import android.icu.util.ULocale;
import java.util.*;

public class DateTimePatternGenerator
    implements Freezable, Cloneable
{
    public static final class PatternInfo
    {

        public static final int BASE_CONFLICT = 1;
        public static final int CONFLICT = 2;
        public static final int OK = 0;
        public String conflictingPattern;
        public int status;

        public PatternInfo()
        {
            throw new RuntimeException("Stub!");
        }
    }


    protected DateTimePatternGenerator()
    {
        throw new RuntimeException("Stub!");
    }

    public static DateTimePatternGenerator getEmptyInstance()
    {
        throw new RuntimeException("Stub!");
    }

    public static DateTimePatternGenerator getInstance()
    {
        throw new RuntimeException("Stub!");
    }

    public static DateTimePatternGenerator getInstance(ULocale uLocale)
    {
        throw new RuntimeException("Stub!");
    }

    public static DateTimePatternGenerator getInstance(Locale locale)
    {
        throw new RuntimeException("Stub!");
    }

    public String getBestPattern(String skeleton)
    {
        throw new RuntimeException("Stub!");
    }

    public String getBestPattern(String skeleton, int options)
    {
        throw new RuntimeException("Stub!");
    }

    public DateTimePatternGenerator addPattern(String pattern, boolean override, PatternInfo returnInfo)
    {
        throw new RuntimeException("Stub!");
    }

    public String getSkeleton(String pattern)
    {
        throw new RuntimeException("Stub!");
    }

    public String getBaseSkeleton(String pattern)
    {
        throw new RuntimeException("Stub!");
    }

    public Map getSkeletons(Map result)
    {
        throw new RuntimeException("Stub!");
    }

    public Set getBaseSkeletons(Set result)
    {
        throw new RuntimeException("Stub!");
    }

    public String replaceFieldTypes(String pattern, String skeleton)
    {
        throw new RuntimeException("Stub!");
    }

    public String replaceFieldTypes(String pattern, String skeleton, int options)
    {
        throw new RuntimeException("Stub!");
    }

    public void setDateTimeFormat(String dateTimeFormat)
    {
        throw new RuntimeException("Stub!");
    }

    public String getDateTimeFormat()
    {
        throw new RuntimeException("Stub!");
    }

    public void setDecimal(String decimal)
    {
        throw new RuntimeException("Stub!");
    }

    public String getDecimal()
    {
        throw new RuntimeException("Stub!");
    }

    public void setAppendItemFormat(int field, String value)
    {
        throw new RuntimeException("Stub!");
    }

    public String getAppendItemFormat(int field)
    {
        throw new RuntimeException("Stub!");
    }

    public void setAppendItemName(int field, String value)
    {
        throw new RuntimeException("Stub!");
    }

    public String getAppendItemName(int field)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isFrozen()
    {
        throw new RuntimeException("Stub!");
    }

    public DateTimePatternGenerator freeze()
    {
        throw new RuntimeException("Stub!");
    }

    public DateTimePatternGenerator cloneAsThawed()
    {
        throw new RuntimeException("Stub!");
    }

    public Object clone()
    {
        throw new RuntimeException("Stub!");
    }

    public volatile Object cloneAsThawed()
    {
        return cloneAsThawed();
    }

    public volatile Object freeze()
    {
        return freeze();
    }

    public static final int DAY = 7;
    public static final int DAYPERIOD = 10;
    public static final int DAY_OF_WEEK_IN_MONTH = 9;
    public static final int DAY_OF_YEAR = 8;
    public static final int ERA = 0;
    public static final int FRACTIONAL_SECOND = 14;
    public static final int HOUR = 11;
    public static final int MATCH_ALL_FIELDS_LENGTH = 65535;
    public static final int MATCH_HOUR_FIELD_LENGTH = 2048;
    public static final int MATCH_NO_OPTIONS = 0;
    public static final int MINUTE = 12;
    public static final int MONTH = 3;
    public static final int QUARTER = 2;
    public static final int SECOND = 13;
    public static final int WEEKDAY = 6;
    public static final int WEEK_OF_MONTH = 5;
    public static final int WEEK_OF_YEAR = 4;
    public static final int YEAR = 1;
    public static final int ZONE = 15;
}
