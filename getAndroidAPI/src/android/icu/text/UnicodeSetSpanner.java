// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   UnicodeSetSpanner.java

package android.icu.text;


// Referenced classes of package android.icu.text:
//            UnicodeSet

public class UnicodeSetSpanner
{
    public static final class TrimOption extends Enum
    {

        public static TrimOption[] values()
        {
            return (TrimOption[])$VALUES.clone();
        }

        public static TrimOption valueOf(String name)
        {
            return (TrimOption)Enum.valueOf(android/icu/text/UnicodeSetSpanner$TrimOption, name);
        }

        public static final TrimOption LEADING;
        public static final TrimOption BOTH;
        public static final TrimOption TRAILING;
        private static final TrimOption $VALUES[];

        static 
        {
            LEADING = new TrimOption("LEADING", 0);
            BOTH = new TrimOption("BOTH", 1);
            TRAILING = new TrimOption("TRAILING", 2);
            $VALUES = (new TrimOption[] {
                LEADING, BOTH, TRAILING
            });
        }

        private TrimOption(String s, int i)
        {
            super(s, i);
        }
    }

    public static final class CountMethod extends Enum
    {

        public static CountMethod[] values()
        {
            return (CountMethod[])$VALUES.clone();
        }

        public static CountMethod valueOf(String name)
        {
            return (CountMethod)Enum.valueOf(android/icu/text/UnicodeSetSpanner$CountMethod, name);
        }

        public static final CountMethod WHOLE_SPAN;
        public static final CountMethod MIN_ELEMENTS;
        private static final CountMethod $VALUES[];

        static 
        {
            WHOLE_SPAN = new CountMethod("WHOLE_SPAN", 0);
            MIN_ELEMENTS = new CountMethod("MIN_ELEMENTS", 1);
            $VALUES = (new CountMethod[] {
                WHOLE_SPAN, MIN_ELEMENTS
            });
        }

        private CountMethod(String s, int i)
        {
            super(s, i);
        }
    }


    public UnicodeSetSpanner(UnicodeSet source)
    {
        throw new RuntimeException("Stub!");
    }

    public UnicodeSet getUnicodeSet()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean equals(Object other)
    {
        throw new RuntimeException("Stub!");
    }

    public int hashCode()
    {
        throw new RuntimeException("Stub!");
    }

    public int countIn(CharSequence sequence)
    {
        throw new RuntimeException("Stub!");
    }

    public int countIn(CharSequence sequence, CountMethod countMethod)
    {
        throw new RuntimeException("Stub!");
    }

    public int countIn(CharSequence sequence, CountMethod countMethod, UnicodeSet.SpanCondition spanCondition)
    {
        throw new RuntimeException("Stub!");
    }

    public String deleteFrom(CharSequence sequence)
    {
        throw new RuntimeException("Stub!");
    }

    public String deleteFrom(CharSequence sequence, UnicodeSet.SpanCondition spanCondition)
    {
        throw new RuntimeException("Stub!");
    }

    public String replaceFrom(CharSequence sequence, CharSequence replacement)
    {
        throw new RuntimeException("Stub!");
    }

    public String replaceFrom(CharSequence sequence, CharSequence replacement, CountMethod countMethod)
    {
        throw new RuntimeException("Stub!");
    }

    public String replaceFrom(CharSequence sequence, CharSequence replacement, CountMethod countMethod, UnicodeSet.SpanCondition spanCondition)
    {
        throw new RuntimeException("Stub!");
    }

    public CharSequence trim(CharSequence sequence)
    {
        throw new RuntimeException("Stub!");
    }

    public CharSequence trim(CharSequence sequence, TrimOption trimOption)
    {
        throw new RuntimeException("Stub!");
    }

    public CharSequence trim(CharSequence sequence, TrimOption trimOption, UnicodeSet.SpanCondition spanCondition)
    {
        throw new RuntimeException("Stub!");
    }
}
