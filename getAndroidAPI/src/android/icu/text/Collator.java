// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   Collator.java

package android.icu.text;

import android.icu.util.*;
import java.util.Comparator;
import java.util.Locale;

// Referenced classes of package android.icu.text:
//            UnicodeSet, CollationKey

public abstract class Collator
    implements Comparator, Freezable, Cloneable
{
    public static interface ReorderCodes
    {

        public static final int CURRENCY = 4099;
        public static final int DEFAULT = -1;
        public static final int DIGIT = 4100;
        public static final int FIRST = 4096;
        public static final int NONE = 103;
        public static final int OTHERS = 103;
        public static final int PUNCTUATION = 4097;
        public static final int SPACE = 4096;
        public static final int SYMBOL = 4098;
    }


    protected Collator()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean equals(Object obj)
    {
        throw new RuntimeException("Stub!");
    }

    public int hashCode()
    {
        throw new RuntimeException("Stub!");
    }

    public void setStrength(int newStrength)
    {
        throw new RuntimeException("Stub!");
    }

    public void setDecomposition(int decomposition)
    {
        throw new RuntimeException("Stub!");
    }

    public transient void setReorderCodes(int order[])
    {
        throw new RuntimeException("Stub!");
    }

    public static final Collator getInstance()
    {
        throw new RuntimeException("Stub!");
    }

    public Object clone()
        throws CloneNotSupportedException
    {
        throw new RuntimeException("Stub!");
    }

    public static final Collator getInstance(ULocale locale)
    {
        throw new RuntimeException("Stub!");
    }

    public static final Collator getInstance(Locale locale)
    {
        throw new RuntimeException("Stub!");
    }

    public static Locale[] getAvailableLocales()
    {
        throw new RuntimeException("Stub!");
    }

    public static final ULocale[] getAvailableULocales()
    {
        throw new RuntimeException("Stub!");
    }

    public static final String[] getKeywords()
    {
        throw new RuntimeException("Stub!");
    }

    public static final String[] getKeywordValues(String keyword)
    {
        throw new RuntimeException("Stub!");
    }

    public static final String[] getKeywordValuesForLocale(String key, ULocale locale, boolean commonlyUsed)
    {
        throw new RuntimeException("Stub!");
    }

    public static final ULocale getFunctionalEquivalent(String keyword, ULocale locID, boolean isAvailable[])
    {
        throw new RuntimeException("Stub!");
    }

    public static final ULocale getFunctionalEquivalent(String keyword, ULocale locID)
    {
        throw new RuntimeException("Stub!");
    }

    public static String getDisplayName(Locale objectLocale, Locale displayLocale)
    {
        throw new RuntimeException("Stub!");
    }

    public static String getDisplayName(ULocale objectLocale, ULocale displayLocale)
    {
        throw new RuntimeException("Stub!");
    }

    public static String getDisplayName(Locale objectLocale)
    {
        throw new RuntimeException("Stub!");
    }

    public static String getDisplayName(ULocale objectLocale)
    {
        throw new RuntimeException("Stub!");
    }

    public int getStrength()
    {
        throw new RuntimeException("Stub!");
    }

    public int getDecomposition()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean equals(String source, String target)
    {
        throw new RuntimeException("Stub!");
    }

    public UnicodeSet getTailoredSet()
    {
        throw new RuntimeException("Stub!");
    }

    public abstract int compare(String s, String s1);

    public int compare(Object source, Object target)
    {
        throw new RuntimeException("Stub!");
    }

    public abstract CollationKey getCollationKey(String s);

    public Collator setMaxVariable(int group)
    {
        throw new RuntimeException("Stub!");
    }

    public int getMaxVariable()
    {
        throw new RuntimeException("Stub!");
    }

    public abstract int getVariableTop();

    public abstract VersionInfo getVersion();

    public abstract VersionInfo getUCAVersion();

    public int[] getReorderCodes()
    {
        throw new RuntimeException("Stub!");
    }

    public static int[] getEquivalentReorderCodes(int reorderCode)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isFrozen()
    {
        throw new RuntimeException("Stub!");
    }

    public Collator freeze()
    {
        throw new RuntimeException("Stub!");
    }

    public Collator cloneAsThawed()
    {
        throw new RuntimeException("Stub!");
    }

    public volatile Object cloneAsThawed()
    {
        return cloneAsThawed();
    }

    public volatile Object freeze()
    {
        return freeze();
    }

    public static final int CANONICAL_DECOMPOSITION = 17;
    public static final int FULL_DECOMPOSITION = 15;
    public static final int IDENTICAL = 15;
    public static final int NO_DECOMPOSITION = 16;
    public static final int PRIMARY = 0;
    public static final int QUATERNARY = 3;
    public static final int SECONDARY = 1;
    public static final int TERTIARY = 2;
}
