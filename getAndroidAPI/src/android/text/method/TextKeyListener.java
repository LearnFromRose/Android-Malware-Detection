// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   TextKeyListener.java

package android.text.method;

import android.text.*;
import android.view.KeyEvent;
import android.view.View;

// Referenced classes of package android.text.method:
//            BaseKeyListener

public class TextKeyListener extends BaseKeyListener
    implements SpanWatcher
{
    public static final class Capitalize extends Enum
    {

        public static Capitalize[] values()
        {
            return (Capitalize[])$VALUES.clone();
        }

        public static Capitalize valueOf(String name)
        {
            return (Capitalize)Enum.valueOf(android/text/method/TextKeyListener$Capitalize, name);
        }

        public static final Capitalize NONE;
        public static final Capitalize SENTENCES;
        public static final Capitalize WORDS;
        public static final Capitalize CHARACTERS;
        private static final Capitalize $VALUES[];

        static 
        {
            NONE = new Capitalize("NONE", 0);
            SENTENCES = new Capitalize("SENTENCES", 1);
            WORDS = new Capitalize("WORDS", 2);
            CHARACTERS = new Capitalize("CHARACTERS", 3);
            $VALUES = (new Capitalize[] {
                NONE, SENTENCES, WORDS, CHARACTERS
            });
        }

        private Capitalize(String s, int i)
        {
            super(s, i);
        }
    }


    public TextKeyListener(Capitalize cap, boolean autotext)
    {
        throw new RuntimeException("Stub!");
    }

    public static TextKeyListener getInstance(boolean autotext, Capitalize cap)
    {
        throw new RuntimeException("Stub!");
    }

    public static TextKeyListener getInstance()
    {
        throw new RuntimeException("Stub!");
    }

    public static boolean shouldCap(Capitalize cap, CharSequence cs, int off)
    {
        throw new RuntimeException("Stub!");
    }

    public int getInputType()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean onKeyDown(View view, Editable content, int keyCode, KeyEvent event)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean onKeyUp(View view, Editable content, int keyCode, KeyEvent event)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean onKeyOther(View view, Editable content, KeyEvent event)
    {
        throw new RuntimeException("Stub!");
    }

    public static void clear(Editable e)
    {
        throw new RuntimeException("Stub!");
    }

    public void onSpanAdded(Spannable s, Object what, int start, int end)
    {
        throw new RuntimeException("Stub!");
    }

    public void onSpanRemoved(Spannable s, Object what, int start, int end)
    {
        throw new RuntimeException("Stub!");
    }

    public void onSpanChanged(Spannable s, Object what, int start, int end, int st, int en)
    {
        throw new RuntimeException("Stub!");
    }

    public void release()
    {
        throw new RuntimeException("Stub!");
    }
}
