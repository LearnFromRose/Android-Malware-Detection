// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   SpannableStringBuilder.java

package android.text;

import android.graphics.Paint;
import java.io.IOException;

// Referenced classes of package android.text:
//            GetChars, Spannable, Editable, InputFilter

public class SpannableStringBuilder
    implements CharSequence, GetChars, Spannable, Editable, Appendable
{

    public SpannableStringBuilder()
    {
        throw new RuntimeException("Stub!");
    }

    public SpannableStringBuilder(CharSequence text)
    {
        throw new RuntimeException("Stub!");
    }

    public SpannableStringBuilder(CharSequence text, int start, int end)
    {
        throw new RuntimeException("Stub!");
    }

    public static SpannableStringBuilder valueOf(CharSequence source)
    {
        throw new RuntimeException("Stub!");
    }

    public char charAt(int where)
    {
        throw new RuntimeException("Stub!");
    }

    public int length()
    {
        throw new RuntimeException("Stub!");
    }

    public SpannableStringBuilder insert(int where, CharSequence tb, int start, int end)
    {
        throw new RuntimeException("Stub!");
    }

    public SpannableStringBuilder insert(int where, CharSequence tb)
    {
        throw new RuntimeException("Stub!");
    }

    public SpannableStringBuilder delete(int start, int end)
    {
        throw new RuntimeException("Stub!");
    }

    public void clear()
    {
        throw new RuntimeException("Stub!");
    }

    public void clearSpans()
    {
        throw new RuntimeException("Stub!");
    }

    public SpannableStringBuilder append(CharSequence text)
    {
        throw new RuntimeException("Stub!");
    }

    public SpannableStringBuilder append(CharSequence text, Object what, int flags)
    {
        throw new RuntimeException("Stub!");
    }

    public SpannableStringBuilder append(CharSequence text, int start, int end)
    {
        throw new RuntimeException("Stub!");
    }

    public SpannableStringBuilder append(char text)
    {
        throw new RuntimeException("Stub!");
    }

    public SpannableStringBuilder replace(int start, int end, CharSequence tb)
    {
        throw new RuntimeException("Stub!");
    }

    public SpannableStringBuilder replace(int start, int end, CharSequence tb, int tbstart, int tbend)
    {
        throw new RuntimeException("Stub!");
    }

    public void setSpan(Object what, int start, int end, int flags)
    {
        throw new RuntimeException("Stub!");
    }

    public void removeSpan(Object what)
    {
        throw new RuntimeException("Stub!");
    }

    public int getSpanStart(Object what)
    {
        throw new RuntimeException("Stub!");
    }

    public int getSpanEnd(Object what)
    {
        throw new RuntimeException("Stub!");
    }

    public int getSpanFlags(Object what)
    {
        throw new RuntimeException("Stub!");
    }

    public Object[] getSpans(int queryStart, int queryEnd, Class kind)
    {
        throw new RuntimeException("Stub!");
    }

    public int nextSpanTransition(int start, int limit, Class kind)
    {
        throw new RuntimeException("Stub!");
    }

    public CharSequence subSequence(int start, int end)
    {
        throw new RuntimeException("Stub!");
    }

    public void getChars(int start, int end, char dest[], int destoff)
    {
        throw new RuntimeException("Stub!");
    }

    public String toString()
    {
        throw new RuntimeException("Stub!");
    }

    public int getTextWatcherDepth()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method getTextRunCursor is deprecated
     */

    public int getTextRunCursor(int contextStart, int contextEnd, int dir, int offset, int cursorOpt, Paint p)
    {
        throw new RuntimeException("Stub!");
    }

    public void setFilters(InputFilter filters[])
    {
        throw new RuntimeException("Stub!");
    }

    public InputFilter[] getFilters()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean equals(Object o)
    {
        throw new RuntimeException("Stub!");
    }

    public int hashCode()
    {
        throw new RuntimeException("Stub!");
    }

    public volatile Editable append(char c)
    {
        return append(c);
    }

    public volatile Editable append(CharSequence charsequence, int i, int j)
    {
        return append(charsequence, i, j);
    }

    public volatile Editable append(CharSequence charsequence)
    {
        return append(charsequence);
    }

    public volatile Editable delete(int i, int j)
    {
        return delete(i, j);
    }

    public volatile Editable insert(int i, CharSequence charsequence)
    {
        return insert(i, charsequence);
    }

    public volatile Editable insert(int i, CharSequence charsequence, int j, int k)
    {
        return insert(i, charsequence, j, k);
    }

    public volatile Editable replace(int i, int j, CharSequence charsequence)
    {
        return replace(i, j, charsequence);
    }

    public volatile Editable replace(int i, int j, CharSequence charsequence, int k, int l)
    {
        return replace(i, j, charsequence, k, l);
    }

    public volatile Appendable append(char c)
        throws IOException
    {
        return append(c);
    }

    public volatile Appendable append(CharSequence charsequence, int i, int j)
        throws IOException
    {
        return append(charsequence, i, j);
    }

    public volatile Appendable append(CharSequence charsequence)
        throws IOException
    {
        return append(charsequence);
    }
}
