// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   DynamicLayout.java

package android.text;


// Referenced classes of package android.text:
//            Layout, TextUtils, TextPaint, TextDirectionHeuristic

public class DynamicLayout extends Layout
{
    public static final class Builder
    {

        public static Builder obtain(CharSequence base, TextPaint paint, int width)
        {
            throw new RuntimeException("Stub!");
        }

        public Builder setDisplayText(CharSequence display)
        {
            throw new RuntimeException("Stub!");
        }

        public Builder setAlignment(Layout.Alignment alignment)
        {
            throw new RuntimeException("Stub!");
        }

        public Builder setTextDirection(TextDirectionHeuristic textDir)
        {
            throw new RuntimeException("Stub!");
        }

        public Builder setLineSpacing(float spacingAdd, float spacingMult)
        {
            throw new RuntimeException("Stub!");
        }

        public Builder setIncludePad(boolean includePad)
        {
            throw new RuntimeException("Stub!");
        }

        public Builder setUseLineSpacingFromFallbacks(boolean useLineSpacingFromFallbacks)
        {
            throw new RuntimeException("Stub!");
        }

        public Builder setEllipsizedWidth(int ellipsizedWidth)
        {
            throw new RuntimeException("Stub!");
        }

        public Builder setEllipsize(TextUtils.TruncateAt ellipsize)
        {
            throw new RuntimeException("Stub!");
        }

        public Builder setBreakStrategy(int breakStrategy)
        {
            throw new RuntimeException("Stub!");
        }

        public Builder setHyphenationFrequency(int hyphenationFrequency)
        {
            throw new RuntimeException("Stub!");
        }

        public Builder setJustificationMode(int justificationMode)
        {
            throw new RuntimeException("Stub!");
        }

        public DynamicLayout build()
        {
            throw new RuntimeException("Stub!");
        }

        Builder()
        {
            throw new RuntimeException("Stub!");
        }
    }


    /**
     * @deprecated Method DynamicLayout is deprecated
     */

    public DynamicLayout(CharSequence base, TextPaint paint, int width, Layout.Alignment align, float spacingmult, float spacingadd, boolean includepad)
    {
        super(null, null, 0, null, 0.0F, 0.0F);
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method DynamicLayout is deprecated
     */

    public DynamicLayout(CharSequence base, CharSequence display, TextPaint paint, int width, Layout.Alignment align, float spacingmult, float spacingadd, 
            boolean includepad)
    {
        super(null, null, 0, null, 0.0F, 0.0F);
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method DynamicLayout is deprecated
     */

    public DynamicLayout(CharSequence base, CharSequence display, TextPaint paint, int width, Layout.Alignment align, float spacingmult, float spacingadd, 
            boolean includepad, TextUtils.TruncateAt ellipsize, int ellipsizedWidth)
    {
        super(null, null, 0, null, 0.0F, 0.0F);
        throw new RuntimeException("Stub!");
    }

    public int getLineCount()
    {
        throw new RuntimeException("Stub!");
    }

    public int getLineTop(int line)
    {
        throw new RuntimeException("Stub!");
    }

    public int getLineDescent(int line)
    {
        throw new RuntimeException("Stub!");
    }

    public int getLineStart(int line)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean getLineContainsTab(int line)
    {
        throw new RuntimeException("Stub!");
    }

    public int getParagraphDirection(int line)
    {
        throw new RuntimeException("Stub!");
    }

    public final Layout.Directions getLineDirections(int line)
    {
        throw new RuntimeException("Stub!");
    }

    public int getTopPadding()
    {
        throw new RuntimeException("Stub!");
    }

    public int getBottomPadding()
    {
        throw new RuntimeException("Stub!");
    }

    public int getEllipsizedWidth()
    {
        throw new RuntimeException("Stub!");
    }

    public int getEllipsisStart(int line)
    {
        throw new RuntimeException("Stub!");
    }

    public int getEllipsisCount(int line)
    {
        throw new RuntimeException("Stub!");
    }
}
