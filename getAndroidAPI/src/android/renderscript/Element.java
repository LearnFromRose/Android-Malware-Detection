// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   Element.java

package android.renderscript;


// Referenced classes of package android.renderscript:
//            BaseObj, RenderScript

public class Element extends BaseObj
{
    public static final class DataType extends Enum
    {

        public static DataType[] values()
        {
            return (DataType[])$VALUES.clone();
        }

        public static DataType valueOf(String name)
        {
            return (DataType)Enum.valueOf(android/renderscript/Element$DataType, name);
        }

        public static final DataType NONE;
        public static final DataType FLOAT_16;
        public static final DataType FLOAT_32;
        public static final DataType FLOAT_64;
        public static final DataType SIGNED_8;
        public static final DataType SIGNED_16;
        public static final DataType SIGNED_32;
        public static final DataType SIGNED_64;
        public static final DataType UNSIGNED_8;
        public static final DataType UNSIGNED_16;
        public static final DataType UNSIGNED_32;
        public static final DataType UNSIGNED_64;
        public static final DataType BOOLEAN;
        public static final DataType UNSIGNED_5_6_5;
        public static final DataType UNSIGNED_5_5_5_1;
        public static final DataType UNSIGNED_4_4_4_4;
        public static final DataType MATRIX_4X4;
        public static final DataType MATRIX_3X3;
        public static final DataType MATRIX_2X2;
        public static final DataType RS_ELEMENT;
        public static final DataType RS_TYPE;
        public static final DataType RS_ALLOCATION;
        public static final DataType RS_SAMPLER;
        public static final DataType RS_SCRIPT;
        public static final DataType RS_MESH;
        public static final DataType RS_PROGRAM_FRAGMENT;
        public static final DataType RS_PROGRAM_VERTEX;
        public static final DataType RS_PROGRAM_RASTER;
        public static final DataType RS_PROGRAM_STORE;
        public static final DataType RS_FONT;
        private static final DataType $VALUES[];

        static 
        {
            NONE = new DataType("NONE", 0);
            FLOAT_16 = new DataType("FLOAT_16", 1);
            FLOAT_32 = new DataType("FLOAT_32", 2);
            FLOAT_64 = new DataType("FLOAT_64", 3);
            SIGNED_8 = new DataType("SIGNED_8", 4);
            SIGNED_16 = new DataType("SIGNED_16", 5);
            SIGNED_32 = new DataType("SIGNED_32", 6);
            SIGNED_64 = new DataType("SIGNED_64", 7);
            UNSIGNED_8 = new DataType("UNSIGNED_8", 8);
            UNSIGNED_16 = new DataType("UNSIGNED_16", 9);
            UNSIGNED_32 = new DataType("UNSIGNED_32", 10);
            UNSIGNED_64 = new DataType("UNSIGNED_64", 11);
            BOOLEAN = new DataType("BOOLEAN", 12);
            UNSIGNED_5_6_5 = new DataType("UNSIGNED_5_6_5", 13);
            UNSIGNED_5_5_5_1 = new DataType("UNSIGNED_5_5_5_1", 14);
            UNSIGNED_4_4_4_4 = new DataType("UNSIGNED_4_4_4_4", 15);
            MATRIX_4X4 = new DataType("MATRIX_4X4", 16);
            MATRIX_3X3 = new DataType("MATRIX_3X3", 17);
            MATRIX_2X2 = new DataType("MATRIX_2X2", 18);
            RS_ELEMENT = new DataType("RS_ELEMENT", 19);
            RS_TYPE = new DataType("RS_TYPE", 20);
            RS_ALLOCATION = new DataType("RS_ALLOCATION", 21);
            RS_SAMPLER = new DataType("RS_SAMPLER", 22);
            RS_SCRIPT = new DataType("RS_SCRIPT", 23);
            RS_MESH = new DataType("RS_MESH", 24);
            RS_PROGRAM_FRAGMENT = new DataType("RS_PROGRAM_FRAGMENT", 25);
            RS_PROGRAM_VERTEX = new DataType("RS_PROGRAM_VERTEX", 26);
            RS_PROGRAM_RASTER = new DataType("RS_PROGRAM_RASTER", 27);
            RS_PROGRAM_STORE = new DataType("RS_PROGRAM_STORE", 28);
            RS_FONT = new DataType("RS_FONT", 29);
            $VALUES = (new DataType[] {
                NONE, FLOAT_16, FLOAT_32, FLOAT_64, SIGNED_8, SIGNED_16, SIGNED_32, SIGNED_64, UNSIGNED_8, UNSIGNED_16, 
                UNSIGNED_32, UNSIGNED_64, BOOLEAN, UNSIGNED_5_6_5, UNSIGNED_5_5_5_1, UNSIGNED_4_4_4_4, MATRIX_4X4, MATRIX_3X3, MATRIX_2X2, RS_ELEMENT, 
                RS_TYPE, RS_ALLOCATION, RS_SAMPLER, RS_SCRIPT, RS_MESH, RS_PROGRAM_FRAGMENT, RS_PROGRAM_VERTEX, RS_PROGRAM_RASTER, RS_PROGRAM_STORE, RS_FONT
            });
        }

        private DataType(String s, int i)
        {
            super(s, i);
        }
    }

    public static final class DataKind extends Enum
    {

        public static DataKind[] values()
        {
            return (DataKind[])$VALUES.clone();
        }

        public static DataKind valueOf(String name)
        {
            return (DataKind)Enum.valueOf(android/renderscript/Element$DataKind, name);
        }

        public static final DataKind USER;
        public static final DataKind PIXEL_L;
        public static final DataKind PIXEL_A;
        public static final DataKind PIXEL_LA;
        public static final DataKind PIXEL_RGB;
        public static final DataKind PIXEL_RGBA;
        public static final DataKind PIXEL_DEPTH;
        public static final DataKind PIXEL_YUV;
        private static final DataKind $VALUES[];

        static 
        {
            USER = new DataKind("USER", 0);
            PIXEL_L = new DataKind("PIXEL_L", 1);
            PIXEL_A = new DataKind("PIXEL_A", 2);
            PIXEL_LA = new DataKind("PIXEL_LA", 3);
            PIXEL_RGB = new DataKind("PIXEL_RGB", 4);
            PIXEL_RGBA = new DataKind("PIXEL_RGBA", 5);
            PIXEL_DEPTH = new DataKind("PIXEL_DEPTH", 6);
            PIXEL_YUV = new DataKind("PIXEL_YUV", 7);
            $VALUES = (new DataKind[] {
                USER, PIXEL_L, PIXEL_A, PIXEL_LA, PIXEL_RGB, PIXEL_RGBA, PIXEL_DEPTH, PIXEL_YUV
            });
        }

        private DataKind(String s, int i)
        {
            super(s, i);
        }
    }

    public static class Builder
    {

        public Builder add(Element element, String name, int arraySize)
        {
            throw new RuntimeException("Stub!");
        }

        public Builder add(Element element, String name)
        {
            throw new RuntimeException("Stub!");
        }

        public Element create()
        {
            throw new RuntimeException("Stub!");
        }

        public Builder(RenderScript rs)
        {
            throw new RuntimeException("Stub!");
        }
    }


    Element(long id, RenderScript rs)
    {
        super(0L, null);
        throw new RuntimeException("Stub!");
    }

    public int getBytesSize()
    {
        throw new RuntimeException("Stub!");
    }

    public int getVectorSize()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isComplex()
    {
        throw new RuntimeException("Stub!");
    }

    public int getSubElementCount()
    {
        throw new RuntimeException("Stub!");
    }

    public Element getSubElement(int index)
    {
        throw new RuntimeException("Stub!");
    }

    public String getSubElementName(int index)
    {
        throw new RuntimeException("Stub!");
    }

    public int getSubElementArraySize(int index)
    {
        throw new RuntimeException("Stub!");
    }

    public int getSubElementOffsetBytes(int index)
    {
        throw new RuntimeException("Stub!");
    }

    public DataType getDataType()
    {
        throw new RuntimeException("Stub!");
    }

    public DataKind getDataKind()
    {
        throw new RuntimeException("Stub!");
    }

    public static Element BOOLEAN(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element U8(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element I8(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element U16(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element I16(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element U32(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element I32(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element U64(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element I64(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element F16(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element F32(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element F64(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element ELEMENT(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element TYPE(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element ALLOCATION(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element SAMPLER(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element SCRIPT(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element MESH(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element PROGRAM_FRAGMENT(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element PROGRAM_VERTEX(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element PROGRAM_RASTER(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element PROGRAM_STORE(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element FONT(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element A_8(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element RGB_565(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element RGB_888(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element RGBA_5551(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element RGBA_4444(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element RGBA_8888(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element F16_2(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element F16_3(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element F16_4(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element F32_2(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element F32_3(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element F32_4(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element F64_2(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element F64_3(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element F64_4(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element U8_2(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element U8_3(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element U8_4(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element I8_2(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element I8_3(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element I8_4(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element U16_2(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element U16_3(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element U16_4(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element I16_2(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element I16_3(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element I16_4(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element U32_2(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element U32_3(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element U32_4(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element I32_2(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element I32_3(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element I32_4(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element U64_2(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element U64_3(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element U64_4(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element I64_2(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element I64_3(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element I64_4(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element YUV(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element MATRIX_4X4(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method MATRIX4X4 is deprecated
     */

    public static Element MATRIX4X4(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element MATRIX_3X3(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element MATRIX_2X2(RenderScript rs)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element createVector(RenderScript rs, DataType dt, int size)
    {
        throw new RuntimeException("Stub!");
    }

    public static Element createPixel(RenderScript rs, DataType dt, DataKind dk)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isCompatible(Element e)
    {
        throw new RuntimeException("Stub!");
    }
}
