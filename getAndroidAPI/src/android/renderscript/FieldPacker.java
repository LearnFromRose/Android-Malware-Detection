// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   FieldPacker.java

package android.renderscript;


// Referenced classes of package android.renderscript:
//            BaseObj, Float2, Float3, Float4, 
//            Double2, Double3, Double4, Byte2, 
//            Byte3, Byte4, Short2, Short3, 
//            Short4, Int2, Int3, Int4, 
//            Long2, Long3, Long4, Matrix4f, 
//            Matrix3f, Matrix2f

public class FieldPacker
{

    public FieldPacker(int len)
    {
        throw new RuntimeException("Stub!");
    }

    public FieldPacker(byte data[])
    {
        throw new RuntimeException("Stub!");
    }

    public void align(int v)
    {
        throw new RuntimeException("Stub!");
    }

    public void subalign(int v)
    {
        throw new RuntimeException("Stub!");
    }

    public void reset()
    {
        throw new RuntimeException("Stub!");
    }

    public void reset(int i)
    {
        throw new RuntimeException("Stub!");
    }

    public void skip(int i)
    {
        throw new RuntimeException("Stub!");
    }

    public void addI8(byte v)
    {
        throw new RuntimeException("Stub!");
    }

    public byte subI8()
    {
        throw new RuntimeException("Stub!");
    }

    public void addI16(short v)
    {
        throw new RuntimeException("Stub!");
    }

    public short subI16()
    {
        throw new RuntimeException("Stub!");
    }

    public void addI32(int v)
    {
        throw new RuntimeException("Stub!");
    }

    public int subI32()
    {
        throw new RuntimeException("Stub!");
    }

    public void addI64(long v)
    {
        throw new RuntimeException("Stub!");
    }

    public long subI64()
    {
        throw new RuntimeException("Stub!");
    }

    public void addU8(short v)
    {
        throw new RuntimeException("Stub!");
    }

    public void addU16(int v)
    {
        throw new RuntimeException("Stub!");
    }

    public void addU32(long v)
    {
        throw new RuntimeException("Stub!");
    }

    public void addU64(long v)
    {
        throw new RuntimeException("Stub!");
    }

    public void addF32(float v)
    {
        throw new RuntimeException("Stub!");
    }

    public float subF32()
    {
        throw new RuntimeException("Stub!");
    }

    public void addF64(double v)
    {
        throw new RuntimeException("Stub!");
    }

    public double subF64()
    {
        throw new RuntimeException("Stub!");
    }

    public void addObj(BaseObj obj)
    {
        throw new RuntimeException("Stub!");
    }

    public void addF32(Float2 v)
    {
        throw new RuntimeException("Stub!");
    }

    public void addF32(Float3 v)
    {
        throw new RuntimeException("Stub!");
    }

    public void addF32(Float4 v)
    {
        throw new RuntimeException("Stub!");
    }

    public void addF64(Double2 v)
    {
        throw new RuntimeException("Stub!");
    }

    public void addF64(Double3 v)
    {
        throw new RuntimeException("Stub!");
    }

    public void addF64(Double4 v)
    {
        throw new RuntimeException("Stub!");
    }

    public void addI8(Byte2 v)
    {
        throw new RuntimeException("Stub!");
    }

    public void addI8(Byte3 v)
    {
        throw new RuntimeException("Stub!");
    }

    public void addI8(Byte4 v)
    {
        throw new RuntimeException("Stub!");
    }

    public void addU8(Short2 v)
    {
        throw new RuntimeException("Stub!");
    }

    public void addU8(Short3 v)
    {
        throw new RuntimeException("Stub!");
    }

    public void addU8(Short4 v)
    {
        throw new RuntimeException("Stub!");
    }

    public void addI16(Short2 v)
    {
        throw new RuntimeException("Stub!");
    }

    public void addI16(Short3 v)
    {
        throw new RuntimeException("Stub!");
    }

    public void addI16(Short4 v)
    {
        throw new RuntimeException("Stub!");
    }

    public void addU16(Int2 v)
    {
        throw new RuntimeException("Stub!");
    }

    public void addU16(Int3 v)
    {
        throw new RuntimeException("Stub!");
    }

    public void addU16(Int4 v)
    {
        throw new RuntimeException("Stub!");
    }

    public void addI32(Int2 v)
    {
        throw new RuntimeException("Stub!");
    }

    public void addI32(Int3 v)
    {
        throw new RuntimeException("Stub!");
    }

    public void addI32(Int4 v)
    {
        throw new RuntimeException("Stub!");
    }

    public void addU32(Long2 v)
    {
        throw new RuntimeException("Stub!");
    }

    public void addU32(Long3 v)
    {
        throw new RuntimeException("Stub!");
    }

    public void addU32(Long4 v)
    {
        throw new RuntimeException("Stub!");
    }

    public void addI64(Long2 v)
    {
        throw new RuntimeException("Stub!");
    }

    public void addI64(Long3 v)
    {
        throw new RuntimeException("Stub!");
    }

    public void addI64(Long4 v)
    {
        throw new RuntimeException("Stub!");
    }

    public void addU64(Long2 v)
    {
        throw new RuntimeException("Stub!");
    }

    public void addU64(Long3 v)
    {
        throw new RuntimeException("Stub!");
    }

    public void addU64(Long4 v)
    {
        throw new RuntimeException("Stub!");
    }

    public Float2 subFloat2()
    {
        throw new RuntimeException("Stub!");
    }

    public Float3 subFloat3()
    {
        throw new RuntimeException("Stub!");
    }

    public Float4 subFloat4()
    {
        throw new RuntimeException("Stub!");
    }

    public Double2 subDouble2()
    {
        throw new RuntimeException("Stub!");
    }

    public Double3 subDouble3()
    {
        throw new RuntimeException("Stub!");
    }

    public Double4 subDouble4()
    {
        throw new RuntimeException("Stub!");
    }

    public Byte2 subByte2()
    {
        throw new RuntimeException("Stub!");
    }

    public Byte3 subByte3()
    {
        throw new RuntimeException("Stub!");
    }

    public Byte4 subByte4()
    {
        throw new RuntimeException("Stub!");
    }

    public Short2 subShort2()
    {
        throw new RuntimeException("Stub!");
    }

    public Short3 subShort3()
    {
        throw new RuntimeException("Stub!");
    }

    public Short4 subShort4()
    {
        throw new RuntimeException("Stub!");
    }

    public Int2 subInt2()
    {
        throw new RuntimeException("Stub!");
    }

    public Int3 subInt3()
    {
        throw new RuntimeException("Stub!");
    }

    public Int4 subInt4()
    {
        throw new RuntimeException("Stub!");
    }

    public Long2 subLong2()
    {
        throw new RuntimeException("Stub!");
    }

    public Long3 subLong3()
    {
        throw new RuntimeException("Stub!");
    }

    public Long4 subLong4()
    {
        throw new RuntimeException("Stub!");
    }

    public void addMatrix(Matrix4f v)
    {
        throw new RuntimeException("Stub!");
    }

    public Matrix4f subMatrix4f()
    {
        throw new RuntimeException("Stub!");
    }

    public void addMatrix(Matrix3f v)
    {
        throw new RuntimeException("Stub!");
    }

    public Matrix3f subMatrix3f()
    {
        throw new RuntimeException("Stub!");
    }

    public void addMatrix(Matrix2f v)
    {
        throw new RuntimeException("Stub!");
    }

    public Matrix2f subMatrix2f()
    {
        throw new RuntimeException("Stub!");
    }

    public void addBoolean(boolean v)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean subBoolean()
    {
        throw new RuntimeException("Stub!");
    }

    public final byte[] getData()
    {
        throw new RuntimeException("Stub!");
    }
}
