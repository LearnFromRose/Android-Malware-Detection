// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   LauncherApps.java

package android.content.pm;

import android.appwidget.AppWidgetProviderInfo;
import android.content.*;
import android.graphics.Rect;
import android.graphics.drawable.Drawable;
import android.os.*;
import java.util.List;
import java.util.concurrent.Executor;

// Referenced classes of package android.content.pm:
//            PackageInstaller, PackageManager, LauncherActivityInfo, ApplicationInfo, 
//            ShortcutInfo

public class LauncherApps
{
    public static class ShortcutQuery
    {

        public ShortcutQuery setChangedSince(long changedSince)
        {
            throw new RuntimeException("Stub!");
        }

        public ShortcutQuery setPackage(String packageName)
        {
            throw new RuntimeException("Stub!");
        }

        public ShortcutQuery setShortcutIds(List shortcutIds)
        {
            throw new RuntimeException("Stub!");
        }

        public ShortcutQuery setActivity(ComponentName activity)
        {
            throw new RuntimeException("Stub!");
        }

        public ShortcutQuery setQueryFlags(int queryFlags)
        {
            throw new RuntimeException("Stub!");
        }

        public static final int FLAG_GET_KEY_FIELDS_ONLY = 4;
        public static final int FLAG_MATCH_DYNAMIC = 1;
        public static final int FLAG_MATCH_MANIFEST = 8;
        public static final int FLAG_MATCH_PINNED = 2;
        public static final int FLAG_MATCH_PINNED_BY_ANY_LAUNCHER = 1024;

        public ShortcutQuery()
        {
            throw new RuntimeException("Stub!");
        }
    }

    public static final class PinItemRequest
        implements Parcelable
    {

        public int getRequestType()
        {
            throw new RuntimeException("Stub!");
        }

        public ShortcutInfo getShortcutInfo()
        {
            throw new RuntimeException("Stub!");
        }

        public AppWidgetProviderInfo getAppWidgetProviderInfo(Context context)
        {
            throw new RuntimeException("Stub!");
        }

        public Bundle getExtras()
        {
            throw new RuntimeException("Stub!");
        }

        public boolean isValid()
        {
            throw new RuntimeException("Stub!");
        }

        public boolean accept(Bundle options)
        {
            throw new RuntimeException("Stub!");
        }

        public boolean accept()
        {
            throw new RuntimeException("Stub!");
        }

        public void writeToParcel(Parcel dest, int flags)
        {
            throw new RuntimeException("Stub!");
        }

        public int describeContents()
        {
            throw new RuntimeException("Stub!");
        }

        public static final android.os.Parcelable.Creator CREATOR = null;
        public static final int REQUEST_TYPE_APPWIDGET = 2;
        public static final int REQUEST_TYPE_SHORTCUT = 1;


        PinItemRequest(Parcel source)
        {
            throw new RuntimeException("Stub!");
        }
    }

    public static abstract class Callback
    {

        public abstract void onPackageRemoved(String s, UserHandle userhandle);

        public abstract void onPackageAdded(String s, UserHandle userhandle);

        public abstract void onPackageChanged(String s, UserHandle userhandle);

        public abstract void onPackagesAvailable(String as[], UserHandle userhandle, boolean flag);

        public abstract void onPackagesUnavailable(String as[], UserHandle userhandle, boolean flag);

        public void onPackagesSuspended(String packageNames[], UserHandle user)
        {
            throw new RuntimeException("Stub!");
        }

        public void onPackagesSuspended(String packageNames[], UserHandle user, Bundle launcherExtras)
        {
            throw new RuntimeException("Stub!");
        }

        public void onPackagesUnsuspended(String packageNames[], UserHandle user)
        {
            throw new RuntimeException("Stub!");
        }

        public void onShortcutsChanged(String packageName, List shortcuts, UserHandle user)
        {
            throw new RuntimeException("Stub!");
        }

        public Callback()
        {
            throw new RuntimeException("Stub!");
        }
    }


    LauncherApps(Context context)
    {
        throw new RuntimeException("Stub!");
    }

    public List getProfiles()
    {
        throw new RuntimeException("Stub!");
    }

    public List getActivityList(String packageName, UserHandle user)
    {
        throw new RuntimeException("Stub!");
    }

    public LauncherActivityInfo resolveActivity(Intent intent, UserHandle user)
    {
        throw new RuntimeException("Stub!");
    }

    public void startMainActivity(ComponentName component, UserHandle user, Rect sourceBounds, Bundle opts)
    {
        throw new RuntimeException("Stub!");
    }

    public void startPackageInstallerSessionDetailsActivity(PackageInstaller.SessionInfo sessionInfo, Rect sourceBounds, Bundle opts)
    {
        throw new RuntimeException("Stub!");
    }

    public void startAppDetailsActivity(ComponentName component, UserHandle user, Rect sourceBounds, Bundle opts)
    {
        throw new RuntimeException("Stub!");
    }

    public List getShortcutConfigActivityList(String packageName, UserHandle user)
    {
        throw new RuntimeException("Stub!");
    }

    public IntentSender getShortcutConfigActivityIntent(LauncherActivityInfo info)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isPackageEnabled(String packageName, UserHandle user)
    {
        throw new RuntimeException("Stub!");
    }

    public Bundle getSuspendedPackageLauncherExtras(String packageName, UserHandle user)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean shouldHideFromSuggestions(String packageName, UserHandle user)
    {
        throw new RuntimeException("Stub!");
    }

    public ApplicationInfo getApplicationInfo(String packageName, int flags, UserHandle user)
        throws PackageManager.NameNotFoundException
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isActivityEnabled(ComponentName component, UserHandle user)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean hasShortcutHostPermission()
    {
        throw new RuntimeException("Stub!");
    }

    public List getShortcuts(ShortcutQuery query, UserHandle user)
    {
        throw new RuntimeException("Stub!");
    }

    public void pinShortcuts(String packageName, List shortcutIds, UserHandle user)
    {
        throw new RuntimeException("Stub!");
    }

    public Drawable getShortcutIconDrawable(ShortcutInfo shortcut, int density)
    {
        throw new RuntimeException("Stub!");
    }

    public Drawable getShortcutBadgedIconDrawable(ShortcutInfo shortcut, int density)
    {
        throw new RuntimeException("Stub!");
    }

    public void startShortcut(String packageName, String shortcutId, Rect sourceBounds, Bundle startActivityOptions, UserHandle user)
    {
        throw new RuntimeException("Stub!");
    }

    public void startShortcut(ShortcutInfo shortcut, Rect sourceBounds, Bundle startActivityOptions)
    {
        throw new RuntimeException("Stub!");
    }

    public void registerCallback(Callback callback)
    {
        throw new RuntimeException("Stub!");
    }

    public void registerCallback(Callback callback, Handler handler)
    {
        throw new RuntimeException("Stub!");
    }

    public void unregisterCallback(Callback callback)
    {
        throw new RuntimeException("Stub!");
    }

    public void registerPackageInstallerSessionCallback(Executor executor, PackageInstaller.SessionCallback callback)
    {
        throw new RuntimeException("Stub!");
    }

    public void unregisterPackageInstallerSessionCallback(PackageInstaller.SessionCallback callback)
    {
        throw new RuntimeException("Stub!");
    }

    public List getAllPackageInstallerSessions()
    {
        throw new RuntimeException("Stub!");
    }

    public PinItemRequest getPinItemRequest(Intent intent)
    {
        throw new RuntimeException("Stub!");
    }

    public static final String ACTION_CONFIRM_PIN_APPWIDGET = "android.content.pm.action.CONFIRM_PIN_APPWIDGET";
    public static final String ACTION_CONFIRM_PIN_SHORTCUT = "android.content.pm.action.CONFIRM_PIN_SHORTCUT";
    public static final String EXTRA_PIN_ITEM_REQUEST = "android.content.pm.extra.PIN_ITEM_REQUEST";
}
