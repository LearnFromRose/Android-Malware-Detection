// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   PackageManager.java

package android.content.pm;

import android.content.*;
import android.content.res.Resources;
import android.content.res.XmlResourceParser;
import android.graphics.Rect;
import android.graphics.drawable.Drawable;
import android.os.Bundle;
import android.os.UserHandle;
import android.util.AndroidException;
import java.util.List;
import java.util.Set;

// Referenced classes of package android.content.pm:
//            PackageInfo, VersionedPackage, PermissionInfo, PermissionGroupInfo, 
//            ApplicationInfo, ActivityInfo, ServiceInfo, ProviderInfo, 
//            ModuleInfo, ChangedPackages, FeatureInfo, ResolveInfo, 
//            InstrumentationInfo, PackageInstaller

public abstract class PackageManager
{
    public static class NameNotFoundException extends AndroidException
    {

        public NameNotFoundException()
        {
            throw new RuntimeException("Stub!");
        }

        public NameNotFoundException(String name)
        {
            throw new RuntimeException("Stub!");
        }
    }


    public PackageManager()
    {
        throw new RuntimeException("Stub!");
    }

    public abstract PackageInfo getPackageInfo(String s, int i)
        throws NameNotFoundException;

    public abstract PackageInfo getPackageInfo(VersionedPackage versionedpackage, int i)
        throws NameNotFoundException;

    public abstract String[] currentToCanonicalPackageNames(String as[]);

    public abstract String[] canonicalToCurrentPackageNames(String as[]);

    public abstract Intent getLaunchIntentForPackage(String s);

    public abstract Intent getLeanbackLaunchIntentForPackage(String s);

    public abstract int[] getPackageGids(String s)
        throws NameNotFoundException;

    public abstract int[] getPackageGids(String s, int i)
        throws NameNotFoundException;

    public abstract int getPackageUid(String s, int i)
        throws NameNotFoundException;

    public abstract PermissionInfo getPermissionInfo(String s, int i)
        throws NameNotFoundException;

    public abstract List queryPermissionsByGroup(String s, int i)
        throws NameNotFoundException;

    public abstract PermissionGroupInfo getPermissionGroupInfo(String s, int i)
        throws NameNotFoundException;

    public abstract List getAllPermissionGroups(int i);

    public abstract ApplicationInfo getApplicationInfo(String s, int i)
        throws NameNotFoundException;

    public abstract ActivityInfo getActivityInfo(ComponentName componentname, int i)
        throws NameNotFoundException;

    public abstract ActivityInfo getReceiverInfo(ComponentName componentname, int i)
        throws NameNotFoundException;

    public abstract ServiceInfo getServiceInfo(ComponentName componentname, int i)
        throws NameNotFoundException;

    public abstract ProviderInfo getProviderInfo(ComponentName componentname, int i)
        throws NameNotFoundException;

    public ModuleInfo getModuleInfo(String packageName, int flags)
        throws NameNotFoundException
    {
        throw new RuntimeException("Stub!");
    }

    public List getInstalledModules(int flags)
    {
        throw new RuntimeException("Stub!");
    }

    public abstract List getInstalledPackages(int i);

    public abstract List getPackagesHoldingPermissions(String as[], int i);

    public abstract int checkPermission(String s, String s1);

    public abstract boolean isPermissionRevokedByPolicy(String s, String s1);

    public abstract boolean addPermission(PermissionInfo permissioninfo);

    public abstract boolean addPermissionAsync(PermissionInfo permissioninfo);

    public abstract void removePermission(String s);

    public Set getWhitelistedRestrictedPermissions(String packageName, int whitelistFlag)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean addWhitelistedRestrictedPermission(String packageName, String permission, int whitelistFlags)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean removeWhitelistedRestrictedPermission(String packageName, String permission, int whitelistFlags)
    {
        throw new RuntimeException("Stub!");
    }

    public abstract int checkSignatures(String s, String s1);

    public abstract int checkSignatures(int i, int j);

    public abstract String[] getPackagesForUid(int i);

    public abstract String getNameForUid(int i);

    public abstract List getInstalledApplications(int i);

    public abstract boolean isInstantApp();

    public abstract boolean isInstantApp(String s);

    public abstract int getInstantAppCookieMaxBytes();

    public abstract byte[] getInstantAppCookie();

    public abstract void clearInstantAppCookie();

    public abstract void updateInstantAppCookie(byte abyte0[]);

    public abstract String[] getSystemSharedLibraryNames();

    public abstract List getSharedLibraries(int i);

    public abstract ChangedPackages getChangedPackages(int i);

    public abstract FeatureInfo[] getSystemAvailableFeatures();

    public abstract boolean hasSystemFeature(String s);

    public abstract boolean hasSystemFeature(String s, int i);

    public abstract ResolveInfo resolveActivity(Intent intent, int i);

    public abstract List queryIntentActivities(Intent intent, int i);

    public abstract List queryIntentActivityOptions(ComponentName componentname, Intent aintent[], Intent intent, int i);

    public abstract List queryBroadcastReceivers(Intent intent, int i);

    public abstract ResolveInfo resolveService(Intent intent, int i);

    public abstract List queryIntentServices(Intent intent, int i);

    public abstract List queryIntentContentProviders(Intent intent, int i);

    public abstract ProviderInfo resolveContentProvider(String s, int i);

    public abstract List queryContentProviders(String s, int i, int j);

    public abstract InstrumentationInfo getInstrumentationInfo(ComponentName componentname, int i)
        throws NameNotFoundException;

    public abstract List queryInstrumentation(String s, int i);

    public abstract Drawable getDrawable(String s, int i, ApplicationInfo applicationinfo);

    public abstract Drawable getActivityIcon(ComponentName componentname)
        throws NameNotFoundException;

    public abstract Drawable getActivityIcon(Intent intent)
        throws NameNotFoundException;

    public abstract Drawable getActivityBanner(ComponentName componentname)
        throws NameNotFoundException;

    public abstract Drawable getActivityBanner(Intent intent)
        throws NameNotFoundException;

    public abstract Drawable getDefaultActivityIcon();

    public abstract Drawable getApplicationIcon(ApplicationInfo applicationinfo);

    public abstract Drawable getApplicationIcon(String s)
        throws NameNotFoundException;

    public abstract Drawable getApplicationBanner(ApplicationInfo applicationinfo);

    public abstract Drawable getApplicationBanner(String s)
        throws NameNotFoundException;

    public abstract Drawable getActivityLogo(ComponentName componentname)
        throws NameNotFoundException;

    public abstract Drawable getActivityLogo(Intent intent)
        throws NameNotFoundException;

    public abstract Drawable getApplicationLogo(ApplicationInfo applicationinfo);

    public abstract Drawable getApplicationLogo(String s)
        throws NameNotFoundException;

    public abstract Drawable getUserBadgedIcon(Drawable drawable, UserHandle userhandle);

    public abstract Drawable getUserBadgedDrawableForDensity(Drawable drawable, UserHandle userhandle, Rect rect, int i);

    public abstract CharSequence getUserBadgedLabel(CharSequence charsequence, UserHandle userhandle);

    public abstract CharSequence getText(String s, int i, ApplicationInfo applicationinfo);

    public abstract XmlResourceParser getXml(String s, int i, ApplicationInfo applicationinfo);

    public abstract CharSequence getApplicationLabel(ApplicationInfo applicationinfo);

    public abstract Resources getResourcesForActivity(ComponentName componentname)
        throws NameNotFoundException;

    public abstract Resources getResourcesForApplication(ApplicationInfo applicationinfo)
        throws NameNotFoundException;

    public abstract Resources getResourcesForApplication(String s)
        throws NameNotFoundException;

    public PackageInfo getPackageArchiveInfo(String archiveFilePath, int flags)
    {
        throw new RuntimeException("Stub!");
    }

    public abstract void verifyPendingInstall(int i, int j);

    public abstract void extendVerificationTimeout(int i, int j, long l);

    public abstract void setInstallerPackageName(String s, String s1);

    public abstract String getInstallerPackageName(String s);

    /**
     * @deprecated Method addPackageToPreferred is deprecated
     */

    public abstract void addPackageToPreferred(String s);

    /**
     * @deprecated Method removePackageFromPreferred is deprecated
     */

    public abstract void removePackageFromPreferred(String s);

    /**
     * @deprecated Method getPreferredPackages is deprecated
     */

    public abstract List getPreferredPackages(int i);

    /**
     * @deprecated Method addPreferredActivity is deprecated
     */

    public abstract void addPreferredActivity(IntentFilter intentfilter, int i, ComponentName acomponentname[], ComponentName componentname);

    /**
     * @deprecated Method clearPackagePreferredActivities is deprecated
     */

    public abstract void clearPackagePreferredActivities(String s);

    /**
     * @deprecated Method getPreferredActivities is deprecated
     */

    public abstract int getPreferredActivities(List list, List list1, String s);

    public abstract void setComponentEnabledSetting(ComponentName componentname, int i, int j);

    public abstract int getComponentEnabledSetting(ComponentName componentname);

    public boolean getSyntheticAppDetailsActivityEnabled(String packageName)
    {
        throw new RuntimeException("Stub!");
    }

    public abstract void setApplicationEnabledSetting(String s, int i, int j);

    public abstract int getApplicationEnabledSetting(String s);

    public abstract boolean isSafeMode();

    public boolean isPackageSuspended(String packageName)
        throws NameNotFoundException
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isPackageSuspended()
    {
        throw new RuntimeException("Stub!");
    }

    public Bundle getSuspendedPackageAppExtras()
    {
        throw new RuntimeException("Stub!");
    }

    public abstract void setApplicationCategoryHint(String s, int i);

    public boolean isDeviceUpgrading()
    {
        throw new RuntimeException("Stub!");
    }

    public abstract PackageInstaller getPackageInstaller();

    public abstract boolean canRequestPackageInstalls();

    public boolean hasSigningCertificate(String packageName, byte certificate[], int type)
    {
        throw new RuntimeException("Stub!");
    }

    public boolean hasSigningCertificate(int uid, byte certificate[], int type)
    {
        throw new RuntimeException("Stub!");
    }

    public static final int CERT_INPUT_RAW_X509 = 0;
    public static final int CERT_INPUT_SHA256 = 1;
    public static final int COMPONENT_ENABLED_STATE_DEFAULT = 0;
    public static final int COMPONENT_ENABLED_STATE_DISABLED = 2;
    public static final int COMPONENT_ENABLED_STATE_DISABLED_UNTIL_USED = 4;
    public static final int COMPONENT_ENABLED_STATE_DISABLED_USER = 3;
    public static final int COMPONENT_ENABLED_STATE_ENABLED = 1;
    public static final int DONT_KILL_APP = 1;
    public static final String EXTRA_VERIFICATION_ID = "android.content.pm.extra.VERIFICATION_ID";
    public static final String EXTRA_VERIFICATION_RESULT = "android.content.pm.extra.VERIFICATION_RESULT";
    public static final String FEATURE_ACTIVITIES_ON_SECONDARY_DISPLAYS = "android.software.activities_on_secondary_displays";
    public static final String FEATURE_APP_WIDGETS = "android.software.app_widgets";
    public static final String FEATURE_AUDIO_LOW_LATENCY = "android.hardware.audio.low_latency";
    public static final String FEATURE_AUDIO_OUTPUT = "android.hardware.audio.output";
    public static final String FEATURE_AUDIO_PRO = "android.hardware.audio.pro";
    public static final String FEATURE_AUTOFILL = "android.software.autofill";
    public static final String FEATURE_AUTOMOTIVE = "android.hardware.type.automotive";
    public static final String FEATURE_BACKUP = "android.software.backup";
    public static final String FEATURE_BLUETOOTH = "android.hardware.bluetooth";
    public static final String FEATURE_BLUETOOTH_LE = "android.hardware.bluetooth_le";
    public static final String FEATURE_CAMERA = "android.hardware.camera";
    public static final String FEATURE_CAMERA_ANY = "android.hardware.camera.any";
    public static final String FEATURE_CAMERA_AR = "android.hardware.camera.ar";
    public static final String FEATURE_CAMERA_AUTOFOCUS = "android.hardware.camera.autofocus";
    public static final String FEATURE_CAMERA_CAPABILITY_MANUAL_POST_PROCESSING = "android.hardware.camera.capability.manual_post_processing";
    public static final String FEATURE_CAMERA_CAPABILITY_MANUAL_SENSOR = "android.hardware.camera.capability.manual_sensor";
    public static final String FEATURE_CAMERA_CAPABILITY_RAW = "android.hardware.camera.capability.raw";
    public static final String FEATURE_CAMERA_EXTERNAL = "android.hardware.camera.external";
    public static final String FEATURE_CAMERA_FLASH = "android.hardware.camera.flash";
    public static final String FEATURE_CAMERA_FRONT = "android.hardware.camera.front";
    public static final String FEATURE_CAMERA_LEVEL_FULL = "android.hardware.camera.level.full";
    public static final String FEATURE_CANT_SAVE_STATE = "android.software.cant_save_state";
    public static final String FEATURE_COMPANION_DEVICE_SETUP = "android.software.companion_device_setup";
    public static final String FEATURE_CONNECTION_SERVICE = "android.software.connectionservice";
    public static final String FEATURE_CONSUMER_IR = "android.hardware.consumerir";
    public static final String FEATURE_DEVICE_ADMIN = "android.software.device_admin";
    public static final String FEATURE_EMBEDDED = "android.hardware.type.embedded";
    public static final String FEATURE_ETHERNET = "android.hardware.ethernet";
    public static final String FEATURE_FACE = "android.hardware.biometrics.face";
    public static final String FEATURE_FAKETOUCH = "android.hardware.faketouch";
    public static final String FEATURE_FAKETOUCH_MULTITOUCH_DISTINCT = "android.hardware.faketouch.multitouch.distinct";
    public static final String FEATURE_FAKETOUCH_MULTITOUCH_JAZZHAND = "android.hardware.faketouch.multitouch.jazzhand";
    public static final String FEATURE_FINGERPRINT = "android.hardware.fingerprint";
    public static final String FEATURE_FREEFORM_WINDOW_MANAGEMENT = "android.software.freeform_window_management";
    public static final String FEATURE_GAMEPAD = "android.hardware.gamepad";
    public static final String FEATURE_HIFI_SENSORS = "android.hardware.sensor.hifi_sensors";
    public static final String FEATURE_HOME_SCREEN = "android.software.home_screen";
    public static final String FEATURE_INPUT_METHODS = "android.software.input_methods";
    public static final String FEATURE_IPSEC_TUNNELS = "android.software.ipsec_tunnels";
    public static final String FEATURE_IRIS = "android.hardware.biometrics.iris";
    public static final String FEATURE_LEANBACK = "android.software.leanback";
    public static final String FEATURE_LEANBACK_ONLY = "android.software.leanback_only";
    public static final String FEATURE_LIVE_TV = "android.software.live_tv";
    public static final String FEATURE_LIVE_WALLPAPER = "android.software.live_wallpaper";
    public static final String FEATURE_LOCATION = "android.hardware.location";
    public static final String FEATURE_LOCATION_GPS = "android.hardware.location.gps";
    public static final String FEATURE_LOCATION_NETWORK = "android.hardware.location.network";
    public static final String FEATURE_MANAGED_USERS = "android.software.managed_users";
    public static final String FEATURE_MICROPHONE = "android.hardware.microphone";
    public static final String FEATURE_MIDI = "android.software.midi";
    public static final String FEATURE_NFC = "android.hardware.nfc";
    public static final String FEATURE_NFC_BEAM = "android.sofware.nfc.beam";
    public static final String FEATURE_NFC_HOST_CARD_EMULATION = "android.hardware.nfc.hce";
    public static final String FEATURE_NFC_HOST_CARD_EMULATION_NFCF = "android.hardware.nfc.hcef";
    public static final String FEATURE_NFC_OFF_HOST_CARD_EMULATION_ESE = "android.hardware.nfc.ese";
    public static final String FEATURE_NFC_OFF_HOST_CARD_EMULATION_UICC = "android.hardware.nfc.uicc";
    public static final String FEATURE_OPENGLES_EXTENSION_PACK = "android.hardware.opengles.aep";
    public static final String FEATURE_PC = "android.hardware.type.pc";
    public static final String FEATURE_PICTURE_IN_PICTURE = "android.software.picture_in_picture";
    public static final String FEATURE_PRINTING = "android.software.print";
    public static final String FEATURE_RAM_LOW = "android.hardware.ram.low";
    public static final String FEATURE_RAM_NORMAL = "android.hardware.ram.normal";
    public static final String FEATURE_SCREEN_LANDSCAPE = "android.hardware.screen.landscape";
    public static final String FEATURE_SCREEN_PORTRAIT = "android.hardware.screen.portrait";
    public static final String FEATURE_SECURELY_REMOVES_USERS = "android.software.securely_removes_users";
    public static final String FEATURE_SECURE_LOCK_SCREEN = "android.software.secure_lock_screen";
    public static final String FEATURE_SENSOR_ACCELEROMETER = "android.hardware.sensor.accelerometer";
    public static final String FEATURE_SENSOR_AMBIENT_TEMPERATURE = "android.hardware.sensor.ambient_temperature";
    public static final String FEATURE_SENSOR_BAROMETER = "android.hardware.sensor.barometer";
    public static final String FEATURE_SENSOR_COMPASS = "android.hardware.sensor.compass";
    public static final String FEATURE_SENSOR_GYROSCOPE = "android.hardware.sensor.gyroscope";
    public static final String FEATURE_SENSOR_HEART_RATE = "android.hardware.sensor.heartrate";
    public static final String FEATURE_SENSOR_HEART_RATE_ECG = "android.hardware.sensor.heartrate.ecg";
    public static final String FEATURE_SENSOR_LIGHT = "android.hardware.sensor.light";
    public static final String FEATURE_SENSOR_PROXIMITY = "android.hardware.sensor.proximity";
    public static final String FEATURE_SENSOR_RELATIVE_HUMIDITY = "android.hardware.sensor.relative_humidity";
    public static final String FEATURE_SENSOR_STEP_COUNTER = "android.hardware.sensor.stepcounter";
    public static final String FEATURE_SENSOR_STEP_DETECTOR = "android.hardware.sensor.stepdetector";
    public static final String FEATURE_SIP = "android.software.sip";
    public static final String FEATURE_SIP_VOIP = "android.software.sip.voip";
    public static final String FEATURE_STRONGBOX_KEYSTORE = "android.hardware.strongbox_keystore";
    public static final String FEATURE_TELEPHONY = "android.hardware.telephony";
    public static final String FEATURE_TELEPHONY_CDMA = "android.hardware.telephony.cdma";
    public static final String FEATURE_TELEPHONY_EUICC = "android.hardware.telephony.euicc";
    public static final String FEATURE_TELEPHONY_GSM = "android.hardware.telephony.gsm";
    public static final String FEATURE_TELEPHONY_IMS = "android.hardware.telephony.ims";
    public static final String FEATURE_TELEPHONY_MBMS = "android.hardware.telephony.mbms";
    /**
     * @deprecated Field FEATURE_TELEVISION is deprecated
     */
    public static final String FEATURE_TELEVISION = "android.hardware.type.television";
    public static final String FEATURE_TOUCHSCREEN = "android.hardware.touchscreen";
    public static final String FEATURE_TOUCHSCREEN_MULTITOUCH = "android.hardware.touchscreen.multitouch";
    public static final String FEATURE_TOUCHSCREEN_MULTITOUCH_DISTINCT = "android.hardware.touchscreen.multitouch.distinct";
    public static final String FEATURE_TOUCHSCREEN_MULTITOUCH_JAZZHAND = "android.hardware.touchscreen.multitouch.jazzhand";
    public static final String FEATURE_USB_ACCESSORY = "android.hardware.usb.accessory";
    public static final String FEATURE_USB_HOST = "android.hardware.usb.host";
    public static final String FEATURE_VERIFIED_BOOT = "android.software.verified_boot";
    public static final String FEATURE_VR_HEADTRACKING = "android.hardware.vr.headtracking";
    /**
     * @deprecated Field FEATURE_VR_MODE is deprecated
     */
    public static final String FEATURE_VR_MODE = "android.software.vr.mode";
    public static final String FEATURE_VR_MODE_HIGH_PERFORMANCE = "android.hardware.vr.high_performance";
    public static final String FEATURE_VULKAN_HARDWARE_COMPUTE = "android.hardware.vulkan.compute";
    public static final String FEATURE_VULKAN_HARDWARE_LEVEL = "android.hardware.vulkan.level";
    public static final String FEATURE_VULKAN_HARDWARE_VERSION = "android.hardware.vulkan.version";
    public static final String FEATURE_WATCH = "android.hardware.type.watch";
    public static final String FEATURE_WEBVIEW = "android.software.webview";
    public static final String FEATURE_WIFI = "android.hardware.wifi";
    public static final String FEATURE_WIFI_AWARE = "android.hardware.wifi.aware";
    public static final String FEATURE_WIFI_DIRECT = "android.hardware.wifi.direct";
    public static final String FEATURE_WIFI_PASSPOINT = "android.hardware.wifi.passpoint";
    public static final String FEATURE_WIFI_RTT = "android.hardware.wifi.rtt";
    public static final int FLAG_PERMISSION_WHITELIST_INSTALLER = 2;
    public static final int FLAG_PERMISSION_WHITELIST_SYSTEM = 1;
    public static final int FLAG_PERMISSION_WHITELIST_UPGRADE = 4;
    public static final int GET_ACTIVITIES = 1;
    public static final int GET_CONFIGURATIONS = 16384;
    /**
     * @deprecated Field GET_DISABLED_COMPONENTS is deprecated
     */
    public static final int GET_DISABLED_COMPONENTS = 512;
    /**
     * @deprecated Field GET_DISABLED_UNTIL_USED_COMPONENTS is deprecated
     */
    public static final int GET_DISABLED_UNTIL_USED_COMPONENTS = 32768;
    public static final int GET_GIDS = 256;
    public static final int GET_INSTRUMENTATION = 16;
    public static final int GET_INTENT_FILTERS = 32;
    public static final int GET_META_DATA = 128;
    public static final int GET_PERMISSIONS = 4096;
    public static final int GET_PROVIDERS = 8;
    public static final int GET_RECEIVERS = 2;
    public static final int GET_RESOLVED_FILTER = 64;
    public static final int GET_SERVICES = 4;
    public static final int GET_SHARED_LIBRARY_FILES = 1024;
    /**
     * @deprecated Field GET_SIGNATURES is deprecated
     */
    public static final int GET_SIGNATURES = 64;
    public static final int GET_SIGNING_CERTIFICATES = 0x8000000;
    /**
     * @deprecated Field GET_UNINSTALLED_PACKAGES is deprecated
     */
    public static final int GET_UNINSTALLED_PACKAGES = 8192;
    public static final int GET_URI_PERMISSION_PATTERNS = 2048;
    public static final int INSTALL_REASON_DEVICE_RESTORE = 2;
    public static final int INSTALL_REASON_DEVICE_SETUP = 3;
    public static final int INSTALL_REASON_POLICY = 1;
    public static final int INSTALL_REASON_UNKNOWN = 0;
    public static final int INSTALL_REASON_USER = 4;
    public static final int MATCH_ALL = 0x20000;
    public static final int MATCH_APEX = 0x40000000;
    public static final int MATCH_DEFAULT_ONLY = 0x10000;
    public static final int MATCH_DIRECT_BOOT_AUTO = 0x10000000;
    public static final int MATCH_DIRECT_BOOT_AWARE = 0x80000;
    public static final int MATCH_DIRECT_BOOT_UNAWARE = 0x40000;
    public static final int MATCH_DISABLED_COMPONENTS = 512;
    public static final int MATCH_DISABLED_UNTIL_USED_COMPONENTS = 32768;
    public static final int MATCH_SYSTEM_ONLY = 0x100000;
    public static final int MATCH_UNINSTALLED_PACKAGES = 8192;
    public static final long MAXIMUM_VERIFICATION_TIMEOUT = 0x36ee80L;
    public static final int PERMISSION_DENIED = -1;
    public static final int PERMISSION_GRANTED = 0;
    public static final int SIGNATURE_FIRST_NOT_SIGNED = -1;
    public static final int SIGNATURE_MATCH = 0;
    public static final int SIGNATURE_NEITHER_SIGNED = 1;
    public static final int SIGNATURE_NO_MATCH = -3;
    public static final int SIGNATURE_SECOND_NOT_SIGNED = -2;
    public static final int SIGNATURE_UNKNOWN_PACKAGE = -4;
    public static final int VERIFICATION_ALLOW = 1;
    public static final int VERIFICATION_REJECT = -1;
    public static final int VERSION_CODE_HIGHEST = -1;
}
