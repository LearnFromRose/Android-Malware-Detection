// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   CursorLoader.java

package android.content;

import android.database.Cursor;
import android.net.Uri;
import java.io.FileDescriptor;
import java.io.PrintWriter;

// Referenced classes of package android.content:
//            AsyncTaskLoader, Context

/**
 * @deprecated Class CursorLoader is deprecated
 */

public class CursorLoader extends AsyncTaskLoader
{

    /**
     * @deprecated Method CursorLoader is deprecated
     */

    public CursorLoader(Context context)
    {
        super(null);
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method CursorLoader is deprecated
     */

    public CursorLoader(Context context, Uri uri, String projection[], String selection, String selectionArgs[], String sortOrder)
    {
        super(null);
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method loadInBackground is deprecated
     */

    public Cursor loadInBackground()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method cancelLoadInBackground is deprecated
     */

    public void cancelLoadInBackground()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method deliverResult is deprecated
     */

    public void deliverResult(Cursor cursor)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method onStartLoading is deprecated
     */

    protected void onStartLoading()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method onStopLoading is deprecated
     */

    protected void onStopLoading()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method onCanceled is deprecated
     */

    public void onCanceled(Cursor cursor)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method onReset is deprecated
     */

    protected void onReset()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method getUri is deprecated
     */

    public Uri getUri()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method setUri is deprecated
     */

    public void setUri(Uri uri)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method getProjection is deprecated
     */

    public String[] getProjection()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method setProjection is deprecated
     */

    public void setProjection(String projection[])
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method getSelection is deprecated
     */

    public String getSelection()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method setSelection is deprecated
     */

    public void setSelection(String selection)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method getSelectionArgs is deprecated
     */

    public String[] getSelectionArgs()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method setSelectionArgs is deprecated
     */

    public void setSelectionArgs(String selectionArgs[])
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method getSortOrder is deprecated
     */

    public String getSortOrder()
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method setSortOrder is deprecated
     */

    public void setSortOrder(String sortOrder)
    {
        throw new RuntimeException("Stub!");
    }

    /**
     * @deprecated Method dump is deprecated
     */

    public void dump(String prefix, FileDescriptor fd, PrintWriter writer, String args[])
    {
        throw new RuntimeException("Stub!");
    }

    public volatile Object loadInBackground()
    {
        return loadInBackground();
    }

    public volatile void onCanceled(Object obj)
    {
        onCanceled((Cursor)obj);
    }

    public volatile void deliverResult(Object obj)
    {
        deliverResult((Cursor)obj);
    }
}
