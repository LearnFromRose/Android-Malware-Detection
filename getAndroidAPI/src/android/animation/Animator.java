// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   Animator.java

package android.animation;

import java.util.ArrayList;

// Referenced classes of package android.animation:
//            TimeInterpolator

public abstract class Animator
    implements Cloneable
{
    public static interface AnimatorPauseListener
    {

        public abstract void onAnimationPause(Animator animator);

        public abstract void onAnimationResume(Animator animator);
    }

    public static interface AnimatorListener
    {

        public void onAnimationStart(Animator animation, boolean isReverse)
        {
            throw new RuntimeException("Stub!");
        }

        public void onAnimationEnd(Animator animation, boolean isReverse)
        {
            throw new RuntimeException("Stub!");
        }

        public abstract void onAnimationStart(Animator animator);

        public abstract void onAnimationEnd(Animator animator);

        public abstract void onAnimationCancel(Animator animator);

        public abstract void onAnimationRepeat(Animator animator);
    }


    public Animator()
    {
        throw new RuntimeException("Stub!");
    }

    public void start()
    {
        throw new RuntimeException("Stub!");
    }

    public void cancel()
    {
        throw new RuntimeException("Stub!");
    }

    public void end()
    {
        throw new RuntimeException("Stub!");
    }

    public void pause()
    {
        throw new RuntimeException("Stub!");
    }

    public void resume()
    {
        throw new RuntimeException("Stub!");
    }

    public boolean isPaused()
    {
        throw new RuntimeException("Stub!");
    }

    public abstract long getStartDelay();

    public abstract void setStartDelay(long l);

    public abstract Animator setDuration(long l);

    public abstract long getDuration();

    public long getTotalDuration()
    {
        throw new RuntimeException("Stub!");
    }

    public abstract void setInterpolator(TimeInterpolator timeinterpolator);

    public TimeInterpolator getInterpolator()
    {
        throw new RuntimeException("Stub!");
    }

    public abstract boolean isRunning();

    public boolean isStarted()
    {
        throw new RuntimeException("Stub!");
    }

    public void addListener(AnimatorListener listener)
    {
        throw new RuntimeException("Stub!");
    }

    public void removeListener(AnimatorListener listener)
    {
        throw new RuntimeException("Stub!");
    }

    public ArrayList getListeners()
    {
        throw new RuntimeException("Stub!");
    }

    public void addPauseListener(AnimatorPauseListener listener)
    {
        throw new RuntimeException("Stub!");
    }

    public void removePauseListener(AnimatorPauseListener listener)
    {
        throw new RuntimeException("Stub!");
    }

    public void removeAllListeners()
    {
        throw new RuntimeException("Stub!");
    }

    public Animator clone()
    {
        throw new RuntimeException("Stub!");
    }

    public void setupStartValues()
    {
        throw new RuntimeException("Stub!");
    }

    public void setupEndValues()
    {
        throw new RuntimeException("Stub!");
    }

    public void setTarget(Object target)
    {
        throw new RuntimeException("Stub!");
    }

    public volatile Object clone()
        throws CloneNotSupportedException
    {
        return clone();
    }

    public static final long DURATION_INFINITE = -1L;
}
