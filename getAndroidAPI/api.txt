android.accessibilityservice.AccessibilityButtonController.onClicked(android.accessibilityservice.AccessibilityButtonController)void
android.accessibilityservice.AccessibilityButtonController.onAvailabilityChanged(android.accessibilityservice.AccessibilityButtonController,boolean)void
android.accessibilityservice.AccessibilityButtonController.isAccessibilityButtonAvailable)boolean
android.accessibilityservice.AccessibilityButtonController.registerAccessibilityButtonCallback(AccessibilityButtonCallback)void
android.accessibilityservice.AccessibilityButtonController.registerAccessibilityButtonCallback(AccessibilityButtonCallback,android.os.Handler)void
android.accessibilityservice.AccessibilityButtonController.unregisterAccessibilityButtonCallback(AccessibilityButtonCallback)void
android.accessibilityservice.AccessibilityService.addOnShowModeChangedListener(android.accessibilityservice.AccessibilityService.OnShowModeChangedListener)void
android.accessibilityservice.AccessibilityService.addOnShowModeChangedListener(android.accessibilityservice.AccessibilityService.OnShowModeChangedListener,android.os.Handler)void
android.accessibilityservice.AccessibilityService.removeOnShowModeChangedListener(android.accessibilityservice.AccessibilityService.OnShowModeChangedListener)boolean
android.accessibilityservice.AccessibilityService.getShowMode)int
android.accessibilityservice.AccessibilityService.setShowMode(int)boolean
android.accessibilityservice.AccessibilityService.addListener(android.accessibilityservice.AccessibilityService.OnMagnificationChangedListener)void
android.accessibilityservice.AccessibilityService.addListener(android.accessibilityservice.AccessibilityService.OnMagnificationChangedListener,android.os.Handler)void
android.accessibilityservice.AccessibilityService.removeListener(android.accessibilityservice.AccessibilityService.OnMagnificationChangedListener)boolean
android.accessibilityservice.AccessibilityService.getScale)float
android.accessibilityservice.AccessibilityService.getCenterX)float
android.accessibilityservice.AccessibilityService.getCenterY)float
android.accessibilityservice.AccessibilityService.getMagnificationRegion)android.graphics.Region
android.accessibilityservice.AccessibilityService.reset(boolean)boolean
android.accessibilityservice.AccessibilityService.setScale(float,boolean)boolean
android.accessibilityservice.AccessibilityService.setCenter(float,float,boolean)boolean
android.accessibilityservice.AccessibilityService.onCompleted(android.accessibilityservice.GestureDescription)void
android.accessibilityservice.AccessibilityService.onCancelled(android.accessibilityservice.GestureDescription)void
android.accessibilityservice.AccessibilityService.onServiceConnected)void
android.accessibilityservice.AccessibilityService.onGesture(int)boolean
android.accessibilityservice.AccessibilityService.onKeyEvent(android.view.KeyEvent)boolean
android.accessibilityservice.AccessibilityService.getWindows)java.util.List
android.accessibilityservice.AccessibilityService.getRootInActiveWindow)android.view.accessibility.AccessibilityNodeInfo
android.accessibilityservice.AccessibilityService.disableSelf)void
android.accessibilityservice.AccessibilityService.getMagnificationController)MagnificationController
android.accessibilityservice.AccessibilityService.getFingerprintGestureController)android.accessibilityservice.FingerprintGestureController
android.accessibilityservice.AccessibilityService.dispatchGesture(android.accessibilityservice.GestureDescription,GestureResultCallback,android.os.Handler)boolean
android.accessibilityservice.AccessibilityService.getSoftKeyboardController)SoftKeyboardController
android.accessibilityservice.AccessibilityService.getAccessibilityButtonController)android.accessibilityservice.AccessibilityButtonController
android.accessibilityservice.AccessibilityService.performGlobalAction(int)boolean
android.accessibilityservice.AccessibilityService.findFocus(int)android.view.accessibility.AccessibilityNodeInfo
android.accessibilityservice.AccessibilityService.getServiceInfo)android.accessibilityservice.AccessibilityServiceInfo
android.accessibilityservice.AccessibilityService.setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)void
android.accessibilityservice.AccessibilityService.getSystemService(String)Object
android.accessibilityservice.AccessibilityService.onBind(android.content.Intent)android.os.IBinder
android.accessibilityservice.AccessibilityServiceInfo.getId)String
android.accessibilityservice.AccessibilityServiceInfo.getResolveInfo)android.content.pm.ResolveInfo
android.accessibilityservice.AccessibilityServiceInfo.getSettingsActivityName)String
android.accessibilityservice.AccessibilityServiceInfo.getCanRetrieveWindowContent)boolean
android.accessibilityservice.AccessibilityServiceInfo.getCapabilities)int
android.accessibilityservice.AccessibilityServiceInfo.loadSummary(android.content.pm.PackageManager)CharSequence
android.accessibilityservice.AccessibilityServiceInfo.getDescription)String
android.accessibilityservice.AccessibilityServiceInfo.loadDescription(android.content.pm.PackageManager)String
android.accessibilityservice.AccessibilityServiceInfo.setNonInteractiveUiTimeoutMillis(int)void
android.accessibilityservice.AccessibilityServiceInfo.getNonInteractiveUiTimeoutMillis)int
android.accessibilityservice.AccessibilityServiceInfo.setInteractiveUiTimeoutMillis(int)void
android.accessibilityservice.AccessibilityServiceInfo.getInteractiveUiTimeoutMillis)int
android.accessibilityservice.AccessibilityServiceInfo.describeContents)int
android.accessibilityservice.AccessibilityServiceInfo.writeToParcel(android.os.Parcel,int)void
android.accessibilityservice.AccessibilityServiceInfo.hashCode)int
android.accessibilityservice.AccessibilityServiceInfo.equals(Object)boolean
android.accessibilityservice.AccessibilityServiceInfo.toString)String
android.accessibilityservice.AccessibilityServiceInfo.feedbackTypeToString(int)String
android.accessibilityservice.AccessibilityServiceInfo.flagToString(int)String
android.accessibilityservice.AccessibilityServiceInfo.capabilityToString(int)String
android.accessibilityservice.FingerprintGestureController.onGestureDetectionAvailabilityChanged(boolean)void
android.accessibilityservice.FingerprintGestureController.onGestureDetected(int)void
android.accessibilityservice.FingerprintGestureController.isGestureDetectionAvailable)boolean
android.accessibilityservice.FingerprintGestureController.registerFingerprintGestureCallback(FingerprintGestureCallback,android.os.Handler)void
android.accessibilityservice.FingerprintGestureController.unregisterFingerprintGestureCallback(FingerprintGestureCallback)void
android.accessibilityservice.GestureDescription.getPath)android.graphics.Path
android.accessibilityservice.GestureDescription.getStartTime)long
android.accessibilityservice.GestureDescription.getDuration)long
android.accessibilityservice.GestureDescription.continueStroke(android.graphics.Path,long,long,boolean)android.accessibilityservice.GestureDescription.StrokeDescription
android.accessibilityservice.GestureDescription.willContinue)boolean
android.accessibilityservice.GestureDescription.addStroke(android.accessibilityservice.GestureDescription.StrokeDescription)android.accessibilityservice.GestureDescription.Builder
android.accessibilityservice.GestureDescription.build)android.accessibilityservice.GestureDescription
android.accessibilityservice.GestureDescription.getMaxStrokeCount)int
android.accessibilityservice.GestureDescription.getMaxGestureDuration)long
android.accessibilityservice.GestureDescription.getStrokeCount)int
android.accessibilityservice.GestureDescription.getStroke(int)android.accessibilityservice.GestureDescription.StrokeDescription
android.accounts.AbstractAccountAuthenticator.getIBinder)android.os.IBinder
android.accounts.AbstractAccountAuthenticator.addAccount(android.accounts.AccountAuthenticatorResponse,String,String,String,android.os.Bundle)android.os.Bundle
android.accounts.AbstractAccountAuthenticator.confirmCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)android.os.Bundle
android.accounts.AbstractAccountAuthenticator.getAuthToken(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,String,android.os.Bundle)android.os.Bundle
android.accounts.AbstractAccountAuthenticator.updateCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,String,android.os.Bundle)android.os.Bundle
android.accounts.AbstractAccountAuthenticator.hasFeatures(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,String)android.os.Bundle
android.accounts.AbstractAccountAuthenticator.getAccountRemovalAllowed(android.accounts.AccountAuthenticatorResponse,android.accounts.Account)android.os.Bundle
android.accounts.AbstractAccountAuthenticator.getAccountCredentialsForCloning(android.accounts.AccountAuthenticatorResponse,android.accounts.Account)android.os.Bundle
android.accounts.AbstractAccountAuthenticator.addAccountFromCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)android.os.Bundle
android.accounts.AbstractAccountAuthenticator.startAddAccountSession(android.accounts.AccountAuthenticatorResponse,String,String,String,android.os.Bundle)android.os.Bundle
android.accounts.AbstractAccountAuthenticator.startUpdateCredentialsSession(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,String,android.os.Bundle)android.os.Bundle
android.accounts.AbstractAccountAuthenticator.finishSession(android.accounts.AccountAuthenticatorResponse,String,android.os.Bundle)android.os.Bundle
android.accounts.AbstractAccountAuthenticator.isCredentialsUpdateSuggested(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,String)android.os.Bundle
android.accounts.Account.equals(Object)boolean
android.accounts.Account.hashCode)int
android.accounts.Account.describeContents)int
android.accounts.Account.writeToParcel(android.os.Parcel,int)void
android.accounts.Account.toString)String
android.accounts.AccountAuthenticatorActivity.setAccountAuthenticatorResult(android.os.Bundle)void
android.accounts.AccountAuthenticatorActivity.onCreate(android.os.Bundle)void
android.accounts.AccountAuthenticatorActivity.finish)void
android.accounts.AccountAuthenticatorResponse.onResult(Bundle)void
android.accounts.AccountAuthenticatorResponse.onRequestContinued)void
android.accounts.AccountAuthenticatorResponse.onError(int,String)void
android.accounts.AccountAuthenticatorResponse.describeContents)int
android.accounts.AccountAuthenticatorResponse.writeToParcel(Parcel,int)void
android.accounts.AccountManager.get(android.content.Context)android.accounts.AccountManager
android.accounts.AccountManager.getPassword(android.accounts.Account)String
android.accounts.AccountManager.getUserData(android.accounts.Account,String)String
android.accounts.AccountManager.hasFeatures(android.accounts.Account,String,android.accounts.AccountManagerCallback,android.os.Handler)android.accounts.AccountManagerFuture
android.accounts.AccountManager.getAccountsByTypeAndFeatures(String,String,android.accounts.AccountManagerCallback,android.os.Handler)android.accounts.AccountManagerFuture
android.accounts.AccountManager.addAccountExplicitly(android.accounts.Account,String,android.os.Bundle)boolean
android.accounts.AccountManager.addAccountExplicitly(android.accounts.Account,String,android.os.Bundle,Map)boolean
android.accounts.AccountManager.getPackagesAndVisibilityForAccount(android.accounts.Account)Map
android.accounts.AccountManager.getAccountsAndVisibilityForPackage(String,String)Map
android.accounts.AccountManager.setAccountVisibility(android.accounts.Account,String,int)boolean
android.accounts.AccountManager.getAccountVisibility(android.accounts.Account,String)int
android.accounts.AccountManager.notifyAccountAuthenticated(android.accounts.Account)boolean
android.accounts.AccountManager.renameAccount(android.accounts.Account,String,android.accounts.AccountManagerCallback,android.os.Handler)android.accounts.AccountManagerFuture
android.accounts.AccountManager.getPreviousName(android.accounts.Account)String
android.accounts.AccountManager.removeAccount(android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler)android.accounts.AccountManagerFuture
android.accounts.AccountManager.removeAccount(android.accounts.Account,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)android.accounts.AccountManagerFuture
android.accounts.AccountManager.removeAccountExplicitly(android.accounts.Account)boolean
android.accounts.AccountManager.invalidateAuthToken(String,String)void
android.accounts.AccountManager.peekAuthToken(android.accounts.Account,String)String
android.accounts.AccountManager.setPassword(android.accounts.Account,String)void
android.accounts.AccountManager.clearPassword(android.accounts.Account)void
android.accounts.AccountManager.setUserData(android.accounts.Account,String,String)void
android.accounts.AccountManager.setAuthToken(android.accounts.Account,String,String)void
android.accounts.AccountManager.blockingGetAuthToken(android.accounts.Account,String,boolean)String
android.accounts.AccountManager.getAuthToken(android.accounts.Account,String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)android.accounts.AccountManagerFuture
android.accounts.AccountManager.getAuthToken(android.accounts.Account,String,boolean,android.accounts.AccountManagerCallback,android.os.Handler)android.accounts.AccountManagerFuture
android.accounts.AccountManager.getAuthToken(android.accounts.Account,String,android.os.Bundle,boolean,android.accounts.AccountManagerCallback,android.os.Handler)android.accounts.AccountManagerFuture
android.accounts.AccountManager.addAccount(String,String,String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)android.accounts.AccountManagerFuture
android.accounts.AccountManager.confirmCredentials(android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)android.accounts.AccountManagerFuture
android.accounts.AccountManager.updateCredentials(android.accounts.Account,String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)android.accounts.AccountManagerFuture
android.accounts.AccountManager.editProperties(String,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)android.accounts.AccountManagerFuture
android.accounts.AccountManager.newChooseAccountIntent(android.accounts.Account,ArrayList,String,boolean,String,String,String,android.os.Bundle)android.content.Intent
android.accounts.AccountManager.newChooseAccountIntent(android.accounts.Account,List,String,String,String,String,android.os.Bundle)android.content.Intent
android.accounts.AccountManager.addOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener,android.os.Handler,boolean)void
android.accounts.AccountManager.addOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener,android.os.Handler,boolean,String)void
android.accounts.AccountManager.removeOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener)void
android.accounts.AccountManager.startAddAccountSession(String,String,String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)android.accounts.AccountManagerFuture
android.accounts.AccountManager.startUpdateCredentialsSession(android.accounts.Account,String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)android.accounts.AccountManagerFuture
android.accounts.AccountManager.finishSession(android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)android.accounts.AccountManagerFuture
android.accounts.AccountManager.isCredentialsUpdateSuggested(android.accounts.Account,String,android.accounts.AccountManagerCallback,android.os.Handler)android.accounts.AccountManagerFuture
android.accounts.AccountManagerFuture.getResult)Object
android.accounts.AccountManagerFuture.getResult(long,java.util.concurrent.TimeUnit)Object
android.accounts.AuthenticatorDescription.newKey(String)android.accounts.AuthenticatorDescription
android.accounts.AuthenticatorDescription.describeContents)int
android.accounts.AuthenticatorDescription.hashCode)int
android.accounts.AuthenticatorDescription.equals(Object)boolean
android.accounts.AuthenticatorDescription.toString)String
android.accounts.AuthenticatorDescription.writeToParcel(android.os.Parcel,int)void
android.animation.Animator.onAnimationStart(android.animation.Animator,boolean)void
android.animation.Animator.onAnimationEnd(android.animation.Animator,boolean)void
android.animation.Animator.start)void
android.animation.Animator.cancel)void
android.animation.Animator.end)void
android.animation.Animator.pause)void
android.animation.Animator.resume)void
android.animation.Animator.isPaused)boolean
android.animation.Animator.getTotalDuration)long
android.animation.Animator.getInterpolator)android.animation.TimeInterpolator
android.animation.Animator.isStarted)boolean
android.animation.Animator.addListener(android.animation.Animator.AnimatorListener)void
android.animation.Animator.removeListener(android.animation.Animator.AnimatorListener)void
android.animation.Animator.getListeners)java.util.ArrayList
android.animation.Animator.addPauseListener(android.animation.Animator.AnimatorPauseListener)void
android.animation.Animator.removePauseListener(android.animation.Animator.AnimatorPauseListener)void
android.animation.Animator.removeAllListeners)void
android.animation.Animator.clone)android.animation.Animator
android.animation.Animator.setupStartValues)void
android.animation.Animator.setupEndValues)void
android.animation.Animator.setTarget(Object)void
android.animation.AnimatorInflater.loadAnimator(android.content.Context,int)android.animation.Animator
android.animation.AnimatorInflater.loadStateListAnimator(android.content.Context,int)android.animation.StateListAnimator
android.animation.AnimatorListenerAdapter.onAnimationCancel(android.animation.Animator)void
android.animation.AnimatorListenerAdapter.onAnimationEnd(android.animation.Animator)void
android.animation.AnimatorListenerAdapter.onAnimationRepeat(android.animation.Animator)void
android.animation.AnimatorListenerAdapter.onAnimationStart(android.animation.Animator)void
android.animation.AnimatorListenerAdapter.onAnimationPause(android.animation.Animator)void
android.animation.AnimatorListenerAdapter.onAnimationResume(android.animation.Animator)void
android.animation.AnimatorSet.with(android.animation.Animator)android.animation.AnimatorSet.Builder
android.animation.AnimatorSet.before(android.animation.Animator)android.animation.AnimatorSet.Builder
android.animation.AnimatorSet.after(android.animation.Animator)android.animation.AnimatorSet.Builder
android.animation.AnimatorSet.after(long)android.animation.AnimatorSet.Builder
android.animation.AnimatorSet.playTogether(Collection)void
android.animation.AnimatorSet.playSequentially(List)void
android.animation.AnimatorSet.getChildAnimations)ArrayList
android.animation.AnimatorSet.setTarget(Object)void
android.animation.AnimatorSet.setInterpolator(android.animation.TimeInterpolator)void
android.animation.AnimatorSet.getInterpolator)android.animation.TimeInterpolator
android.animation.AnimatorSet.play(android.animation.Animator)android.animation.AnimatorSet.Builder
android.animation.AnimatorSet.cancel)void
android.animation.AnimatorSet.end)void
android.animation.AnimatorSet.isRunning)boolean
android.animation.AnimatorSet.isStarted)boolean
android.animation.AnimatorSet.getStartDelay)long
android.animation.AnimatorSet.setStartDelay(long)void
android.animation.AnimatorSet.getDuration)long
android.animation.AnimatorSet.setDuration(long)android.animation.AnimatorSet
android.animation.AnimatorSet.setupStartValues)void
android.animation.AnimatorSet.setupEndValues)void
android.animation.AnimatorSet.pause)void
android.animation.AnimatorSet.resume)void
android.animation.AnimatorSet.start)void
android.animation.AnimatorSet.setCurrentPlayTime(long)void
android.animation.AnimatorSet.getCurrentPlayTime)long
android.animation.AnimatorSet.clone)android.animation.AnimatorSet
android.animation.AnimatorSet.reverse)void
android.animation.AnimatorSet.toString)String
android.animation.AnimatorSet.getTotalDuration)long
android.animation.ArgbEvaluator.evaluate(float,Object,Object)Object
android.animation.BidirectionalTypeConverter.invert)android.animation.BidirectionalTypeConverter
android.animation.FloatEvaluator.evaluate(float,Number,Number)Float
android.animation.IntEvaluator.evaluate(float,Integer,Integer)Integer
android.animation.Keyframe.ofInt(float,int)android.animation.Keyframe
android.animation.Keyframe.ofInt(float)android.animation.Keyframe
android.animation.Keyframe.ofFloat(float,float)android.animation.Keyframe
android.animation.Keyframe.ofFloat(float)android.animation.Keyframe
android.animation.Keyframe.ofObject(float,Object)android.animation.Keyframe
android.animation.Keyframe.ofObject(float)android.animation.Keyframe
android.animation.Keyframe.hasValue)boolean
android.animation.Keyframe.getFraction)float
android.animation.Keyframe.setFraction(float)void
android.animation.Keyframe.getInterpolator)android.animation.TimeInterpolator
android.animation.Keyframe.setInterpolator(android.animation.TimeInterpolator)void
android.animation.Keyframe.getType)Class
android.animation.LayoutTransition.setDuration(long)void
android.animation.LayoutTransition.enableTransitionType(int)void
android.animation.LayoutTransition.disableTransitionType(int)void
android.animation.LayoutTransition.isTransitionTypeEnabled(int)boolean
android.animation.LayoutTransition.setStartDelay(int,long)void
android.animation.LayoutTransition.getStartDelay(int)long
android.animation.LayoutTransition.setDuration(int,long)void
android.animation.LayoutTransition.getDuration(int)long
android.animation.LayoutTransition.setStagger(int,long)void
android.animation.LayoutTransition.getStagger(int)long
android.animation.LayoutTransition.setInterpolator(int,android.animation.TimeInterpolator)void
android.animation.LayoutTransition.getInterpolator(int)android.animation.TimeInterpolator
android.animation.LayoutTransition.setAnimator(int,android.animation.Animator)void
android.animation.LayoutTransition.getAnimator(int)android.animation.Animator
android.animation.LayoutTransition.setAnimateParentHierarchy(boolean)void
android.animation.LayoutTransition.isChangingLayout)boolean
android.animation.LayoutTransition.isRunning)boolean
android.animation.LayoutTransition.addChild(android.view.ViewGroup,android.view.View)void
android.animation.LayoutTransition.showChild(android.view.ViewGroup,android.view.View)void
android.animation.LayoutTransition.showChild(android.view.ViewGroup,android.view.View,int)void
android.animation.LayoutTransition.removeChild(android.view.ViewGroup,android.view.View)void
android.animation.LayoutTransition.hideChild(android.view.ViewGroup,android.view.View)void
android.animation.LayoutTransition.hideChild(android.view.ViewGroup,android.view.View,int)void
android.animation.LayoutTransition.addTransitionListener(android.animation.LayoutTransition.TransitionListener)void
android.animation.LayoutTransition.removeTransitionListener(android.animation.LayoutTransition.TransitionListener)void
android.animation.LayoutTransition.getTransitionListeners)java.util.List
android.animation.ObjectAnimator.setPropertyName(String)void
android.animation.ObjectAnimator.setProperty(android.util.Property)void
android.animation.ObjectAnimator.getPropertyName)String
android.animation.ObjectAnimator.ofInt(Object,String,String,android.graphics.Path)android.animation.ObjectAnimator
android.animation.ObjectAnimator.ofInt(Object,android.util.Property,android.util.Property,android.graphics.Path)android.animation.ObjectAnimator
android.animation.ObjectAnimator.ofMultiInt(Object,String,int)android.animation.ObjectAnimator
android.animation.ObjectAnimator.ofMultiInt(Object,String,android.graphics.Path)android.animation.ObjectAnimator
android.animation.ObjectAnimator.ofFloat(Object,String,String,android.graphics.Path)android.animation.ObjectAnimator
android.animation.ObjectAnimator.ofFloat(Object,android.util.Property,android.util.Property,android.graphics.Path)android.animation.ObjectAnimator
android.animation.ObjectAnimator.ofMultiFloat(Object,String,float)android.animation.ObjectAnimator
android.animation.ObjectAnimator.ofMultiFloat(Object,String,android.graphics.Path)android.animation.ObjectAnimator
android.animation.ObjectAnimator.ofObject(Object,String,android.animation.TypeConverter,android.graphics.Path)android.animation.ObjectAnimator
android.animation.ObjectAnimator.ofObject(Object,android.util.Property,android.animation.TypeConverter,android.graphics.Path)android.animation.ObjectAnimator
android.animation.ObjectAnimator.setAutoCancel(boolean)void
android.animation.ObjectAnimator.start)void
android.animation.ObjectAnimator.setDuration(long)android.animation.ObjectAnimator
android.animation.ObjectAnimator.getTarget)Object
android.animation.ObjectAnimator.setTarget(Object)void
android.animation.ObjectAnimator.setupStartValues)void
android.animation.ObjectAnimator.setupEndValues)void
android.animation.ObjectAnimator.clone)android.animation.ObjectAnimator
android.animation.ObjectAnimator.toString)String
android.animation.PointFEvaluator.evaluate(float,android.graphics.PointF,android.graphics.PointF)android.graphics.PointF
android.animation.PropertyValuesHolder.ofMultiInt(String,int)android.animation.PropertyValuesHolder
android.animation.PropertyValuesHolder.ofMultiInt(String,android.graphics.Path)android.animation.PropertyValuesHolder
android.animation.PropertyValuesHolder.ofMultiFloat(String,float)android.animation.PropertyValuesHolder
android.animation.PropertyValuesHolder.ofMultiFloat(String,android.graphics.Path)android.animation.PropertyValuesHolder
android.animation.PropertyValuesHolder.ofObject(String,android.animation.TypeConverter,android.graphics.Path)android.animation.PropertyValuesHolder
android.animation.PropertyValuesHolder.ofObject(android.util.Property,android.animation.TypeConverter,android.graphics.Path)android.animation.PropertyValuesHolder
android.animation.PropertyValuesHolder.setConverter(android.animation.TypeConverter)void
android.animation.PropertyValuesHolder.clone)android.animation.PropertyValuesHolder
android.animation.PropertyValuesHolder.setEvaluator(android.animation.TypeEvaluator)void
android.animation.PropertyValuesHolder.setPropertyName(String)void
android.animation.PropertyValuesHolder.setProperty(android.util.Property)void
android.animation.PropertyValuesHolder.getPropertyName)String
android.animation.PropertyValuesHolder.toString)String
android.animation.RectEvaluator.evaluate(float,android.graphics.Rect,android.graphics.Rect)android.graphics.Rect
android.animation.StateListAnimator.addState(int,android.animation.Animator)void
android.animation.StateListAnimator.clone)android.animation.StateListAnimator
android.animation.StateListAnimator.jumpToCurrentState)void
android.animation.TimeAnimator.start)void
android.animation.TimeAnimator.setCurrentPlayTime(long)void
android.animation.TimeAnimator.setTimeListener(android.animation.TimeAnimator.TimeListener)void
android.animation.ValueAnimator.areAnimatorsEnabled)boolean
android.animation.ValueAnimator.setDuration(long)android.animation.ValueAnimator
android.animation.ValueAnimator.getDuration)long
android.animation.ValueAnimator.getTotalDuration)long
android.animation.ValueAnimator.setCurrentPlayTime(long)void
android.animation.ValueAnimator.setCurrentFraction(float)void
android.animation.ValueAnimator.getCurrentPlayTime)long
android.animation.ValueAnimator.getStartDelay)long
android.animation.ValueAnimator.setStartDelay(long)void
android.animation.ValueAnimator.getFrameDelay)long
android.animation.ValueAnimator.setFrameDelay(long)void
android.animation.ValueAnimator.getAnimatedValue)Object
android.animation.ValueAnimator.getAnimatedValue(String)Object
android.animation.ValueAnimator.setRepeatCount(int)void
android.animation.ValueAnimator.getRepeatCount)int
android.animation.ValueAnimator.setRepeatMode(int)void
android.animation.ValueAnimator.getRepeatMode)int
android.animation.ValueAnimator.addUpdateListener(android.animation.ValueAnimator.AnimatorUpdateListener)void
android.animation.ValueAnimator.removeAllUpdateListeners)void
android.animation.ValueAnimator.removeUpdateListener(android.animation.ValueAnimator.AnimatorUpdateListener)void
android.animation.ValueAnimator.setInterpolator(android.animation.TimeInterpolator)void
android.animation.ValueAnimator.getInterpolator)android.animation.TimeInterpolator
android.animation.ValueAnimator.setEvaluator(android.animation.TypeEvaluator)void
android.animation.ValueAnimator.start)void
android.animation.ValueAnimator.cancel)void
android.animation.ValueAnimator.end)void
android.animation.ValueAnimator.resume)void
android.animation.ValueAnimator.pause)void
android.animation.ValueAnimator.isRunning)boolean
android.animation.ValueAnimator.isStarted)boolean
android.animation.ValueAnimator.reverse)void
android.animation.ValueAnimator.getAnimatedFraction)float
android.animation.ValueAnimator.clone)android.animation.ValueAnimator
android.animation.ValueAnimator.toString)String
android.app.ActionBar.setStackedBackgroundDrawable(android.graphics.drawable.Drawable)void
android.app.ActionBar.setSplitBackgroundDrawable(android.graphics.drawable.Drawable)void
android.app.ActionBar.setHomeButtonEnabled(boolean)void
android.app.ActionBar.getThemedContext)android.content.Context
android.app.ActionBar.setHomeAsUpIndicator(android.graphics.drawable.Drawable)void
android.app.ActionBar.setHomeAsUpIndicator(int)void
android.app.ActionBar.setHomeActionContentDescription(CharSequence)void
android.app.ActionBar.setHomeActionContentDescription(int)void
android.app.ActionBar.setHideOnContentScrollEnabled(boolean)void
android.app.ActionBar.isHideOnContentScrollEnabled)boolean
android.app.ActionBar.getHideOffset)int
android.app.ActionBar.setHideOffset(int)void
android.app.ActionBar.setElevation(float)void
android.app.ActionBar.getElevation)float
android.app.Activity.getIntent)Intent
android.app.Activity.setIntent(Intent)void
android.app.Activity.getApplication)android.app.Application
android.app.Activity.isChild)boolean
android.app.Activity.getParent)android.app.Activity
android.app.Activity.getWindowManager)WindowManager
android.app.Activity.getWindow)Window
android.app.Activity.getLoaderManager)android.app.LoaderManager
android.app.Activity.getCurrentFocus)View
android.app.Activity.attachBaseContext(Context)void
android.app.Activity.registerActivityLifecycleCallbacks(Application.ActivityLifecycleCallbacks)void
android.app.Activity.unregisterActivityLifecycleCallbacks(Application.ActivityLifecycleCallbacks)void
android.app.Activity.onCreate(Bundle)void
android.app.Activity.onCreate(Bundle,PersistableBundle)void
android.app.Activity.onRestoreInstanceState(Bundle)void
android.app.Activity.onRestoreInstanceState(Bundle,PersistableBundle)void
android.app.Activity.onPostCreate(Bundle)void
android.app.Activity.onPostCreate(Bundle,PersistableBundle)void
android.app.Activity.onStart)void
android.app.Activity.onRestart)void
android.app.Activity.onStateNotSaved)void
android.app.Activity.onResume)void
android.app.Activity.onPostResume)void
android.app.Activity.onTopResumedActivityChanged(boolean)void
android.app.Activity.isVoiceInteraction)boolean
android.app.Activity.isVoiceInteractionRoot)boolean
android.app.Activity.getVoiceInteractor)android.app.VoiceInteractor
android.app.Activity.isLocalVoiceInteractionSupported)boolean
android.app.Activity.startLocalVoiceInteraction(Bundle)void
android.app.Activity.onLocalVoiceInteractionStarted)void
android.app.Activity.onLocalVoiceInteractionStopped)void
android.app.Activity.stopLocalVoiceInteraction)void
android.app.Activity.onNewIntent(Intent)void
android.app.Activity.onSaveInstanceState(Bundle)void
android.app.Activity.onSaveInstanceState(Bundle,PersistableBundle)void
android.app.Activity.onPause)void
android.app.Activity.onUserLeaveHint)void
android.app.Activity.onCreateThumbnail(android.graphics.Bitmap,android.graphics.Canvas)boolean
android.app.Activity.onCreateDescription)CharSequence
android.app.Activity.onProvideAssistData(Bundle)void
android.app.Activity.onProvideAssistContent(android.app.assist.AssistContent)void
android.app.Activity.onGetDirectActions(CancellationSignal,java.util.function.Consumer)void
android.app.Activity.onPerformDirectAction(String,Bundle,CancellationSignal,java.util.function.Consumer)void
android.app.Activity.requestShowKeyboardShortcuts)void
android.app.Activity.dismissKeyboardShortcutsHelper)void
android.app.Activity.onProvideKeyboardShortcuts(java.util.List,Menu,int)void
android.app.Activity.showAssist(Bundle)boolean
android.app.Activity.onStop)void
android.app.Activity.onDestroy)void
android.app.Activity.reportFullyDrawn)void
android.app.Activity.onMultiWindowModeChanged(boolean,android.content.res.Configuration)void
android.app.Activity.onMultiWindowModeChanged(boolean)void
android.app.Activity.isInMultiWindowMode)boolean
android.app.Activity.onPictureInPictureModeChanged(boolean,android.content.res.Configuration)void
android.app.Activity.onPictureInPictureModeChanged(boolean)void
android.app.Activity.isInPictureInPictureMode)boolean
android.app.Activity.enterPictureInPictureMode)void
android.app.Activity.enterPictureInPictureMode(android.app.PictureInPictureParams)boolean
android.app.Activity.setPictureInPictureParams(android.app.PictureInPictureParams)void
android.app.Activity.getMaxNumPictureInPictureActions)int
android.app.Activity.onConfigurationChanged(android.content.res.Configuration)void
android.app.Activity.getChangingConfigurations)int
android.app.Activity.getLastNonConfigurationInstance)Object
android.app.Activity.onRetainNonConfigurationInstance)Object
android.app.Activity.onLowMemory)void
android.app.Activity.onTrimMemory(int)void
android.app.Activity.getFragmentManager)android.app.FragmentManager
android.app.Activity.onAttachFragment(android.app.Fragment)void
android.app.Activity.managedQuery(android.net.Uri,String,String,String,String)android.database.Cursor
android.app.Activity.startManagingCursor(android.database.Cursor)void
android.app.Activity.stopManagingCursor(android.database.Cursor)void
android.app.Activity.findViewById(int)View
android.app.Activity.requireViewById(int)View
android.app.Activity.getActionBar)android.app.ActionBar
android.app.Activity.setActionBar(android.widget.Toolbar)void
android.app.Activity.setContentView(int)void
android.app.Activity.setContentView(View)void
android.app.Activity.setContentView(View,android.view.ViewGroup.LayoutParams)void
android.app.Activity.addContentView(View,android.view.ViewGroup.LayoutParams)void
android.app.Activity.getContentTransitionManager)android.transition.TransitionManager
android.app.Activity.setContentTransitionManager(android.transition.TransitionManager)void
android.app.Activity.getContentScene)android.transition.Scene
android.app.Activity.setFinishOnTouchOutside(boolean)void
android.app.Activity.setDefaultKeyMode(int)void
android.app.Activity.onKeyDown(int,KeyEvent)boolean
android.app.Activity.onKeyLongPress(int,KeyEvent)boolean
android.app.Activity.onKeyUp(int,KeyEvent)boolean
android.app.Activity.onKeyMultiple(int,int,KeyEvent)boolean
android.app.Activity.onBackPressed)void
android.app.Activity.onKeyShortcut(int,KeyEvent)boolean
android.app.Activity.onTouchEvent(MotionEvent)boolean
android.app.Activity.onTrackballEvent(MotionEvent)boolean
android.app.Activity.onGenericMotionEvent(MotionEvent)boolean
android.app.Activity.onUserInteraction)void
android.app.Activity.onWindowAttributesChanged(android.view.WindowManager.LayoutParams)void
android.app.Activity.onContentChanged)void
android.app.Activity.onWindowFocusChanged(boolean)void
android.app.Activity.onAttachedToWindow)void
android.app.Activity.onDetachedFromWindow)void
android.app.Activity.hasWindowFocus)boolean
android.app.Activity.dispatchKeyEvent(KeyEvent)boolean
android.app.Activity.dispatchKeyShortcutEvent(KeyEvent)boolean
android.app.Activity.dispatchTouchEvent(MotionEvent)boolean
android.app.Activity.dispatchTrackballEvent(MotionEvent)boolean
android.app.Activity.dispatchGenericMotionEvent(MotionEvent)boolean
android.app.Activity.dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)boolean
android.app.Activity.onCreatePanelView(int)View
android.app.Activity.onCreatePanelMenu(int,Menu)boolean
android.app.Activity.onPreparePanel(int,View,Menu)boolean
android.app.Activity.onMenuOpened(int,Menu)boolean
android.app.Activity.onMenuItemSelected(int,MenuItem)boolean
android.app.Activity.onPanelClosed(int,Menu)void
android.app.Activity.invalidateOptionsMenu)void
android.app.Activity.onCreateOptionsMenu(Menu)boolean
android.app.Activity.onPrepareOptionsMenu(Menu)boolean
android.app.Activity.onOptionsItemSelected(MenuItem)boolean
android.app.Activity.onNavigateUp)boolean
android.app.Activity.onNavigateUpFromChild(android.app.Activity)boolean
android.app.Activity.onCreateNavigateUpTaskStack(android.app.TaskStackBuilder)void
android.app.Activity.onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder)void
android.app.Activity.onOptionsMenuClosed(Menu)void
android.app.Activity.openOptionsMenu)void
android.app.Activity.closeOptionsMenu)void
android.app.Activity.onCreateContextMenu(ContextMenu,View,android.view.ContextMenu.ContextMenuInfo)void
android.app.Activity.registerForContextMenu(View)void
android.app.Activity.unregisterForContextMenu(View)void
android.app.Activity.openContextMenu(View)void
android.app.Activity.closeContextMenu)void
android.app.Activity.onContextItemSelected(MenuItem)boolean
android.app.Activity.onContextMenuClosed(Menu)void
android.app.Activity.onCreateDialog(int)android.app.Dialog
android.app.Activity.onCreateDialog(int,Bundle)android.app.Dialog
android.app.Activity.onPrepareDialog(int,android.app.Dialog)void
android.app.Activity.onPrepareDialog(int,android.app.Dialog,Bundle)void
android.app.Activity.showDialog(int)void
android.app.Activity.showDialog(int,Bundle)boolean
android.app.Activity.dismissDialog(int)void
android.app.Activity.removeDialog(int)void
android.app.Activity.onSearchRequested(SearchEvent)boolean
android.app.Activity.onSearchRequested)boolean
android.app.Activity.getSearchEvent)SearchEvent
android.app.Activity.startSearch(String,boolean,Bundle,boolean)void
android.app.Activity.triggerSearch(String,Bundle)void
android.app.Activity.takeKeyEvents(boolean)void
android.app.Activity.requestWindowFeature(int)boolean
android.app.Activity.setFeatureDrawableResource(int,int)void
android.app.Activity.setFeatureDrawableUri(int,android.net.Uri)void
android.app.Activity.setFeatureDrawable(int,android.graphics.drawable.Drawable)void
android.app.Activity.setFeatureDrawableAlpha(int,int)void
android.app.Activity.getLayoutInflater)LayoutInflater
android.app.Activity.getMenuInflater)MenuInflater
android.app.Activity.setTheme(int)void
android.app.Activity.onApplyThemeResource(android.content.res.Resources.Theme,int,boolean)void
android.app.Activity.requestPermissions(String,int)void
android.app.Activity.onRequestPermissionsResult(int,String,int)void
android.app.Activity.shouldShowRequestPermissionRationale(String)boolean
android.app.Activity.startActivityForResult(Intent,int)void
android.app.Activity.startActivityForResult(Intent,int,Bundle)void
android.app.Activity.isActivityTransitionRunning)boolean
android.app.Activity.startIntentSenderForResult(IntentSender,int,Intent,int,int,int)void
android.app.Activity.startIntentSenderForResult(IntentSender,int,Intent,int,int,int,Bundle)void
android.app.Activity.startActivity(Intent)void
android.app.Activity.startActivity(Intent,Bundle)void
android.app.Activity.startActivities(Intent)void
android.app.Activity.startActivities(Intent,Bundle)void
android.app.Activity.startIntentSender(IntentSender,Intent,int,int,int)void
android.app.Activity.startIntentSender(IntentSender,Intent,int,int,int,Bundle)void
android.app.Activity.startActivityIfNeeded(Intent,int)boolean
android.app.Activity.startActivityIfNeeded(Intent,int,Bundle)boolean
android.app.Activity.startNextMatchingActivity(Intent)boolean
android.app.Activity.startNextMatchingActivity(Intent,Bundle)boolean
android.app.Activity.startActivityFromChild(android.app.Activity,Intent,int)void
android.app.Activity.startActivityFromChild(android.app.Activity,Intent,int,Bundle)void
android.app.Activity.startActivityFromFragment(android.app.Fragment,Intent,int)void
android.app.Activity.startActivityFromFragment(android.app.Fragment,Intent,int,Bundle)void
android.app.Activity.startIntentSenderFromChild(android.app.Activity,IntentSender,int,Intent,int,int,int)void
android.app.Activity.overridePendingTransition(int,int)void
android.app.Activity.setResult(int)void
android.app.Activity.setResult(int,Intent)void
android.app.Activity.getReferrer)android.net.Uri
android.app.Activity.onProvideReferrer)android.net.Uri
android.app.Activity.getCallingPackage)String
android.app.Activity.getCallingActivity)ComponentName
android.app.Activity.setVisible(boolean)void
android.app.Activity.isFinishing)boolean
android.app.Activity.isDestroyed)boolean
android.app.Activity.isChangingConfigurations)boolean
android.app.Activity.recreate)void
android.app.Activity.finish)void
android.app.Activity.finishAffinity)void
android.app.Activity.finishFromChild(android.app.Activity)void
android.app.Activity.finishAfterTransition)void
android.app.Activity.finishActivity(int)void
android.app.Activity.finishActivityFromChild(android.app.Activity,int)void
android.app.Activity.finishAndRemoveTask)void
android.app.Activity.releaseInstance)boolean
android.app.Activity.onActivityResult(int,int,Intent)void
android.app.Activity.onActivityReenter(int,Intent)void
android.app.Activity.createPendingResult(int,Intent,int)android.app.PendingIntent
android.app.Activity.setRequestedOrientation(int)void
android.app.Activity.getRequestedOrientation)int
android.app.Activity.getTaskId)int
android.app.Activity.isTaskRoot)boolean
android.app.Activity.moveTaskToBack(boolean)boolean
android.app.Activity.getLocalClassName)String
android.app.Activity.getComponentName)ComponentName
android.app.Activity.getPreferences(int)SharedPreferences
android.app.Activity.getSystemService(String)Object
android.app.Activity.setTitle(CharSequence)void
android.app.Activity.setTitle(int)void
android.app.Activity.setTitleColor(int)void
android.app.Activity.getTitle)CharSequence
android.app.Activity.getTitleColor)int
android.app.Activity.onTitleChanged(CharSequence,int)void
android.app.Activity.onChildTitleChanged(android.app.Activity,CharSequence)void
android.app.Activity.setTaskDescription(ActivityManager.TaskDescription)void
android.app.Activity.setProgressBarVisibility(boolean)void
android.app.Activity.setProgressBarIndeterminateVisibility(boolean)void
android.app.Activity.setProgressBarIndeterminate(boolean)void
android.app.Activity.setProgress(int)void
android.app.Activity.setSecondaryProgress(int)void
android.app.Activity.setVolumeControlStream(int)void
android.app.Activity.getVolumeControlStream)int
android.app.Activity.setMediaController(android.media.session.MediaController)void
android.app.Activity.getMediaController)android.media.session.MediaController
android.app.Activity.runOnUiThread(Runnable)void
android.app.Activity.onCreateView(String,Context,android.util.AttributeSet)View
android.app.Activity.onCreateView(View,String,Context,android.util.AttributeSet)View
android.app.Activity.dump(String,java.io.FileDescriptor,java.io.PrintWriter,String)void
android.app.Activity.isImmersive)boolean
android.app.Activity.requestVisibleBehind(boolean)boolean
android.app.Activity.onVisibleBehindCanceled)void
android.app.Activity.onEnterAnimationComplete)void
android.app.Activity.setImmersive(boolean)void
android.app.Activity.setVrModeEnabled(boolean,ComponentName)void
android.app.Activity.startActionMode(android.view.ActionMode.Callback)ActionMode
android.app.Activity.startActionMode(android.view.ActionMode.Callback,int)ActionMode
android.app.Activity.onWindowStartingActionMode(android.view.ActionMode.Callback)ActionMode
android.app.Activity.onWindowStartingActionMode(android.view.ActionMode.Callback,int)ActionMode
android.app.Activity.onActionModeStarted(ActionMode)void
android.app.Activity.onActionModeFinished(ActionMode)void
android.app.Activity.shouldUpRecreateTask(Intent)boolean
android.app.Activity.navigateUpTo(Intent)boolean
android.app.Activity.navigateUpToFromChild(android.app.Activity,Intent)boolean
android.app.Activity.getParentActivityIntent)Intent
android.app.Activity.setEnterSharedElementCallback(android.app.SharedElementCallback)void
android.app.Activity.setExitSharedElementCallback(android.app.SharedElementCallback)void
android.app.Activity.postponeEnterTransition)void
android.app.Activity.startPostponedEnterTransition)void
android.app.Activity.requestDragAndDropPermissions(DragEvent)DragAndDropPermissions
android.app.Activity.startLockTask)void
android.app.Activity.stopLockTask)void
android.app.Activity.showLockTaskEscapeMessage)void
android.app.Activity.setShowWhenLocked(boolean)void
android.app.Activity.setInheritShowWhenLocked(boolean)void
android.app.Activity.setTurnScreenOn(boolean)void
android.app.ActivityGroup.onCreate(android.os.Bundle)void
android.app.ActivityGroup.onResume)void
android.app.ActivityGroup.onSaveInstanceState(android.os.Bundle)void
android.app.ActivityGroup.onPause)void
android.app.ActivityGroup.onStop)void
android.app.ActivityGroup.onDestroy)void
android.app.ActivityGroup.getCurrentActivity)android.app.Activity
android.app.ActivityGroup.getLocalActivityManager)android.app.LocalActivityManager
android.app.ActivityManager.getLabel)String
android.app.ActivityManager.getIcon)android.graphics.Bitmap
android.app.ActivityManager.getPrimaryColor)int
android.app.ActivityManager.describeContents)int
android.app.ActivityManager.writeToParcel(Parcel,int)void
android.app.ActivityManager.readFromParcel(Parcel)void
android.app.ActivityManager.toString)String
android.app.ActivityManager.describeContents)int
android.app.ActivityManager.readFromParcel(Parcel)void
android.app.ActivityManager.writeToParcel(Parcel,int)void
android.app.ActivityManager.describeContents)int
android.app.ActivityManager.writeToParcel(Parcel,int)void
android.app.ActivityManager.readFromParcel(Parcel)void
android.app.ActivityManager.describeContents)int
android.app.ActivityManager.writeToParcel(Parcel,int)void
android.app.ActivityManager.readFromParcel(Parcel)void
android.app.ActivityManager.describeContents)int
android.app.ActivityManager.readFromParcel(Parcel)void
android.app.ActivityManager.writeToParcel(Parcel,int)void
android.app.ActivityManager.describeContents)int
android.app.ActivityManager.writeToParcel(Parcel,int)void
android.app.ActivityManager.readFromParcel(Parcel)void
android.app.ActivityManager.describeContents)int
android.app.ActivityManager.writeToParcel(Parcel,int)void
android.app.ActivityManager.readFromParcel(Parcel)void
android.app.ActivityManager.finishAndRemoveTask)void
android.app.ActivityManager.getTaskInfo)android.app.ActivityManager.RecentTaskInfo
android.app.ActivityManager.moveToFront)void
android.app.ActivityManager.startActivity(Context,Intent,Bundle)void
android.app.ActivityManager.setExcludeFromRecents(boolean)void
android.app.ActivityManager.getMemoryClass)int
android.app.ActivityManager.getLargeMemoryClass)int
android.app.ActivityManager.isLowRamDevice)boolean
android.app.ActivityManager.getRecentTasks(int,int)java.util.List
android.app.ActivityManager.getAppTasks)java.util.List
android.app.ActivityManager.getAppTaskThumbnailSize)android.util.Size
android.app.ActivityManager.addAppTask(android.app.Activity,Intent,android.app.ActivityManager.TaskDescription,android.graphics.Bitmap)int
android.app.ActivityManager.getRunningTasks(int)java.util.List
android.app.ActivityManager.moveTaskToFront(int,int)void
android.app.ActivityManager.moveTaskToFront(int,int,Bundle)void
android.app.ActivityManager.isActivityStartAllowedOnDisplay(Context,int,Intent)boolean
android.app.ActivityManager.getRunningServices(int)java.util.List
android.app.ActivityManager.getRunningServiceControlPanel(ComponentName)android.app.PendingIntent
android.app.ActivityManager.getMemoryInfo(android.app.ActivityManager.MemoryInfo)void
android.app.ActivityManager.clearApplicationUserData)boolean
android.app.ActivityManager.getProcessesInErrorState)java.util.List
android.app.ActivityManager.isBackgroundRestricted)boolean
android.app.ActivityManager.getRunningAppProcesses)java.util.List
android.app.ActivityManager.getMyMemoryState(android.app.ActivityManager.RunningAppProcessInfo)void
android.app.ActivityManager.restartPackage(String)void
android.app.ActivityManager.killBackgroundProcesses(String)void
android.app.ActivityManager.getDeviceConfigurationInfo)android.content.pm.ConfigurationInfo
android.app.ActivityManager.getLauncherLargeIconDensity)int
android.app.ActivityManager.getLauncherLargeIconSize)int
android.app.ActivityManager.isUserAMonkey)boolean
android.app.ActivityManager.isRunningInTestHarness)boolean
android.app.ActivityManager.isRunningInUserTestHarness)boolean
android.app.ActivityManager.dumpPackageState(java.io.FileDescriptor,String)void
android.app.ActivityManager.setWatchHeapLimit(long)void
android.app.ActivityManager.clearWatchHeapLimit)void
android.app.ActivityManager.isInLockTaskMode)boolean
android.app.ActivityManager.getLockTaskModeState)int
android.app.ActivityManager.setVrThread(int)void
android.app.ActivityOptions.makeCustomAnimation(android.content.Context,int,int)android.app.ActivityOptions
android.app.ActivityOptions.makeScaleUpAnimation(android.view.View,int,int,int,int)android.app.ActivityOptions
android.app.ActivityOptions.makeClipRevealAnimation(android.view.View,int,int,int,int)android.app.ActivityOptions
android.app.ActivityOptions.makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int)android.app.ActivityOptions
android.app.ActivityOptions.makeSceneTransitionAnimation(android.app.Activity,android.view.View,String)android.app.ActivityOptions
android.app.ActivityOptions.makeTaskLaunchBehind)android.app.ActivityOptions
android.app.ActivityOptions.makeBasic)android.app.ActivityOptions
android.app.ActivityOptions.setLaunchBounds(android.graphics.Rect)android.app.ActivityOptions
android.app.ActivityOptions.getLaunchBounds)android.graphics.Rect
android.app.ActivityOptions.getLockTaskMode)boolean
android.app.ActivityOptions.setLockTaskEnabled(boolean)android.app.ActivityOptions
android.app.ActivityOptions.getLaunchDisplayId)int
android.app.ActivityOptions.setLaunchDisplayId(int)android.app.ActivityOptions
android.app.ActivityOptions.update(android.app.ActivityOptions)void
android.app.ActivityOptions.toBundle)android.os.Bundle
android.app.ActivityOptions.requestUsageTimeReport(android.app.PendingIntent)void
android.app.ActivityOptions.setAppVerificationBundle(android.os.Bundle)android.app.ActivityOptions
android.app.ActivityOptions.toString)String
android.app.AlarmManager.getTriggerTime)long
android.app.AlarmManager.getShowIntent)android.app.PendingIntent
android.app.AlarmManager.describeContents)int
android.app.AlarmManager.writeToParcel(Parcel,int)void
android.app.AlarmManager.set(int,long,android.app.PendingIntent)void
android.app.AlarmManager.set(int,long,String,android.app.AlarmManager.OnAlarmListener,Handler)void
android.app.AlarmManager.setRepeating(int,long,long,android.app.PendingIntent)void
android.app.AlarmManager.setWindow(int,long,long,android.app.PendingIntent)void
android.app.AlarmManager.setExact(int,long,android.app.PendingIntent)void
android.app.AlarmManager.setExact(int,long,String,android.app.AlarmManager.OnAlarmListener,Handler)void
android.app.AlarmManager.setAlarmClock(AlarmClockInfo,android.app.PendingIntent)void
android.app.AlarmManager.setInexactRepeating(int,long,long,android.app.PendingIntent)void
android.app.AlarmManager.setAndAllowWhileIdle(int,long,android.app.PendingIntent)void
android.app.AlarmManager.setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)void
android.app.AlarmManager.cancel(android.app.PendingIntent)void
android.app.AlarmManager.cancel(android.app.AlarmManager.OnAlarmListener)void
android.app.AlarmManager.setTime(long)void
android.app.AlarmManager.setTimeZone(String)void
android.app.AlarmManager.getNextAlarmClock)AlarmClockInfo
android.app.AlertDialog.getContext)android.content.Context
android.app.AlertDialog.setTitle(int)android.app.AlertDialog.Builder
android.app.AlertDialog.setTitle(CharSequence)android.app.AlertDialog.Builder
android.app.AlertDialog.setCustomTitle(android.view.View)android.app.AlertDialog.Builder
android.app.AlertDialog.setMessage(int)android.app.AlertDialog.Builder
android.app.AlertDialog.setMessage(CharSequence)android.app.AlertDialog.Builder
android.app.AlertDialog.setIcon(int)android.app.AlertDialog.Builder
android.app.AlertDialog.setIcon(android.graphics.drawable.Drawable)android.app.AlertDialog.Builder
android.app.AlertDialog.setIconAttribute(int)android.app.AlertDialog.Builder
android.app.AlertDialog.setPositiveButton(int,android.content.DialogInterface.OnClickListener)android.app.AlertDialog.Builder
android.app.AlertDialog.setPositiveButton(CharSequence,android.content.DialogInterface.OnClickListener)android.app.AlertDialog.Builder
android.app.AlertDialog.setNegativeButton(int,android.content.DialogInterface.OnClickListener)android.app.AlertDialog.Builder
android.app.AlertDialog.setNegativeButton(CharSequence,android.content.DialogInterface.OnClickListener)android.app.AlertDialog.Builder
android.app.AlertDialog.setNeutralButton(int,android.content.DialogInterface.OnClickListener)android.app.AlertDialog.Builder
android.app.AlertDialog.setNeutralButton(CharSequence,android.content.DialogInterface.OnClickListener)android.app.AlertDialog.Builder
android.app.AlertDialog.setCancelable(boolean)android.app.AlertDialog.Builder
android.app.AlertDialog.setOnCancelListener(android.content.DialogInterface.OnCancelListener)android.app.AlertDialog.Builder
android.app.AlertDialog.setOnDismissListener(android.content.DialogInterface.OnDismissListener)android.app.AlertDialog.Builder
android.app.AlertDialog.setOnKeyListener(android.content.DialogInterface.OnKeyListener)android.app.AlertDialog.Builder
android.app.AlertDialog.setItems(int,android.content.DialogInterface.OnClickListener)android.app.AlertDialog.Builder
android.app.AlertDialog.setItems(CharSequence,android.content.DialogInterface.OnClickListener)android.app.AlertDialog.Builder
android.app.AlertDialog.setAdapter(ListAdapter,android.content.DialogInterface.OnClickListener)android.app.AlertDialog.Builder
android.app.AlertDialog.setCursor(android.database.Cursor,android.content.DialogInterface.OnClickListener,String)android.app.AlertDialog.Builder
android.app.AlertDialog.setMultiChoiceItems(int,boolean,android.content.DialogInterface.OnMultiChoiceClickListener)android.app.AlertDialog.Builder
android.app.AlertDialog.setMultiChoiceItems(CharSequence,boolean,android.content.DialogInterface.OnMultiChoiceClickListener)android.app.AlertDialog.Builder
android.app.AlertDialog.setMultiChoiceItems(android.database.Cursor,String,String,android.content.DialogInterface.OnMultiChoiceClickListener)android.app.AlertDialog.Builder
android.app.AlertDialog.setSingleChoiceItems(int,int,android.content.DialogInterface.OnClickListener)android.app.AlertDialog.Builder
android.app.AlertDialog.setSingleChoiceItems(android.database.Cursor,int,String,android.content.DialogInterface.OnClickListener)android.app.AlertDialog.Builder
android.app.AlertDialog.setSingleChoiceItems(CharSequence,int,android.content.DialogInterface.OnClickListener)android.app.AlertDialog.Builder
android.app.AlertDialog.setSingleChoiceItems(ListAdapter,int,android.content.DialogInterface.OnClickListener)android.app.AlertDialog.Builder
android.app.AlertDialog.setOnItemSelectedListener(android.widget.AdapterView.OnItemSelectedListener)android.app.AlertDialog.Builder
android.app.AlertDialog.setView(int)android.app.AlertDialog.Builder
android.app.AlertDialog.setView(android.view.View)android.app.AlertDialog.Builder
android.app.AlertDialog.setInverseBackgroundForced(boolean)android.app.AlertDialog.Builder
android.app.AlertDialog.create)android.app.AlertDialog
android.app.AlertDialog.show)android.app.AlertDialog
android.app.AlertDialog.getButton(int)Button
android.app.AlertDialog.getListView)ListView
android.app.AlertDialog.setTitle(CharSequence)void
android.app.AlertDialog.setCustomTitle(android.view.View)void
android.app.AlertDialog.setMessage(CharSequence)void
android.app.AlertDialog.setView(android.view.View)void
android.app.AlertDialog.setView(android.view.View,int,int,int,int)void
android.app.AlertDialog.setButton(int,CharSequence,android.os.Message)void
android.app.AlertDialog.setButton(int,CharSequence,android.content.DialogInterface.OnClickListener)void
android.app.AlertDialog.setButton(CharSequence,android.os.Message)void
android.app.AlertDialog.setButton2(CharSequence,android.os.Message)void
android.app.AlertDialog.setButton3(CharSequence,android.os.Message)void
android.app.AlertDialog.setButton(CharSequence,android.content.DialogInterface.OnClickListener)void
android.app.AlertDialog.setButton2(CharSequence,android.content.DialogInterface.OnClickListener)void
android.app.AlertDialog.setButton3(CharSequence,android.content.DialogInterface.OnClickListener)void
android.app.AlertDialog.setIcon(int)void
android.app.AlertDialog.setIcon(android.graphics.drawable.Drawable)void
android.app.AlertDialog.setIconAttribute(int)void
android.app.AlertDialog.setInverseBackgroundForced(boolean)void
android.app.AlertDialog.onCreate(android.os.Bundle)void
android.app.AlertDialog.onKeyDown(int,android.view.KeyEvent)boolean
android.app.AlertDialog.onKeyUp(int,android.view.KeyEvent)boolean
android.app.AliasActivity.onCreate(android.os.Bundle)void
android.app.AppComponentFactory.instantiateClassLoader(ClassLoader,android.content.pm.ApplicationInfo)ClassLoader
android.app.AppComponentFactory.instantiateApplication(ClassLoader,String)android.app.Application
android.app.AppComponentFactory.instantiateActivity(ClassLoader,String,Intent)android.app.Activity
android.app.AppComponentFactory.instantiateReceiver(ClassLoader,String,Intent)BroadcastReceiver
android.app.AppComponentFactory.instantiateService(ClassLoader,String,Intent)android.app.Service
android.app.AppComponentFactory.instantiateProvider(ClassLoader,String)ContentProvider
android.app.Application.onActivityPreCreated(android.app.Activity,android.os.Bundle)void
android.app.Application.onActivityPostCreated(android.app.Activity,android.os.Bundle)void
android.app.Application.onActivityPreStarted(android.app.Activity)void
android.app.Application.onActivityPostStarted(android.app.Activity)void
android.app.Application.onActivityPreResumed(android.app.Activity)void
android.app.Application.onActivityPostResumed(android.app.Activity)void
android.app.Application.onActivityPrePaused(android.app.Activity)void
android.app.Application.onActivityPostPaused(android.app.Activity)void
android.app.Application.onActivityPreStopped(android.app.Activity)void
android.app.Application.onActivityPostStopped(android.app.Activity)void
android.app.Application.onActivityPreSaveInstanceState(android.app.Activity,android.os.Bundle)void
android.app.Application.onActivityPostSaveInstanceState(android.app.Activity,android.os.Bundle)void
android.app.Application.onActivityPreDestroyed(android.app.Activity)void
android.app.Application.onActivityPostDestroyed(android.app.Activity)void
android.app.Application.onCreate)void
android.app.Application.onTerminate)void
android.app.Application.onConfigurationChanged(android.content.res.Configuration)void
android.app.Application.onLowMemory)void
android.app.Application.onTrimMemory(int)void
android.app.Application.registerComponentCallbacks(ComponentCallbacks)void
android.app.Application.unregisterComponentCallbacks(ComponentCallbacks)void
android.app.Application.registerActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)void
android.app.Application.unregisterActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)void
android.app.Application.registerOnProvideAssistDataListener(android.app.Application.OnProvideAssistDataListener)void
android.app.Application.unregisterOnProvideAssistDataListener(android.app.Application.OnProvideAssistDataListener)void
android.app.Application.getProcessName)String
android.app.ApplicationErrorReport.writeToParcel(android.os.Parcel,int)void
android.app.ApplicationErrorReport.dump(android.util.Printer,String)void
android.app.ApplicationErrorReport.writeToParcel(android.os.Parcel,int)void
android.app.ApplicationErrorReport.dump(android.util.Printer,String)void
android.app.ApplicationErrorReport.writeToParcel(android.os.Parcel,int)void
android.app.ApplicationErrorReport.dump(android.util.Printer,String)void
android.app.ApplicationErrorReport.writeToParcel(android.os.Parcel,int)void
android.app.ApplicationErrorReport.dump(android.util.Printer,String)void
android.app.ApplicationErrorReport.getErrorReportReceiver(android.content.Context,String,int)android.content.ComponentName
android.app.ApplicationErrorReport.writeToParcel(android.os.Parcel,int)void
android.app.ApplicationErrorReport.readFromParcel(android.os.Parcel)void
android.app.ApplicationErrorReport.describeContents)int
android.app.ApplicationErrorReport.dump(android.util.Printer,String)void
android.app.AppOpsManager.permissionToOp(String)String
android.app.AppOpsManager.startWatchingMode(String,String,android.app.AppOpsManager.OnOpChangedListener)void
android.app.AppOpsManager.startWatchingMode(String,String,int,android.app.AppOpsManager.OnOpChangedListener)void
android.app.AppOpsManager.stopWatchingMode(android.app.AppOpsManager.OnOpChangedListener)void
android.app.AppOpsManager.unsafeCheckOp(String,int,String)int
android.app.AppOpsManager.checkOp(String,int,String)int
android.app.AppOpsManager.unsafeCheckOpNoThrow(String,int,String)int
android.app.AppOpsManager.checkOpNoThrow(String,int,String)int
android.app.AppOpsManager.unsafeCheckOpRaw(String,int,String)int
android.app.AppOpsManager.unsafeCheckOpRawNoThrow(String,int,String)int
android.app.AppOpsManager.noteOp(String,int,String)int
android.app.AppOpsManager.noteOpNoThrow(String,int,String)int
android.app.AppOpsManager.noteProxyOp(String,String)int
android.app.AppOpsManager.noteProxyOpNoThrow(String,String)int
android.app.AppOpsManager.noteProxyOpNoThrow(String,String,int)int
android.app.AppOpsManager.startOp(String,int,String)int
android.app.AppOpsManager.startOpNoThrow(String,int,String)int
android.app.AppOpsManager.finishOp(String,int,String)void
android.app.AppOpsManager.checkPackage(int,String)void
android.app.AuthenticationRequiredException.getUserAction)android.app.PendingIntent
android.app.AuthenticationRequiredException.describeContents)int
android.app.AuthenticationRequiredException.writeToParcel(android.os.Parcel,int)void
android.app.AutomaticZenRule.getOwner)android.content.ComponentName
android.app.AutomaticZenRule.getConfigurationActivity)android.content.ComponentName
android.app.AutomaticZenRule.getConditionId)android.net.Uri
android.app.AutomaticZenRule.getInterruptionFilter)int
android.app.AutomaticZenRule.getName)String
android.app.AutomaticZenRule.isEnabled)boolean
android.app.AutomaticZenRule.getZenPolicy)android.service.notification.ZenPolicy
android.app.AutomaticZenRule.getCreationTime)long
android.app.AutomaticZenRule.setConditionId(android.net.Uri)void
android.app.AutomaticZenRule.setInterruptionFilter(int)void
android.app.AutomaticZenRule.setName(String)void
android.app.AutomaticZenRule.setEnabled(boolean)void
android.app.AutomaticZenRule.setZenPolicy(android.service.notification.ZenPolicy)void
android.app.AutomaticZenRule.setConfigurationActivity(android.content.ComponentName)void
android.app.AutomaticZenRule.describeContents)int
android.app.AutomaticZenRule.writeToParcel(android.os.Parcel,int)void
android.app.AutomaticZenRule.toString)String
android.app.AutomaticZenRule.equals(Object)boolean
android.app.AutomaticZenRule.hashCode)int
android.app.DatePickerDialog.onDateChanged(android.widget.DatePicker,int,int,int)void
android.app.DatePickerDialog.setOnDateSetListener(android.app.DatePickerDialog.OnDateSetListener)void
android.app.DatePickerDialog.onClick(android.content.DialogInterface,int)void
android.app.DatePickerDialog.getDatePicker)android.widget.DatePicker
android.app.DatePickerDialog.updateDate(int,int,int)void
android.app.DatePickerDialog.onSaveInstanceState)android.os.Bundle
android.app.DatePickerDialog.onRestoreInstanceState(android.os.Bundle)void
android.app.Dialog.getContext)android.content.Context
android.app.Dialog.getActionBar)android.app.ActionBar
android.app.Dialog.setOwnerActivity(android.app.Activity)void
android.app.Dialog.getOwnerActivity)android.app.Activity
android.app.Dialog.isShowing)boolean
android.app.Dialog.create)void
android.app.Dialog.show)void
android.app.Dialog.hide)void
android.app.Dialog.dismiss)void
android.app.Dialog.onCreate(android.os.Bundle)void
android.app.Dialog.onStart)void
android.app.Dialog.onStop)void
android.app.Dialog.onSaveInstanceState)android.os.Bundle
android.app.Dialog.onRestoreInstanceState(android.os.Bundle)void
android.app.Dialog.getWindow)Window
android.app.Dialog.getCurrentFocus)View
android.app.Dialog.findViewById(int)View
android.app.Dialog.requireViewById(int)View
android.app.Dialog.setContentView(int)void
android.app.Dialog.setContentView(View)void
android.app.Dialog.setContentView(View,android.view.ViewGroup.LayoutParams)void
android.app.Dialog.addContentView(View,android.view.ViewGroup.LayoutParams)void
android.app.Dialog.setTitle(CharSequence)void
android.app.Dialog.setTitle(int)void
android.app.Dialog.onKeyDown(int,KeyEvent)boolean
android.app.Dialog.onKeyLongPress(int,KeyEvent)boolean
android.app.Dialog.onKeyUp(int,KeyEvent)boolean
android.app.Dialog.onKeyMultiple(int,int,KeyEvent)boolean
android.app.Dialog.onBackPressed)void
android.app.Dialog.onKeyShortcut(int,KeyEvent)boolean
android.app.Dialog.onTouchEvent(MotionEvent)boolean
android.app.Dialog.onTrackballEvent(MotionEvent)boolean
android.app.Dialog.onGenericMotionEvent(MotionEvent)boolean
android.app.Dialog.onWindowAttributesChanged(android.view.WindowManager.LayoutParams)void
android.app.Dialog.onContentChanged)void
android.app.Dialog.onWindowFocusChanged(boolean)void
android.app.Dialog.onAttachedToWindow)void
android.app.Dialog.onDetachedFromWindow)void
android.app.Dialog.dispatchKeyEvent(KeyEvent)boolean
android.app.Dialog.dispatchKeyShortcutEvent(KeyEvent)boolean
android.app.Dialog.dispatchTouchEvent(MotionEvent)boolean
android.app.Dialog.dispatchTrackballEvent(MotionEvent)boolean
android.app.Dialog.dispatchGenericMotionEvent(MotionEvent)boolean
android.app.Dialog.dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)boolean
android.app.Dialog.onCreatePanelView(int)View
android.app.Dialog.onCreatePanelMenu(int,Menu)boolean
android.app.Dialog.onPreparePanel(int,View,Menu)boolean
android.app.Dialog.onMenuOpened(int,Menu)boolean
android.app.Dialog.onMenuItemSelected(int,MenuItem)boolean
android.app.Dialog.onPanelClosed(int,Menu)void
android.app.Dialog.onCreateOptionsMenu(Menu)boolean
android.app.Dialog.onPrepareOptionsMenu(Menu)boolean
android.app.Dialog.onOptionsItemSelected(MenuItem)boolean
android.app.Dialog.onOptionsMenuClosed(Menu)void
android.app.Dialog.openOptionsMenu)void
android.app.Dialog.closeOptionsMenu)void
android.app.Dialog.invalidateOptionsMenu)void
android.app.Dialog.onCreateContextMenu(ContextMenu,View,android.view.ContextMenu.ContextMenuInfo)void
android.app.Dialog.registerForContextMenu(View)void
android.app.Dialog.unregisterForContextMenu(View)void
android.app.Dialog.openContextMenu(View)void
android.app.Dialog.onContextItemSelected(MenuItem)boolean
android.app.Dialog.onContextMenuClosed(Menu)void
android.app.Dialog.onSearchRequested(SearchEvent)boolean
android.app.Dialog.onSearchRequested)boolean
android.app.Dialog.getSearchEvent)SearchEvent
android.app.Dialog.onWindowStartingActionMode(android.view.ActionMode.Callback)ActionMode
android.app.Dialog.onWindowStartingActionMode(android.view.ActionMode.Callback,int)ActionMode
android.app.Dialog.onActionModeStarted(ActionMode)void
android.app.Dialog.onActionModeFinished(ActionMode)void
android.app.Dialog.takeKeyEvents(boolean)void
android.app.Dialog.requestWindowFeature(int)boolean
android.app.Dialog.setFeatureDrawableResource(int,int)void
android.app.Dialog.setFeatureDrawableUri(int,android.net.Uri)void
android.app.Dialog.setFeatureDrawable(int,android.graphics.drawable.Drawable)void
android.app.Dialog.setFeatureDrawableAlpha(int,int)void
android.app.Dialog.getLayoutInflater)LayoutInflater
android.app.Dialog.setCancelable(boolean)void
android.app.Dialog.setCanceledOnTouchOutside(boolean)void
android.app.Dialog.cancel)void
android.app.Dialog.setOnCancelListener(android.content.DialogInterface.OnCancelListener)void
android.app.Dialog.setCancelMessage(android.os.Message)void
android.app.Dialog.setOnDismissListener(android.content.DialogInterface.OnDismissListener)void
android.app.Dialog.setOnShowListener(android.content.DialogInterface.OnShowListener)void
android.app.Dialog.setDismissMessage(android.os.Message)void
android.app.Dialog.setVolumeControlStream(int)void
android.app.Dialog.getVolumeControlStream)int
android.app.Dialog.setOnKeyListener(android.content.DialogInterface.OnKeyListener)void
android.app.DialogFragment.setStyle(int,int)void
android.app.DialogFragment.show(android.app.FragmentManager,String)void
android.app.DialogFragment.show(android.app.FragmentTransaction,String)int
android.app.DialogFragment.dismiss)void
android.app.DialogFragment.dismissAllowingStateLoss)void
android.app.DialogFragment.getDialog)android.app.Dialog
android.app.DialogFragment.getTheme)int
android.app.DialogFragment.setCancelable(boolean)void
android.app.DialogFragment.isCancelable)boolean
android.app.DialogFragment.setShowsDialog(boolean)void
android.app.DialogFragment.getShowsDialog)boolean
android.app.DialogFragment.onAttach(android.content.Context)void
android.app.DialogFragment.onDetach)void
android.app.DialogFragment.onCreate(android.os.Bundle)void
android.app.DialogFragment.onGetLayoutInflater(android.os.Bundle)android.view.LayoutInflater
android.app.DialogFragment.onCreateDialog(android.os.Bundle)android.app.Dialog
android.app.DialogFragment.onCancel(android.content.DialogInterface)void
android.app.DialogFragment.onDismiss(android.content.DialogInterface)void
android.app.DialogFragment.onActivityCreated(android.os.Bundle)void
android.app.DialogFragment.onStart)void
android.app.DialogFragment.onSaveInstanceState(android.os.Bundle)void
android.app.DialogFragment.onStop)void
android.app.DialogFragment.onDestroyView)void
android.app.DialogFragment.dump(String,java.io.FileDescriptor,java.io.PrintWriter,String)void
android.app.DirectAction.setExtras(Bundle)Builder
android.app.DirectAction.setLocusId(android.content.LocusId)Builder
android.app.DirectAction.build)android.app.DirectAction
android.app.DirectAction.getId)String
android.app.DirectAction.getExtras)Bundle
android.app.DirectAction.getLocusId)android.content.LocusId
android.app.DirectAction.describeContents)int
android.app.DirectAction.hashCode)int
android.app.DirectAction.equals(Object)boolean
android.app.DirectAction.writeToParcel(Parcel,int)void
android.app.DownloadManager.setDestinationUri(android.net.Uri)android.app.DownloadManager.Request
android.app.DownloadManager.setDestinationInExternalFilesDir(android.content.Context,String,String)android.app.DownloadManager.Request
android.app.DownloadManager.setDestinationInExternalPublicDir(String,String)android.app.DownloadManager.Request
android.app.DownloadManager.allowScanningByMediaScanner)void
android.app.DownloadManager.addRequestHeader(String,String)android.app.DownloadManager.Request
android.app.DownloadManager.setTitle(CharSequence)android.app.DownloadManager.Request
android.app.DownloadManager.setDescription(CharSequence)android.app.DownloadManager.Request
android.app.DownloadManager.setMimeType(String)android.app.DownloadManager.Request
android.app.DownloadManager.setShowRunningNotification(boolean)android.app.DownloadManager.Request
android.app.DownloadManager.setNotificationVisibility(int)android.app.DownloadManager.Request
android.app.DownloadManager.setAllowedNetworkTypes(int)android.app.DownloadManager.Request
android.app.DownloadManager.setAllowedOverRoaming(boolean)android.app.DownloadManager.Request
android.app.DownloadManager.setAllowedOverMetered(boolean)android.app.DownloadManager.Request
android.app.DownloadManager.setRequiresCharging(boolean)android.app.DownloadManager.Request
android.app.DownloadManager.setRequiresDeviceIdle(boolean)android.app.DownloadManager.Request
android.app.DownloadManager.setVisibleInDownloadsUi(boolean)android.app.DownloadManager.Request
android.app.DownloadManager.setFilterByStatus(int)android.app.DownloadManager.Query
android.app.DownloadManager.enqueue(android.app.DownloadManager.Request)long
android.app.DownloadManager.query(android.app.DownloadManager.Query)android.database.Cursor
android.app.DownloadManager.openDownloadedFile(long)android.os.ParcelFileDescriptor
android.app.DownloadManager.getUriForDownloadedFile(long)android.net.Uri
android.app.DownloadManager.getMimeTypeForDownloadedFile(long)String
android.app.DownloadManager.getMaxBytesOverMobile(android.content.Context)Long
android.app.DownloadManager.getRecommendedMaxBytesOverMobile(android.content.Context)Long
android.app.ExpandableListActivity.onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu.ContextMenuInfo)void
android.app.ExpandableListActivity.onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long)boolean
android.app.ExpandableListActivity.onGroupCollapse(int)void
android.app.ExpandableListActivity.onGroupExpand(int)void
android.app.ExpandableListActivity.onRestoreInstanceState(android.os.Bundle)void
android.app.ExpandableListActivity.onContentChanged)void
android.app.ExpandableListActivity.setListAdapter(android.widget.ExpandableListAdapter)void
android.app.ExpandableListActivity.getExpandableListView)android.widget.ExpandableListView
android.app.ExpandableListActivity.getExpandableListAdapter)android.widget.ExpandableListAdapter
android.app.ExpandableListActivity.getSelectedId)long
android.app.ExpandableListActivity.getSelectedPosition)long
android.app.ExpandableListActivity.setSelectedChild(int,int,boolean)boolean
android.app.ExpandableListActivity.setSelectedGroup(int)void
android.app.Fragment.describeContents)int
android.app.Fragment.writeToParcel(Parcel,int)void
android.app.Fragment.instantiate(Context,String)android.app.Fragment
android.app.Fragment.instantiate(Context,String,Bundle)android.app.Fragment
android.app.Fragment.equals(Object)boolean
android.app.Fragment.hashCode)int
android.app.Fragment.toString)String
android.app.Fragment.getId)int
android.app.Fragment.getTag)String
android.app.Fragment.setArguments(Bundle)void
android.app.Fragment.getArguments)Bundle
android.app.Fragment.isStateSaved)boolean
android.app.Fragment.setInitialSavedState(android.app.Fragment.SavedState)void
android.app.Fragment.setTargetFragment(android.app.Fragment,int)void
android.app.Fragment.getTargetFragment)android.app.Fragment
android.app.Fragment.getTargetRequestCode)int
android.app.Fragment.getContext)Context
android.app.Fragment.getActivity)android.app.Activity
android.app.Fragment.getHost)Object
android.app.Fragment.getResources)android.content.res.Resources
android.app.Fragment.getText(int)CharSequence
android.app.Fragment.getString(int)String
android.app.Fragment.getFragmentManager)android.app.FragmentManager
android.app.Fragment.getChildFragmentManager)android.app.FragmentManager
android.app.Fragment.getParentFragment)android.app.Fragment
android.app.Fragment.isAdded)boolean
android.app.Fragment.isDetached)boolean
android.app.Fragment.isRemoving)boolean
android.app.Fragment.isInLayout)boolean
android.app.Fragment.isResumed)boolean
android.app.Fragment.isVisible)boolean
android.app.Fragment.isHidden)boolean
android.app.Fragment.onHiddenChanged(boolean)void
android.app.Fragment.setRetainInstance(boolean)void
android.app.Fragment.getRetainInstance)boolean
android.app.Fragment.setHasOptionsMenu(boolean)void
android.app.Fragment.setMenuVisibility(boolean)void
android.app.Fragment.setUserVisibleHint(boolean)void
android.app.Fragment.getUserVisibleHint)boolean
android.app.Fragment.getLoaderManager)android.app.LoaderManager
android.app.Fragment.startActivity(Intent)void
android.app.Fragment.startActivity(Intent,Bundle)void
android.app.Fragment.startActivityForResult(Intent,int)void
android.app.Fragment.startActivityForResult(Intent,int,Bundle)void
android.app.Fragment.startIntentSenderForResult(IntentSender,int,Intent,int,int,int,Bundle)void
android.app.Fragment.onActivityResult(int,int,Intent)void
android.app.Fragment.requestPermissions(String,int)void
android.app.Fragment.onRequestPermissionsResult(int,String,int)void
android.app.Fragment.shouldShowRequestPermissionRationale(String)boolean
android.app.Fragment.onGetLayoutInflater(Bundle)LayoutInflater
android.app.Fragment.getLayoutInflater)LayoutInflater
android.app.Fragment.onInflate(android.util.AttributeSet,Bundle)void
android.app.Fragment.onInflate(Context,android.util.AttributeSet,Bundle)void
android.app.Fragment.onInflate(android.app.Activity,android.util.AttributeSet,Bundle)void
android.app.Fragment.onAttachFragment(android.app.Fragment)void
android.app.Fragment.onAttach(Context)void
android.app.Fragment.onAttach(android.app.Activity)void
android.app.Fragment.onCreateAnimator(int,boolean,int)android.animation.Animator
android.app.Fragment.onCreate(Bundle)void
android.app.Fragment.onCreateView(LayoutInflater,ViewGroup,Bundle)View
android.app.Fragment.onViewCreated(View,Bundle)void
android.app.Fragment.getView)View
android.app.Fragment.onActivityCreated(Bundle)void
android.app.Fragment.onViewStateRestored(Bundle)void
android.app.Fragment.onStart)void
android.app.Fragment.onResume)void
android.app.Fragment.onSaveInstanceState(Bundle)void
android.app.Fragment.onMultiWindowModeChanged(boolean,android.content.res.Configuration)void
android.app.Fragment.onMultiWindowModeChanged(boolean)void
android.app.Fragment.onPictureInPictureModeChanged(boolean,android.content.res.Configuration)void
android.app.Fragment.onPictureInPictureModeChanged(boolean)void
android.app.Fragment.onConfigurationChanged(android.content.res.Configuration)void
android.app.Fragment.onPause)void
android.app.Fragment.onStop)void
android.app.Fragment.onLowMemory)void
android.app.Fragment.onTrimMemory(int)void
android.app.Fragment.onDestroyView)void
android.app.Fragment.onDestroy)void
android.app.Fragment.onDetach)void
android.app.Fragment.onCreateOptionsMenu(Menu,MenuInflater)void
android.app.Fragment.onPrepareOptionsMenu(Menu)void
android.app.Fragment.onDestroyOptionsMenu)void
android.app.Fragment.onOptionsItemSelected(MenuItem)boolean
android.app.Fragment.onOptionsMenuClosed(Menu)void
android.app.Fragment.onCreateContextMenu(ContextMenu,View,android.view.ContextMenu.ContextMenuInfo)void
android.app.Fragment.registerForContextMenu(View)void
android.app.Fragment.unregisterForContextMenu(View)void
android.app.Fragment.onContextItemSelected(MenuItem)boolean
android.app.Fragment.setEnterSharedElementCallback(android.app.SharedElementCallback)void
android.app.Fragment.setExitSharedElementCallback(android.app.SharedElementCallback)void
android.app.Fragment.setEnterTransition(android.transition.Transition)void
android.app.Fragment.getEnterTransition)android.transition.Transition
android.app.Fragment.setReturnTransition(android.transition.Transition)void
android.app.Fragment.getReturnTransition)android.transition.Transition
android.app.Fragment.setExitTransition(android.transition.Transition)void
android.app.Fragment.getExitTransition)android.transition.Transition
android.app.Fragment.setReenterTransition(android.transition.Transition)void
android.app.Fragment.getReenterTransition)android.transition.Transition
android.app.Fragment.setSharedElementEnterTransition(android.transition.Transition)void
android.app.Fragment.getSharedElementEnterTransition)android.transition.Transition
android.app.Fragment.setSharedElementReturnTransition(android.transition.Transition)void
android.app.Fragment.getSharedElementReturnTransition)android.transition.Transition
android.app.Fragment.setAllowEnterTransitionOverlap(boolean)void
android.app.Fragment.getAllowEnterTransitionOverlap)boolean
android.app.Fragment.setAllowReturnTransitionOverlap(boolean)void
android.app.Fragment.getAllowReturnTransitionOverlap)boolean
android.app.Fragment.postponeEnterTransition)void
android.app.Fragment.startPostponedEnterTransition)void
android.app.Fragment.dump(String,java.io.FileDescriptor,java.io.PrintWriter,String)void
android.app.FragmentBreadCrumbs.setActivity(android.app.Activity)void
android.app.FragmentBreadCrumbs.setMaxVisible(int)void
android.app.FragmentBreadCrumbs.setParentTitle(CharSequence,CharSequence,android.view.View.OnClickListener)void
android.app.FragmentBreadCrumbs.setOnBreadCrumbClickListener(android.app.FragmentBreadCrumbs.OnBreadCrumbClickListener)void
android.app.FragmentBreadCrumbs.setTitle(CharSequence,CharSequence)void
android.app.FragmentBreadCrumbs.onLayout(boolean,int,int,int,int)void
android.app.FragmentBreadCrumbs.onMeasure(int,int)void
android.app.FragmentBreadCrumbs.onBackStackChanged)void
android.app.FragmentController.createController(android.app.FragmentHostCallback)android.app.FragmentController
android.app.FragmentController.getFragmentManager)android.app.FragmentManager
android.app.FragmentController.getLoaderManager)android.app.LoaderManager
android.app.FragmentController.findFragmentByWho(String)android.app.Fragment
android.app.FragmentController.attachHost(android.app.Fragment)void
android.app.FragmentController.onCreateView(View,String,android.content.Context,android.util.AttributeSet)View
android.app.FragmentController.noteStateNotSaved)void
android.app.FragmentController.saveAllState)android.os.Parcelable
android.app.FragmentController.restoreAllState(android.os.Parcelable,java.util.List)void
android.app.FragmentController.restoreAllState(android.os.Parcelable,android.app.FragmentManagerNonConfig)void
android.app.FragmentController.retainNonConfig)java.util.List
android.app.FragmentController.retainNestedNonConfig)android.app.FragmentManagerNonConfig
android.app.FragmentController.dispatchCreate)void
android.app.FragmentController.dispatchActivityCreated)void
android.app.FragmentController.dispatchStart)void
android.app.FragmentController.dispatchResume)void
android.app.FragmentController.dispatchPause)void
android.app.FragmentController.dispatchStop)void
android.app.FragmentController.dispatchDestroyView)void
android.app.FragmentController.dispatchDestroy)void
android.app.FragmentController.dispatchMultiWindowModeChanged(boolean)void
android.app.FragmentController.dispatchMultiWindowModeChanged(boolean,android.content.res.Configuration)void
android.app.FragmentController.dispatchPictureInPictureModeChanged(boolean)void
android.app.FragmentController.dispatchPictureInPictureModeChanged(boolean,android.content.res.Configuration)void
android.app.FragmentController.dispatchConfigurationChanged(android.content.res.Configuration)void
android.app.FragmentController.dispatchLowMemory)void
android.app.FragmentController.dispatchTrimMemory(int)void
android.app.FragmentController.dispatchCreateOptionsMenu(Menu,MenuInflater)boolean
android.app.FragmentController.dispatchPrepareOptionsMenu(Menu)boolean
android.app.FragmentController.dispatchOptionsItemSelected(MenuItem)boolean
android.app.FragmentController.dispatchContextItemSelected(MenuItem)boolean
android.app.FragmentController.dispatchOptionsMenuClosed(Menu)void
android.app.FragmentController.execPendingActions)boolean
android.app.FragmentController.doLoaderStart)void
android.app.FragmentController.doLoaderStop(boolean)void
android.app.FragmentController.doLoaderDestroy)void
android.app.FragmentController.reportLoaderStart)void
android.app.FragmentController.retainLoaderNonConfig)android.util.ArrayMap
android.app.FragmentController.restoreLoaderNonConfig(android.util.ArrayMap)void
android.app.FragmentController.dumpLoaders(String,java.io.FileDescriptor,java.io.PrintWriter,String)void
android.app.FragmentHostCallback.onDump(String,java.io.FileDescriptor,java.io.PrintWriter,String)void
android.app.FragmentHostCallback.onShouldSaveFragmentState(android.app.Fragment)boolean
android.app.FragmentHostCallback.onGetLayoutInflater)android.view.LayoutInflater
android.app.FragmentHostCallback.onUseFragmentManagerInflaterFactory)boolean
android.app.FragmentHostCallback.onInvalidateOptionsMenu)void
android.app.FragmentHostCallback.onStartActivityFromFragment(android.app.Fragment,Intent,int,android.os.Bundle)void
android.app.FragmentHostCallback.onRequestPermissionsFromFragment(android.app.Fragment,String,int)void
android.app.FragmentHostCallback.onHasWindowAnimations)boolean
android.app.FragmentHostCallback.onGetWindowAnimations)int
android.app.FragmentHostCallback.onAttachFragment(android.app.Fragment)void
android.app.FragmentHostCallback.onFindViewById(int)android.view.View
android.app.FragmentHostCallback.onHasView)boolean
android.app.FragmentManager.onFragmentPreAttached(android.app.FragmentManager,android.app.Fragment,android.content.Context)void
android.app.FragmentManager.onFragmentAttached(android.app.FragmentManager,android.app.Fragment,android.content.Context)void
android.app.FragmentManager.onFragmentPreCreated(android.app.FragmentManager,android.app.Fragment,android.os.Bundle)void
android.app.FragmentManager.onFragmentCreated(android.app.FragmentManager,android.app.Fragment,android.os.Bundle)void
android.app.FragmentManager.onFragmentActivityCreated(android.app.FragmentManager,android.app.Fragment,android.os.Bundle)void
android.app.FragmentManager.onFragmentViewCreated(android.app.FragmentManager,android.app.Fragment,android.view.View,android.os.Bundle)void
android.app.FragmentManager.onFragmentStarted(android.app.FragmentManager,android.app.Fragment)void
android.app.FragmentManager.onFragmentResumed(android.app.FragmentManager,android.app.Fragment)void
android.app.FragmentManager.onFragmentPaused(android.app.FragmentManager,android.app.Fragment)void
android.app.FragmentManager.onFragmentStopped(android.app.FragmentManager,android.app.Fragment)void
android.app.FragmentManager.onFragmentSaveInstanceState(android.app.FragmentManager,android.app.Fragment,android.os.Bundle)void
android.app.FragmentManager.onFragmentViewDestroyed(android.app.FragmentManager,android.app.Fragment)void
android.app.FragmentManager.onFragmentDestroyed(android.app.FragmentManager,android.app.Fragment)void
android.app.FragmentManager.onFragmentDetached(android.app.FragmentManager,android.app.Fragment)void
android.app.FragmentManager.enableDebugLogging(boolean)void
android.app.FragmentManager.invalidateOptionsMenu)void
android.app.Instrumentation.getResultCode)int
android.app.Instrumentation.getResultData)Intent
android.app.Instrumentation.getFilter)IntentFilter
android.app.Instrumentation.getResult)ActivityResult
android.app.Instrumentation.isBlocking)boolean
android.app.Instrumentation.getHits)int
android.app.Instrumentation.getLastActivity)android.app.Activity
android.app.Instrumentation.waitForActivity)android.app.Activity
android.app.Instrumentation.waitForActivityWithTimeout(long)android.app.Activity
android.app.Instrumentation.onStartActivity(Intent)ActivityResult
android.app.Instrumentation.onCreate(Bundle)void
android.app.Instrumentation.start)void
android.app.Instrumentation.onStart)void
android.app.Instrumentation.onException(Object,Throwable)boolean
android.app.Instrumentation.sendStatus(int,Bundle)void
android.app.Instrumentation.addResults(Bundle)void
android.app.Instrumentation.finish(int,Bundle)void
android.app.Instrumentation.setAutomaticPerformanceSnapshots)void
android.app.Instrumentation.startPerformanceSnapshot)void
android.app.Instrumentation.endPerformanceSnapshot)void
android.app.Instrumentation.onDestroy)void
android.app.Instrumentation.getContext)Context
android.app.Instrumentation.getComponentName)ComponentName
android.app.Instrumentation.getTargetContext)Context
android.app.Instrumentation.getProcessName)String
android.app.Instrumentation.isProfiling)boolean
android.app.Instrumentation.startProfiling)void
android.app.Instrumentation.stopProfiling)void
android.app.Instrumentation.setInTouchMode(boolean)void
android.app.Instrumentation.waitForIdle(Runnable)void
android.app.Instrumentation.waitForIdleSync)void
android.app.Instrumentation.runOnMainSync(Runnable)void
android.app.Instrumentation.startActivitySync(Intent)android.app.Activity
android.app.Instrumentation.startActivitySync(Intent,Bundle)android.app.Activity
android.app.Instrumentation.addMonitor(android.app.Instrumentation.ActivityMonitor)void
android.app.Instrumentation.addMonitor(IntentFilter,ActivityResult,boolean)android.app.Instrumentation.ActivityMonitor
android.app.Instrumentation.addMonitor(String,ActivityResult,boolean)android.app.Instrumentation.ActivityMonitor
android.app.Instrumentation.checkMonitorHit(android.app.Instrumentation.ActivityMonitor,int)boolean
android.app.Instrumentation.waitForMonitor(android.app.Instrumentation.ActivityMonitor)android.app.Activity
android.app.Instrumentation.waitForMonitorWithTimeout(android.app.Instrumentation.ActivityMonitor,long)android.app.Activity
android.app.Instrumentation.removeMonitor(android.app.Instrumentation.ActivityMonitor)void
android.app.Instrumentation.invokeMenuActionSync(android.app.Activity,int,int)boolean
android.app.Instrumentation.invokeContextMenuAction(android.app.Activity,int,int)boolean
android.app.Instrumentation.sendStringSync(String)void
android.app.Instrumentation.sendKeySync(android.view.KeyEvent)void
android.app.Instrumentation.sendKeyDownUpSync(int)void
android.app.Instrumentation.sendCharacterSync(int)void
android.app.Instrumentation.sendPointerSync(android.view.MotionEvent)void
android.app.Instrumentation.sendTrackballEventSync(android.view.MotionEvent)void
android.app.Instrumentation.newApplication(ClassLoader,String,Context)android.app.Application
android.app.Instrumentation.newApplication(Class,Context)android.app.Application
android.app.Instrumentation.callApplicationOnCreate(android.app.Application)void
android.app.Instrumentation.newActivity(ClassLoader,String,Intent)android.app.Activity
android.app.Instrumentation.callActivityOnCreate(android.app.Activity,Bundle)void
android.app.Instrumentation.callActivityOnCreate(android.app.Activity,Bundle,PersistableBundle)void
android.app.Instrumentation.callActivityOnDestroy(android.app.Activity)void
android.app.Instrumentation.callActivityOnRestoreInstanceState(android.app.Activity,Bundle)void
android.app.Instrumentation.callActivityOnRestoreInstanceState(android.app.Activity,Bundle,PersistableBundle)void
android.app.Instrumentation.callActivityOnPostCreate(android.app.Activity,Bundle)void
android.app.Instrumentation.callActivityOnPostCreate(android.app.Activity,Bundle,PersistableBundle)void
android.app.Instrumentation.callActivityOnNewIntent(android.app.Activity,Intent)void
android.app.Instrumentation.callActivityOnStart(android.app.Activity)void
android.app.Instrumentation.callActivityOnRestart(android.app.Activity)void
android.app.Instrumentation.callActivityOnResume(android.app.Activity)void
android.app.Instrumentation.callActivityOnStop(android.app.Activity)void
android.app.Instrumentation.callActivityOnSaveInstanceState(android.app.Activity,Bundle)void
android.app.Instrumentation.callActivityOnSaveInstanceState(android.app.Activity,Bundle,PersistableBundle)void
android.app.Instrumentation.callActivityOnPause(android.app.Activity)void
android.app.Instrumentation.callActivityOnUserLeaving(android.app.Activity)void
android.app.Instrumentation.startAllocCounting)void
android.app.Instrumentation.stopAllocCounting)void
android.app.Instrumentation.getAllocCounts)Bundle
android.app.Instrumentation.getBinderCounts)Bundle
android.app.Instrumentation.getUiAutomation)android.app.UiAutomation
android.app.Instrumentation.getUiAutomation(int)android.app.UiAutomation
android.app.Instrumentation.acquireLooperManager(Looper)TestLooperManager
android.app.IntentService.setIntentRedelivery(boolean)void
android.app.IntentService.onCreate)void
android.app.IntentService.onStart(android.content.Intent,int)void
android.app.IntentService.onStartCommand(android.content.Intent,int,int)int
android.app.IntentService.onDestroy)void
android.app.IntentService.onBind(android.content.Intent)android.os.IBinder
android.app.KeyguardManager.disableKeyguard)void
android.app.KeyguardManager.reenableKeyguard)void
android.app.KeyguardManager.onDismissError)void
android.app.KeyguardManager.onDismissSucceeded)void
android.app.KeyguardManager.onDismissCancelled)void
android.app.KeyguardManager.createConfirmDeviceCredentialIntent(CharSequence,CharSequence)android.content.Intent
android.app.KeyguardManager.newKeyguardLock(String)android.app.KeyguardManager.KeyguardLock
android.app.KeyguardManager.isKeyguardLocked)boolean
android.app.KeyguardManager.isKeyguardSecure)boolean
android.app.KeyguardManager.inKeyguardRestrictedInputMode)boolean
android.app.KeyguardManager.isDeviceLocked)boolean
android.app.KeyguardManager.isDeviceSecure)boolean
android.app.KeyguardManager.requestDismissKeyguard(android.app.Activity,KeyguardDismissCallback)void
android.app.KeyguardManager.exitKeyguardSecurely(android.app.KeyguardManager.OnKeyguardExitResult)void
android.app.LauncherActivity.createIconThumbnail(android.graphics.drawable.Drawable)android.graphics.drawable.Drawable
android.app.LauncherActivity.onCreate(android.os.Bundle)void
android.app.LauncherActivity.setTitle(CharSequence)void
android.app.LauncherActivity.setTitle(int)void
android.app.LauncherActivity.onSetContentView)void
android.app.LauncherActivity.onListItemClick(android.widget.ListView,android.view.View,int,long)void
android.app.LauncherActivity.intentForPosition(int)android.content.Intent
android.app.LauncherActivity.itemForPosition(int)android.app.LauncherActivity.ListItem
android.app.LauncherActivity.getTargetIntent)android.content.Intent
android.app.LauncherActivity.onQueryPackageManager(android.content.Intent)java.util.List
android.app.LauncherActivity.makeListItems)java.util.List
android.app.ListActivity.onListItemClick(android.widget.ListView,android.view.View,int,long)void
android.app.ListActivity.onRestoreInstanceState(android.os.Bundle)void
android.app.ListActivity.onDestroy)void
android.app.ListActivity.onContentChanged)void
android.app.ListActivity.setListAdapter(android.widget.ListAdapter)void
android.app.ListActivity.setSelection(int)void
android.app.ListActivity.getSelectedItemPosition)int
android.app.ListActivity.getSelectedItemId)long
android.app.ListActivity.getListView)android.widget.ListView
android.app.ListActivity.getListAdapter)android.widget.ListAdapter
android.app.ListFragment.onCreateView(LayoutInflater,ViewGroup,android.os.Bundle)View
android.app.ListFragment.onViewCreated(View,android.os.Bundle)void
android.app.ListFragment.onDestroyView)void
android.app.ListFragment.onListItemClick(android.widget.ListView,View,int,long)void
android.app.ListFragment.setListAdapter(android.widget.ListAdapter)void
android.app.ListFragment.setSelection(int)void
android.app.ListFragment.getSelectedItemPosition)int
android.app.ListFragment.getSelectedItemId)long
android.app.ListFragment.getListView)android.widget.ListView
android.app.ListFragment.setEmptyText(CharSequence)void
android.app.ListFragment.setListShown(boolean)void
android.app.ListFragment.setListShownNoAnimation(boolean)void
android.app.ListFragment.getListAdapter)android.widget.ListAdapter
android.app.LoaderManager.enableDebugLogging(boolean)void
android.app.LocalActivityManager.startActivity(String,android.content.Intent)android.view.Window
android.app.LocalActivityManager.destroyActivity(String,boolean)android.view.Window
android.app.LocalActivityManager.getCurrentActivity)android.app.Activity
android.app.LocalActivityManager.getCurrentId)String
android.app.LocalActivityManager.getActivity(String)android.app.Activity
android.app.LocalActivityManager.dispatchCreate(android.os.Bundle)void
android.app.LocalActivityManager.saveInstanceState)android.os.Bundle
android.app.LocalActivityManager.dispatchResume)void
android.app.LocalActivityManager.dispatchPause(boolean)void
android.app.LocalActivityManager.dispatchStop)void
android.app.LocalActivityManager.removeAllActivities)void
android.app.LocalActivityManager.dispatchDestroy(boolean)void
android.app.MediaRouteActionProvider.setRouteTypes(int)void
android.app.MediaRouteActionProvider.setExtendedSettingsClickListener(android.view.View.OnClickListener)void
android.app.MediaRouteActionProvider.onCreateActionView)View
android.app.MediaRouteActionProvider.onCreateActionView(MenuItem)View
android.app.MediaRouteActionProvider.onPerformDefaultAction)boolean
android.app.MediaRouteActionProvider.overridesItemVisibility)boolean
android.app.MediaRouteActionProvider.isVisible)boolean
android.app.MediaRouteButton.getRouteTypes)int
android.app.MediaRouteButton.setRouteTypes(int)void
android.app.MediaRouteButton.setExtendedSettingsClickListener(android.view.View.OnClickListener)void
android.app.MediaRouteButton.showDialog)void
android.app.MediaRouteButton.setContentDescription(CharSequence)void
android.app.MediaRouteButton.performClick)boolean
android.app.MediaRouteButton.drawableStateChanged)void
android.app.MediaRouteButton.verifyDrawable(android.graphics.drawable.Drawable)boolean
android.app.MediaRouteButton.jumpDrawablesToCurrentState)void
android.app.MediaRouteButton.setVisibility(int)void
android.app.MediaRouteButton.onAttachedToWindow)void
android.app.MediaRouteButton.onDetachedFromWindow)void
android.app.MediaRouteButton.onMeasure(int,int)void
android.app.MediaRouteButton.onDraw(android.graphics.Canvas)void
android.app.NativeActivity.onCreate(android.os.Bundle)void
android.app.NativeActivity.onDestroy)void
android.app.NativeActivity.onPause)void
android.app.NativeActivity.onResume)void
android.app.NativeActivity.onSaveInstanceState(android.os.Bundle)void
android.app.NativeActivity.onStart)void
android.app.NativeActivity.onStop)void
android.app.NativeActivity.onConfigurationChanged(android.content.res.Configuration)void
android.app.NativeActivity.onLowMemory)void
android.app.NativeActivity.onWindowFocusChanged(boolean)void
android.app.NativeActivity.surfaceCreated(SurfaceHolder)void
android.app.NativeActivity.surfaceChanged(SurfaceHolder,int,int,int)void
android.app.NativeActivity.surfaceRedrawNeeded(SurfaceHolder)void
android.app.NativeActivity.surfaceDestroyed(SurfaceHolder)void
android.app.NativeActivity.onInputQueueCreated(InputQueue)void
android.app.NativeActivity.onInputQueueDestroyed(InputQueue)void
android.app.NativeActivity.onGlobalLayout)void
android.app.Notification.extend(android.app.Notification.Builder)android.app.Notification.Builder
android.app.Notification.clone)WearableExtender
android.app.Notification.addAction(android.app.Notification.Action)WearableExtender
android.app.Notification.addActions(java.util.List)WearableExtender
android.app.Notification.clearActions)WearableExtender
android.app.Notification.getActions)java.util.List
android.app.Notification.setDisplayIntent(android.app.PendingIntent)WearableExtender
android.app.Notification.getDisplayIntent)android.app.PendingIntent
android.app.Notification.addPage(android.app.Notification)WearableExtender
android.app.Notification.addPages(java.util.List)WearableExtender
android.app.Notification.clearPages)WearableExtender
android.app.Notification.getPages)java.util.List
android.app.Notification.setBackground(android.graphics.Bitmap)WearableExtender
android.app.Notification.getBackground)android.graphics.Bitmap
android.app.Notification.setContentIcon(int)WearableExtender
android.app.Notification.getContentIcon)int
android.app.Notification.setContentIconGravity(int)WearableExtender
android.app.Notification.getContentIconGravity)int
android.app.Notification.setContentAction(int)WearableExtender
android.app.Notification.getContentAction)int
android.app.Notification.setGravity(int)WearableExtender
android.app.Notification.getGravity)int
android.app.Notification.setCustomSizePreset(int)WearableExtender
android.app.Notification.getCustomSizePreset)int
android.app.Notification.setCustomContentHeight(int)WearableExtender
android.app.Notification.getCustomContentHeight)int
android.app.Notification.setStartScrollBottom(boolean)WearableExtender
android.app.Notification.getStartScrollBottom)boolean
android.app.Notification.setContentIntentAvailableOffline(boolean)WearableExtender
android.app.Notification.getContentIntentAvailableOffline)boolean
android.app.Notification.setHintHideIcon(boolean)WearableExtender
android.app.Notification.getHintHideIcon)boolean
android.app.Notification.setHintShowBackgroundOnly(boolean)WearableExtender
android.app.Notification.getHintShowBackgroundOnly)boolean
android.app.Notification.setHintAvoidBackgroundClipping(boolean)WearableExtender
android.app.Notification.getHintAvoidBackgroundClipping)boolean
android.app.Notification.setHintScreenTimeout(int)WearableExtender
android.app.Notification.getHintScreenTimeout)int
android.app.Notification.setHintAmbientBigPicture(boolean)WearableExtender
android.app.Notification.getHintAmbientBigPicture)boolean
android.app.Notification.setHintContentIntentLaunchesActivity(boolean)WearableExtender
android.app.Notification.getHintContentIntentLaunchesActivity)boolean
android.app.Notification.setDismissalId(String)WearableExtender
android.app.Notification.getDismissalId)String
android.app.Notification.setBridgeTag(String)WearableExtender
android.app.Notification.getBridgeTag)String
android.app.Notification.internalSetBigContentTitle(CharSequence)void
android.app.Notification.internalSetSummaryText(CharSequence)void
android.app.Notification.setBuilder(android.app.Notification.Builder)void
android.app.Notification.checkBuilder)void
android.app.Notification.getStandardView(int)android.widget.RemoteViews
android.app.Notification.build)android.app.Notification
android.app.Notification.setData(String,android.net.Uri)Message
android.app.Notification.getText)CharSequence
android.app.Notification.getTimestamp)long
android.app.Notification.getExtras)Bundle
android.app.Notification.getSender)CharSequence
android.app.Notification.getSenderPerson)android.app.Person
android.app.Notification.getDataMimeType)String
android.app.Notification.getDataUri)android.net.Uri
android.app.Notification.getUser)android.app.Person
android.app.Notification.getUserDisplayName)CharSequence
android.app.Notification.setConversationTitle(CharSequence)android.app.Notification.MessagingStyle
android.app.Notification.getConversationTitle)CharSequence
android.app.Notification.addMessage(CharSequence,long,CharSequence)android.app.Notification.MessagingStyle
android.app.Notification.addMessage(CharSequence,long,android.app.Person)android.app.Notification.MessagingStyle
android.app.Notification.addMessage(Message)android.app.Notification.MessagingStyle
android.app.Notification.addHistoricMessage(Message)android.app.Notification.MessagingStyle
android.app.Notification.getMessages)java.util.List
android.app.Notification.getHistoricMessages)java.util.List
android.app.Notification.setGroupConversation(boolean)android.app.Notification.MessagingStyle
android.app.Notification.isGroupConversation)boolean
android.app.Notification.setMediaSession(android.media.session.MediaSession.Token)android.app.Notification.MediaStyle
android.app.Notification.setBigContentTitle(CharSequence)android.app.Notification.InboxStyle
android.app.Notification.setSummaryText(CharSequence)android.app.Notification.InboxStyle
android.app.Notification.addLine(CharSequence)android.app.Notification.InboxStyle
android.app.Notification.getRemoteInput)android.app.RemoteInput
android.app.Notification.getReplyPendingIntent)android.app.PendingIntent
android.app.Notification.getReadPendingIntent)android.app.PendingIntent
android.app.Notification.getParticipant)String
android.app.Notification.getLatestTimestamp)long
android.app.Notification.addMessage(String)android.app.Notification.Builder
android.app.Notification.setReplyAction(android.app.PendingIntent,android.app.RemoteInput)android.app.Notification.Builder
android.app.Notification.setReadPendingIntent(android.app.PendingIntent)android.app.Notification.Builder
android.app.Notification.setLatestTimestamp(long)android.app.Notification.Builder
android.app.Notification.build)android.app.Notification.UnreadConversation
android.app.Notification.extend(android.app.Notification.Builder)android.app.Notification.Builder
android.app.Notification.setColor(int)CarExtender
android.app.Notification.getColor)int
android.app.Notification.setLargeIcon(android.graphics.Bitmap)CarExtender
android.app.Notification.getLargeIcon)android.graphics.Bitmap
android.app.Notification.setUnreadConversation(android.app.Notification.UnreadConversation)CarExtender
android.app.Notification.getUnreadConversation)android.app.Notification.UnreadConversation
android.app.Notification.setShortcutId(String)android.app.Notification.Builder
android.app.Notification.setLocusId(android.content.LocusId)android.app.Notification.Builder
android.app.Notification.setBadgeIconType(int)android.app.Notification.Builder
android.app.Notification.setGroupAlertBehavior(int)android.app.Notification.Builder
android.app.Notification.setBubbleMetadata(BubbleMetadata)android.app.Notification.Builder
android.app.Notification.setChannelId(String)android.app.Notification.Builder
android.app.Notification.setTimeoutAfter(long)android.app.Notification.Builder
android.app.Notification.setWhen(long)android.app.Notification.Builder
android.app.Notification.setShowWhen(boolean)android.app.Notification.Builder
android.app.Notification.setUsesChronometer(boolean)android.app.Notification.Builder
android.app.Notification.setChronometerCountDown(boolean)android.app.Notification.Builder
android.app.Notification.setSmallIcon(int)android.app.Notification.Builder
android.app.Notification.setSmallIcon(int,int)android.app.Notification.Builder
android.app.Notification.setSmallIcon(android.graphics.drawable.Icon)android.app.Notification.Builder
android.app.Notification.setContentTitle(CharSequence)android.app.Notification.Builder
android.app.Notification.setContentText(CharSequence)android.app.Notification.Builder
android.app.Notification.setSubText(CharSequence)android.app.Notification.Builder
android.app.Notification.setSettingsText(CharSequence)android.app.Notification.Builder
android.app.Notification.setRemoteInputHistory(CharSequence)android.app.Notification.Builder
android.app.Notification.setNumber(int)android.app.Notification.Builder
android.app.Notification.setContentInfo(CharSequence)android.app.Notification.Builder
android.app.Notification.setProgress(int,int,boolean)android.app.Notification.Builder
android.app.Notification.setContent(android.widget.RemoteViews)android.app.Notification.Builder
android.app.Notification.setCustomContentView(android.widget.RemoteViews)android.app.Notification.Builder
android.app.Notification.setCustomBigContentView(android.widget.RemoteViews)android.app.Notification.Builder
android.app.Notification.setCustomHeadsUpContentView(android.widget.RemoteViews)android.app.Notification.Builder
android.app.Notification.setContentIntent(android.app.PendingIntent)android.app.Notification.Builder
android.app.Notification.setDeleteIntent(android.app.PendingIntent)android.app.Notification.Builder
android.app.Notification.setFullScreenIntent(android.app.PendingIntent,boolean)android.app.Notification.Builder
android.app.Notification.setTicker(CharSequence)android.app.Notification.Builder
android.app.Notification.setTicker(CharSequence,android.widget.RemoteViews)android.app.Notification.Builder
android.app.Notification.setLargeIcon(android.graphics.Bitmap)android.app.Notification.Builder
android.app.Notification.setLargeIcon(android.graphics.drawable.Icon)android.app.Notification.Builder
android.app.Notification.setSound(android.net.Uri)android.app.Notification.Builder
android.app.Notification.setSound(android.net.Uri,int)android.app.Notification.Builder
android.app.Notification.setSound(android.net.Uri,android.media.AudioAttributes)android.app.Notification.Builder
android.app.Notification.setVibrate(long)android.app.Notification.Builder
android.app.Notification.setLights(int,int,int)android.app.Notification.Builder
android.app.Notification.setOngoing(boolean)android.app.Notification.Builder
android.app.Notification.setColorized(boolean)android.app.Notification.Builder
android.app.Notification.setOnlyAlertOnce(boolean)android.app.Notification.Builder
android.app.Notification.setAutoCancel(boolean)android.app.Notification.Builder
android.app.Notification.setLocalOnly(boolean)android.app.Notification.Builder
android.app.Notification.setDefaults(int)android.app.Notification.Builder
android.app.Notification.setPriority(int)android.app.Notification.Builder
android.app.Notification.setCategory(String)android.app.Notification.Builder
android.app.Notification.addPerson(String)android.app.Notification.Builder
android.app.Notification.addPerson(android.app.Person)android.app.Notification.Builder
android.app.Notification.setGroup(String)android.app.Notification.Builder
android.app.Notification.setGroupSummary(boolean)android.app.Notification.Builder
android.app.Notification.setSortKey(String)android.app.Notification.Builder
android.app.Notification.addExtras(Bundle)android.app.Notification.Builder
android.app.Notification.setExtras(Bundle)android.app.Notification.Builder
android.app.Notification.getExtras)Bundle
android.app.Notification.addAction(int,CharSequence,android.app.PendingIntent)android.app.Notification.Builder
android.app.Notification.addAction(android.app.Notification.Action)android.app.Notification.Builder
android.app.Notification.setStyle(Style)android.app.Notification.Builder
android.app.Notification.getStyle)Style
android.app.Notification.setVisibility(int)android.app.Notification.Builder
android.app.Notification.setPublicVersion(android.app.Notification)android.app.Notification.Builder
android.app.Notification.extend(android.app.Notification.Extender)android.app.Notification.Builder
android.app.Notification.setColor(int)android.app.Notification.Builder
android.app.Notification.createContentView)android.widget.RemoteViews
android.app.Notification.createBigContentView)android.widget.RemoteViews
android.app.Notification.createHeadsUpContentView)android.widget.RemoteViews
android.app.Notification.recoverBuilder(android.content.Context,android.app.Notification)android.app.Notification.Builder
android.app.Notification.setAllowSystemGeneratedContextualActions(boolean)android.app.Notification.Builder
android.app.Notification.getNotification)android.app.Notification
android.app.Notification.build)android.app.Notification
android.app.Notification.setIntent(android.app.PendingIntent)android.app.Notification.Builder
android.app.Notification.setIcon(android.graphics.drawable.Icon)android.app.Notification.Builder
android.app.Notification.setDesiredHeight(int)android.app.Notification.Builder
android.app.Notification.setDesiredHeightResId(int)android.app.Notification.Builder
android.app.Notification.setAutoExpandBubble(boolean)android.app.Notification.Builder
android.app.Notification.setSuppressNotification(boolean)android.app.Notification.Builder
android.app.Notification.setDeleteIntent(android.app.PendingIntent)android.app.Notification.Builder
android.app.Notification.build)BubbleMetadata
android.app.Notification.getIntent)android.app.PendingIntent
android.app.Notification.getDeleteIntent)android.app.PendingIntent
android.app.Notification.getIcon)android.graphics.drawable.Icon
android.app.Notification.getDesiredHeight)int
android.app.Notification.getDesiredHeightResId)int
android.app.Notification.getAutoExpandBubble)boolean
android.app.Notification.isNotificationSuppressed)boolean
android.app.Notification.describeContents)int
android.app.Notification.writeToParcel(Parcel,int)void
android.app.Notification.setBigContentTitle(CharSequence)android.app.Notification.BigTextStyle
android.app.Notification.setSummaryText(CharSequence)android.app.Notification.BigTextStyle
android.app.Notification.bigText(CharSequence)android.app.Notification.BigTextStyle
android.app.Notification.setBigContentTitle(CharSequence)android.app.Notification.BigPictureStyle
android.app.Notification.setSummaryText(CharSequence)android.app.Notification.BigPictureStyle
android.app.Notification.bigPicture(android.graphics.Bitmap)android.app.Notification.BigPictureStyle
android.app.Notification.bigLargeIcon(android.graphics.Bitmap)android.app.Notification.BigPictureStyle
android.app.Notification.bigLargeIcon(android.graphics.drawable.Icon)android.app.Notification.BigPictureStyle
android.app.Notification.extend(android.app.Notification.Builder)android.app.Notification.Builder
android.app.Notification.clone)WearableExtender
android.app.Notification.setAvailableOffline(boolean)WearableExtender
android.app.Notification.isAvailableOffline)boolean
android.app.Notification.setInProgressLabel(CharSequence)WearableExtender
android.app.Notification.getInProgressLabel)CharSequence
android.app.Notification.setConfirmLabel(CharSequence)WearableExtender
android.app.Notification.getConfirmLabel)CharSequence
android.app.Notification.setCancelLabel(CharSequence)WearableExtender
android.app.Notification.getCancelLabel)CharSequence
android.app.Notification.setHintLaunchesActivity(boolean)WearableExtender
android.app.Notification.getHintLaunchesActivity)boolean
android.app.Notification.setHintDisplayActionInline(boolean)WearableExtender
android.app.Notification.getHintDisplayActionInline)boolean
android.app.Notification.addExtras(Bundle)android.app.Notification.Builder
android.app.Notification.getExtras)Bundle
android.app.Notification.addRemoteInput(android.app.RemoteInput)android.app.Notification.Builder
android.app.Notification.setAllowGeneratedReplies(boolean)android.app.Notification.Builder
android.app.Notification.setSemanticAction(int)android.app.Notification.Builder
android.app.Notification.setContextual(boolean)android.app.Notification.Builder
android.app.Notification.extend(android.app.Notification.Extender)android.app.Notification.Builder
android.app.Notification.build)android.app.Notification.Action
android.app.Notification.getIcon)android.graphics.drawable.Icon
android.app.Notification.getExtras)Bundle
android.app.Notification.getAllowGeneratedReplies)boolean
android.app.Notification.getSemanticAction)int
android.app.Notification.isContextual)boolean
android.app.Notification.clone)android.app.Notification.Action
android.app.Notification.describeContents)int
android.app.Notification.writeToParcel(Parcel,int)void
android.app.Notification.getGroup)String
android.app.Notification.getSortKey)String
android.app.Notification.clone)android.app.Notification
android.app.Notification.describeContents)int
android.app.Notification.writeToParcel(Parcel,int)void
android.app.Notification.toString)String
android.app.Notification.getChannelId)String
android.app.Notification.getTimeoutAfter)long
android.app.Notification.getBadgeIconType)int
android.app.Notification.getShortcutId)String
android.app.Notification.getLocusId)android.content.LocusId
android.app.Notification.getSettingsText)CharSequence
android.app.Notification.getGroupAlertBehavior)int
android.app.Notification.getBubbleMetadata)BubbleMetadata
android.app.Notification.getAllowSystemGeneratedContextualActions)boolean
android.app.Notification.getSmallIcon)android.graphics.drawable.Icon
android.app.Notification.getLargeIcon)android.graphics.drawable.Icon
android.app.NotificationChannel.writeToParcel(android.os.Parcel,int)void
android.app.NotificationChannel.setName(CharSequence)void
android.app.NotificationChannel.setDescription(String)void
android.app.NotificationChannel.setGroup(String)void
android.app.NotificationChannel.setShowBadge(boolean)void
android.app.NotificationChannel.setSound(android.net.Uri,android.media.AudioAttributes)void
android.app.NotificationChannel.enableLights(boolean)void
android.app.NotificationChannel.setLightColor(int)void
android.app.NotificationChannel.enableVibration(boolean)void
android.app.NotificationChannel.setVibrationPattern(long)void
android.app.NotificationChannel.setImportance(int)void
android.app.NotificationChannel.setBypassDnd(boolean)void
android.app.NotificationChannel.setLockscreenVisibility(int)void
android.app.NotificationChannel.setAllowBubbles(boolean)void
android.app.NotificationChannel.getId)String
android.app.NotificationChannel.getName)CharSequence
android.app.NotificationChannel.getDescription)String
android.app.NotificationChannel.getImportance)int
android.app.NotificationChannel.canBypassDnd)boolean
android.app.NotificationChannel.getSound)android.net.Uri
android.app.NotificationChannel.getAudioAttributes)android.media.AudioAttributes
android.app.NotificationChannel.shouldShowLights)boolean
android.app.NotificationChannel.getLightColor)int
android.app.NotificationChannel.shouldVibrate)boolean
android.app.NotificationChannel.getLockscreenVisibility)int
android.app.NotificationChannel.canShowBadge)boolean
android.app.NotificationChannel.getGroup)String
android.app.NotificationChannel.canBubble)boolean
android.app.NotificationChannel.hasUserSetImportance)boolean
android.app.NotificationChannel.describeContents)int
android.app.NotificationChannel.equals(Object)boolean
android.app.NotificationChannel.hashCode)int
android.app.NotificationChannel.toString)String
android.app.NotificationChannelGroup.writeToParcel(android.os.Parcel,int)void
android.app.NotificationChannelGroup.getId)String
android.app.NotificationChannelGroup.getName)CharSequence
android.app.NotificationChannelGroup.getDescription)String
android.app.NotificationChannelGroup.getChannels)java.util.List
android.app.NotificationChannelGroup.isBlocked)boolean
android.app.NotificationChannelGroup.setDescription(String)void
android.app.NotificationChannelGroup.describeContents)int
android.app.NotificationChannelGroup.equals(Object)boolean
android.app.NotificationChannelGroup.hashCode)int
android.app.NotificationChannelGroup.clone)android.app.NotificationChannelGroup
android.app.NotificationChannelGroup.toString)String
android.app.NotificationManager.writeToParcel(Parcel,int)void
android.app.NotificationManager.describeContents)int
android.app.NotificationManager.hashCode)int
android.app.NotificationManager.equals(Object)boolean
android.app.NotificationManager.toString)String
android.app.NotificationManager.suppressedEffectsToString(int)String
android.app.NotificationManager.priorityCategoriesToString(int)String
android.app.NotificationManager.prioritySendersToString(int)String
android.app.NotificationManager.notify(int,android.app.Notification)void
android.app.NotificationManager.notify(String,int,android.app.Notification)void
android.app.NotificationManager.notifyAsPackage(String,String,int,android.app.Notification)void
android.app.NotificationManager.cancel(int)void
android.app.NotificationManager.cancel(String,int)void
android.app.NotificationManager.cancelAll)void
android.app.NotificationManager.setNotificationDelegate(String)void
android.app.NotificationManager.getNotificationDelegate)String
android.app.NotificationManager.canNotifyAsPackage(String)boolean
android.app.NotificationManager.createNotificationChannelGroup(android.app.NotificationChannelGroup)void
android.app.NotificationManager.createNotificationChannelGroups(java.util.List)void
android.app.NotificationManager.createNotificationChannel(android.app.NotificationChannel)void
android.app.NotificationManager.createNotificationChannels(java.util.List)void
android.app.NotificationManager.getNotificationChannel(String)android.app.NotificationChannel
android.app.NotificationManager.getNotificationChannels)java.util.List
android.app.NotificationManager.deleteNotificationChannel(String)void
android.app.NotificationManager.getNotificationChannelGroup(String)android.app.NotificationChannelGroup
android.app.NotificationManager.getNotificationChannelGroups)java.util.List
android.app.NotificationManager.deleteNotificationChannelGroup(String)void
android.app.NotificationManager.getAutomaticZenRules)java.util.Map
android.app.NotificationManager.getAutomaticZenRule(String)android.app.AutomaticZenRule
android.app.NotificationManager.addAutomaticZenRule(android.app.AutomaticZenRule)String
android.app.NotificationManager.updateAutomaticZenRule(String,android.app.AutomaticZenRule)boolean
android.app.NotificationManager.setAutomaticZenRuleState(String,android.service.notification.Condition)void
android.app.NotificationManager.removeAutomaticZenRule(String)boolean
android.app.NotificationManager.getImportance)int
android.app.NotificationManager.areNotificationsEnabled)boolean
android.app.NotificationManager.areBubblesAllowed)boolean
android.app.NotificationManager.areNotificationsPaused)boolean
android.app.NotificationManager.isNotificationPolicyAccessGranted)boolean
android.app.NotificationManager.isNotificationListenerAccessGranted(android.content.ComponentName)boolean
android.app.NotificationManager.shouldHideSilentStatusBarIcons)boolean
android.app.NotificationManager.getNotificationPolicy)android.app.NotificationManager.Policy
android.app.NotificationManager.setNotificationPolicy(android.app.NotificationManager.Policy)void
android.app.NotificationManager.getCurrentInterruptionFilter)int
android.app.NotificationManager.setInterruptionFilter(int)void
android.app.PendingIntent.getActivity(Context,int,Intent,int)android.app.PendingIntent
android.app.PendingIntent.getActivity(Context,int,Intent,int,Bundle)android.app.PendingIntent
android.app.PendingIntent.getActivities(Context,int,Intent,int)android.app.PendingIntent
android.app.PendingIntent.getActivities(Context,int,Intent,int,Bundle)android.app.PendingIntent
android.app.PendingIntent.getBroadcast(Context,int,Intent,int)android.app.PendingIntent
android.app.PendingIntent.getService(Context,int,Intent,int)android.app.PendingIntent
android.app.PendingIntent.getForegroundService(Context,int,Intent,int)android.app.PendingIntent
android.app.PendingIntent.getIntentSender)IntentSender
android.app.PendingIntent.cancel)void
android.app.PendingIntent.send)void
android.app.PendingIntent.send(int)void
android.app.PendingIntent.send(Context,int,Intent)void
android.app.PendingIntent.send(int,android.app.PendingIntent.OnFinished,Handler)void
android.app.PendingIntent.send(Context,int,Intent,android.app.PendingIntent.OnFinished,Handler)void
android.app.PendingIntent.send(Context,int,Intent,android.app.PendingIntent.OnFinished,Handler,String)void
android.app.PendingIntent.send(Context,int,Intent,android.app.PendingIntent.OnFinished,Handler,String,Bundle)void
android.app.PendingIntent.getTargetPackage)String
android.app.PendingIntent.getCreatorPackage)String
android.app.PendingIntent.getCreatorUid)int
android.app.PendingIntent.getCreatorUserHandle)UserHandle
android.app.PendingIntent.equals(Object)boolean
android.app.PendingIntent.hashCode)int
android.app.PendingIntent.toString)String
android.app.PendingIntent.describeContents)int
android.app.PendingIntent.writeToParcel(Parcel,int)void
android.app.PendingIntent.writePendingIntentOrNullToParcel(android.app.PendingIntent,Parcel)void
android.app.PendingIntent.readPendingIntentOrNullFromParcel(Parcel)android.app.PendingIntent
android.app.Person.setName(CharSequence)android.app.Person.Builder
android.app.Person.setIcon(android.graphics.drawable.Icon)android.app.Person.Builder
android.app.Person.setUri(String)android.app.Person.Builder
android.app.Person.setKey(String)android.app.Person.Builder
android.app.Person.setImportant(boolean)android.app.Person.Builder
android.app.Person.setBot(boolean)android.app.Person.Builder
android.app.Person.build)android.app.Person
android.app.Person.toBuilder)android.app.Person.Builder
android.app.Person.getUri)String
android.app.Person.getName)CharSequence
android.app.Person.getIcon)android.graphics.drawable.Icon
android.app.Person.getKey)String
android.app.Person.isBot)boolean
android.app.Person.isImportant)boolean
android.app.Person.equals(Object)boolean
android.app.Person.hashCode)int
android.app.Person.describeContents)int
android.app.Person.writeToParcel(android.os.Parcel,int)void
android.app.PictureInPictureParams.setAspectRatio(android.util.Rational)android.app.PictureInPictureParams.Builder
android.app.PictureInPictureParams.setActions(java.util.List)android.app.PictureInPictureParams.Builder
android.app.PictureInPictureParams.setSourceRectHint(android.graphics.Rect)android.app.PictureInPictureParams.Builder
android.app.PictureInPictureParams.build)android.app.PictureInPictureParams
android.app.PictureInPictureParams.describeContents)int
android.app.PictureInPictureParams.writeToParcel(android.os.Parcel,int)void
android.app.Presentation.getDisplay)android.view.Display
android.app.Presentation.getResources)android.content.res.Resources
android.app.Presentation.onStart)void
android.app.Presentation.onStop)void
android.app.Presentation.show)void
android.app.Presentation.onDisplayRemoved)void
android.app.Presentation.onDisplayChanged)void
android.app.ProgressDialog.show(android.content.Context,CharSequence,CharSequence)android.app.ProgressDialog
android.app.ProgressDialog.show(android.content.Context,CharSequence,CharSequence,boolean)android.app.ProgressDialog
android.app.ProgressDialog.show(android.content.Context,CharSequence,CharSequence,boolean,boolean)android.app.ProgressDialog
android.app.ProgressDialog.show(android.content.Context,CharSequence,CharSequence,boolean,boolean,android.content.DialogInterface.OnCancelListener)android.app.ProgressDialog
android.app.ProgressDialog.onCreate(android.os.Bundle)void
android.app.ProgressDialog.onStart)void
android.app.ProgressDialog.onStop)void
android.app.ProgressDialog.setProgress(int)void
android.app.ProgressDialog.setSecondaryProgress(int)void
android.app.ProgressDialog.getProgress)int
android.app.ProgressDialog.getSecondaryProgress)int
android.app.ProgressDialog.getMax)int
android.app.ProgressDialog.setMax(int)void
android.app.ProgressDialog.incrementProgressBy(int)void
android.app.ProgressDialog.incrementSecondaryProgressBy(int)void
android.app.ProgressDialog.setProgressDrawable(android.graphics.drawable.Drawable)void
android.app.ProgressDialog.setIndeterminateDrawable(android.graphics.drawable.Drawable)void
android.app.ProgressDialog.setIndeterminate(boolean)void
android.app.ProgressDialog.isIndeterminate)boolean
android.app.ProgressDialog.setMessage(CharSequence)void
android.app.ProgressDialog.setProgressStyle(int)void
android.app.ProgressDialog.setProgressNumberFormat(String)void
android.app.ProgressDialog.setProgressPercentFormat(java.text.NumberFormat)void
android.app.RecoverableSecurityException.getUserMessage)CharSequence
android.app.RecoverableSecurityException.getUserAction)android.app.RemoteAction
android.app.RecoverableSecurityException.describeContents)int
android.app.RecoverableSecurityException.writeToParcel(android.os.Parcel,int)void
android.app.RemoteAction.setEnabled(boolean)void
android.app.RemoteAction.isEnabled)boolean
android.app.RemoteAction.setShouldShowIcon(boolean)void
android.app.RemoteAction.shouldShowIcon)boolean
android.app.RemoteAction.getIcon)android.graphics.drawable.Icon
android.app.RemoteAction.getTitle)CharSequence
android.app.RemoteAction.getContentDescription)CharSequence
android.app.RemoteAction.getActionIntent)android.app.PendingIntent
android.app.RemoteAction.clone)android.app.RemoteAction
android.app.RemoteAction.describeContents)int
android.app.RemoteAction.writeToParcel(android.os.Parcel,int)void
android.app.RemoteAction.dump(String,java.io.PrintWriter)void
android.app.RemoteInput.setLabel(CharSequence)Builder
android.app.RemoteInput.setChoices(CharSequence)Builder
android.app.RemoteInput.setAllowDataType(String,boolean)Builder
android.app.RemoteInput.setAllowFreeFormInput(boolean)Builder
android.app.RemoteInput.setEditChoicesBeforeSending(int)Builder
android.app.RemoteInput.addExtras(Bundle)Builder
android.app.RemoteInput.getExtras)Bundle
android.app.RemoteInput.build)android.app.RemoteInput
android.app.RemoteInput.getResultKey)String
android.app.RemoteInput.getLabel)CharSequence
android.app.RemoteInput.getAllowedDataTypes)java.util.Set
android.app.RemoteInput.isDataOnly)boolean
android.app.RemoteInput.getAllowFreeFormInput)boolean
android.app.RemoteInput.getEditChoicesBeforeSending)int
android.app.RemoteInput.getExtras)Bundle
android.app.RemoteInput.getDataResultsFromIntent(android.content.Intent,String)java.util.Map
android.app.RemoteInput.getResultsFromIntent(android.content.Intent)Bundle
android.app.RemoteInput.addResultsToIntent(android.app.RemoteInput,android.content.Intent,Bundle)void
android.app.RemoteInput.addDataResultToIntent(android.app.RemoteInput,android.content.Intent,java.util.Map)void
android.app.RemoteInput.setResultsSource(android.content.Intent,int)void
android.app.RemoteInput.getResultsSource(android.content.Intent)int
android.app.RemoteInput.describeContents)int
android.app.RemoteInput.writeToParcel(Parcel,int)void
android.app.SearchableInfo.getSuggestAuthority)String
android.app.SearchableInfo.getSuggestPackage)String
android.app.SearchableInfo.getSearchActivity)android.content.ComponentName
android.app.SearchableInfo.shouldRewriteQueryFromData)boolean
android.app.SearchableInfo.shouldRewriteQueryFromText)boolean
android.app.SearchableInfo.getSettingsDescriptionId)int
android.app.SearchableInfo.getSuggestPath)String
android.app.SearchableInfo.getSuggestSelection)String
android.app.SearchableInfo.getSuggestIntentAction)String
android.app.SearchableInfo.getSuggestIntentData)String
android.app.SearchableInfo.getSuggestThreshold)int
android.app.SearchableInfo.getHintId)int
android.app.SearchableInfo.getVoiceSearchEnabled)boolean
android.app.SearchableInfo.getVoiceSearchLaunchWebSearch)boolean
android.app.SearchableInfo.getVoiceSearchLaunchRecognizer)boolean
android.app.SearchableInfo.getVoiceLanguageModeId)int
android.app.SearchableInfo.getVoicePromptTextId)int
android.app.SearchableInfo.getVoiceLanguageId)int
android.app.SearchableInfo.getVoiceMaxResults)int
android.app.SearchableInfo.getInputType)int
android.app.SearchableInfo.getImeOptions)int
android.app.SearchableInfo.shouldIncludeInGlobalSearch)boolean
android.app.SearchableInfo.queryAfterZeroResults)boolean
android.app.SearchableInfo.autoUrlDetect)boolean
android.app.SearchableInfo.describeContents)int
android.app.SearchableInfo.writeToParcel(android.os.Parcel,int)void
android.app.SearchManager.startSearch(String,boolean,android.content.ComponentName,android.os.Bundle,boolean)void
android.app.SearchManager.getGlobalSearchActivity)android.content.ComponentName
android.app.SearchManager.triggerSearch(String,android.content.ComponentName,android.os.Bundle)void
android.app.SearchManager.stopSearch)void
android.app.SearchManager.setOnDismissListener(android.app.SearchManager.OnDismissListener)void
android.app.SearchManager.setOnCancelListener(android.app.SearchManager.OnCancelListener)void
android.app.SearchManager.onCancel(android.content.DialogInterface)void
android.app.SearchManager.onDismiss(android.content.DialogInterface)void
android.app.SearchManager.getSearchableInfo(android.content.ComponentName)android.app.SearchableInfo
android.app.SearchManager.getSearchablesInGlobalSearch)java.util.List
android.app.Service.getApplication)android.app.Application
android.app.Service.onCreate)void
android.app.Service.onStart(Intent,int)void
android.app.Service.onStartCommand(Intent,int,int)int
android.app.Service.onDestroy)void
android.app.Service.onConfigurationChanged(android.content.res.Configuration)void
android.app.Service.onLowMemory)void
android.app.Service.onTrimMemory(int)void
android.app.Service.onUnbind(Intent)boolean
android.app.Service.onRebind(Intent)void
android.app.Service.onTaskRemoved(Intent)void
android.app.Service.stopSelf)void
android.app.Service.stopSelf(int)void
android.app.Service.stopSelfResult(int)boolean
android.app.Service.startForeground(int,android.app.Notification)void
android.app.Service.startForeground(int,android.app.Notification,int)void
android.app.Service.stopForeground(boolean)void
android.app.Service.stopForeground(int)void
android.app.Service.getForegroundServiceType)int
android.app.Service.dump(java.io.FileDescriptor,java.io.PrintWriter,String)void
android.app.SharedElementCallback.onSharedElementStart(java.util.List,java.util.List,java.util.List)void
android.app.SharedElementCallback.onSharedElementEnd(java.util.List,java.util.List,java.util.List)void
android.app.SharedElementCallback.onRejectSharedElements(java.util.List)void
android.app.SharedElementCallback.onMapSharedElements(java.util.List,java.util.Map)void
android.app.SharedElementCallback.onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)android.os.Parcelable
android.app.SharedElementCallback.onCreateSnapshotView(android.content.Context,android.os.Parcelable)android.view.View
android.app.SharedElementCallback.onSharedElementsArrived(java.util.List,java.util.List,android.app.SharedElementCallback.OnSharedElementsReadyListener)void
android.app.TabActivity.setDefaultTab(String)void
android.app.TabActivity.setDefaultTab(int)void
android.app.TabActivity.onRestoreInstanceState(android.os.Bundle)void
android.app.TabActivity.onPostCreate(android.os.Bundle)void
android.app.TabActivity.onSaveInstanceState(android.os.Bundle)void
android.app.TabActivity.onContentChanged)void
android.app.TabActivity.onChildTitleChanged(android.app.Activity,CharSequence)void
android.app.TabActivity.getTabHost)android.widget.TabHost
android.app.TabActivity.getTabWidget)android.widget.TabWidget
android.app.TaskInfo.toString)String
android.app.TaskStackBuilder.create(Context)android.app.TaskStackBuilder
android.app.TaskStackBuilder.addNextIntent(Intent)android.app.TaskStackBuilder
android.app.TaskStackBuilder.addNextIntentWithParentStack(Intent)android.app.TaskStackBuilder
android.app.TaskStackBuilder.addParentStack(android.app.Activity)android.app.TaskStackBuilder
android.app.TaskStackBuilder.addParentStack(Class)android.app.TaskStackBuilder
android.app.TaskStackBuilder.addParentStack(ComponentName)android.app.TaskStackBuilder
android.app.TaskStackBuilder.getIntentCount)int
android.app.TaskStackBuilder.editIntentAt(int)Intent
android.app.TaskStackBuilder.startActivities)void
android.app.TaskStackBuilder.startActivities(android.os.Bundle)void
android.app.TaskStackBuilder.getPendingIntent(int,int)android.app.PendingIntent
android.app.TaskStackBuilder.getPendingIntent(int,int,android.os.Bundle)android.app.PendingIntent
android.app.TimePickerDialog.onTimeChanged(android.widget.TimePicker,int,int)void
android.app.TimePickerDialog.show)void
android.app.TimePickerDialog.onClick(android.content.DialogInterface,int)void
android.app.TimePickerDialog.updateTime(int,int)void
android.app.TimePickerDialog.onSaveInstanceState)android.os.Bundle
android.app.TimePickerDialog.onRestoreInstanceState(android.os.Bundle)void
android.app.UiAutomation.setOnAccessibilityEventListener(android.app.UiAutomation.OnAccessibilityEventListener)void
android.app.UiAutomation.adoptShellPermissionIdentity)void
android.app.UiAutomation.dropShellPermissionIdentity)void
android.app.UiAutomation.performGlobalAction(int)boolean
android.app.UiAutomation.findFocus(int)android.view.accessibility.AccessibilityNodeInfo
android.app.UiAutomation.getServiceInfo)android.accessibilityservice.AccessibilityServiceInfo
android.app.UiAutomation.setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)void
android.app.UiAutomation.getWindows)java.util.List
android.app.UiAutomation.getRootInActiveWindow)android.view.accessibility.AccessibilityNodeInfo
android.app.UiAutomation.injectInputEvent(InputEvent,boolean)boolean
android.app.UiAutomation.setRotation(int)boolean
android.app.UiAutomation.executeAndWaitForEvent(Runnable,android.app.UiAutomation.AccessibilityEventFilter,long)android.view.accessibility.AccessibilityEvent
android.app.UiAutomation.waitForIdle(long,long)void
android.app.UiAutomation.takeScreenshot)android.graphics.Bitmap
android.app.UiAutomation.setRunAsMonkey(boolean)void
android.app.UiAutomation.clearWindowContentFrameStats(int)boolean
android.app.UiAutomation.getWindowContentFrameStats(int)WindowContentFrameStats
android.app.UiAutomation.clearWindowAnimationFrameStats)void
android.app.UiAutomation.getWindowAnimationFrameStats)WindowAnimationFrameStats
android.app.UiAutomation.grantRuntimePermission(String,String)void
android.app.UiAutomation.grantRuntimePermissionAsUser(String,String,android.os.UserHandle)void
android.app.UiAutomation.revokeRuntimePermission(String,String)void
android.app.UiAutomation.revokeRuntimePermissionAsUser(String,String,android.os.UserHandle)void
android.app.UiAutomation.executeShellCommand(String)android.os.ParcelFileDescriptor
android.app.UiModeManager.enableCarMode(int)void
android.app.UiModeManager.disableCarMode(int)void
android.app.UiModeManager.getCurrentModeType)int
android.app.UiModeManager.setNightMode(int)void
android.app.UiModeManager.getNightMode)int
android.app.VoiceInteractor.getName)String
android.app.VoiceInteractor.cancel)void
android.app.VoiceInteractor.getContext)android.content.Context
android.app.VoiceInteractor.getActivity)android.app.Activity
android.app.VoiceInteractor.onCancel)void
android.app.VoiceInteractor.onAttached(android.app.Activity)void
android.app.VoiceInteractor.onDetached)void
android.app.VoiceInteractor.toString)String
android.app.VoiceInteractor.getVoicePromptAt(int)CharSequence
android.app.VoiceInteractor.countVoicePrompts)int
android.app.VoiceInteractor.getVisualPrompt)CharSequence
android.app.VoiceInteractor.toString)String
android.app.VoiceInteractor.describeContents)int
android.app.VoiceInteractor.writeToParcel(Parcel,int)void
android.app.VoiceInteractor.addSynonym(CharSequence)Option
android.app.VoiceInteractor.getLabel)CharSequence
android.app.VoiceInteractor.getIndex)int
android.app.VoiceInteractor.countSynonyms)int
android.app.VoiceInteractor.getSynonymAt(int)CharSequence
android.app.VoiceInteractor.setExtras(Bundle)void
android.app.VoiceInteractor.getExtras)Bundle
android.app.VoiceInteractor.describeContents)int
android.app.VoiceInteractor.writeToParcel(Parcel,int)void
android.app.VoiceInteractor.onPickOptionResult(boolean,Option,Bundle)void
android.app.VoiceInteractor.onConfirmationResult(boolean,Bundle)void
android.app.VoiceInteractor.onCompleteResult(Bundle)void
android.app.VoiceInteractor.onCommandResult(boolean,Bundle)void
android.app.VoiceInteractor.onAbortResult(Bundle)void
android.app.VoiceInteractor.submitRequest(Request)boolean
android.app.VoiceInteractor.submitRequest(Request,String)boolean
android.app.VoiceInteractor.getActiveRequest(String)Request
android.app.VoiceInteractor.isDestroyed)boolean
android.app.VoiceInteractor.registerOnDestroyedCallback(java.util.concurrent.Executor,Runnable)boolean
android.app.VoiceInteractor.unregisterOnDestroyedCallback(Runnable)boolean
android.app.VoiceInteractor.notifyDirectActionsChanged)void
android.app.WallpaperColors.fromDrawable(android.graphics.drawable.Drawable)android.app.WallpaperColors
android.app.WallpaperColors.fromBitmap(android.graphics.Bitmap)android.app.WallpaperColors
android.app.WallpaperColors.describeContents)int
android.app.WallpaperColors.writeToParcel(android.os.Parcel,int)void
android.app.WallpaperColors.getPrimaryColor)android.graphics.Color
android.app.WallpaperColors.getSecondaryColor)android.graphics.Color
android.app.WallpaperColors.getTertiaryColor)android.graphics.Color
android.app.WallpaperColors.equals(Object)boolean
android.app.WallpaperColors.hashCode)int
android.app.WallpaperColors.toString)String
android.app.WallpaperInfo.getPackageName)String
android.app.WallpaperInfo.getServiceName)String
android.app.WallpaperInfo.getServiceInfo)ServiceInfo
android.app.WallpaperInfo.getComponent)android.content.ComponentName
android.app.WallpaperInfo.loadLabel(PackageManager)CharSequence
android.app.WallpaperInfo.loadIcon(PackageManager)android.graphics.drawable.Drawable
android.app.WallpaperInfo.loadThumbnail(PackageManager)android.graphics.drawable.Drawable
android.app.WallpaperInfo.loadAuthor(PackageManager)CharSequence
android.app.WallpaperInfo.loadDescription(PackageManager)CharSequence
android.app.WallpaperInfo.loadContextUri(PackageManager)android.net.Uri
android.app.WallpaperInfo.loadContextDescription(PackageManager)CharSequence
android.app.WallpaperInfo.getShowMetadataInPreview)boolean
android.app.WallpaperInfo.getSettingsActivity)String
android.app.WallpaperInfo.getSettingsSliceUri)android.net.Uri
android.app.WallpaperInfo.supportsMultipleDisplays)boolean
android.app.WallpaperInfo.dump(android.util.Printer,String)void
android.app.WallpaperInfo.toString)String
android.app.WallpaperInfo.writeToParcel(android.os.Parcel,int)void
android.app.WallpaperInfo.describeContents)int
android.app.WallpaperManager.getInstance(android.content.Context)android.app.WallpaperManager
android.app.WallpaperManager.getDrawable)android.graphics.drawable.Drawable
android.app.WallpaperManager.getBuiltInDrawable)android.graphics.drawable.Drawable
android.app.WallpaperManager.getBuiltInDrawable(int)android.graphics.drawable.Drawable
android.app.WallpaperManager.getBuiltInDrawable(int,int,boolean,float,float)android.graphics.drawable.Drawable
android.app.WallpaperManager.getBuiltInDrawable(int,int,boolean,float,float,int)android.graphics.drawable.Drawable
android.app.WallpaperManager.peekDrawable)android.graphics.drawable.Drawable
android.app.WallpaperManager.getFastDrawable)android.graphics.drawable.Drawable
android.app.WallpaperManager.peekFastDrawable)android.graphics.drawable.Drawable
android.app.WallpaperManager.getWallpaperFile(int)ParcelFileDescriptor
android.app.WallpaperManager.addOnColorsChangedListener(android.app.WallpaperManager.OnColorsChangedListener,Handler)void
android.app.WallpaperManager.removeOnColorsChangedListener(android.app.WallpaperManager.OnColorsChangedListener)void
android.app.WallpaperManager.getWallpaperColors(int)android.app.WallpaperColors
android.app.WallpaperManager.forgetLoadedWallpaper)void
android.app.WallpaperManager.getWallpaperInfo)android.app.WallpaperInfo
android.app.WallpaperManager.getWallpaperId(int)int
android.app.WallpaperManager.getCropAndSetWallpaperIntent(android.net.Uri)android.content.Intent
android.app.WallpaperManager.setResource(int)void
android.app.WallpaperManager.setResource(int,int)int
android.app.WallpaperManager.setBitmap(android.graphics.Bitmap)void
android.app.WallpaperManager.setBitmap(android.graphics.Bitmap,android.graphics.Rect,boolean)int
android.app.WallpaperManager.setBitmap(android.graphics.Bitmap,android.graphics.Rect,boolean,int)int
android.app.WallpaperManager.setStream(java.io.InputStream)void
android.app.WallpaperManager.setStream(java.io.InputStream,android.graphics.Rect,boolean)int
android.app.WallpaperManager.setStream(java.io.InputStream,android.graphics.Rect,boolean,int)int
android.app.WallpaperManager.hasResourceWallpaper(int)boolean
android.app.WallpaperManager.getDesiredMinimumWidth)int
android.app.WallpaperManager.getDesiredMinimumHeight)int
android.app.WallpaperManager.suggestDesiredDimensions(int,int)void
android.app.WallpaperManager.setDisplayPadding(android.graphics.Rect)void
android.app.WallpaperManager.clearWallpaper)void
android.app.WallpaperManager.setWallpaperOffsets(IBinder,float,float)void
android.app.WallpaperManager.setWallpaperOffsetSteps(float,float)void
android.app.WallpaperManager.sendWallpaperCommand(IBinder,String,int,int,int,Bundle)void
android.app.WallpaperManager.isWallpaperSupported)boolean
android.app.WallpaperManager.isSetWallpaperAllowed)boolean
android.app.WallpaperManager.clearWallpaperOffsets(IBinder)void
android.app.WallpaperManager.clear)void
android.app.WallpaperManager.clear(int)void
android.app.admin.ConnectEvent.getInetAddress)java.net.InetAddress
android.app.admin.ConnectEvent.getPort)int
android.app.admin.ConnectEvent.toString)String
android.app.admin.ConnectEvent.describeContents)int
android.app.admin.ConnectEvent.writeToParcel(android.os.Parcel,int)void
android.app.admin.DelegatedAdminReceiver.onChoosePrivateKeyAlias(Context,Intent,int,android.net.Uri,String)String
android.app.admin.DelegatedAdminReceiver.onNetworkLogsAvailable(Context,Intent,long,int)void
android.app.admin.DelegatedAdminReceiver.onReceive(Context,Intent)void
android.app.admin.DeviceAdminInfo.getPackageName)String
android.app.admin.DeviceAdminInfo.getReceiverName)String
android.app.admin.DeviceAdminInfo.getActivityInfo)ActivityInfo
android.app.admin.DeviceAdminInfo.getComponent)android.content.ComponentName
android.app.admin.DeviceAdminInfo.loadLabel(PackageManager)CharSequence
android.app.admin.DeviceAdminInfo.loadDescription(PackageManager)CharSequence
android.app.admin.DeviceAdminInfo.loadIcon(PackageManager)android.graphics.drawable.Drawable
android.app.admin.DeviceAdminInfo.isVisible)boolean
android.app.admin.DeviceAdminInfo.usesPolicy(int)boolean
android.app.admin.DeviceAdminInfo.getTagForPolicy(int)String
android.app.admin.DeviceAdminInfo.supportsTransferOwnership)boolean
android.app.admin.DeviceAdminInfo.dump(android.util.Printer,String)void
android.app.admin.DeviceAdminInfo.toString)String
android.app.admin.DeviceAdminInfo.writeToParcel(android.os.Parcel,int)void
android.app.admin.DeviceAdminInfo.describeContents)int
android.app.admin.DeviceAdminReceiver.getManager(Context)android.app.admin.DevicePolicyManager
android.app.admin.DeviceAdminReceiver.getWho(Context)ComponentName
android.app.admin.DeviceAdminReceiver.onEnabled(Context,Intent)void
android.app.admin.DeviceAdminReceiver.onDisableRequested(Context,Intent)CharSequence
android.app.admin.DeviceAdminReceiver.onDisabled(Context,Intent)void
android.app.admin.DeviceAdminReceiver.onPasswordChanged(Context,Intent)void
android.app.admin.DeviceAdminReceiver.onPasswordChanged(Context,Intent,android.os.UserHandle)void
android.app.admin.DeviceAdminReceiver.onPasswordFailed(Context,Intent)void
android.app.admin.DeviceAdminReceiver.onPasswordFailed(Context,Intent,android.os.UserHandle)void
android.app.admin.DeviceAdminReceiver.onPasswordSucceeded(Context,Intent)void
android.app.admin.DeviceAdminReceiver.onPasswordSucceeded(Context,Intent,android.os.UserHandle)void
android.app.admin.DeviceAdminReceiver.onPasswordExpiring(Context,Intent)void
android.app.admin.DeviceAdminReceiver.onPasswordExpiring(Context,Intent,android.os.UserHandle)void
android.app.admin.DeviceAdminReceiver.onProfileProvisioningComplete(Context,Intent)void
android.app.admin.DeviceAdminReceiver.onReadyForUserInitialization(Context,Intent)void
android.app.admin.DeviceAdminReceiver.onLockTaskModeEntering(Context,Intent,String)void
android.app.admin.DeviceAdminReceiver.onLockTaskModeExiting(Context,Intent)void
android.app.admin.DeviceAdminReceiver.onChoosePrivateKeyAlias(Context,Intent,int,android.net.Uri,String)String
android.app.admin.DeviceAdminReceiver.onSystemUpdatePending(Context,Intent,long)void
android.app.admin.DeviceAdminReceiver.onBugreportSharingDeclined(Context,Intent)void
android.app.admin.DeviceAdminReceiver.onBugreportShared(Context,Intent,String)void
android.app.admin.DeviceAdminReceiver.onBugreportFailed(Context,Intent,int)void
android.app.admin.DeviceAdminReceiver.onSecurityLogsAvailable(Context,Intent)void
android.app.admin.DeviceAdminReceiver.onNetworkLogsAvailable(Context,Intent,long,int)void
android.app.admin.DeviceAdminReceiver.onUserAdded(Context,Intent,android.os.UserHandle)void
android.app.admin.DeviceAdminReceiver.onUserRemoved(Context,Intent,android.os.UserHandle)void
android.app.admin.DeviceAdminReceiver.onUserStarted(Context,Intent,android.os.UserHandle)void
android.app.admin.DeviceAdminReceiver.onUserStopped(Context,Intent,android.os.UserHandle)void
android.app.admin.DeviceAdminReceiver.onUserSwitched(Context,Intent,android.os.UserHandle)void
android.app.admin.DeviceAdminReceiver.onTransferOwnershipComplete(Context,android.os.PersistableBundle)void
android.app.admin.DeviceAdminReceiver.onTransferAffiliatedProfileOwnershipComplete(Context,android.os.UserHandle)void
android.app.admin.DeviceAdminReceiver.onReceive(Context,Intent)void
android.app.admin.DeviceAdminService.onBind(android.content.Intent)android.os.IBinder
android.app.admin.DevicePolicyManager.onInstallUpdateError(int,String)void
android.app.admin.DevicePolicyManager.isAdminActive(ComponentName)boolean
android.app.admin.DevicePolicyManager.getActiveAdmins)java.util.List
android.app.admin.DevicePolicyManager.removeActiveAdmin(ComponentName)void
android.app.admin.DevicePolicyManager.hasGrantedPolicy(ComponentName,int)boolean
android.app.admin.DevicePolicyManager.setPasswordQuality(ComponentName,int)void
android.app.admin.DevicePolicyManager.getPasswordQuality(ComponentName)int
android.app.admin.DevicePolicyManager.setPasswordMinimumLength(ComponentName,int)void
android.app.admin.DevicePolicyManager.getPasswordMinimumLength(ComponentName)int
android.app.admin.DevicePolicyManager.setPasswordMinimumUpperCase(ComponentName,int)void
android.app.admin.DevicePolicyManager.getPasswordMinimumUpperCase(ComponentName)int
android.app.admin.DevicePolicyManager.setPasswordMinimumLowerCase(ComponentName,int)void
android.app.admin.DevicePolicyManager.getPasswordMinimumLowerCase(ComponentName)int
android.app.admin.DevicePolicyManager.setPasswordMinimumLetters(ComponentName,int)void
android.app.admin.DevicePolicyManager.getPasswordMinimumLetters(ComponentName)int
android.app.admin.DevicePolicyManager.setPasswordMinimumNumeric(ComponentName,int)void
android.app.admin.DevicePolicyManager.getPasswordMinimumNumeric(ComponentName)int
android.app.admin.DevicePolicyManager.setPasswordMinimumSymbols(ComponentName,int)void
android.app.admin.DevicePolicyManager.getPasswordMinimumSymbols(ComponentName)int
android.app.admin.DevicePolicyManager.setPasswordMinimumNonLetter(ComponentName,int)void
android.app.admin.DevicePolicyManager.getPasswordMinimumNonLetter(ComponentName)int
android.app.admin.DevicePolicyManager.setPasswordHistoryLength(ComponentName,int)void
android.app.admin.DevicePolicyManager.setPasswordExpirationTimeout(ComponentName,long)void
android.app.admin.DevicePolicyManager.getPasswordExpirationTimeout(ComponentName)long
android.app.admin.DevicePolicyManager.getPasswordExpiration(ComponentName)long
android.app.admin.DevicePolicyManager.getPasswordHistoryLength(ComponentName)int
android.app.admin.DevicePolicyManager.getPasswordMaximumLength(int)int
android.app.admin.DevicePolicyManager.isActivePasswordSufficient)boolean
android.app.admin.DevicePolicyManager.getPasswordComplexity)int
android.app.admin.DevicePolicyManager.isUsingUnifiedPassword(ComponentName)boolean
android.app.admin.DevicePolicyManager.getCurrentFailedPasswordAttempts)int
android.app.admin.DevicePolicyManager.setMaximumFailedPasswordsForWipe(ComponentName,int)void
android.app.admin.DevicePolicyManager.getMaximumFailedPasswordsForWipe(ComponentName)int
android.app.admin.DevicePolicyManager.resetPassword(String,int)boolean
android.app.admin.DevicePolicyManager.setResetPasswordToken(ComponentName,byte)boolean
android.app.admin.DevicePolicyManager.clearResetPasswordToken(ComponentName)boolean
android.app.admin.DevicePolicyManager.isResetPasswordTokenActive(ComponentName)boolean
android.app.admin.DevicePolicyManager.resetPasswordWithToken(ComponentName,String,byte,int)boolean
android.app.admin.DevicePolicyManager.setMaximumTimeToLock(ComponentName,long)void
android.app.admin.DevicePolicyManager.getMaximumTimeToLock(ComponentName)long
android.app.admin.DevicePolicyManager.setRequiredStrongAuthTimeout(ComponentName,long)void
android.app.admin.DevicePolicyManager.getRequiredStrongAuthTimeout(ComponentName)long
android.app.admin.DevicePolicyManager.lockNow)void
android.app.admin.DevicePolicyManager.lockNow(int)void
android.app.admin.DevicePolicyManager.wipeData(int)void
android.app.admin.DevicePolicyManager.wipeData(int,CharSequence)void
android.app.admin.DevicePolicyManager.setRecommendedGlobalProxy(ComponentName,android.net.ProxyInfo)void
android.app.admin.DevicePolicyManager.setStorageEncryption(ComponentName,boolean)int
android.app.admin.DevicePolicyManager.getStorageEncryption(ComponentName)boolean
android.app.admin.DevicePolicyManager.getStorageEncryptionStatus)int
android.app.admin.DevicePolicyManager.installCaCert(ComponentName,byte)boolean
android.app.admin.DevicePolicyManager.uninstallCaCert(ComponentName,byte)void
android.app.admin.DevicePolicyManager.getInstalledCaCerts(ComponentName)java.util.List
android.app.admin.DevicePolicyManager.uninstallAllUserCaCerts(ComponentName)void
android.app.admin.DevicePolicyManager.hasCaCertInstalled(ComponentName,byte)boolean
android.app.admin.DevicePolicyManager.installKeyPair(ComponentName,java.security.PrivateKey,java.security.cert.Certificate,String)boolean
android.app.admin.DevicePolicyManager.installKeyPair(ComponentName,java.security.PrivateKey,java.security.cert.Certificate,String,boolean)boolean
android.app.admin.DevicePolicyManager.installKeyPair(ComponentName,java.security.PrivateKey,java.security.cert.Certificate,String,int)boolean
android.app.admin.DevicePolicyManager.removeKeyPair(ComponentName,String)boolean
android.app.admin.DevicePolicyManager.generateKeyPair(ComponentName,String,android.security.keystore.KeyGenParameterSpec,int)android.security.AttestedKeyPair
android.app.admin.DevicePolicyManager.isDeviceIdAttestationSupported)boolean
android.app.admin.DevicePolicyManager.setKeyPairCertificate(ComponentName,String,java.util.List,boolean)boolean
android.app.admin.DevicePolicyManager.setCertInstallerPackage(ComponentName,String)void
android.app.admin.DevicePolicyManager.getCertInstallerPackage(ComponentName)String
android.app.admin.DevicePolicyManager.setDelegatedScopes(ComponentName,String,java.util.List)void
android.app.admin.DevicePolicyManager.getDelegatedScopes(ComponentName,String)java.util.List
android.app.admin.DevicePolicyManager.getDelegatePackages(ComponentName,String)java.util.List
android.app.admin.DevicePolicyManager.setAlwaysOnVpnPackage(ComponentName,String,boolean)void
android.app.admin.DevicePolicyManager.setAlwaysOnVpnPackage(ComponentName,String,boolean,java.util.Set)void
android.app.admin.DevicePolicyManager.isAlwaysOnVpnLockdownEnabled(ComponentName)boolean
android.app.admin.DevicePolicyManager.getAlwaysOnVpnLockdownWhitelist(ComponentName)java.util.Set
android.app.admin.DevicePolicyManager.getAlwaysOnVpnPackage(ComponentName)String
android.app.admin.DevicePolicyManager.setCameraDisabled(ComponentName,boolean)void
android.app.admin.DevicePolicyManager.getCameraDisabled(ComponentName)boolean
android.app.admin.DevicePolicyManager.requestBugreport(ComponentName)boolean
android.app.admin.DevicePolicyManager.setScreenCaptureDisabled(ComponentName,boolean)void
android.app.admin.DevicePolicyManager.getScreenCaptureDisabled(ComponentName)boolean
android.app.admin.DevicePolicyManager.setAutoTimeRequired(ComponentName,boolean)void
android.app.admin.DevicePolicyManager.getAutoTimeRequired)boolean
android.app.admin.DevicePolicyManager.setKeyguardDisabledFeatures(ComponentName,int)void
android.app.admin.DevicePolicyManager.getKeyguardDisabledFeatures(ComponentName)int
android.app.admin.DevicePolicyManager.isDeviceOwnerApp(String)boolean
android.app.admin.DevicePolicyManager.clearDeviceOwnerApp(String)void
android.app.admin.DevicePolicyManager.clearProfileOwner(ComponentName)void
android.app.admin.DevicePolicyManager.setDeviceOwnerLockScreenInfo(ComponentName,CharSequence)void
android.app.admin.DevicePolicyManager.getDeviceOwnerLockScreenInfo)CharSequence
android.app.admin.DevicePolicyManager.isPackageSuspended(ComponentName,String)boolean
android.app.admin.DevicePolicyManager.setProfileEnabled(ComponentName)void
android.app.admin.DevicePolicyManager.setProfileName(ComponentName,String)void
android.app.admin.DevicePolicyManager.isProfileOwnerApp(String)boolean
android.app.admin.DevicePolicyManager.addPersistentPreferredActivity(ComponentName,IntentFilter,ComponentName)void
android.app.admin.DevicePolicyManager.clearPackagePersistentPreferredActivities(ComponentName,String)void
android.app.admin.DevicePolicyManager.setDefaultSmsApplication(ComponentName,String)void
android.app.admin.DevicePolicyManager.setApplicationRestrictionsManagingPackage(ComponentName,String)void
android.app.admin.DevicePolicyManager.getApplicationRestrictionsManagingPackage(ComponentName)String
android.app.admin.DevicePolicyManager.isCallerApplicationRestrictionsManagingPackage)boolean
android.app.admin.DevicePolicyManager.setApplicationRestrictions(ComponentName,String,Bundle)void
android.app.admin.DevicePolicyManager.setTrustAgentConfiguration(ComponentName,ComponentName,PersistableBundle)void
android.app.admin.DevicePolicyManager.getTrustAgentConfiguration(ComponentName,ComponentName)java.util.List
android.app.admin.DevicePolicyManager.setCrossProfileCallerIdDisabled(ComponentName,boolean)void
android.app.admin.DevicePolicyManager.getCrossProfileCallerIdDisabled(ComponentName)boolean
android.app.admin.DevicePolicyManager.setCrossProfileContactsSearchDisabled(ComponentName,boolean)void
android.app.admin.DevicePolicyManager.getCrossProfileContactsSearchDisabled(ComponentName)boolean
android.app.admin.DevicePolicyManager.setBluetoothContactSharingDisabled(ComponentName,boolean)void
android.app.admin.DevicePolicyManager.getBluetoothContactSharingDisabled(ComponentName)boolean
android.app.admin.DevicePolicyManager.addCrossProfileIntentFilter(ComponentName,IntentFilter,int)void
android.app.admin.DevicePolicyManager.clearCrossProfileIntentFilters(ComponentName)void
android.app.admin.DevicePolicyManager.setPermittedAccessibilityServices(ComponentName,java.util.List)boolean
android.app.admin.DevicePolicyManager.getPermittedAccessibilityServices(ComponentName)java.util.List
android.app.admin.DevicePolicyManager.setPermittedInputMethods(ComponentName,java.util.List)boolean
android.app.admin.DevicePolicyManager.getPermittedInputMethods(ComponentName)java.util.List
android.app.admin.DevicePolicyManager.setPermittedCrossProfileNotificationListeners(ComponentName,java.util.List)boolean
android.app.admin.DevicePolicyManager.getPermittedCrossProfileNotificationListeners(ComponentName)java.util.List
android.app.admin.DevicePolicyManager.getKeepUninstalledPackages(ComponentName)java.util.List
android.app.admin.DevicePolicyManager.setKeepUninstalledPackages(ComponentName,java.util.List)void
android.app.admin.DevicePolicyManager.createAndManageUser(ComponentName,String,ComponentName,PersistableBundle,int)UserHandle
android.app.admin.DevicePolicyManager.removeUser(ComponentName,UserHandle)boolean
android.app.admin.DevicePolicyManager.switchUser(ComponentName,UserHandle)boolean
android.app.admin.DevicePolicyManager.startUserInBackground(ComponentName,UserHandle)int
android.app.admin.DevicePolicyManager.stopUser(ComponentName,UserHandle)int
android.app.admin.DevicePolicyManager.logoutUser(ComponentName)int
android.app.admin.DevicePolicyManager.getSecondaryUsers(ComponentName)java.util.List
android.app.admin.DevicePolicyManager.isEphemeralUser(ComponentName)boolean
android.app.admin.DevicePolicyManager.getApplicationRestrictions(ComponentName,String)Bundle
android.app.admin.DevicePolicyManager.addUserRestriction(ComponentName,String)void
android.app.admin.DevicePolicyManager.clearUserRestriction(ComponentName,String)void
android.app.admin.DevicePolicyManager.getUserRestrictions(ComponentName)Bundle
android.app.admin.DevicePolicyManager.createAdminSupportIntent(String)Intent
android.app.admin.DevicePolicyManager.setApplicationHidden(ComponentName,String,boolean)boolean
android.app.admin.DevicePolicyManager.isApplicationHidden(ComponentName,String)boolean
android.app.admin.DevicePolicyManager.enableSystemApp(ComponentName,String)void
android.app.admin.DevicePolicyManager.enableSystemApp(ComponentName,Intent)int
android.app.admin.DevicePolicyManager.installExistingPackage(ComponentName,String)boolean
android.app.admin.DevicePolicyManager.setAccountManagementDisabled(ComponentName,String,boolean)void
android.app.admin.DevicePolicyManager.setLockTaskPackages(ComponentName,String)void
android.app.admin.DevicePolicyManager.isLockTaskPermitted(String)boolean
android.app.admin.DevicePolicyManager.setLockTaskFeatures(ComponentName,int)void
android.app.admin.DevicePolicyManager.getLockTaskFeatures(ComponentName)int
android.app.admin.DevicePolicyManager.setGlobalSetting(ComponentName,String,String)void
android.app.admin.DevicePolicyManager.setSystemSetting(ComponentName,String,String)void
android.app.admin.DevicePolicyManager.setTime(ComponentName,long)boolean
android.app.admin.DevicePolicyManager.setTimeZone(ComponentName,String)boolean
android.app.admin.DevicePolicyManager.setSecureSetting(ComponentName,String,String)void
android.app.admin.DevicePolicyManager.setRestrictionsProvider(ComponentName,ComponentName)void
android.app.admin.DevicePolicyManager.setMasterVolumeMuted(ComponentName,boolean)void
android.app.admin.DevicePolicyManager.isMasterVolumeMuted(ComponentName)boolean
android.app.admin.DevicePolicyManager.setUninstallBlocked(ComponentName,String,boolean)void
android.app.admin.DevicePolicyManager.isUninstallBlocked(ComponentName,String)boolean
android.app.admin.DevicePolicyManager.addCrossProfileWidgetProvider(ComponentName,String)boolean
android.app.admin.DevicePolicyManager.removeCrossProfileWidgetProvider(ComponentName,String)boolean
android.app.admin.DevicePolicyManager.getCrossProfileWidgetProviders(ComponentName)java.util.List
android.app.admin.DevicePolicyManager.setUserIcon(ComponentName,android.graphics.Bitmap)void
android.app.admin.DevicePolicyManager.setSystemUpdatePolicy(ComponentName,android.app.admin.SystemUpdatePolicy)void
android.app.admin.DevicePolicyManager.getSystemUpdatePolicy)android.app.admin.SystemUpdatePolicy
android.app.admin.DevicePolicyManager.setKeyguardDisabled(ComponentName,boolean)boolean
android.app.admin.DevicePolicyManager.setStatusBarDisabled(ComponentName,boolean)boolean
android.app.admin.DevicePolicyManager.getPendingSystemUpdate(ComponentName)android.app.admin.SystemUpdateInfo
android.app.admin.DevicePolicyManager.setPermissionPolicy(ComponentName,int)void
android.app.admin.DevicePolicyManager.getPermissionPolicy(ComponentName)int
android.app.admin.DevicePolicyManager.setPermissionGrantState(ComponentName,String,String,int)boolean
android.app.admin.DevicePolicyManager.getPermissionGrantState(ComponentName,String,String)int
android.app.admin.DevicePolicyManager.isProvisioningAllowed(String)boolean
android.app.admin.DevicePolicyManager.isManagedProfile(ComponentName)boolean
android.app.admin.DevicePolicyManager.getWifiMacAddress(ComponentName)String
android.app.admin.DevicePolicyManager.reboot(ComponentName)void
android.app.admin.DevicePolicyManager.setShortSupportMessage(ComponentName,CharSequence)void
android.app.admin.DevicePolicyManager.getShortSupportMessage(ComponentName)CharSequence
android.app.admin.DevicePolicyManager.setLongSupportMessage(ComponentName,CharSequence)void
android.app.admin.DevicePolicyManager.getLongSupportMessage(ComponentName)CharSequence
android.app.admin.DevicePolicyManager.getParentProfileInstance(ComponentName)android.app.admin.DevicePolicyManager
android.app.admin.DevicePolicyManager.setSecurityLoggingEnabled(ComponentName,boolean)void
android.app.admin.DevicePolicyManager.isSecurityLoggingEnabled(ComponentName)boolean
android.app.admin.DevicePolicyManager.retrieveSecurityLogs(ComponentName)java.util.List
android.app.admin.DevicePolicyManager.setMeteredDataDisabledPackages(ComponentName,java.util.List)java.util.List
android.app.admin.DevicePolicyManager.getMeteredDataDisabledPackages(ComponentName)java.util.List
android.app.admin.DevicePolicyManager.retrievePreRebootSecurityLogs(ComponentName)java.util.List
android.app.admin.DevicePolicyManager.setOrganizationColor(ComponentName,int)void
android.app.admin.DevicePolicyManager.getOrganizationColor(ComponentName)int
android.app.admin.DevicePolicyManager.setOrganizationName(ComponentName,CharSequence)void
android.app.admin.DevicePolicyManager.getOrganizationName(ComponentName)CharSequence
android.app.admin.DevicePolicyManager.setAffiliationIds(ComponentName,java.util.Set)void
android.app.admin.DevicePolicyManager.getAffiliationIds(ComponentName)java.util.Set
android.app.admin.DevicePolicyManager.isAffiliatedUser)boolean
android.app.admin.DevicePolicyManager.setBackupServiceEnabled(ComponentName,boolean)void
android.app.admin.DevicePolicyManager.isBackupServiceEnabled(ComponentName)boolean
android.app.admin.DevicePolicyManager.setNetworkLoggingEnabled(ComponentName,boolean)void
android.app.admin.DevicePolicyManager.isNetworkLoggingEnabled(ComponentName)boolean
android.app.admin.DevicePolicyManager.retrieveNetworkLogs(ComponentName,long)java.util.List
android.app.admin.DevicePolicyManager.bindDeviceAdminServiceAsUser(ComponentName,Intent,ServiceConnection,int,UserHandle)boolean
android.app.admin.DevicePolicyManager.getBindDeviceAdminTargetUsers(ComponentName)java.util.List
android.app.admin.DevicePolicyManager.clearApplicationUserData(ComponentName,String,java.util.concurrent.Executor,android.app.admin.DevicePolicyManager.OnClearApplicationUserDataListener)void
android.app.admin.DevicePolicyManager.setLogoutEnabled(ComponentName,boolean)void
android.app.admin.DevicePolicyManager.isLogoutEnabled)boolean
android.app.admin.DevicePolicyManager.transferOwnership(ComponentName,ComponentName,PersistableBundle)void
android.app.admin.DevicePolicyManager.setStartUserSessionMessage(ComponentName,CharSequence)void
android.app.admin.DevicePolicyManager.setEndUserSessionMessage(ComponentName,CharSequence)void
android.app.admin.DevicePolicyManager.getStartUserSessionMessage(ComponentName)CharSequence
android.app.admin.DevicePolicyManager.getEndUserSessionMessage(ComponentName)CharSequence
android.app.admin.DevicePolicyManager.addOverrideApn(ComponentName,android.telephony.data.ApnSetting)int
android.app.admin.DevicePolicyManager.updateOverrideApn(ComponentName,int,android.telephony.data.ApnSetting)boolean
android.app.admin.DevicePolicyManager.removeOverrideApn(ComponentName,int)boolean
android.app.admin.DevicePolicyManager.getOverrideApns(ComponentName)java.util.List
android.app.admin.DevicePolicyManager.setOverrideApnsEnabled(ComponentName,boolean)void
android.app.admin.DevicePolicyManager.isOverrideApnEnabled(ComponentName)boolean
android.app.admin.DevicePolicyManager.getTransferOwnershipBundle)PersistableBundle
android.app.admin.DevicePolicyManager.setGlobalPrivateDnsModeOpportunistic(ComponentName)int
android.app.admin.DevicePolicyManager.setGlobalPrivateDnsModeSpecifiedHost(ComponentName,String)int
android.app.admin.DevicePolicyManager.installSystemUpdate(ComponentName,android.net.Uri,java.util.concurrent.Executor,InstallSystemUpdateCallback)void
android.app.admin.DevicePolicyManager.getGlobalPrivateDnsMode(ComponentName)int
android.app.admin.DevicePolicyManager.getGlobalPrivateDnsHost(ComponentName)String
android.app.admin.DevicePolicyManager.setCrossProfileCalendarPackages(ComponentName,java.util.Set)void
android.app.admin.DevicePolicyManager.getCrossProfileCalendarPackages(ComponentName)java.util.Set
android.app.admin.DnsEvent.getHostname)String
android.app.admin.DnsEvent.getInetAddresses)java.util.List
android.app.admin.DnsEvent.getTotalResolvedAddressCount)int
android.app.admin.DnsEvent.toString)String
android.app.admin.DnsEvent.describeContents)int
android.app.admin.DnsEvent.writeToParcel(android.os.Parcel,int)void
android.app.admin.FreezePeriod.getStart)java.time.MonthDay
android.app.admin.FreezePeriod.getEnd)java.time.MonthDay
android.app.admin.FreezePeriod.toString)String
android.app.admin.NetworkEvent.getPackageName)String
android.app.admin.NetworkEvent.getTimestamp)long
android.app.admin.NetworkEvent.getId)long
android.app.admin.NetworkEvent.describeContents)int
android.app.admin.SecurityLog.getTimeNanos)long
android.app.admin.SecurityLog.getTag)int
android.app.admin.SecurityLog.getData)Object
android.app.admin.SecurityLog.getId)long
android.app.admin.SecurityLog.getLogLevel)int
android.app.admin.SecurityLog.describeContents)int
android.app.admin.SecurityLog.writeToParcel(android.os.Parcel,int)void
android.app.admin.SecurityLog.equals(Object)boolean
android.app.admin.SecurityLog.hashCode)int
android.app.admin.SystemUpdateInfo.getReceivedTime)long
android.app.admin.SystemUpdateInfo.getSecurityPatchState)int
android.app.admin.SystemUpdateInfo.describeContents)int
android.app.admin.SystemUpdateInfo.writeToParcel(android.os.Parcel,int)void
android.app.admin.SystemUpdateInfo.toString)String
android.app.admin.SystemUpdateInfo.equals(Object)boolean
android.app.admin.SystemUpdateInfo.hashCode)int
android.app.admin.SystemUpdatePolicy.getErrorCode)int
android.app.admin.SystemUpdatePolicy.describeContents)int
android.app.admin.SystemUpdatePolicy.writeToParcel(android.os.Parcel,int)void
android.app.admin.SystemUpdatePolicy.createAutomaticInstallPolicy)android.app.admin.SystemUpdatePolicy
android.app.admin.SystemUpdatePolicy.createWindowedInstallPolicy(int,int)android.app.admin.SystemUpdatePolicy
android.app.admin.SystemUpdatePolicy.createPostponeInstallPolicy)android.app.admin.SystemUpdatePolicy
android.app.admin.SystemUpdatePolicy.getPolicyType)int
android.app.admin.SystemUpdatePolicy.getInstallWindowStart)int
android.app.admin.SystemUpdatePolicy.getInstallWindowEnd)int
android.app.admin.SystemUpdatePolicy.setFreezePeriods(java.util.List)android.app.admin.SystemUpdatePolicy
android.app.admin.SystemUpdatePolicy.getFreezePeriods)java.util.List
android.app.admin.SystemUpdatePolicy.toString)String
android.app.admin.SystemUpdatePolicy.describeContents)int
android.app.admin.SystemUpdatePolicy.writeToParcel(android.os.Parcel,int)void
android.app.assist.AssistContent.setIntent(android.content.Intent)void
android.app.assist.AssistContent.getIntent)android.content.Intent
android.app.assist.AssistContent.isAppProvidedIntent)boolean
android.app.assist.AssistContent.setClipData(android.content.ClipData)void
android.app.assist.AssistContent.getClipData)android.content.ClipData
android.app.assist.AssistContent.setStructuredData(String)void
android.app.assist.AssistContent.getStructuredData)String
android.app.assist.AssistContent.setWebUri(android.net.Uri)void
android.app.assist.AssistContent.getWebUri)android.net.Uri
android.app.assist.AssistContent.isAppProvidedWebUri)boolean
android.app.assist.AssistContent.getExtras)Bundle
android.app.assist.AssistContent.describeContents)int
android.app.assist.AssistContent.writeToParcel(Parcel,int)void
android.app.assist.AssistStructure.getLeft)int
android.app.assist.AssistStructure.getTop)int
android.app.assist.AssistStructure.getWidth)int
android.app.assist.AssistStructure.getHeight)int
android.app.assist.AssistStructure.getTitle)CharSequence
android.app.assist.AssistStructure.getDisplayId)int
android.app.assist.AssistStructure.getRootViewNode)android.app.assist.AssistStructure.ViewNode
android.app.assist.AssistStructure.getId)int
android.app.assist.AssistStructure.getIdPackage)String
android.app.assist.AssistStructure.getIdType)String
android.app.assist.AssistStructure.getIdEntry)String
android.app.assist.AssistStructure.getAutofillId)android.view.autofill.AutofillId
android.app.assist.AssistStructure.getAutofillType)int
android.app.assist.AssistStructure.getAutofillValue)android.view.autofill.AutofillValue
android.app.assist.AssistStructure.getInputType)int
android.app.assist.AssistStructure.getLeft)int
android.app.assist.AssistStructure.getTop)int
android.app.assist.AssistStructure.getScrollX)int
android.app.assist.AssistStructure.getScrollY)int
android.app.assist.AssistStructure.getWidth)int
android.app.assist.AssistStructure.getHeight)int
android.app.assist.AssistStructure.getTransformation)android.graphics.Matrix
android.app.assist.AssistStructure.getElevation)float
android.app.assist.AssistStructure.getAlpha)float
android.app.assist.AssistStructure.getVisibility)int
android.app.assist.AssistStructure.isAssistBlocked)boolean
android.app.assist.AssistStructure.isEnabled)boolean
android.app.assist.AssistStructure.isClickable)boolean
android.app.assist.AssistStructure.isFocusable)boolean
android.app.assist.AssistStructure.isFocused)boolean
android.app.assist.AssistStructure.isAccessibilityFocused)boolean
android.app.assist.AssistStructure.isCheckable)boolean
android.app.assist.AssistStructure.isChecked)boolean
android.app.assist.AssistStructure.isSelected)boolean
android.app.assist.AssistStructure.isActivated)boolean
android.app.assist.AssistStructure.isOpaque)boolean
android.app.assist.AssistStructure.isLongClickable)boolean
android.app.assist.AssistStructure.isContextClickable)boolean
android.app.assist.AssistStructure.getClassName)String
android.app.assist.AssistStructure.getContentDescription)CharSequence
android.app.assist.AssistStructure.getWebDomain)String
android.app.assist.AssistStructure.getWebScheme)String
android.app.assist.AssistStructure.getLocaleList)LocaleList
android.app.assist.AssistStructure.getText)CharSequence
android.app.assist.AssistStructure.getTextSelectionStart)int
android.app.assist.AssistStructure.getTextSelectionEnd)int
android.app.assist.AssistStructure.getTextColor)int
android.app.assist.AssistStructure.getTextBackgroundColor)int
android.app.assist.AssistStructure.getTextSize)float
android.app.assist.AssistStructure.getTextStyle)int
android.app.assist.AssistStructure.getTextIdEntry)String
android.app.assist.AssistStructure.getHint)String
android.app.assist.AssistStructure.getExtras)Bundle
android.app.assist.AssistStructure.getChildCount)int
android.app.assist.AssistStructure.getChildAt(int)android.app.assist.AssistStructure.ViewNode
android.app.assist.AssistStructure.getMinTextEms)int
android.app.assist.AssistStructure.getMaxTextEms)int
android.app.assist.AssistStructure.getMaxTextLength)int
android.app.assist.AssistStructure.getImportantForAutofill)int
android.app.assist.AssistStructure.getAcquisitionStartTime)long
android.app.assist.AssistStructure.getAcquisitionEndTime)long
android.app.assist.AssistStructure.getActivityComponent)android.content.ComponentName
android.app.assist.AssistStructure.isHomeActivity)boolean
android.app.assist.AssistStructure.getWindowNodeCount)int
android.app.assist.AssistStructure.getWindowNodeAt(int)android.app.assist.AssistStructure.WindowNode
android.app.assist.AssistStructure.describeContents)int
android.app.assist.AssistStructure.writeToParcel(Parcel,int)void
android.app.backup.BackupAgent.onCreate)void
android.app.backup.BackupAgent.onDestroy)void
android.app.backup.BackupAgent.onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)void
android.app.backup.BackupAgent.onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)void
android.app.backup.BackupAgent.onRestore(android.app.backup.BackupDataInput,long,android.os.ParcelFileDescriptor)void
android.app.backup.BackupAgent.onFullBackup(android.app.backup.FullBackupDataOutput)void
android.app.backup.BackupAgent.onQuotaExceeded(long,long)void
android.app.backup.BackupAgent.fullBackupFile(java.io.File,android.app.backup.FullBackupDataOutput)void
android.app.backup.BackupAgent.onRestoreFinished)void
android.app.backup.BackupAgentHelper.onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)void
android.app.backup.BackupAgentHelper.onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)void
android.app.backup.BackupAgentHelper.addHelper(String,android.app.backup.BackupHelper)void
android.app.backup.BackupDataInput.finalize)void
android.app.backup.BackupDataInput.readNextHeader)boolean
android.app.backup.BackupDataInput.getKey)String
android.app.backup.BackupDataInput.getDataSize)int
android.app.backup.BackupDataInput.readEntityData(byte,int,int)int
android.app.backup.BackupDataInput.skipEntityData)void
android.app.backup.BackupDataInputStream.read)int
android.app.backup.BackupDataInputStream.read(byte,int,int)int
android.app.backup.BackupDataInputStream.read(byte)int
android.app.backup.BackupDataInputStream.getKey)String
android.app.backup.BackupDataInputStream.size)int
android.app.backup.BackupDataOutput.getQuota)long
android.app.backup.BackupDataOutput.getTransportFlags)int
android.app.backup.BackupDataOutput.writeEntityHeader(String,int)int
android.app.backup.BackupDataOutput.writeEntityData(byte,int)int
android.app.backup.BackupDataOutput.finalize)void
android.app.backup.BackupManager.dataChanged)void
android.app.backup.BackupManager.dataChanged(String)void
android.app.backup.BackupManager.requestRestore(android.app.backup.RestoreObserver)int
android.app.backup.BackupManager.getUserForAncestralSerialNumber(long)android.os.UserHandle
android.app.backup.FileBackupHelper.FileBackupHelper(android.content.Context,String)transient
android.app.backup.FileBackupHelper.performBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)void
android.app.backup.FileBackupHelper.restoreEntity(android.app.backup.BackupDataInputStream)void
android.app.backup.FileBackupHelper.writeNewStateDescription(android.os.ParcelFileDescriptor)void
android.app.backup.FullBackupDataOutput.getQuota)long
android.app.backup.FullBackupDataOutput.getTransportFlags)int
android.app.backup.RestoreObserver.restoreStarting(int)void
android.app.backup.RestoreObserver.onUpdate(int,String)void
android.app.backup.RestoreObserver.restoreFinished(int)void
android.app.backup.SharedPreferencesBackupHelper.SharedPreferencesBackupHelper(android.content.Context,String)transient
android.app.backup.SharedPreferencesBackupHelper.performBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)void
android.app.backup.SharedPreferencesBackupHelper.restoreEntity(android.app.backup.BackupDataInputStream)void
android.app.backup.SharedPreferencesBackupHelper.writeNewStateDescription(android.os.ParcelFileDescriptor)void
android.app.job.JobInfo.getUri)android.net.Uri
android.app.job.JobInfo.getFlags)int
android.app.job.JobInfo.equals(Object)boolean
android.app.job.JobInfo.hashCode)int
android.app.job.JobInfo.describeContents)int
android.app.job.JobInfo.writeToParcel(Parcel,int)void
android.app.job.JobInfo.setExtras(PersistableBundle)Builder
android.app.job.JobInfo.setTransientExtras(Bundle)Builder
android.app.job.JobInfo.setClipData(android.content.ClipData,int)Builder
android.app.job.JobInfo.setRequiredNetworkType(int)Builder
android.app.job.JobInfo.setRequiredNetwork(android.net.NetworkRequest)Builder
android.app.job.JobInfo.setEstimatedNetworkBytes(long,long)Builder
android.app.job.JobInfo.setRequiresCharging(boolean)Builder
android.app.job.JobInfo.setRequiresBatteryNotLow(boolean)Builder
android.app.job.JobInfo.setRequiresDeviceIdle(boolean)Builder
android.app.job.JobInfo.setRequiresStorageNotLow(boolean)Builder
android.app.job.JobInfo.addTriggerContentUri(TriggerContentUri)Builder
android.app.job.JobInfo.setTriggerContentUpdateDelay(long)Builder
android.app.job.JobInfo.setTriggerContentMaxDelay(long)Builder
android.app.job.JobInfo.setPeriodic(long)Builder
android.app.job.JobInfo.setPeriodic(long,long)Builder
android.app.job.JobInfo.setMinimumLatency(long)Builder
android.app.job.JobInfo.setOverrideDeadline(long)Builder
android.app.job.JobInfo.setBackoffCriteria(long,int)Builder
android.app.job.JobInfo.setImportantWhileForeground(boolean)Builder
android.app.job.JobInfo.setPrefetch(boolean)Builder
android.app.job.JobInfo.setPersisted(boolean)Builder
android.app.job.JobInfo.build)android.app.job.JobInfo
android.app.job.JobInfo.getMinPeriodMillis)long
android.app.job.JobInfo.getMinFlexMillis)long
android.app.job.JobInfo.getId)int
android.app.job.JobInfo.getExtras)PersistableBundle
android.app.job.JobInfo.getTransientExtras)Bundle
android.app.job.JobInfo.getClipData)android.content.ClipData
android.app.job.JobInfo.getClipGrantFlags)int
android.app.job.JobInfo.getService)android.content.ComponentName
android.app.job.JobInfo.isRequireCharging)boolean
android.app.job.JobInfo.isRequireBatteryNotLow)boolean
android.app.job.JobInfo.isRequireDeviceIdle)boolean
android.app.job.JobInfo.isRequireStorageNotLow)boolean
android.app.job.JobInfo.getTriggerContentUpdateDelay)long
android.app.job.JobInfo.getTriggerContentMaxDelay)long
android.app.job.JobInfo.getNetworkType)int
android.app.job.JobInfo.getRequiredNetwork)android.net.NetworkRequest
android.app.job.JobInfo.getEstimatedNetworkDownloadBytes)long
android.app.job.JobInfo.getEstimatedNetworkUploadBytes)long
android.app.job.JobInfo.getMinLatencyMillis)long
android.app.job.JobInfo.getMaxExecutionDelayMillis)long
android.app.job.JobInfo.isPeriodic)boolean
android.app.job.JobInfo.isPersisted)boolean
android.app.job.JobInfo.getIntervalMillis)long
android.app.job.JobInfo.getFlexMillis)long
android.app.job.JobInfo.getInitialBackoffMillis)long
android.app.job.JobInfo.getBackoffPolicy)int
android.app.job.JobInfo.isImportantWhileForeground)boolean
android.app.job.JobInfo.isPrefetch)boolean
android.app.job.JobInfo.equals(Object)boolean
android.app.job.JobInfo.hashCode)int
android.app.job.JobInfo.describeContents)int
android.app.job.JobInfo.writeToParcel(Parcel,int)void
android.app.job.JobInfo.toString)String
android.app.job.JobParameters.getJobId)int
android.app.job.JobParameters.getExtras)PersistableBundle
android.app.job.JobParameters.getTransientExtras)Bundle
android.app.job.JobParameters.getClipData)android.content.ClipData
android.app.job.JobParameters.getClipGrantFlags)int
android.app.job.JobParameters.isOverrideDeadlineExpired)boolean
android.app.job.JobParameters.getNetwork)android.net.Network
android.app.job.JobParameters.dequeueWork)android.app.job.JobWorkItem
android.app.job.JobParameters.completeWork(android.app.job.JobWorkItem)void
android.app.job.JobParameters.describeContents)int
android.app.job.JobParameters.writeToParcel(Parcel,int)void
android.app.job.JobService.onBind(android.content.Intent)android.os.IBinder
android.app.job.JobService.jobFinished(android.app.job.JobParameters,boolean)void
android.app.job.JobServiceEngine.getBinder)android.os.IBinder
android.app.job.JobServiceEngine.jobFinished(android.app.job.JobParameters,boolean)void
android.app.job.JobWorkItem.getIntent)android.content.Intent
android.app.job.JobWorkItem.getEstimatedNetworkDownloadBytes)long
android.app.job.JobWorkItem.getEstimatedNetworkUploadBytes)long
android.app.job.JobWorkItem.getDeliveryCount)int
android.app.job.JobWorkItem.toString)String
android.app.job.JobWorkItem.describeContents)int
android.app.job.JobWorkItem.writeToParcel(android.os.Parcel,int)void
android.app.role.RoleManager.createRequestRoleIntent(String)android.content.Intent
android.app.role.RoleManager.isRoleAvailable(String)boolean
android.app.role.RoleManager.isRoleHeld(String)boolean
android.app.slice.Slice.setCallerNeeded(boolean)android.app.slice.Slice.Builder
android.app.slice.Slice.addHints(java.util.List)android.app.slice.Slice.Builder
android.app.slice.Slice.addSubSlice(android.app.slice.Slice,String)android.app.slice.Slice.Builder
android.app.slice.Slice.addAction(android.app.PendingIntent,android.app.slice.Slice,String)android.app.slice.Slice.Builder
android.app.slice.Slice.addText(CharSequence,String,java.util.List)android.app.slice.Slice.Builder
android.app.slice.Slice.addIcon(android.graphics.drawable.Icon,String,java.util.List)android.app.slice.Slice.Builder
android.app.slice.Slice.addRemoteInput(android.app.RemoteInput,String,java.util.List)android.app.slice.Slice.Builder
android.app.slice.Slice.addInt(int,String,java.util.List)android.app.slice.Slice.Builder
android.app.slice.Slice.addLong(long,String,java.util.List)android.app.slice.Slice.Builder
android.app.slice.Slice.addBundle(Bundle,String,java.util.List)android.app.slice.Slice.Builder
android.app.slice.Slice.build)android.app.slice.Slice
android.app.slice.Slice.getSpec)android.app.slice.SliceSpec
android.app.slice.Slice.getUri)android.net.Uri
android.app.slice.Slice.getItems)java.util.List
android.app.slice.Slice.getHints)java.util.List
android.app.slice.Slice.writeToParcel(Parcel,int)void
android.app.slice.Slice.describeContents)int
android.app.slice.Slice.isCallerNeeded)boolean
android.app.slice.Slice.toString)String
android.app.slice.SliceItem.getHints)java.util.List
android.app.slice.SliceItem.getFormat)String
android.app.slice.SliceItem.getSubType)String
android.app.slice.SliceItem.getText)CharSequence
android.app.slice.SliceItem.getBundle)Bundle
android.app.slice.SliceItem.getIcon)android.graphics.drawable.Icon
android.app.slice.SliceItem.getAction)android.app.PendingIntent
android.app.slice.SliceItem.getRemoteInput)android.app.RemoteInput
android.app.slice.SliceItem.getInt)int
android.app.slice.SliceItem.getSlice)android.app.slice.Slice
android.app.slice.SliceItem.getLong)long
android.app.slice.SliceItem.hasHint(String)boolean
android.app.slice.SliceItem.describeContents)int
android.app.slice.SliceItem.writeToParcel(Parcel,int)void
android.app.slice.SliceManager.pinSlice(android.net.Uri,Set)void
android.app.slice.SliceManager.unpinSlice(android.net.Uri)void
android.app.slice.SliceManager.getPinnedSpecs(android.net.Uri)Set
android.app.slice.SliceManager.getPinnedSlices)List
android.app.slice.SliceManager.getSliceDescendants(android.net.Uri)Collection
android.app.slice.SliceManager.bindSlice(android.net.Uri,Set)android.app.slice.Slice
android.app.slice.SliceManager.mapIntentToUri(android.content.Intent)android.net.Uri
android.app.slice.SliceManager.bindSlice(android.content.Intent,Set)android.app.slice.Slice
android.app.slice.SliceManager.checkSlicePermission(android.net.Uri,int,int)int
android.app.slice.SliceManager.grantSlicePermission(String,android.net.Uri)void
android.app.slice.SliceManager.revokeSlicePermission(String,android.net.Uri)void
android.app.slice.SliceMetrics.logVisible)void
android.app.slice.SliceMetrics.logHidden)void
android.app.slice.SliceMetrics.logTouch(int,android.net.Uri)void
android.app.slice.SliceProvider.SliceProvider(String)transient
android.app.slice.SliceProvider.attachInfo(Context,android.content.pm.ProviderInfo)void
android.app.slice.SliceProvider.onBindSlice(android.net.Uri,java.util.Set)android.app.slice.Slice
android.app.slice.SliceProvider.onSlicePinned(android.net.Uri)void
android.app.slice.SliceProvider.onSliceUnpinned(android.net.Uri)void
android.app.slice.SliceProvider.onGetSliceDescendants(android.net.Uri)java.util.Collection
android.app.slice.SliceProvider.onMapIntentToUri(Intent)android.net.Uri
android.app.slice.SliceProvider.onCreatePermissionRequest(android.net.Uri)android.app.PendingIntent
android.app.slice.SliceProvider.update(android.net.Uri,ContentValues,String,String)int
android.app.slice.SliceProvider.delete(android.net.Uri,String,String)int
android.app.slice.SliceProvider.query(android.net.Uri,String,String,String,String)android.database.Cursor
android.app.slice.SliceProvider.query(android.net.Uri,String,String,String,String,android.os.CancellationSignal)android.database.Cursor
android.app.slice.SliceProvider.query(android.net.Uri,String,android.os.Bundle,android.os.CancellationSignal)android.database.Cursor
android.app.slice.SliceProvider.insert(android.net.Uri,ContentValues)android.net.Uri
android.app.slice.SliceProvider.getType(android.net.Uri)String
android.app.slice.SliceProvider.call(String,String,android.os.Bundle)android.os.Bundle
android.app.slice.SliceSpec.describeContents)int
android.app.slice.SliceSpec.writeToParcel(android.os.Parcel,int)void
android.app.slice.SliceSpec.getType)String
android.app.slice.SliceSpec.getRevision)int
android.app.slice.SliceSpec.canRender(android.app.slice.SliceSpec)boolean
android.app.slice.SliceSpec.equals(Object)boolean
android.app.slice.SliceSpec.toString)String
android.app.usage.ConfigurationStats.getConfiguration)android.content.res.Configuration
android.app.usage.ConfigurationStats.getFirstTimeStamp)long
android.app.usage.ConfigurationStats.getLastTimeStamp)long
android.app.usage.ConfigurationStats.getLastTimeActive)long
android.app.usage.ConfigurationStats.getTotalTimeActive)long
android.app.usage.ConfigurationStats.getActivationCount)int
android.app.usage.ConfigurationStats.describeContents)int
android.app.usage.ConfigurationStats.writeToParcel(android.os.Parcel,int)void
android.app.usage.EventStats.getEventType)int
android.app.usage.EventStats.getFirstTimeStamp)long
android.app.usage.EventStats.getLastTimeStamp)long
android.app.usage.EventStats.getLastEventTime)long
android.app.usage.EventStats.getCount)int
android.app.usage.EventStats.getTotalTime)long
android.app.usage.EventStats.add(android.app.usage.EventStats)void
android.app.usage.EventStats.describeContents)int
android.app.usage.EventStats.writeToParcel(android.os.Parcel,int)void
android.app.usage.ExternalStorageStats.getTotalBytes)long
android.app.usage.ExternalStorageStats.getAudioBytes)long
android.app.usage.ExternalStorageStats.getVideoBytes)long
android.app.usage.ExternalStorageStats.getImageBytes)long
android.app.usage.ExternalStorageStats.getAppBytes)long
android.app.usage.ExternalStorageStats.describeContents)int
android.app.usage.ExternalStorageStats.writeToParcel(android.os.Parcel,int)void
android.app.usage.NetworkStats.getUid)int
android.app.usage.NetworkStats.getTag)int
android.app.usage.NetworkStats.getState)int
android.app.usage.NetworkStats.getMetered)int
android.app.usage.NetworkStats.getRoaming)int
android.app.usage.NetworkStats.getDefaultNetworkStatus)int
android.app.usage.NetworkStats.getStartTimeStamp)long
android.app.usage.NetworkStats.getEndTimeStamp)long
android.app.usage.NetworkStats.getRxBytes)long
android.app.usage.NetworkStats.getTxBytes)long
android.app.usage.NetworkStats.getRxPackets)long
android.app.usage.NetworkStats.getTxPackets)long
android.app.usage.NetworkStats.finalize)void
android.app.usage.NetworkStats.getNextBucket(android.app.usage.NetworkStats.Bucket)boolean
android.app.usage.NetworkStats.hasNextBucket)boolean
android.app.usage.NetworkStats.close)void
android.app.usage.NetworkStatsManager.querySummary(int,String,long,long)android.app.usage.NetworkStats
android.app.usage.NetworkStatsManager.queryDetailsForUid(int,String,long,long,int)android.app.usage.NetworkStats
android.app.usage.NetworkStatsManager.queryDetails(int,String,long,long)android.app.usage.NetworkStats
android.app.usage.NetworkStatsManager.registerUsageCallback(int,String,long,UsageCallback)void
android.app.usage.NetworkStatsManager.registerUsageCallback(int,String,long,UsageCallback,android.os.Handler)void
android.app.usage.NetworkStatsManager.unregisterUsageCallback(UsageCallback)void
android.app.usage.StorageStats.getAppBytes)long
android.app.usage.StorageStats.getDataBytes)long
android.app.usage.StorageStats.getCacheBytes)long
android.app.usage.StorageStats.describeContents)int
android.app.usage.StorageStats.writeToParcel(android.os.Parcel,int)void
android.app.usage.StorageStatsManager.getTotalBytes(java.util.UUID)long
android.app.usage.StorageStatsManager.getFreeBytes(java.util.UUID)long
android.app.usage.StorageStatsManager.queryStatsForPackage(java.util.UUID,String,android.os.UserHandle)android.app.usage.StorageStats
android.app.usage.StorageStatsManager.queryStatsForUid(java.util.UUID,int)android.app.usage.StorageStats
android.app.usage.StorageStatsManager.queryStatsForUser(java.util.UUID,android.os.UserHandle)android.app.usage.StorageStats
android.app.usage.StorageStatsManager.queryExternalStatsForUser(java.util.UUID,android.os.UserHandle)android.app.usage.ExternalStorageStats
android.app.usage.UsageEvents.getPackageName)String
android.app.usage.UsageEvents.getClassName)String
android.app.usage.UsageEvents.getTimeStamp)long
android.app.usage.UsageEvents.getEventType)int
android.app.usage.UsageEvents.getConfiguration)android.content.res.Configuration
android.app.usage.UsageEvents.getShortcutId)String
android.app.usage.UsageEvents.getAppStandbyBucket)int
android.app.usage.UsageEvents.hasNextEvent)boolean
android.app.usage.UsageEvents.getNextEvent(Event)boolean
android.app.usage.UsageEvents.describeContents)int
android.app.usage.UsageEvents.writeToParcel(android.os.Parcel,int)void
android.app.usage.UsageStats.getPackageName)String
android.app.usage.UsageStats.getFirstTimeStamp)long
android.app.usage.UsageStats.getLastTimeStamp)long
android.app.usage.UsageStats.getLastTimeUsed)long
android.app.usage.UsageStats.getLastTimeVisible)long
android.app.usage.UsageStats.getTotalTimeInForeground)long
android.app.usage.UsageStats.getTotalTimeVisible)long
android.app.usage.UsageStats.getLastTimeForegroundServiceUsed)long
android.app.usage.UsageStats.getTotalTimeForegroundServiceUsed)long
android.app.usage.UsageStats.add(android.app.usage.UsageStats)void
android.app.usage.UsageStats.describeContents)int
android.app.usage.UsageStats.writeToParcel(android.os.Parcel,int)void
android.app.usage.UsageStatsManager.queryUsageStats(int,long,long)java.util.List
android.app.usage.UsageStatsManager.queryConfigurations(int,long,long)java.util.List
android.app.usage.UsageStatsManager.queryEventStats(int,long,long)java.util.List
android.app.usage.UsageStatsManager.queryEvents(long,long)android.app.usage.UsageEvents
android.app.usage.UsageStatsManager.queryEventsForSelf(long,long)android.app.usage.UsageEvents
android.app.usage.UsageStatsManager.queryAndAggregateUsageStats(long,long)java.util.Map
android.app.usage.UsageStatsManager.isAppInactive(String)boolean
android.app.usage.UsageStatsManager.getAppStandbyBucket)int
android.appwidget.AppWidgetHost.startListening)void
android.appwidget.AppWidgetHost.stopListening)void
android.appwidget.AppWidgetHost.allocateAppWidgetId)int
android.appwidget.AppWidgetHost.startAppWidgetConfigureActivityForResult(android.app.Activity,int,int,int,android.os.Bundle)void
android.appwidget.AppWidgetHost.deleteAppWidgetId(int)void
android.appwidget.AppWidgetHost.deleteHost)void
android.appwidget.AppWidgetHost.deleteAllHosts)void
android.appwidget.AppWidgetHost.createView(android.content.Context,int,android.appwidget.AppWidgetProviderInfo)android.appwidget.AppWidgetHostView
android.appwidget.AppWidgetHost.onCreateView(android.content.Context,int,android.appwidget.AppWidgetProviderInfo)android.appwidget.AppWidgetHostView
android.appwidget.AppWidgetHost.onProviderChanged(int,android.appwidget.AppWidgetProviderInfo)void
android.appwidget.AppWidgetHost.onProvidersChanged)void
android.appwidget.AppWidgetHost.clearViews)void
android.appwidget.AppWidgetHostView.setAppWidget(int,android.appwidget.AppWidgetProviderInfo)void
android.appwidget.AppWidgetHostView.getDefaultPaddingForWidget(android.content.Context,android.content.ComponentName,android.graphics.Rect)android.graphics.Rect
android.appwidget.AppWidgetHostView.getAppWidgetId)int
android.appwidget.AppWidgetHostView.getAppWidgetInfo)android.appwidget.AppWidgetProviderInfo
android.appwidget.AppWidgetHostView.dispatchSaveInstanceState(android.util.SparseArray)void
android.appwidget.AppWidgetHostView.dispatchRestoreInstanceState(android.util.SparseArray)void
android.appwidget.AppWidgetHostView.onLayout(boolean,int,int,int,int)void
android.appwidget.AppWidgetHostView.updateAppWidgetSize(android.os.Bundle,int,int,int,int)void
android.appwidget.AppWidgetHostView.updateAppWidgetOptions(android.os.Bundle)void
android.appwidget.AppWidgetHostView.setExecutor(java.util.concurrent.Executor)void
android.appwidget.AppWidgetHostView.setOnLightBackground(boolean)void
android.appwidget.AppWidgetHostView.updateAppWidget(android.widget.RemoteViews)void
android.appwidget.AppWidgetHostView.prepareView(android.view.View)void
android.appwidget.AppWidgetHostView.getDefaultView)android.view.View
android.appwidget.AppWidgetHostView.getErrorView)android.view.View
android.appwidget.AppWidgetManager.getInstance(android.content.Context)android.appwidget.AppWidgetManager
android.appwidget.AppWidgetManager.updateAppWidget(int,android.widget.RemoteViews)void
android.appwidget.AppWidgetManager.updateAppWidgetOptions(int,android.os.Bundle)void
android.appwidget.AppWidgetManager.getAppWidgetOptions(int)android.os.Bundle
android.appwidget.AppWidgetManager.updateAppWidget(int,android.widget.RemoteViews)void
android.appwidget.AppWidgetManager.partiallyUpdateAppWidget(int,android.widget.RemoteViews)void
android.appwidget.AppWidgetManager.partiallyUpdateAppWidget(int,android.widget.RemoteViews)void
android.appwidget.AppWidgetManager.updateAppWidget(android.content.ComponentName,android.widget.RemoteViews)void
android.appwidget.AppWidgetManager.updateAppWidgetProviderInfo(android.content.ComponentName,String)void
android.appwidget.AppWidgetManager.notifyAppWidgetViewDataChanged(int,int)void
android.appwidget.AppWidgetManager.notifyAppWidgetViewDataChanged(int,int)void
android.appwidget.AppWidgetManager.getInstalledProvidersForProfile(android.os.UserHandle)java.util.List
android.appwidget.AppWidgetManager.getInstalledProvidersForPackage(String,android.os.UserHandle)java.util.List
android.appwidget.AppWidgetManager.getInstalledProviders)java.util.List
android.appwidget.AppWidgetManager.getAppWidgetInfo(int)android.appwidget.AppWidgetProviderInfo
android.appwidget.AppWidgetManager.bindAppWidgetIdIfAllowed(int,android.content.ComponentName)boolean
android.appwidget.AppWidgetManager.bindAppWidgetIdIfAllowed(int,android.content.ComponentName,android.os.Bundle)boolean
android.appwidget.AppWidgetManager.bindAppWidgetIdIfAllowed(int,android.os.UserHandle,android.content.ComponentName,android.os.Bundle)boolean
android.appwidget.AppWidgetManager.isRequestPinAppWidgetSupported)boolean
android.appwidget.AppWidgetManager.requestPinAppWidget(android.content.ComponentName,android.os.Bundle,android.app.PendingIntent)boolean
android.appwidget.AppWidgetProvider.onReceive(Context,Intent)void
android.appwidget.AppWidgetProvider.onUpdate(Context,android.appwidget.AppWidgetManager,int)void
android.appwidget.AppWidgetProvider.onAppWidgetOptionsChanged(Context,android.appwidget.AppWidgetManager,int,android.os.Bundle)void
android.appwidget.AppWidgetProvider.onDeleted(Context,int)void
android.appwidget.AppWidgetProvider.onEnabled(Context)void
android.appwidget.AppWidgetProvider.onDisabled(Context)void
android.appwidget.AppWidgetProvider.onRestored(Context,int,int)void
android.appwidget.AppWidgetProviderInfo.loadLabel(android.content.pm.PackageManager)String
android.appwidget.AppWidgetProviderInfo.loadIcon(android.content.Context,int)android.graphics.drawable.Drawable
android.appwidget.AppWidgetProviderInfo.loadPreviewImage(android.content.Context,int)android.graphics.drawable.Drawable
android.appwidget.AppWidgetProviderInfo.getProfile)UserHandle
android.appwidget.AppWidgetProviderInfo.writeToParcel(Parcel,int)void
android.appwidget.AppWidgetProviderInfo.clone)android.appwidget.AppWidgetProviderInfo
android.appwidget.AppWidgetProviderInfo.describeContents)int
android.appwidget.AppWidgetProviderInfo.toString)String
android.bluetooth.BluetoothA2dp.finalize)void
android.bluetooth.BluetoothA2dp.getConnectedDevices)java.util.List
android.bluetooth.BluetoothA2dp.getDevicesMatchingConnectionStates(int)java.util.List
android.bluetooth.BluetoothA2dp.getConnectionState(android.bluetooth.BluetoothDevice)int
android.bluetooth.BluetoothA2dp.isA2dpPlaying(android.bluetooth.BluetoothDevice)boolean
android.bluetooth.BluetoothAdapter.getRemoteDevice(String)android.bluetooth.BluetoothDevice
android.bluetooth.BluetoothAdapter.getRemoteDevice(byte)android.bluetooth.BluetoothDevice
android.bluetooth.BluetoothAdapter.getBluetoothLeAdvertiser)android.bluetooth.le.BluetoothLeAdvertiser
android.bluetooth.BluetoothAdapter.getBluetoothLeScanner)android.bluetooth.le.BluetoothLeScanner
android.bluetooth.BluetoothAdapter.isEnabled)boolean
android.bluetooth.BluetoothAdapter.getState)int
android.bluetooth.BluetoothAdapter.enable)boolean
android.bluetooth.BluetoothAdapter.disable)boolean
android.bluetooth.BluetoothAdapter.getAddress)String
android.bluetooth.BluetoothAdapter.getName)String
android.bluetooth.BluetoothAdapter.setName(String)boolean
android.bluetooth.BluetoothAdapter.getScanMode)int
android.bluetooth.BluetoothAdapter.startDiscovery)boolean
android.bluetooth.BluetoothAdapter.cancelDiscovery)boolean
android.bluetooth.BluetoothAdapter.isDiscovering)boolean
android.bluetooth.BluetoothAdapter.isMultipleAdvertisementSupported)boolean
android.bluetooth.BluetoothAdapter.isOffloadedFilteringSupported)boolean
android.bluetooth.BluetoothAdapter.isOffloadedScanBatchingSupported)boolean
android.bluetooth.BluetoothAdapter.isLe2MPhySupported)boolean
android.bluetooth.BluetoothAdapter.isLeCodedPhySupported)boolean
android.bluetooth.BluetoothAdapter.isLeExtendedAdvertisingSupported)boolean
android.bluetooth.BluetoothAdapter.isLePeriodicAdvertisingSupported)boolean
android.bluetooth.BluetoothAdapter.getLeMaximumAdvertisingDataLength)int
android.bluetooth.BluetoothAdapter.getBondedDevices)java.util.Set
android.bluetooth.BluetoothAdapter.getProfileConnectionState(int)int
android.bluetooth.BluetoothAdapter.listenUsingRfcommWithServiceRecord(String,java.util.UUID)android.bluetooth.BluetoothServerSocket
android.bluetooth.BluetoothAdapter.listenUsingInsecureRfcommWithServiceRecord(String,java.util.UUID)android.bluetooth.BluetoothServerSocket
android.bluetooth.BluetoothAdapter.getProfileProxy(android.content.Context,BluetoothProfile.ServiceListener,int)boolean
android.bluetooth.BluetoothAdapter.closeProfileProxy(int,android.bluetooth.BluetoothProfile)void
android.bluetooth.BluetoothAdapter.finalize)void
android.bluetooth.BluetoothAdapter.checkBluetoothAddress(String)boolean
android.bluetooth.BluetoothAdapter.startLeScan(android.bluetooth.BluetoothAdapter.LeScanCallback)boolean
android.bluetooth.BluetoothAdapter.startLeScan(java.util.UUID,android.bluetooth.BluetoothAdapter.LeScanCallback)boolean
android.bluetooth.BluetoothAdapter.stopLeScan(android.bluetooth.BluetoothAdapter.LeScanCallback)void
android.bluetooth.BluetoothAdapter.listenUsingL2capChannel)android.bluetooth.BluetoothServerSocket
android.bluetooth.BluetoothAdapter.listenUsingInsecureL2capChannel)android.bluetooth.BluetoothServerSocket
android.bluetooth.BluetoothClass.equals(Object)boolean
android.bluetooth.BluetoothClass.hashCode)int
android.bluetooth.BluetoothClass.toString)String
android.bluetooth.BluetoothClass.describeContents)int
android.bluetooth.BluetoothClass.writeToParcel(android.os.Parcel,int)void
android.bluetooth.BluetoothClass.hasService(int)boolean
android.bluetooth.BluetoothClass.getMajorDeviceClass)int
android.bluetooth.BluetoothClass.getDeviceClass)int
android.bluetooth.BluetoothDevice.equals(Object)boolean
android.bluetooth.BluetoothDevice.hashCode)int
android.bluetooth.BluetoothDevice.toString)String
android.bluetooth.BluetoothDevice.describeContents)int
android.bluetooth.BluetoothDevice.writeToParcel(Parcel,int)void
android.bluetooth.BluetoothDevice.getAddress)String
android.bluetooth.BluetoothDevice.getName)String
android.bluetooth.BluetoothDevice.getType)int
android.bluetooth.BluetoothDevice.createBond)boolean
android.bluetooth.BluetoothDevice.getBondState)int
android.bluetooth.BluetoothDevice.getBluetoothClass)android.bluetooth.BluetoothClass
android.bluetooth.BluetoothDevice.fetchUuidsWithSdp)boolean
android.bluetooth.BluetoothDevice.setPin(byte)boolean
android.bluetooth.BluetoothDevice.setPairingConfirmation(boolean)boolean
android.bluetooth.BluetoothDevice.createRfcommSocketToServiceRecord(java.util.UUID)android.bluetooth.BluetoothSocket
android.bluetooth.BluetoothDevice.createInsecureRfcommSocketToServiceRecord(java.util.UUID)android.bluetooth.BluetoothSocket
android.bluetooth.BluetoothDevice.connectGatt(android.content.Context,boolean,android.bluetooth.BluetoothGattCallback)android.bluetooth.BluetoothGatt
android.bluetooth.BluetoothDevice.connectGatt(android.content.Context,boolean,android.bluetooth.BluetoothGattCallback,int)android.bluetooth.BluetoothGatt
android.bluetooth.BluetoothDevice.connectGatt(android.content.Context,boolean,android.bluetooth.BluetoothGattCallback,int,int)android.bluetooth.BluetoothGatt
android.bluetooth.BluetoothDevice.connectGatt(android.content.Context,boolean,android.bluetooth.BluetoothGattCallback,int,int,Handler)android.bluetooth.BluetoothGatt
android.bluetooth.BluetoothDevice.createL2capChannel(int)android.bluetooth.BluetoothSocket
android.bluetooth.BluetoothDevice.createInsecureL2capChannel(int)android.bluetooth.BluetoothSocket
android.bluetooth.BluetoothGatt.close)void
android.bluetooth.BluetoothGatt.disconnect)void
android.bluetooth.BluetoothGatt.connect)boolean
android.bluetooth.BluetoothGatt.setPreferredPhy(int,int,int)void
android.bluetooth.BluetoothGatt.readPhy)void
android.bluetooth.BluetoothGatt.getDevice)android.bluetooth.BluetoothDevice
android.bluetooth.BluetoothGatt.discoverServices)boolean
android.bluetooth.BluetoothGatt.getServices)java.util.List
android.bluetooth.BluetoothGatt.getService(java.util.UUID)android.bluetooth.BluetoothGattService
android.bluetooth.BluetoothGatt.readCharacteristic(android.bluetooth.BluetoothGattCharacteristic)boolean
android.bluetooth.BluetoothGatt.writeCharacteristic(android.bluetooth.BluetoothGattCharacteristic)boolean
android.bluetooth.BluetoothGatt.readDescriptor(android.bluetooth.BluetoothGattDescriptor)boolean
android.bluetooth.BluetoothGatt.writeDescriptor(android.bluetooth.BluetoothGattDescriptor)boolean
android.bluetooth.BluetoothGatt.beginReliableWrite)boolean
android.bluetooth.BluetoothGatt.executeReliableWrite)boolean
android.bluetooth.BluetoothGatt.abortReliableWrite)void
android.bluetooth.BluetoothGatt.abortReliableWrite(android.bluetooth.BluetoothDevice)void
android.bluetooth.BluetoothGatt.setCharacteristicNotification(android.bluetooth.BluetoothGattCharacteristic,boolean)boolean
android.bluetooth.BluetoothGatt.readRemoteRssi)boolean
android.bluetooth.BluetoothGatt.requestMtu(int)boolean
android.bluetooth.BluetoothGatt.requestConnectionPriority(int)boolean
android.bluetooth.BluetoothGatt.getConnectionState(android.bluetooth.BluetoothDevice)int
android.bluetooth.BluetoothGatt.getConnectedDevices)java.util.List
android.bluetooth.BluetoothGatt.getDevicesMatchingConnectionStates(int)java.util.List
android.bluetooth.BluetoothGattCallback.onPhyUpdate(android.bluetooth.BluetoothGatt,int,int,int)void
android.bluetooth.BluetoothGattCallback.onPhyRead(android.bluetooth.BluetoothGatt,int,int,int)void
android.bluetooth.BluetoothGattCallback.onConnectionStateChange(android.bluetooth.BluetoothGatt,int,int)void
android.bluetooth.BluetoothGattCallback.onServicesDiscovered(android.bluetooth.BluetoothGatt,int)void
android.bluetooth.BluetoothGattCallback.onCharacteristicRead(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,int)void
android.bluetooth.BluetoothGattCallback.onCharacteristicWrite(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,int)void
android.bluetooth.BluetoothGattCallback.onCharacteristicChanged(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic)void
android.bluetooth.BluetoothGattCallback.onDescriptorRead(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattDescriptor,int)void
android.bluetooth.BluetoothGattCallback.onDescriptorWrite(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattDescriptor,int)void
android.bluetooth.BluetoothGattCallback.onReliableWriteCompleted(android.bluetooth.BluetoothGatt,int)void
android.bluetooth.BluetoothGattCallback.onReadRemoteRssi(android.bluetooth.BluetoothGatt,int,int)void
android.bluetooth.BluetoothGattCallback.onMtuChanged(android.bluetooth.BluetoothGatt,int,int)void
android.bluetooth.BluetoothGattCharacteristic.describeContents)int
android.bluetooth.BluetoothGattCharacteristic.writeToParcel(android.os.Parcel,int)void
android.bluetooth.BluetoothGattCharacteristic.addDescriptor(android.bluetooth.BluetoothGattDescriptor)boolean
android.bluetooth.BluetoothGattCharacteristic.getService)android.bluetooth.BluetoothGattService
android.bluetooth.BluetoothGattCharacteristic.getUuid)java.util.UUID
android.bluetooth.BluetoothGattCharacteristic.getInstanceId)int
android.bluetooth.BluetoothGattCharacteristic.getProperties)int
android.bluetooth.BluetoothGattCharacteristic.getPermissions)int
android.bluetooth.BluetoothGattCharacteristic.getWriteType)int
android.bluetooth.BluetoothGattCharacteristic.setWriteType(int)void
android.bluetooth.BluetoothGattCharacteristic.getDescriptors)java.util.List
android.bluetooth.BluetoothGattCharacteristic.getDescriptor(java.util.UUID)android.bluetooth.BluetoothGattDescriptor
android.bluetooth.BluetoothGattCharacteristic.getIntValue(int,int)Integer
android.bluetooth.BluetoothGattCharacteristic.getFloatValue(int,int)Float
android.bluetooth.BluetoothGattCharacteristic.getStringValue(int)String
android.bluetooth.BluetoothGattCharacteristic.setValue(byte)boolean
android.bluetooth.BluetoothGattCharacteristic.setValue(int,int,int)boolean
android.bluetooth.BluetoothGattCharacteristic.setValue(int,int,int,int)boolean
android.bluetooth.BluetoothGattCharacteristic.setValue(String)boolean
android.bluetooth.BluetoothGattDescriptor.describeContents)int
android.bluetooth.BluetoothGattDescriptor.writeToParcel(android.os.Parcel,int)void
android.bluetooth.BluetoothGattDescriptor.getCharacteristic)android.bluetooth.BluetoothGattCharacteristic
android.bluetooth.BluetoothGattDescriptor.getUuid)java.util.UUID
android.bluetooth.BluetoothGattDescriptor.getPermissions)int
android.bluetooth.BluetoothGattDescriptor.setValue(byte)boolean
android.bluetooth.BluetoothGattServer.close)void
android.bluetooth.BluetoothGattServer.connect(android.bluetooth.BluetoothDevice,boolean)boolean
android.bluetooth.BluetoothGattServer.cancelConnection(android.bluetooth.BluetoothDevice)void
android.bluetooth.BluetoothGattServer.setPreferredPhy(android.bluetooth.BluetoothDevice,int,int,int)void
android.bluetooth.BluetoothGattServer.readPhy(android.bluetooth.BluetoothDevice)void
android.bluetooth.BluetoothGattServer.sendResponse(android.bluetooth.BluetoothDevice,int,int,int,byte)boolean
android.bluetooth.BluetoothGattServer.notifyCharacteristicChanged(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothGattCharacteristic,boolean)boolean
android.bluetooth.BluetoothGattServer.addService(android.bluetooth.BluetoothGattService)boolean
android.bluetooth.BluetoothGattServer.removeService(android.bluetooth.BluetoothGattService)boolean
android.bluetooth.BluetoothGattServer.clearServices)void
android.bluetooth.BluetoothGattServer.getServices)java.util.List
android.bluetooth.BluetoothGattServer.getService(java.util.UUID)android.bluetooth.BluetoothGattService
android.bluetooth.BluetoothGattServer.getConnectionState(android.bluetooth.BluetoothDevice)int
android.bluetooth.BluetoothGattServer.getConnectedDevices)java.util.List
android.bluetooth.BluetoothGattServer.getDevicesMatchingConnectionStates(int)java.util.List
android.bluetooth.BluetoothGattServerCallback.onConnectionStateChange(android.bluetooth.BluetoothDevice,int,int)void
android.bluetooth.BluetoothGattServerCallback.onServiceAdded(int,android.bluetooth.BluetoothGattService)void
android.bluetooth.BluetoothGattServerCallback.onCharacteristicReadRequest(android.bluetooth.BluetoothDevice,int,int,android.bluetooth.BluetoothGattCharacteristic)void
android.bluetooth.BluetoothGattServerCallback.onCharacteristicWriteRequest(android.bluetooth.BluetoothDevice,int,android.bluetooth.BluetoothGattCharacteristic,boolean,boolean,int,byte)void
android.bluetooth.BluetoothGattServerCallback.onDescriptorReadRequest(android.bluetooth.BluetoothDevice,int,int,android.bluetooth.BluetoothGattDescriptor)void
android.bluetooth.BluetoothGattServerCallback.onDescriptorWriteRequest(android.bluetooth.BluetoothDevice,int,android.bluetooth.BluetoothGattDescriptor,boolean,boolean,int,byte)void
android.bluetooth.BluetoothGattServerCallback.onExecuteWrite(android.bluetooth.BluetoothDevice,int,boolean)void
android.bluetooth.BluetoothGattServerCallback.onNotificationSent(android.bluetooth.BluetoothDevice,int)void
android.bluetooth.BluetoothGattServerCallback.onMtuChanged(android.bluetooth.BluetoothDevice,int)void
android.bluetooth.BluetoothGattServerCallback.onPhyUpdate(android.bluetooth.BluetoothDevice,int,int,int)void
android.bluetooth.BluetoothGattServerCallback.onPhyRead(android.bluetooth.BluetoothDevice,int,int,int)void
android.bluetooth.BluetoothGattService.describeContents)int
android.bluetooth.BluetoothGattService.writeToParcel(android.os.Parcel,int)void
android.bluetooth.BluetoothGattService.addService(android.bluetooth.BluetoothGattService)boolean
android.bluetooth.BluetoothGattService.addCharacteristic(android.bluetooth.BluetoothGattCharacteristic)boolean
android.bluetooth.BluetoothGattService.getUuid)java.util.UUID
android.bluetooth.BluetoothGattService.getInstanceId)int
android.bluetooth.BluetoothGattService.getType)int
android.bluetooth.BluetoothGattService.getIncludedServices)java.util.List
android.bluetooth.BluetoothGattService.getCharacteristics)java.util.List
android.bluetooth.BluetoothGattService.getCharacteristic(java.util.UUID)android.bluetooth.BluetoothGattCharacteristic
android.bluetooth.BluetoothHeadset.getConnectedDevices)java.util.List
android.bluetooth.BluetoothHeadset.getDevicesMatchingConnectionStates(int)java.util.List
android.bluetooth.BluetoothHeadset.getConnectionState(android.bluetooth.BluetoothDevice)int
android.bluetooth.BluetoothHeadset.startVoiceRecognition(android.bluetooth.BluetoothDevice)boolean
android.bluetooth.BluetoothHeadset.stopVoiceRecognition(android.bluetooth.BluetoothDevice)boolean
android.bluetooth.BluetoothHeadset.isAudioConnected(android.bluetooth.BluetoothDevice)boolean
android.bluetooth.BluetoothHeadset.sendVendorSpecificResultCode(android.bluetooth.BluetoothDevice,String,String)boolean
android.bluetooth.BluetoothHealth.registerSinkAppConfiguration(String,int,android.bluetooth.BluetoothHealthCallback)boolean
android.bluetooth.BluetoothHealth.unregisterAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration)boolean
android.bluetooth.BluetoothHealth.connectChannelToSource(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)boolean
android.bluetooth.BluetoothHealth.disconnectChannel(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)boolean
android.bluetooth.BluetoothHealth.getMainChannelFd(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)android.os.ParcelFileDescriptor
android.bluetooth.BluetoothHealth.getConnectionState(android.bluetooth.BluetoothDevice)int
android.bluetooth.BluetoothHealth.getConnectedDevices)java.util.List
android.bluetooth.BluetoothHealth.getDevicesMatchingConnectionStates(int)java.util.List
android.bluetooth.BluetoothHealthAppConfiguration.describeContents)int
android.bluetooth.BluetoothHealthAppConfiguration.getDataType)int
android.bluetooth.BluetoothHealthAppConfiguration.getName)String
android.bluetooth.BluetoothHealthAppConfiguration.getRole)int
android.bluetooth.BluetoothHealthAppConfiguration.writeToParcel(android.os.Parcel,int)void
android.bluetooth.BluetoothHealthCallback.onHealthAppConfigurationStatusChange(android.bluetooth.BluetoothHealthAppConfiguration,int)void
android.bluetooth.BluetoothHealthCallback.onHealthChannelStateChange(android.bluetooth.BluetoothHealthAppConfiguration,android.bluetooth.BluetoothDevice,int,int,android.os.ParcelFileDescriptor,int)void
android.bluetooth.BluetoothHearingAid.getConnectedDevices)java.util.List
android.bluetooth.BluetoothHearingAid.getDevicesMatchingConnectionStates(int)java.util.List
android.bluetooth.BluetoothHearingAid.getConnectionState(android.bluetooth.BluetoothDevice)int
android.bluetooth.BluetoothHidDevice.onAppStatusChanged(android.bluetooth.BluetoothDevice,boolean)void
android.bluetooth.BluetoothHidDevice.onConnectionStateChanged(android.bluetooth.BluetoothDevice,int)void
android.bluetooth.BluetoothHidDevice.onGetReport(android.bluetooth.BluetoothDevice,byte,byte,int)void
android.bluetooth.BluetoothHidDevice.onSetReport(android.bluetooth.BluetoothDevice,byte,byte,byte)void
android.bluetooth.BluetoothHidDevice.onSetProtocol(android.bluetooth.BluetoothDevice,byte)void
android.bluetooth.BluetoothHidDevice.onInterruptData(android.bluetooth.BluetoothDevice,byte,byte)void
android.bluetooth.BluetoothHidDevice.onVirtualCableUnplug(android.bluetooth.BluetoothDevice)void
android.bluetooth.BluetoothHidDevice.getConnectedDevices)java.util.List
android.bluetooth.BluetoothHidDevice.getDevicesMatchingConnectionStates(int)java.util.List
android.bluetooth.BluetoothHidDevice.getConnectionState(android.bluetooth.BluetoothDevice)int
android.bluetooth.BluetoothHidDevice.registerApp(android.bluetooth.BluetoothHidDeviceAppSdpSettings,android.bluetooth.BluetoothHidDeviceAppQosSettings,android.bluetooth.BluetoothHidDeviceAppQosSettings,java.util.concurrent.Executor,Callback)boolean
android.bluetooth.BluetoothHidDevice.unregisterApp)boolean
android.bluetooth.BluetoothHidDevice.sendReport(android.bluetooth.BluetoothDevice,int,byte)boolean
android.bluetooth.BluetoothHidDevice.replyReport(android.bluetooth.BluetoothDevice,byte,byte,byte)boolean
android.bluetooth.BluetoothHidDevice.reportError(android.bluetooth.BluetoothDevice,byte)boolean
android.bluetooth.BluetoothHidDevice.connect(android.bluetooth.BluetoothDevice)boolean
android.bluetooth.BluetoothHidDevice.disconnect(android.bluetooth.BluetoothDevice)boolean
android.bluetooth.BluetoothHidDeviceAppQosSettings.getServiceType)int
android.bluetooth.BluetoothHidDeviceAppQosSettings.getTokenRate)int
android.bluetooth.BluetoothHidDeviceAppQosSettings.getTokenBucketSize)int
android.bluetooth.BluetoothHidDeviceAppQosSettings.getPeakBandwidth)int
android.bluetooth.BluetoothHidDeviceAppQosSettings.getLatency)int
android.bluetooth.BluetoothHidDeviceAppQosSettings.getDelayVariation)int
android.bluetooth.BluetoothHidDeviceAppQosSettings.describeContents)int
android.bluetooth.BluetoothHidDeviceAppQosSettings.writeToParcel(android.os.Parcel,int)void
android.bluetooth.BluetoothHidDeviceAppSdpSettings.getName)String
android.bluetooth.BluetoothHidDeviceAppSdpSettings.getDescription)String
android.bluetooth.BluetoothHidDeviceAppSdpSettings.getProvider)String
android.bluetooth.BluetoothHidDeviceAppSdpSettings.getSubclass)byte
android.bluetooth.BluetoothHidDeviceAppSdpSettings.describeContents)int
android.bluetooth.BluetoothHidDeviceAppSdpSettings.writeToParcel(android.os.Parcel,int)void
android.bluetooth.BluetoothManager.getAdapter)android.bluetooth.BluetoothAdapter
android.bluetooth.BluetoothManager.getConnectionState(android.bluetooth.BluetoothDevice,int)int
android.bluetooth.BluetoothManager.getConnectedDevices(int)java.util.List
android.bluetooth.BluetoothManager.getDevicesMatchingConnectionStates(int,int)java.util.List
android.bluetooth.BluetoothManager.openGattServer(android.content.Context,android.bluetooth.BluetoothGattServerCallback)android.bluetooth.BluetoothGattServer
android.bluetooth.BluetoothServerSocket.accept)android.bluetooth.BluetoothSocket
android.bluetooth.BluetoothServerSocket.accept(int)android.bluetooth.BluetoothSocket
android.bluetooth.BluetoothServerSocket.close)void
android.bluetooth.BluetoothServerSocket.getPsm)int
android.bluetooth.BluetoothServerSocket.toString)String
android.bluetooth.BluetoothSocket.finalize)void
android.bluetooth.BluetoothSocket.getRemoteDevice)android.bluetooth.BluetoothDevice
android.bluetooth.BluetoothSocket.getInputStream)InputStream
android.bluetooth.BluetoothSocket.getOutputStream)OutputStream
android.bluetooth.BluetoothSocket.isConnected)boolean
android.bluetooth.BluetoothSocket.connect)void
android.bluetooth.BluetoothSocket.close)void
android.bluetooth.BluetoothSocket.getMaxTransmitPacketSize)int
android.bluetooth.BluetoothSocket.getMaxReceivePacketSize)int
android.bluetooth.BluetoothSocket.getConnectionType)int
android.bluetooth.le.AdvertiseCallback.onStartSuccess(android.bluetooth.le.AdvertiseSettings)void
android.bluetooth.le.AdvertiseCallback.onStartFailure(int)void
android.bluetooth.le.AdvertiseData.addServiceUuid(ParcelUuid)Builder
android.bluetooth.le.AdvertiseData.addServiceData(ParcelUuid,byte)Builder
android.bluetooth.le.AdvertiseData.addManufacturerData(int,byte)Builder
android.bluetooth.le.AdvertiseData.setIncludeTxPowerLevel(boolean)Builder
android.bluetooth.le.AdvertiseData.setIncludeDeviceName(boolean)Builder
android.bluetooth.le.AdvertiseData.build)android.bluetooth.le.AdvertiseData
android.bluetooth.le.AdvertiseData.getServiceUuids)java.util.List
android.bluetooth.le.AdvertiseData.getManufacturerSpecificData)android.util.SparseArray
android.bluetooth.le.AdvertiseData.getServiceData)java.util.Map
android.bluetooth.le.AdvertiseData.getIncludeTxPowerLevel)boolean
android.bluetooth.le.AdvertiseData.getIncludeDeviceName)boolean
android.bluetooth.le.AdvertiseData.hashCode)int
android.bluetooth.le.AdvertiseData.equals(Object)boolean
android.bluetooth.le.AdvertiseData.toString)String
android.bluetooth.le.AdvertiseData.describeContents)int
android.bluetooth.le.AdvertiseData.writeToParcel(Parcel,int)void
android.bluetooth.le.AdvertiseSettings.setAdvertiseMode(int)Builder
android.bluetooth.le.AdvertiseSettings.setTxPowerLevel(int)Builder
android.bluetooth.le.AdvertiseSettings.setConnectable(boolean)Builder
android.bluetooth.le.AdvertiseSettings.setTimeout(int)Builder
android.bluetooth.le.AdvertiseSettings.build)android.bluetooth.le.AdvertiseSettings
android.bluetooth.le.AdvertiseSettings.getMode)int
android.bluetooth.le.AdvertiseSettings.getTxPowerLevel)int
android.bluetooth.le.AdvertiseSettings.isConnectable)boolean
android.bluetooth.le.AdvertiseSettings.getTimeout)int
android.bluetooth.le.AdvertiseSettings.toString)String
android.bluetooth.le.AdvertiseSettings.describeContents)int
android.bluetooth.le.AdvertiseSettings.writeToParcel(android.os.Parcel,int)void
android.bluetooth.le.AdvertisingSet.enableAdvertising(boolean,int,int)void
android.bluetooth.le.AdvertisingSet.setAdvertisingData(android.bluetooth.le.AdvertiseData)void
android.bluetooth.le.AdvertisingSet.setScanResponseData(android.bluetooth.le.AdvertiseData)void
android.bluetooth.le.AdvertisingSet.setAdvertisingParameters(android.bluetooth.le.AdvertisingSetParameters)void
android.bluetooth.le.AdvertisingSet.setPeriodicAdvertisingParameters(android.bluetooth.le.PeriodicAdvertisingParameters)void
android.bluetooth.le.AdvertisingSet.setPeriodicAdvertisingData(android.bluetooth.le.AdvertiseData)void
android.bluetooth.le.AdvertisingSet.setPeriodicAdvertisingEnabled(boolean)void
android.bluetooth.le.AdvertisingSetCallback.onAdvertisingSetStarted(android.bluetooth.le.AdvertisingSet,int,int)void
android.bluetooth.le.AdvertisingSetCallback.onAdvertisingSetStopped(android.bluetooth.le.AdvertisingSet)void
android.bluetooth.le.AdvertisingSetCallback.onAdvertisingEnabled(android.bluetooth.le.AdvertisingSet,boolean,int)void
android.bluetooth.le.AdvertisingSetCallback.onAdvertisingDataSet(android.bluetooth.le.AdvertisingSet,int)void
android.bluetooth.le.AdvertisingSetCallback.onScanResponseDataSet(android.bluetooth.le.AdvertisingSet,int)void
android.bluetooth.le.AdvertisingSetCallback.onAdvertisingParametersUpdated(android.bluetooth.le.AdvertisingSet,int,int)void
android.bluetooth.le.AdvertisingSetCallback.onPeriodicAdvertisingParametersUpdated(android.bluetooth.le.AdvertisingSet,int)void
android.bluetooth.le.AdvertisingSetCallback.onPeriodicAdvertisingDataSet(android.bluetooth.le.AdvertisingSet,int)void
android.bluetooth.le.AdvertisingSetCallback.onPeriodicAdvertisingEnabled(android.bluetooth.le.AdvertisingSet,boolean,int)void
android.bluetooth.le.AdvertisingSetParameters.setConnectable(boolean)Builder
android.bluetooth.le.AdvertisingSetParameters.setScannable(boolean)Builder
android.bluetooth.le.AdvertisingSetParameters.setLegacyMode(boolean)Builder
android.bluetooth.le.AdvertisingSetParameters.setAnonymous(boolean)Builder
android.bluetooth.le.AdvertisingSetParameters.setIncludeTxPower(boolean)Builder
android.bluetooth.le.AdvertisingSetParameters.setPrimaryPhy(int)Builder
android.bluetooth.le.AdvertisingSetParameters.setSecondaryPhy(int)Builder
android.bluetooth.le.AdvertisingSetParameters.setInterval(int)Builder
android.bluetooth.le.AdvertisingSetParameters.setTxPowerLevel(int)Builder
android.bluetooth.le.AdvertisingSetParameters.build)android.bluetooth.le.AdvertisingSetParameters
android.bluetooth.le.AdvertisingSetParameters.isConnectable)boolean
android.bluetooth.le.AdvertisingSetParameters.isScannable)boolean
android.bluetooth.le.AdvertisingSetParameters.isLegacy)boolean
android.bluetooth.le.AdvertisingSetParameters.isAnonymous)boolean
android.bluetooth.le.AdvertisingSetParameters.includeTxPower)boolean
android.bluetooth.le.AdvertisingSetParameters.getPrimaryPhy)int
android.bluetooth.le.AdvertisingSetParameters.getSecondaryPhy)int
android.bluetooth.le.AdvertisingSetParameters.getInterval)int
android.bluetooth.le.AdvertisingSetParameters.getTxPowerLevel)int
android.bluetooth.le.AdvertisingSetParameters.toString)String
android.bluetooth.le.AdvertisingSetParameters.describeContents)int
android.bluetooth.le.AdvertisingSetParameters.writeToParcel(android.os.Parcel,int)void
android.bluetooth.le.BluetoothLeAdvertiser.startAdvertising(android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback)void
android.bluetooth.le.BluetoothLeAdvertiser.startAdvertising(android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback)void
android.bluetooth.le.BluetoothLeAdvertiser.stopAdvertising(android.bluetooth.le.AdvertiseCallback)void
android.bluetooth.le.BluetoothLeAdvertiser.startAdvertisingSet(android.bluetooth.le.AdvertisingSetParameters,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseData,android.bluetooth.le.PeriodicAdvertisingParameters,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertisingSetCallback)void
android.bluetooth.le.BluetoothLeAdvertiser.startAdvertisingSet(android.bluetooth.le.AdvertisingSetParameters,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseData,android.bluetooth.le.PeriodicAdvertisingParameters,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertisingSetCallback,android.os.Handler)void
android.bluetooth.le.BluetoothLeAdvertiser.stopAdvertisingSet(android.bluetooth.le.AdvertisingSetCallback)void
android.bluetooth.le.BluetoothLeScanner.startScan(android.bluetooth.le.ScanCallback)void
android.bluetooth.le.BluetoothLeScanner.startScan(java.util.List,android.bluetooth.le.ScanSettings,android.bluetooth.le.ScanCallback)void
android.bluetooth.le.BluetoothLeScanner.startScan(java.util.List,android.bluetooth.le.ScanSettings,android.app.PendingIntent)int
android.bluetooth.le.BluetoothLeScanner.stopScan(android.bluetooth.le.ScanCallback)void
android.bluetooth.le.BluetoothLeScanner.stopScan(android.app.PendingIntent)void
android.bluetooth.le.BluetoothLeScanner.flushPendingScanResults(android.bluetooth.le.ScanCallback)void
android.bluetooth.le.PeriodicAdvertisingParameters.setIncludeTxPower(boolean)Builder
android.bluetooth.le.PeriodicAdvertisingParameters.setInterval(int)Builder
android.bluetooth.le.PeriodicAdvertisingParameters.build)android.bluetooth.le.PeriodicAdvertisingParameters
android.bluetooth.le.PeriodicAdvertisingParameters.getIncludeTxPower)boolean
android.bluetooth.le.PeriodicAdvertisingParameters.getInterval)int
android.bluetooth.le.PeriodicAdvertisingParameters.describeContents)int
android.bluetooth.le.PeriodicAdvertisingParameters.writeToParcel(android.os.Parcel,int)void
android.bluetooth.le.ScanCallback.onScanResult(int,android.bluetooth.le.ScanResult)void
android.bluetooth.le.ScanCallback.onBatchScanResults(java.util.List)void
android.bluetooth.le.ScanCallback.onScanFailed(int)void
android.bluetooth.le.ScanFilter.setDeviceName(String)Builder
android.bluetooth.le.ScanFilter.setDeviceAddress(String)Builder
android.bluetooth.le.ScanFilter.setServiceUuid(ParcelUuid)Builder
android.bluetooth.le.ScanFilter.setServiceUuid(ParcelUuid,ParcelUuid)Builder
android.bluetooth.le.ScanFilter.setServiceSolicitationUuid(ParcelUuid)Builder
android.bluetooth.le.ScanFilter.setServiceSolicitationUuid(ParcelUuid,ParcelUuid)Builder
android.bluetooth.le.ScanFilter.setServiceData(ParcelUuid,byte)Builder
android.bluetooth.le.ScanFilter.setServiceData(ParcelUuid,byte,byte)Builder
android.bluetooth.le.ScanFilter.setManufacturerData(int,byte)Builder
android.bluetooth.le.ScanFilter.setManufacturerData(int,byte,byte)Builder
android.bluetooth.le.ScanFilter.build)android.bluetooth.le.ScanFilter
android.bluetooth.le.ScanFilter.describeContents)int
android.bluetooth.le.ScanFilter.writeToParcel(Parcel,int)void
android.bluetooth.le.ScanFilter.getDeviceName)String
android.bluetooth.le.ScanFilter.getServiceUuid)ParcelUuid
android.bluetooth.le.ScanFilter.getServiceUuidMask)ParcelUuid
android.bluetooth.le.ScanFilter.getServiceSolicitationUuid)ParcelUuid
android.bluetooth.le.ScanFilter.getServiceSolicitationUuidMask)ParcelUuid
android.bluetooth.le.ScanFilter.getDeviceAddress)String
android.bluetooth.le.ScanFilter.getServiceDataUuid)ParcelUuid
android.bluetooth.le.ScanFilter.getManufacturerId)int
android.bluetooth.le.ScanFilter.matches(android.bluetooth.le.ScanResult)boolean
android.bluetooth.le.ScanFilter.toString)String
android.bluetooth.le.ScanFilter.hashCode)int
android.bluetooth.le.ScanFilter.equals(Object)boolean
android.bluetooth.le.ScanRecord.getAdvertiseFlags)int
android.bluetooth.le.ScanRecord.getServiceUuids)java.util.List
android.bluetooth.le.ScanRecord.getServiceSolicitationUuids)java.util.List
android.bluetooth.le.ScanRecord.getManufacturerSpecificData)android.util.SparseArray
android.bluetooth.le.ScanRecord.getServiceData)java.util.Map
android.bluetooth.le.ScanRecord.getTxPowerLevel)int
android.bluetooth.le.ScanRecord.getDeviceName)String
android.bluetooth.le.ScanRecord.toString)String
android.bluetooth.le.ScanResult.writeToParcel(android.os.Parcel,int)void
android.bluetooth.le.ScanResult.describeContents)int
android.bluetooth.le.ScanResult.getDevice)android.bluetooth.BluetoothDevice
android.bluetooth.le.ScanResult.getScanRecord)android.bluetooth.le.ScanRecord
android.bluetooth.le.ScanResult.getRssi)int
android.bluetooth.le.ScanResult.getTimestampNanos)long
android.bluetooth.le.ScanResult.isLegacy)boolean
android.bluetooth.le.ScanResult.isConnectable)boolean
android.bluetooth.le.ScanResult.getDataStatus)int
android.bluetooth.le.ScanResult.getPrimaryPhy)int
android.bluetooth.le.ScanResult.getSecondaryPhy)int
android.bluetooth.le.ScanResult.getAdvertisingSid)int
android.bluetooth.le.ScanResult.getTxPower)int
android.bluetooth.le.ScanResult.getPeriodicAdvertisingInterval)int
android.bluetooth.le.ScanResult.hashCode)int
android.bluetooth.le.ScanResult.equals(Object)boolean
android.bluetooth.le.ScanResult.toString)String
android.bluetooth.le.ScanSettings.setScanMode(int)Builder
android.bluetooth.le.ScanSettings.setCallbackType(int)Builder
android.bluetooth.le.ScanSettings.setReportDelay(long)Builder
android.bluetooth.le.ScanSettings.setNumOfMatches(int)Builder
android.bluetooth.le.ScanSettings.setMatchMode(int)Builder
android.bluetooth.le.ScanSettings.setLegacy(boolean)Builder
android.bluetooth.le.ScanSettings.setPhy(int)Builder
android.bluetooth.le.ScanSettings.build)android.bluetooth.le.ScanSettings
android.bluetooth.le.ScanSettings.getScanMode)int
android.bluetooth.le.ScanSettings.getCallbackType)int
android.bluetooth.le.ScanSettings.getScanResultType)int
android.bluetooth.le.ScanSettings.getLegacy)boolean
android.bluetooth.le.ScanSettings.getPhy)int
android.bluetooth.le.ScanSettings.getReportDelayMillis)long
android.bluetooth.le.ScanSettings.writeToParcel(android.os.Parcel,int)void
android.bluetooth.le.ScanSettings.describeContents)int
android.companion.AssociationRequest.setSingleDevice(boolean)Builder
android.companion.AssociationRequest.addDeviceFilter(android.companion.DeviceFilter)Builder
android.companion.AssociationRequest.build)android.companion.AssociationRequest
android.companion.AssociationRequest.equals(Object)boolean
android.companion.AssociationRequest.hashCode)int
android.companion.AssociationRequest.toString)String
android.companion.AssociationRequest.writeToParcel(android.os.Parcel,int)void
android.companion.AssociationRequest.describeContents)int
android.companion.BluetoothDeviceFilter.setNamePattern(java.util.regex.Pattern)Builder
android.companion.BluetoothDeviceFilter.setAddress(String)Builder
android.companion.BluetoothDeviceFilter.addServiceUuid(ParcelUuid,ParcelUuid)Builder
android.companion.BluetoothDeviceFilter.build)android.companion.BluetoothDeviceFilter
android.companion.BluetoothDeviceFilter.writeToParcel(Parcel,int)void
android.companion.BluetoothDeviceFilter.equals(Object)boolean
android.companion.BluetoothDeviceFilter.hashCode)int
android.companion.BluetoothDeviceFilter.describeContents)int
android.companion.BluetoothLeDeviceFilter.setNamePattern(java.util.regex.Pattern)Builder
android.companion.BluetoothLeDeviceFilter.setScanFilter(android.bluetooth.le.ScanFilter)Builder
android.companion.BluetoothLeDeviceFilter.setRawDataFilter(byte,byte)Builder
android.companion.BluetoothLeDeviceFilter.setRenameFromBytes(String,String,int,int,java.nio.ByteOrder)Builder
android.companion.BluetoothLeDeviceFilter.setRenameFromName(String,String,int,int)Builder
android.companion.BluetoothLeDeviceFilter.build)android.companion.BluetoothLeDeviceFilter
android.companion.BluetoothLeDeviceFilter.equals(Object)boolean
android.companion.BluetoothLeDeviceFilter.hashCode)int
android.companion.BluetoothLeDeviceFilter.writeToParcel(android.os.Parcel,int)void
android.companion.BluetoothLeDeviceFilter.describeContents)int
android.companion.BluetoothLeDeviceFilter.toString)String
android.companion.BluetoothLeDeviceFilter.getRenamePrefixLengthLimit)int
android.companion.CompanionDeviceManager.associate(android.companion.AssociationRequest,Callback,android.os.Handler)void
android.companion.CompanionDeviceManager.getAssociations)java.util.List
android.companion.CompanionDeviceManager.disassociate(String)void
android.companion.CompanionDeviceManager.requestNotificationAccess(android.content.ComponentName)void
android.companion.CompanionDeviceManager.hasNotificationAccess(android.content.ComponentName)boolean
android.companion.WifiDeviceFilter.setNamePattern(java.util.regex.Pattern)Builder
android.companion.WifiDeviceFilter.build)android.companion.WifiDeviceFilter
android.companion.WifiDeviceFilter.equals(Object)boolean
android.companion.WifiDeviceFilter.hashCode)int
android.companion.WifiDeviceFilter.writeToParcel(android.os.Parcel,int)void
android.companion.WifiDeviceFilter.describeContents)int
android.content.AbstractThreadedSyncAdapter.getContext)android.content.Context
android.content.AbstractThreadedSyncAdapter.getSyncAdapterBinder)android.os.IBinder
android.content.AbstractThreadedSyncAdapter.onUnsyncableAccount)boolean
android.content.AbstractThreadedSyncAdapter.onSecurityException(android.accounts.Account,android.os.Bundle,String,android.content.SyncResult)void
android.content.AbstractThreadedSyncAdapter.onSyncCanceled)void
android.content.AbstractThreadedSyncAdapter.onSyncCanceled(Thread)void
android.content.AsyncQueryHandler.handleMessage(Message)void
android.content.AsyncQueryHandler.createHandler(Looper)Handler
android.content.AsyncQueryHandler.startQuery(int,Object,android.net.Uri,String,String,String,String)void
android.content.AsyncQueryHandler.cancelOperation(int)void
android.content.AsyncQueryHandler.startInsert(int,Object,android.net.Uri,android.content.ContentValues)void
android.content.AsyncQueryHandler.startUpdate(int,Object,android.net.Uri,android.content.ContentValues,String,String)void
android.content.AsyncQueryHandler.startDelete(int,Object,android.net.Uri,String,String)void
android.content.AsyncQueryHandler.onQueryComplete(int,Object,android.database.Cursor)void
android.content.AsyncQueryHandler.onInsertComplete(int,Object,android.net.Uri)void
android.content.AsyncQueryHandler.onUpdateComplete(int,Object,int)void
android.content.AsyncQueryHandler.onDeleteComplete(int,Object,int)void
android.content.AsyncQueryHandler.handleMessage(Message)void
android.content.AsyncTaskLoader.setUpdateThrottle(long)void
android.content.AsyncTaskLoader.onForceLoad)void
android.content.AsyncTaskLoader.onCancelLoad)boolean
android.content.AsyncTaskLoader.onCanceled(Object)void
android.content.AsyncTaskLoader.onLoadInBackground)Object
android.content.AsyncTaskLoader.cancelLoadInBackground)void
android.content.AsyncTaskLoader.isLoadInBackgroundCanceled)boolean
android.content.AsyncTaskLoader.dump(String,java.io.FileDescriptor,java.io.PrintWriter,String)void
android.content.BroadcastReceiver.setResultCode(int)void
android.content.BroadcastReceiver.getResultCode)int
android.content.BroadcastReceiver.setResultData(String)void
android.content.BroadcastReceiver.getResultData)String
android.content.BroadcastReceiver.setResultExtras(android.os.Bundle)void
android.content.BroadcastReceiver.getResultExtras(boolean)android.os.Bundle
android.content.BroadcastReceiver.setResult(int,String,android.os.Bundle)void
android.content.BroadcastReceiver.getAbortBroadcast)boolean
android.content.BroadcastReceiver.abortBroadcast)void
android.content.BroadcastReceiver.clearAbortBroadcast)void
android.content.BroadcastReceiver.finish)void
android.content.BroadcastReceiver.goAsync)android.content.BroadcastReceiver.PendingResult
android.content.BroadcastReceiver.peekService(android.content.Context,android.content.Intent)android.os.IBinder
android.content.BroadcastReceiver.setResultCode(int)void
android.content.BroadcastReceiver.getResultCode)int
android.content.BroadcastReceiver.setResultData(String)void
android.content.BroadcastReceiver.getResultData)String
android.content.BroadcastReceiver.setResultExtras(android.os.Bundle)void
android.content.BroadcastReceiver.getResultExtras(boolean)android.os.Bundle
android.content.BroadcastReceiver.setResult(int,String,android.os.Bundle)void
android.content.BroadcastReceiver.getAbortBroadcast)boolean
android.content.BroadcastReceiver.abortBroadcast)void
android.content.BroadcastReceiver.clearAbortBroadcast)void
android.content.BroadcastReceiver.isOrderedBroadcast)boolean
android.content.BroadcastReceiver.isInitialStickyBroadcast)boolean
android.content.BroadcastReceiver.setOrderedHint(boolean)void
android.content.BroadcastReceiver.setDebugUnregister(boolean)void
android.content.BroadcastReceiver.getDebugUnregister)boolean
android.content.ClipboardManager.setPrimaryClip(android.content.ClipData)void
android.content.ClipboardManager.clearPrimaryClip)void
android.content.ClipboardManager.getPrimaryClip)android.content.ClipData
android.content.ClipboardManager.getPrimaryClipDescription)android.content.ClipDescription
android.content.ClipboardManager.hasPrimaryClip)boolean
android.content.ClipboardManager.addPrimaryClipChangedListener(android.content.ClipboardManager.OnPrimaryClipChangedListener)void
android.content.ClipboardManager.removePrimaryClipChangedListener(android.content.ClipboardManager.OnPrimaryClipChangedListener)void
android.content.ClipboardManager.getText)CharSequence
android.content.ClipboardManager.setText(CharSequence)void
android.content.ClipboardManager.hasText)boolean
android.content.ClipData.getText)CharSequence
android.content.ClipData.getHtmlText)String
android.content.ClipData.getIntent)android.content.Intent
android.content.ClipData.getUri)android.net.Uri
android.content.ClipData.coerceToText(android.content.Context)CharSequence
android.content.ClipData.coerceToStyledText(android.content.Context)CharSequence
android.content.ClipData.coerceToHtmlText(android.content.Context)String
android.content.ClipData.toString)String
android.content.ClipData.newPlainText(CharSequence,CharSequence)android.content.ClipData
android.content.ClipData.newHtmlText(CharSequence,CharSequence,String)android.content.ClipData
android.content.ClipData.newIntent(CharSequence,android.content.Intent)android.content.ClipData
android.content.ClipData.newUri(android.content.ContentResolver,CharSequence,android.net.Uri)android.content.ClipData
android.content.ClipData.newRawUri(CharSequence,android.net.Uri)android.content.ClipData
android.content.ClipData.getDescription)android.content.ClipDescription
android.content.ClipData.addItem(android.content.ClipData.Item)void
android.content.ClipData.addItem(android.content.ContentResolver,android.content.ClipData.Item)void
android.content.ClipData.getItemCount)int
android.content.ClipData.getItemAt(int)android.content.ClipData.Item
android.content.ClipData.toString)String
android.content.ClipData.describeContents)int
android.content.ClipData.writeToParcel(android.os.Parcel,int)void
android.content.ClipDescription.compareMimeTypes(String,String)boolean
android.content.ClipDescription.getTimestamp)long
android.content.ClipDescription.getLabel)CharSequence
android.content.ClipDescription.hasMimeType(String)boolean
android.content.ClipDescription.getMimeTypeCount)int
android.content.ClipDescription.getMimeType(int)String
android.content.ClipDescription.getExtras)PersistableBundle
android.content.ClipDescription.setExtras(PersistableBundle)void
android.content.ClipDescription.toString)String
android.content.ClipDescription.describeContents)int
android.content.ClipDescription.writeToParcel(Parcel,int)void
android.content.ComponentName.createRelative(String,String)android.content.ComponentName
android.content.ComponentName.createRelative(android.content.Context,String)android.content.ComponentName
android.content.ComponentName.clone)android.content.ComponentName
android.content.ComponentName.getPackageName)String
android.content.ComponentName.getClassName)String
android.content.ComponentName.getShortClassName)String
android.content.ComponentName.flattenToString)String
android.content.ComponentName.flattenToShortString)String
android.content.ComponentName.unflattenFromString(String)android.content.ComponentName
android.content.ComponentName.toShortString)String
android.content.ComponentName.toString)String
android.content.ComponentName.equals(Object)boolean
android.content.ComponentName.hashCode)int
android.content.ComponentName.compareTo(android.content.ComponentName)int
android.content.ComponentName.describeContents)int
android.content.ComponentName.writeToParcel(android.os.Parcel,int)void
android.content.ComponentName.writeToParcel(android.content.ComponentName,android.os.Parcel)void
android.content.ComponentName.readFromParcel(android.os.Parcel)android.content.ComponentName
android.content.ContentProvider.getContext)android.content.Context
android.content.ContentProvider.getCallingPackage)String
android.content.ContentProvider.clearCallingIdentity)android.content.ContentProvider.CallingIdentity
android.content.ContentProvider.restoreCallingIdentity(android.content.ContentProvider.CallingIdentity)void
android.content.ContentProvider.setReadPermission(String)void
android.content.ContentProvider.getReadPermission)String
android.content.ContentProvider.setWritePermission(String)void
android.content.ContentProvider.getWritePermission)String
android.content.ContentProvider.setPathPermissions(android.content.pm.PathPermission)void
android.content.ContentProvider.onConfigurationChanged(android.content.res.Configuration)void
android.content.ContentProvider.onLowMemory)void
android.content.ContentProvider.onTrimMemory(int)void
android.content.ContentProvider.query(android.net.Uri,String,String,String,String,CancellationSignal)android.database.Cursor
android.content.ContentProvider.query(android.net.Uri,String,Bundle,CancellationSignal)android.database.Cursor
android.content.ContentProvider.canonicalize(android.net.Uri)android.net.Uri
android.content.ContentProvider.uncanonicalize(android.net.Uri)android.net.Uri
android.content.ContentProvider.refresh(android.net.Uri,Bundle,CancellationSignal)boolean
android.content.ContentProvider.bulkInsert(android.net.Uri,android.content.ContentValues)int
android.content.ContentProvider.openFile(android.net.Uri,String)ParcelFileDescriptor
android.content.ContentProvider.openFile(android.net.Uri,String,CancellationSignal)ParcelFileDescriptor
android.content.ContentProvider.openAssetFile(android.net.Uri,String)android.content.res.AssetFileDescriptor
android.content.ContentProvider.openAssetFile(android.net.Uri,String,CancellationSignal)android.content.res.AssetFileDescriptor
android.content.ContentProvider.openFileHelper(android.net.Uri,String)ParcelFileDescriptor
android.content.ContentProvider.openTypedAssetFile(android.net.Uri,String,Bundle)android.content.res.AssetFileDescriptor
android.content.ContentProvider.openTypedAssetFile(android.net.Uri,String,Bundle,CancellationSignal)android.content.res.AssetFileDescriptor
android.content.ContentProvider.openPipeHelper(android.net.Uri,String,Bundle,Object,android.content.ContentProvider.PipeDataWriter)ParcelFileDescriptor
android.content.ContentProvider.isTemporary)boolean
android.content.ContentProvider.attachInfo(android.content.Context,android.content.pm.ProviderInfo)void
android.content.ContentProvider.call(String,String,String,Bundle)Bundle
android.content.ContentProvider.call(String,String,Bundle)Bundle
android.content.ContentProvider.shutdown)void
android.content.ContentProvider.dump(FileDescriptor,PrintWriter,String)void
android.content.ContentProviderClient.query(android.net.Uri,String,String,String,String)android.database.Cursor
android.content.ContentProviderClient.query(android.net.Uri,String,String,String,String,CancellationSignal)android.database.Cursor
android.content.ContentProviderClient.query(android.net.Uri,String,Bundle,CancellationSignal)android.database.Cursor
android.content.ContentProviderClient.getType(android.net.Uri)String
android.content.ContentProviderClient.canonicalize(android.net.Uri)android.net.Uri
android.content.ContentProviderClient.uncanonicalize(android.net.Uri)android.net.Uri
android.content.ContentProviderClient.refresh(android.net.Uri,Bundle,CancellationSignal)boolean
android.content.ContentProviderClient.insert(android.net.Uri,android.content.ContentValues)android.net.Uri
android.content.ContentProviderClient.bulkInsert(android.net.Uri,android.content.ContentValues)int
android.content.ContentProviderClient.delete(android.net.Uri,String,String)int
android.content.ContentProviderClient.update(android.net.Uri,android.content.ContentValues,String,String)int
android.content.ContentProviderClient.openFile(android.net.Uri,String)ParcelFileDescriptor
android.content.ContentProviderClient.openFile(android.net.Uri,String,CancellationSignal)ParcelFileDescriptor
android.content.ContentProviderClient.openAssetFile(android.net.Uri,String)android.content.res.AssetFileDescriptor
android.content.ContentProviderClient.openAssetFile(android.net.Uri,String,CancellationSignal)android.content.res.AssetFileDescriptor
android.content.ContentProviderClient.openTypedAssetFileDescriptor(android.net.Uri,String,Bundle)android.content.res.AssetFileDescriptor
android.content.ContentProviderClient.openTypedAssetFileDescriptor(android.net.Uri,String,Bundle,CancellationSignal)android.content.res.AssetFileDescriptor
android.content.ContentProviderClient.openTypedAssetFile(android.net.Uri,String,Bundle,CancellationSignal)android.content.res.AssetFileDescriptor
android.content.ContentProviderClient.call(String,String,Bundle)Bundle
android.content.ContentProviderClient.call(String,String,String,Bundle)Bundle
android.content.ContentProviderClient.close)void
android.content.ContentProviderClient.release)boolean
android.content.ContentProviderClient.finalize)void
android.content.ContentProviderClient.getLocalContentProvider)android.content.ContentProvider
android.content.ContentProviderOperation.build)android.content.ContentProviderOperation
android.content.ContentProviderOperation.withValueBackReferences(android.content.ContentValues)android.content.ContentProviderOperation.Builder
android.content.ContentProviderOperation.withValueBackReference(String,int)android.content.ContentProviderOperation.Builder
android.content.ContentProviderOperation.withSelectionBackReference(int,int)android.content.ContentProviderOperation.Builder
android.content.ContentProviderOperation.withValues(android.content.ContentValues)android.content.ContentProviderOperation.Builder
android.content.ContentProviderOperation.withValue(String,Object)android.content.ContentProviderOperation.Builder
android.content.ContentProviderOperation.withSelection(String,String)android.content.ContentProviderOperation.Builder
android.content.ContentProviderOperation.withExpectedCount(int)android.content.ContentProviderOperation.Builder
android.content.ContentProviderOperation.withYieldAllowed(boolean)android.content.ContentProviderOperation.Builder
android.content.ContentProviderOperation.writeToParcel(android.os.Parcel,int)void
android.content.ContentProviderOperation.newInsert(android.net.Uri)android.content.ContentProviderOperation.Builder
android.content.ContentProviderOperation.newUpdate(android.net.Uri)android.content.ContentProviderOperation.Builder
android.content.ContentProviderOperation.newDelete(android.net.Uri)android.content.ContentProviderOperation.Builder
android.content.ContentProviderOperation.newAssertQuery(android.net.Uri)android.content.ContentProviderOperation.Builder
android.content.ContentProviderOperation.getUri)android.net.Uri
android.content.ContentProviderOperation.isYieldAllowed)boolean
android.content.ContentProviderOperation.isInsert)boolean
android.content.ContentProviderOperation.isDelete)boolean
android.content.ContentProviderOperation.isUpdate)boolean
android.content.ContentProviderOperation.isAssertQuery)boolean
android.content.ContentProviderOperation.isWriteOperation)boolean
android.content.ContentProviderOperation.isReadOperation)boolean
android.content.ContentProviderOperation.apply(android.content.ContentProvider,android.content.ContentProviderResult,int)android.content.ContentProviderResult
android.content.ContentProviderOperation.resolveValueBackReferences(android.content.ContentProviderResult,int)android.content.ContentValues
android.content.ContentProviderOperation.toString)String
android.content.ContentProviderOperation.describeContents)int
android.content.ContentProviderResult.writeToParcel(android.os.Parcel,int)void
android.content.ContentProviderResult.describeContents)int
android.content.ContentProviderResult.toString)String
android.content.ContentQueryMap.setKeepUpdated(boolean)void
android.content.ContentQueryMap.requery)void
android.content.ContentQueryMap.finalize)void
android.content.ContentResolver.getIcon)android.graphics.drawable.Icon
android.content.ContentResolver.getLabel)CharSequence
android.content.ContentResolver.getContentDescription)CharSequence
android.content.ContentResolver.wrap(android.content.ContentProvider)android.content.ContentResolver
android.content.ContentResolver.wrap(android.content.ContentProviderClient)android.content.ContentResolver
android.content.ContentResolver.getType(android.net.Uri)String
android.content.ContentResolver.query(android.net.Uri,String,String,String,String)android.database.Cursor
android.content.ContentResolver.query(android.net.Uri,String,String,String,String,CancellationSignal)android.database.Cursor
android.content.ContentResolver.query(android.net.Uri,String,Bundle,CancellationSignal)android.database.Cursor
android.content.ContentResolver.canonicalize(android.net.Uri)android.net.Uri
android.content.ContentResolver.uncanonicalize(android.net.Uri)android.net.Uri
android.content.ContentResolver.refresh(android.net.Uri,Bundle,CancellationSignal)boolean
android.content.ContentResolver.openInputStream(android.net.Uri)InputStream
android.content.ContentResolver.openOutputStream(android.net.Uri)OutputStream
android.content.ContentResolver.openOutputStream(android.net.Uri,String)OutputStream
android.content.ContentResolver.openFile(android.net.Uri,String,CancellationSignal)ParcelFileDescriptor
android.content.ContentResolver.openFileDescriptor(android.net.Uri,String)ParcelFileDescriptor
android.content.ContentResolver.openFileDescriptor(android.net.Uri,String,CancellationSignal)ParcelFileDescriptor
android.content.ContentResolver.openAssetFile(android.net.Uri,String,CancellationSignal)android.content.res.AssetFileDescriptor
android.content.ContentResolver.openAssetFileDescriptor(android.net.Uri,String)android.content.res.AssetFileDescriptor
android.content.ContentResolver.openAssetFileDescriptor(android.net.Uri,String,CancellationSignal)android.content.res.AssetFileDescriptor
android.content.ContentResolver.openTypedAssetFile(android.net.Uri,String,Bundle,CancellationSignal)android.content.res.AssetFileDescriptor
android.content.ContentResolver.openTypedAssetFileDescriptor(android.net.Uri,String,Bundle)android.content.res.AssetFileDescriptor
android.content.ContentResolver.openTypedAssetFileDescriptor(android.net.Uri,String,Bundle,CancellationSignal)android.content.res.AssetFileDescriptor
android.content.ContentResolver.insert(android.net.Uri,android.content.ContentValues)android.net.Uri
android.content.ContentResolver.bulkInsert(android.net.Uri,android.content.ContentValues)int
android.content.ContentResolver.delete(android.net.Uri,String,String)int
android.content.ContentResolver.update(android.net.Uri,android.content.ContentValues,String,String)int
android.content.ContentResolver.call(android.net.Uri,String,String,Bundle)Bundle
android.content.ContentResolver.call(String,String,String,Bundle)Bundle
android.content.ContentResolver.acquireContentProviderClient(android.net.Uri)android.content.ContentProviderClient
android.content.ContentResolver.acquireContentProviderClient(String)android.content.ContentProviderClient
android.content.ContentResolver.acquireUnstableContentProviderClient(android.net.Uri)android.content.ContentProviderClient
android.content.ContentResolver.acquireUnstableContentProviderClient(String)android.content.ContentProviderClient
android.content.ContentResolver.registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)void
android.content.ContentResolver.unregisterContentObserver(android.database.ContentObserver)void
android.content.ContentResolver.notifyChange(android.net.Uri,android.database.ContentObserver)void
android.content.ContentResolver.notifyChange(android.net.Uri,android.database.ContentObserver,boolean)void
android.content.ContentResolver.notifyChange(android.net.Uri,android.database.ContentObserver,int)void
android.content.ContentResolver.takePersistableUriPermission(android.net.Uri,int)void
android.content.ContentResolver.releasePersistableUriPermission(android.net.Uri,int)void
android.content.ContentResolver.getPersistedUriPermissions)java.util.List
android.content.ContentResolver.getOutgoingPersistedUriPermissions)java.util.List
android.content.ContentResolver.startSync(android.net.Uri,Bundle)void
android.content.ContentResolver.requestSync(android.accounts.Account,String,Bundle)void
android.content.ContentResolver.requestSync(android.content.SyncRequest)void
android.content.ContentResolver.validateSyncExtrasBundle(Bundle)void
android.content.ContentResolver.cancelSync(android.net.Uri)void
android.content.ContentResolver.cancelSync(android.accounts.Account,String)void
android.content.ContentResolver.getSyncAutomatically(android.accounts.Account,String)boolean
android.content.ContentResolver.setSyncAutomatically(android.accounts.Account,String,boolean)void
android.content.ContentResolver.addPeriodicSync(android.accounts.Account,String,Bundle,long)void
android.content.ContentResolver.removePeriodicSync(android.accounts.Account,String,Bundle)void
android.content.ContentResolver.cancelSync(android.content.SyncRequest)void
android.content.ContentResolver.getPeriodicSyncs(android.accounts.Account,String)java.util.List
android.content.ContentResolver.getIsSyncable(android.accounts.Account,String)int
android.content.ContentResolver.setIsSyncable(android.accounts.Account,String,int)void
android.content.ContentResolver.getMasterSyncAutomatically)boolean
android.content.ContentResolver.setMasterSyncAutomatically(boolean)void
android.content.ContentResolver.isSyncActive(android.accounts.Account,String)boolean
android.content.ContentResolver.getCurrentSync)android.content.SyncInfo
android.content.ContentResolver.getCurrentSyncs)java.util.List
android.content.ContentResolver.isSyncPending(android.accounts.Account,String)boolean
android.content.ContentResolver.addStatusChangeListener(int,android.content.SyncStatusObserver)Object
android.content.ContentResolver.removeStatusChangeListener(Object)void
android.content.ContentResolver.getTypeInfo(String)MimeTypeInfo
android.content.ContentResolver.loadThumbnail(android.net.Uri,android.util.Size,CancellationSignal)android.graphics.Bitmap
android.content.ContentUris.parseId(android.net.Uri)long
android.content.ContentUris.withAppendedId(android.net.Uri,long)android.net.Uri
android.content.ContentUris.removeId(android.net.Uri)android.net.Uri
android.content.ContentValues.equals(Object)boolean
android.content.ContentValues.hashCode)int
android.content.ContentValues.put(String,String)void
android.content.ContentValues.putAll(android.content.ContentValues)void
android.content.ContentValues.put(String,Byte)void
android.content.ContentValues.put(String,Short)void
android.content.ContentValues.put(String,Integer)void
android.content.ContentValues.put(String,Long)void
android.content.ContentValues.put(String,Float)void
android.content.ContentValues.put(String,Double)void
android.content.ContentValues.put(String,Boolean)void
android.content.ContentValues.put(String,byte)void
android.content.ContentValues.putNull(String)void
android.content.ContentValues.size)int
android.content.ContentValues.remove(String)void
android.content.ContentValues.clear)void
android.content.ContentValues.containsKey(String)boolean
android.content.ContentValues.get(String)Object
android.content.ContentValues.getAsString(String)String
android.content.ContentValues.getAsLong(String)Long
android.content.ContentValues.getAsInteger(String)Integer
android.content.ContentValues.getAsShort(String)Short
android.content.ContentValues.getAsByte(String)Byte
android.content.ContentValues.getAsDouble(String)Double
android.content.ContentValues.getAsFloat(String)Float
android.content.ContentValues.getAsBoolean(String)Boolean
android.content.ContentValues.valueSet)java.util.Set
android.content.ContentValues.keySet)java.util.Set
android.content.ContentValues.describeContents)int
android.content.ContentValues.writeToParcel(android.os.Parcel,int)void
android.content.ContentValues.toString)String
android.content.Context.getMainExecutor)java.util.concurrent.Executor
android.content.Context.registerComponentCallbacks(android.content.ComponentCallbacks)void
android.content.Context.unregisterComponentCallbacks(android.content.ComponentCallbacks)void
android.content.Context.getText(int)CharSequence
android.content.Context.getString(int)String
android.content.Context.getColor(int)int
android.content.Context.getDrawable(int)android.graphics.drawable.Drawable
android.content.Context.getColorStateList(int)android.content.res.ColorStateList
android.content.Context.obtainStyledAttributes(int)android.content.res.TypedArray
android.content.Context.obtainStyledAttributes(int,int)android.content.res.TypedArray
android.content.Context.obtainStyledAttributes(android.util.AttributeSet,int)android.content.res.TypedArray
android.content.Context.obtainStyledAttributes(android.util.AttributeSet,int,int,int)android.content.res.TypedArray
android.content.Context.getOpPackageName)String
android.content.Context.openFileInput(String)FileInputStream
android.content.Context.openFileOutput(String,int)FileOutputStream
android.content.Context.setWallpaper(android.graphics.Bitmap)void
android.content.Context.setWallpaper(InputStream)void
android.content.Context.clearWallpaper)void
android.content.Context.startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)void
android.content.Context.startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,Bundle)void
android.content.Context.bindService(android.content.Intent,int,java.util.concurrent.Executor,android.content.ServiceConnection)boolean
android.content.Context.bindIsolatedService(android.content.Intent,int,String,java.util.concurrent.Executor,android.content.ServiceConnection)boolean
android.content.Context.updateServiceGroup(android.content.ServiceConnection,int,int)void
android.content.Context.getSystemService(Class)Object
android.content.Context.createPackageContext(String,int)android.content.Context
android.content.Context.createContextForSplit(String)android.content.Context
android.content.Context.isRestricted)boolean
android.content.ContextWrapper.attachBaseContext(android.content.Context)void
android.content.ContextWrapper.getBaseContext)android.content.Context
android.content.ContextWrapper.getAssets)android.content.res.AssetManager
android.content.ContextWrapper.getResources)android.content.res.Resources
android.content.ContextWrapper.getPackageManager)android.content.pm.PackageManager
android.content.ContextWrapper.getContentResolver)android.content.ContentResolver
android.content.ContextWrapper.getMainLooper)Looper
android.content.ContextWrapper.getMainExecutor)java.util.concurrent.Executor
android.content.ContextWrapper.getApplicationContext)android.content.Context
android.content.ContextWrapper.setTheme(int)void
android.content.ContextWrapper.getClassLoader)ClassLoader
android.content.ContextWrapper.getPackageName)String
android.content.ContextWrapper.getOpPackageName)String
android.content.ContextWrapper.getApplicationInfo)android.content.pm.ApplicationInfo
android.content.ContextWrapper.getPackageResourcePath)String
android.content.ContextWrapper.getPackageCodePath)String
android.content.ContextWrapper.getSharedPreferences(String,int)android.content.SharedPreferences
android.content.ContextWrapper.moveSharedPreferencesFrom(android.content.Context,String)boolean
android.content.ContextWrapper.deleteSharedPreferences(String)boolean
android.content.ContextWrapper.openFileInput(String)FileInputStream
android.content.ContextWrapper.openFileOutput(String,int)FileOutputStream
android.content.ContextWrapper.deleteFile(String)boolean
android.content.ContextWrapper.getFileStreamPath(String)File
android.content.ContextWrapper.getDataDir)File
android.content.ContextWrapper.getFilesDir)File
android.content.ContextWrapper.getNoBackupFilesDir)File
android.content.ContextWrapper.getExternalFilesDir(String)File
android.content.ContextWrapper.getObbDir)File
android.content.ContextWrapper.getCacheDir)File
android.content.ContextWrapper.getCodeCacheDir)File
android.content.ContextWrapper.getExternalCacheDir)File
android.content.ContextWrapper.getDir(String,int)File
android.content.ContextWrapper.openOrCreateDatabase(String,int,android.database.sqlite.SQLiteDatabase.CursorFactory)android.database.sqlite.SQLiteDatabase
android.content.ContextWrapper.openOrCreateDatabase(String,int,android.database.sqlite.SQLiteDatabase.CursorFactory,android.database.DatabaseErrorHandler)android.database.sqlite.SQLiteDatabase
android.content.ContextWrapper.moveDatabaseFrom(android.content.Context,String)boolean
android.content.ContextWrapper.deleteDatabase(String)boolean
android.content.ContextWrapper.getDatabasePath(String)File
android.content.ContextWrapper.getWallpaper)android.graphics.drawable.Drawable
android.content.ContextWrapper.peekWallpaper)android.graphics.drawable.Drawable
android.content.ContextWrapper.getWallpaperDesiredMinimumWidth)int
android.content.ContextWrapper.getWallpaperDesiredMinimumHeight)int
android.content.ContextWrapper.setWallpaper(android.graphics.Bitmap)void
android.content.ContextWrapper.setWallpaper(InputStream)void
android.content.ContextWrapper.clearWallpaper)void
android.content.ContextWrapper.startActivity(android.content.Intent)void
android.content.ContextWrapper.startActivity(android.content.Intent,Bundle)void
android.content.ContextWrapper.startActivities(android.content.Intent)void
android.content.ContextWrapper.startActivities(android.content.Intent,Bundle)void
android.content.ContextWrapper.startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)void
android.content.ContextWrapper.startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,Bundle)void
android.content.ContextWrapper.sendBroadcast(android.content.Intent)void
android.content.ContextWrapper.sendBroadcast(android.content.Intent,String)void
android.content.ContextWrapper.sendOrderedBroadcast(android.content.Intent,String)void
android.content.ContextWrapper.sendOrderedBroadcast(android.content.Intent,String,android.content.BroadcastReceiver,Handler,int,String,Bundle)void
android.content.ContextWrapper.sendBroadcastAsUser(android.content.Intent,UserHandle)void
android.content.ContextWrapper.sendBroadcastAsUser(android.content.Intent,UserHandle,String)void
android.content.ContextWrapper.sendStickyBroadcast(android.content.Intent)void
android.content.ContextWrapper.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,Handler,int,String,Bundle)void
android.content.ContextWrapper.removeStickyBroadcast(android.content.Intent)void
android.content.ContextWrapper.sendStickyBroadcastAsUser(android.content.Intent,UserHandle)void
android.content.ContextWrapper.sendStickyOrderedBroadcastAsUser(android.content.Intent,UserHandle,android.content.BroadcastReceiver,Handler,int,String,Bundle)void
android.content.ContextWrapper.removeStickyBroadcastAsUser(android.content.Intent,UserHandle)void
android.content.ContextWrapper.registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)android.content.Intent
android.content.ContextWrapper.registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,int)android.content.Intent
android.content.ContextWrapper.registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,String,Handler)android.content.Intent
android.content.ContextWrapper.registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,String,Handler,int)android.content.Intent
android.content.ContextWrapper.unregisterReceiver(android.content.BroadcastReceiver)void
android.content.ContextWrapper.startService(android.content.Intent)android.content.ComponentName
android.content.ContextWrapper.startForegroundService(android.content.Intent)android.content.ComponentName
android.content.ContextWrapper.stopService(android.content.Intent)boolean
android.content.ContextWrapper.bindService(android.content.Intent,android.content.ServiceConnection,int)boolean
android.content.ContextWrapper.bindService(android.content.Intent,int,java.util.concurrent.Executor,android.content.ServiceConnection)boolean
android.content.ContextWrapper.bindIsolatedService(android.content.Intent,int,String,java.util.concurrent.Executor,android.content.ServiceConnection)boolean
android.content.ContextWrapper.updateServiceGroup(android.content.ServiceConnection,int,int)void
android.content.ContextWrapper.unbindService(android.content.ServiceConnection)void
android.content.ContextWrapper.startInstrumentation(android.content.ComponentName,String,Bundle)boolean
android.content.ContextWrapper.getSystemService(String)Object
android.content.ContextWrapper.getSystemServiceName(Class)String
android.content.ContextWrapper.checkPermission(String,int,int)int
android.content.ContextWrapper.checkCallingPermission(String)int
android.content.ContextWrapper.checkCallingOrSelfPermission(String)int
android.content.ContextWrapper.checkSelfPermission(String)int
android.content.ContextWrapper.enforcePermission(String,int,int,String)void
android.content.ContextWrapper.enforceCallingPermission(String,String)void
android.content.ContextWrapper.enforceCallingOrSelfPermission(String,String)void
android.content.ContextWrapper.grantUriPermission(String,android.net.Uri,int)void
android.content.ContextWrapper.revokeUriPermission(android.net.Uri,int)void
android.content.ContextWrapper.revokeUriPermission(String,android.net.Uri,int)void
android.content.ContextWrapper.checkUriPermission(android.net.Uri,int,int,int)int
android.content.ContextWrapper.checkCallingUriPermission(android.net.Uri,int)int
android.content.ContextWrapper.checkCallingOrSelfUriPermission(android.net.Uri,int)int
android.content.ContextWrapper.checkUriPermission(android.net.Uri,String,String,int,int,int)int
android.content.ContextWrapper.enforceUriPermission(android.net.Uri,int,int,int,String)void
android.content.ContextWrapper.enforceCallingUriPermission(android.net.Uri,int,String)void
android.content.ContextWrapper.enforceCallingOrSelfUriPermission(android.net.Uri,int,String)void
android.content.ContextWrapper.enforceUriPermission(android.net.Uri,String,String,int,int,int,String)void
android.content.ContextWrapper.createPackageContext(String,int)android.content.Context
android.content.ContextWrapper.createContextForSplit(String)android.content.Context
android.content.ContextWrapper.createConfigurationContext(android.content.res.Configuration)android.content.Context
android.content.ContextWrapper.createDisplayContext(android.view.Display)android.content.Context
android.content.ContextWrapper.isRestricted)boolean
android.content.ContextWrapper.createDeviceProtectedStorageContext)android.content.Context
android.content.ContextWrapper.isDeviceProtectedStorage)boolean
android.content.CursorLoader.loadInBackground)android.database.Cursor
android.content.CursorLoader.cancelLoadInBackground)void
android.content.CursorLoader.deliverResult(android.database.Cursor)void
android.content.CursorLoader.onStartLoading)void
android.content.CursorLoader.onStopLoading)void
android.content.CursorLoader.onCanceled(android.database.Cursor)void
android.content.CursorLoader.onReset)void
android.content.CursorLoader.getUri)android.net.Uri
android.content.CursorLoader.setUri(android.net.Uri)void
android.content.CursorLoader.setProjection(String)void
android.content.CursorLoader.getSelection)String
android.content.CursorLoader.setSelection(String)void
android.content.CursorLoader.setSelectionArgs(String)void
android.content.CursorLoader.getSortOrder)String
android.content.CursorLoader.setSortOrder(String)void
android.content.CursorLoader.dump(String,java.io.FileDescriptor,java.io.PrintWriter,String)void
android.content.Entity.getEntityValues)android.content.ContentValues
android.content.Entity.getSubValues)java.util.ArrayList
android.content.Entity.addSubValue(android.net.Uri,android.content.ContentValues)void
android.content.Entity.toString)String
android.content.Intent.fromContext(android.content.Context,int)android.content.Intent.ShortcutIconResource
android.content.Intent.describeContents)int
android.content.Intent.writeToParcel(Parcel,int)void
android.content.Intent.toString)String
android.content.Intent.getIntent)android.content.Intent
android.content.Intent.equals(Object)boolean
android.content.Intent.hashCode)int
android.content.Intent.createChooser(android.content.Intent,CharSequence)android.content.Intent
android.content.Intent.createChooser(android.content.Intent,CharSequence,android.content.IntentSender)android.content.Intent
android.content.Intent.clone)Object
android.content.Intent.cloneFilter)android.content.Intent
android.content.Intent.makeMainActivity(android.content.ComponentName)android.content.Intent
android.content.Intent.makeMainSelectorActivity(String,String)android.content.Intent
android.content.Intent.makeRestartActivityTask(android.content.ComponentName)android.content.Intent
android.content.Intent.getIntent(String)android.content.Intent
android.content.Intent.parseUri(String,int)android.content.Intent
android.content.Intent.getIntentOld(String)android.content.Intent
android.content.Intent.getAction)String
android.content.Intent.getData)android.net.Uri
android.content.Intent.getDataString)String
android.content.Intent.getScheme)String
android.content.Intent.getType)String
android.content.Intent.resolveType(android.content.Context)String
android.content.Intent.resolveType(android.content.ContentResolver)String
android.content.Intent.resolveTypeIfNeeded(android.content.ContentResolver)String
android.content.Intent.getIdentifier)String
android.content.Intent.hasCategory(String)boolean
android.content.Intent.getCategories)java.util.Set
android.content.Intent.getSelector)android.content.Intent
android.content.Intent.getClipData)android.content.ClipData
android.content.Intent.setExtrasClassLoader(ClassLoader)void
android.content.Intent.hasExtra(String)boolean
android.content.Intent.hasFileDescriptors)boolean
android.content.Intent.getBooleanExtra(String,boolean)boolean
android.content.Intent.getByteExtra(String,byte)byte
android.content.Intent.getShortExtra(String,short)short
android.content.Intent.getCharExtra(String,char)char
android.content.Intent.getIntExtra(String,int)int
android.content.Intent.getLongExtra(String,long)long
android.content.Intent.getFloatExtra(String,float)float
android.content.Intent.getDoubleExtra(String,double)double
android.content.Intent.getStringExtra(String)String
android.content.Intent.getCharSequenceExtra(String)CharSequence
android.content.Intent.getParcelableExtra(String)Parcelable
android.content.Intent.getParcelableArrayListExtra(String)java.util.ArrayList
android.content.Intent.getSerializableExtra(String)java.io.Serializable
android.content.Intent.getIntegerArrayListExtra(String)java.util.ArrayList
android.content.Intent.getStringArrayListExtra(String)java.util.ArrayList
android.content.Intent.getCharSequenceArrayListExtra(String)java.util.ArrayList
android.content.Intent.getBundleExtra(String)Bundle
android.content.Intent.getExtras)Bundle
android.content.Intent.getFlags)int
android.content.Intent.getPackage)String
android.content.Intent.getComponent)android.content.ComponentName
android.content.Intent.getSourceBounds)android.graphics.Rect
android.content.Intent.resolveActivity(android.content.pm.PackageManager)android.content.ComponentName
android.content.Intent.resolveActivityInfo(android.content.pm.PackageManager,int)android.content.pm.ActivityInfo
android.content.Intent.setAction(String)android.content.Intent
android.content.Intent.setData(android.net.Uri)android.content.Intent
android.content.Intent.setDataAndNormalize(android.net.Uri)android.content.Intent
android.content.Intent.setType(String)android.content.Intent
android.content.Intent.setTypeAndNormalize(String)android.content.Intent
android.content.Intent.setDataAndType(android.net.Uri,String)android.content.Intent
android.content.Intent.setDataAndTypeAndNormalize(android.net.Uri,String)android.content.Intent
android.content.Intent.setIdentifier(String)android.content.Intent
android.content.Intent.addCategory(String)android.content.Intent
android.content.Intent.removeCategory(String)void
android.content.Intent.setSelector(android.content.Intent)void
android.content.Intent.setClipData(android.content.ClipData)void
android.content.Intent.putExtra(String,boolean)android.content.Intent
android.content.Intent.putExtra(String,byte)android.content.Intent
android.content.Intent.putExtra(String,char)android.content.Intent
android.content.Intent.putExtra(String,short)android.content.Intent
android.content.Intent.putExtra(String,int)android.content.Intent
android.content.Intent.putExtra(String,long)android.content.Intent
android.content.Intent.putExtra(String,float)android.content.Intent
android.content.Intent.putExtra(String,double)android.content.Intent
android.content.Intent.putExtra(String,String)android.content.Intent
android.content.Intent.putExtra(String,CharSequence)android.content.Intent
android.content.Intent.putExtra(String,Parcelable)android.content.Intent
android.content.Intent.putExtra(String,Parcelable)android.content.Intent
android.content.Intent.putParcelableArrayListExtra(String,java.util.ArrayList)android.content.Intent
android.content.Intent.putIntegerArrayListExtra(String,java.util.ArrayList)android.content.Intent
android.content.Intent.putStringArrayListExtra(String,java.util.ArrayList)android.content.Intent
android.content.Intent.putCharSequenceArrayListExtra(String,java.util.ArrayList)android.content.Intent
android.content.Intent.putExtra(String,java.io.Serializable)android.content.Intent
android.content.Intent.putExtra(String,boolean)android.content.Intent
android.content.Intent.putExtra(String,byte)android.content.Intent
android.content.Intent.putExtra(String,short)android.content.Intent
android.content.Intent.putExtra(String,char)android.content.Intent
android.content.Intent.putExtra(String,int)android.content.Intent
android.content.Intent.putExtra(String,long)android.content.Intent
android.content.Intent.putExtra(String,float)android.content.Intent
android.content.Intent.putExtra(String,double)android.content.Intent
android.content.Intent.putExtra(String,String)android.content.Intent
android.content.Intent.putExtra(String,CharSequence)android.content.Intent
android.content.Intent.putExtra(String,Bundle)android.content.Intent
android.content.Intent.putExtras(android.content.Intent)android.content.Intent
android.content.Intent.putExtras(Bundle)android.content.Intent
android.content.Intent.replaceExtras(android.content.Intent)android.content.Intent
android.content.Intent.replaceExtras(Bundle)android.content.Intent
android.content.Intent.removeExtra(String)void
android.content.Intent.setFlags(int)android.content.Intent
android.content.Intent.addFlags(int)android.content.Intent
android.content.Intent.removeFlags(int)void
android.content.Intent.setPackage(String)android.content.Intent
android.content.Intent.setComponent(android.content.ComponentName)android.content.Intent
android.content.Intent.setClassName(android.content.Context,String)android.content.Intent
android.content.Intent.setClassName(String,String)android.content.Intent
android.content.Intent.setClass(android.content.Context,Class)android.content.Intent
android.content.Intent.setSourceBounds(android.graphics.Rect)void
android.content.Intent.fillIn(android.content.Intent,int)int
android.content.Intent.filterEquals(android.content.Intent)boolean
android.content.Intent.filterHashCode)int
android.content.Intent.toString)String
android.content.Intent.toURI)String
android.content.Intent.toUri(int)String
android.content.Intent.describeContents)int
android.content.Intent.writeToParcel(Parcel,int)void
android.content.Intent.readFromParcel(Parcel)void
android.content.Intent.parseIntent(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)android.content.Intent
android.content.Intent.normalizeMimeType(String)String
android.content.IntentFilter.getHost)String
android.content.IntentFilter.getPort)int
android.content.IntentFilter.equals(Object)boolean
android.content.IntentFilter.match(android.net.Uri)int
android.content.IntentFilter.create(String,String)android.content.IntentFilter
android.content.IntentFilter.setPriority(int)void
android.content.IntentFilter.getPriority)int
android.content.IntentFilter.addAction(String)void
android.content.IntentFilter.countActions)int
android.content.IntentFilter.getAction(int)String
android.content.IntentFilter.hasAction(String)boolean
android.content.IntentFilter.matchAction(String)boolean
android.content.IntentFilter.actionsIterator)java.util.Iterator
android.content.IntentFilter.addDataType(String)void
android.content.IntentFilter.hasDataType(String)boolean
android.content.IntentFilter.countDataTypes)int
android.content.IntentFilter.getDataType(int)String
android.content.IntentFilter.typesIterator)java.util.Iterator
android.content.IntentFilter.addDataScheme(String)void
android.content.IntentFilter.countDataSchemes)int
android.content.IntentFilter.getDataScheme(int)String
android.content.IntentFilter.hasDataScheme(String)boolean
android.content.IntentFilter.schemesIterator)java.util.Iterator
android.content.IntentFilter.addDataSchemeSpecificPart(String,int)void
android.content.IntentFilter.countDataSchemeSpecificParts)int
android.content.IntentFilter.getDataSchemeSpecificPart(int)PatternMatcher
android.content.IntentFilter.hasDataSchemeSpecificPart(String)boolean
android.content.IntentFilter.schemeSpecificPartsIterator)java.util.Iterator
android.content.IntentFilter.addDataAuthority(String,String)void
android.content.IntentFilter.countDataAuthorities)int
android.content.IntentFilter.getDataAuthority(int)AuthorityEntry
android.content.IntentFilter.hasDataAuthority(android.net.Uri)boolean
android.content.IntentFilter.authoritiesIterator)java.util.Iterator
android.content.IntentFilter.addDataPath(String,int)void
android.content.IntentFilter.countDataPaths)int
android.content.IntentFilter.getDataPath(int)PatternMatcher
android.content.IntentFilter.hasDataPath(String)boolean
android.content.IntentFilter.pathsIterator)java.util.Iterator
android.content.IntentFilter.matchDataAuthority(android.net.Uri)int
android.content.IntentFilter.matchData(String,String,android.net.Uri)int
android.content.IntentFilter.addCategory(String)void
android.content.IntentFilter.countCategories)int
android.content.IntentFilter.getCategory(int)String
android.content.IntentFilter.hasCategory(String)boolean
android.content.IntentFilter.categoriesIterator)java.util.Iterator
android.content.IntentFilter.matchCategories(java.util.Set)String
android.content.IntentFilter.match(android.content.ContentResolver,android.content.Intent,boolean,String)int
android.content.IntentFilter.match(String,String,String,android.net.Uri,java.util.Set,String)int
android.content.IntentFilter.writeToXml(XmlSerializer)void
android.content.IntentFilter.readFromXml(XmlPullParser)void
android.content.IntentFilter.dump(android.util.Printer,String)void
android.content.IntentFilter.describeContents)int
android.content.IntentFilter.writeToParcel(Parcel,int)void
android.content.IntentSender.sendIntent(android.content.Context,int,android.content.Intent,android.content.IntentSender.OnFinished,Handler)void
android.content.IntentSender.sendIntent(android.content.Context,int,android.content.Intent,android.content.IntentSender.OnFinished,Handler,String)void
android.content.IntentSender.getTargetPackage)String
android.content.IntentSender.getCreatorPackage)String
android.content.IntentSender.getCreatorUid)int
android.content.IntentSender.getCreatorUserHandle)UserHandle
android.content.IntentSender.equals(Object)boolean
android.content.IntentSender.hashCode)int
android.content.IntentSender.toString)String
android.content.IntentSender.describeContents)int
android.content.IntentSender.writeToParcel(Parcel,int)void
android.content.IntentSender.writeIntentSenderOrNullToParcel(android.content.IntentSender,Parcel)void
android.content.IntentSender.readIntentSenderOrNullFromParcel(Parcel)android.content.IntentSender
android.content.Loader.deliverSelfNotifications)boolean
android.content.Loader.onChange(boolean)void
android.content.Loader.deliverResult(Object)void
android.content.Loader.deliverCancellation)void
android.content.Loader.getContext)android.content.Context
android.content.Loader.getId)int
android.content.Loader.registerListener(int,android.content.Loader.OnLoadCompleteListener)void
android.content.Loader.unregisterListener(android.content.Loader.OnLoadCompleteListener)void
android.content.Loader.registerOnLoadCanceledListener(android.content.Loader.OnLoadCanceledListener)void
android.content.Loader.unregisterOnLoadCanceledListener(android.content.Loader.OnLoadCanceledListener)void
android.content.Loader.isStarted)boolean
android.content.Loader.isAbandoned)boolean
android.content.Loader.isReset)boolean
android.content.Loader.startLoading)void
android.content.Loader.onStartLoading)void
android.content.Loader.cancelLoad)boolean
android.content.Loader.onCancelLoad)boolean
android.content.Loader.forceLoad)void
android.content.Loader.onForceLoad)void
android.content.Loader.stopLoading)void
android.content.Loader.onStopLoading)void
android.content.Loader.abandon)void
android.content.Loader.onAbandon)void
android.content.Loader.reset)void
android.content.Loader.onReset)void
android.content.Loader.takeContentChanged)boolean
android.content.Loader.commitContentChanged)void
android.content.Loader.rollbackContentChanged)void
android.content.Loader.onContentChanged)void
android.content.Loader.dataToString(Object)String
android.content.Loader.toString)String
android.content.Loader.dump(String,java.io.FileDescriptor,java.io.PrintWriter,String)void
android.content.LocusId.getId)String
android.content.LocusId.hashCode)int
android.content.LocusId.equals(Object)boolean
android.content.LocusId.toString)String
android.content.LocusId.describeContents)int
android.content.LocusId.writeToParcel(android.os.Parcel,int)void
android.content.MutableContextWrapper.setBaseContext(android.content.Context)void
android.content.OperationApplicationException.getNumSuccessfulYieldPoints)int
android.content.PeriodicSync.describeContents)int
android.content.PeriodicSync.writeToParcel(Parcel,int)void
android.content.PeriodicSync.equals(Object)boolean
android.content.PeriodicSync.toString)String
android.content.RestrictionEntry.createBundleEntry(String,android.content.RestrictionEntry)android.content.RestrictionEntry
android.content.RestrictionEntry.createBundleArrayEntry(String,android.content.RestrictionEntry)android.content.RestrictionEntry
android.content.RestrictionEntry.setType(int)void
android.content.RestrictionEntry.getType)int
android.content.RestrictionEntry.getSelectedString)String
android.content.RestrictionEntry.getSelectedState)boolean
android.content.RestrictionEntry.getIntValue)int
android.content.RestrictionEntry.setIntValue(int)void
android.content.RestrictionEntry.setSelectedString(String)void
android.content.RestrictionEntry.setSelectedState(boolean)void
android.content.RestrictionEntry.setAllSelectedStrings(String)void
android.content.RestrictionEntry.setChoiceValues(String)void
android.content.RestrictionEntry.setChoiceValues(android.content.Context,int)void
android.content.RestrictionEntry.setRestrictions(android.content.RestrictionEntry)void
android.content.RestrictionEntry.setChoiceEntries(String)void
android.content.RestrictionEntry.setChoiceEntries(android.content.Context,int)void
android.content.RestrictionEntry.getDescription)String
android.content.RestrictionEntry.setDescription(String)void
android.content.RestrictionEntry.getKey)String
android.content.RestrictionEntry.getTitle)String
android.content.RestrictionEntry.setTitle(String)void
android.content.RestrictionEntry.equals(Object)boolean
android.content.RestrictionEntry.hashCode)int
android.content.RestrictionEntry.describeContents)int
android.content.RestrictionEntry.writeToParcel(android.os.Parcel,int)void
android.content.RestrictionEntry.toString)String
android.content.RestrictionsManager.getApplicationRestrictions)android.os.Bundle
android.content.RestrictionsManager.hasRestrictionsProvider)boolean
android.content.RestrictionsManager.requestPermission(String,String,android.os.PersistableBundle)void
android.content.RestrictionsManager.createLocalApprovalIntent)android.content.Intent
android.content.RestrictionsManager.notifyPermissionResponse(String,android.os.PersistableBundle)void
android.content.RestrictionsManager.getManifestRestrictions(String)java.util.List
android.content.RestrictionsManager.convertRestrictionsToBundle(java.util.List)android.os.Bundle
android.content.SearchRecentSuggestionsProvider.setupSuggestions(String,int)void
android.content.SearchRecentSuggestionsProvider.delete(android.net.Uri,String,String)int
android.content.SearchRecentSuggestionsProvider.getType(android.net.Uri)String
android.content.SearchRecentSuggestionsProvider.insert(android.net.Uri,android.content.ContentValues)android.net.Uri
android.content.SearchRecentSuggestionsProvider.onCreate)boolean
android.content.SearchRecentSuggestionsProvider.query(android.net.Uri,String,String,String,String)android.database.Cursor
android.content.SearchRecentSuggestionsProvider.update(android.net.Uri,android.content.ContentValues,String,String)int
android.content.ServiceConnection.onBindingDied(android.content.ComponentName)void
android.content.ServiceConnection.onNullBinding(android.content.ComponentName)void
android.content.SyncAdapterType.supportsUploading)boolean
android.content.SyncAdapterType.isUserVisible)boolean
android.content.SyncAdapterType.allowParallelSyncs)boolean
android.content.SyncAdapterType.isAlwaysSyncable)boolean
android.content.SyncAdapterType.getSettingsActivity)String
android.content.SyncAdapterType.newKey(String,String)android.content.SyncAdapterType
android.content.SyncAdapterType.equals(Object)boolean
android.content.SyncAdapterType.hashCode)int
android.content.SyncAdapterType.toString)String
android.content.SyncAdapterType.describeContents)int
android.content.SyncAdapterType.writeToParcel(android.os.Parcel,int)void
android.content.SyncContext.onFinished(android.content.SyncResult)void
android.content.SyncContext.getSyncContextBinder)android.os.IBinder
android.content.SyncInfo.describeContents)int
android.content.SyncInfo.writeToParcel(android.os.Parcel,int)void
android.content.SyncRequest.syncOnce)android.content.SyncRequest.Builder
android.content.SyncRequest.syncPeriodic(long,long)android.content.SyncRequest.Builder
android.content.SyncRequest.setDisallowMetered(boolean)android.content.SyncRequest.Builder
android.content.SyncRequest.setRequiresCharging(boolean)android.content.SyncRequest.Builder
android.content.SyncRequest.setSyncAdapter(android.accounts.Account,String)android.content.SyncRequest.Builder
android.content.SyncRequest.setExtras(Bundle)android.content.SyncRequest.Builder
android.content.SyncRequest.setNoRetry(boolean)android.content.SyncRequest.Builder
android.content.SyncRequest.setIgnoreSettings(boolean)android.content.SyncRequest.Builder
android.content.SyncRequest.setIgnoreBackoff(boolean)android.content.SyncRequest.Builder
android.content.SyncRequest.setManual(boolean)android.content.SyncRequest.Builder
android.content.SyncRequest.setExpedited(boolean)android.content.SyncRequest.Builder
android.content.SyncRequest.build)android.content.SyncRequest
android.content.SyncRequest.describeContents)int
android.content.SyncRequest.writeToParcel(Parcel,int)void
android.content.SyncResult.hasHardError)boolean
android.content.SyncResult.hasSoftError)boolean
android.content.SyncResult.hasError)boolean
android.content.SyncResult.madeSomeProgress)boolean
android.content.SyncResult.clear)void
android.content.SyncResult.describeContents)int
android.content.SyncResult.writeToParcel(android.os.Parcel,int)void
android.content.SyncResult.toString)String
android.content.SyncResult.toDebugString)String
android.content.SyncStats.toString)String
android.content.SyncStats.clear)void
android.content.SyncStats.describeContents)int
android.content.SyncStats.writeToParcel(android.os.Parcel,int)void
android.content.UriMatcher.addURI(String,String,int)void
android.content.UriMatcher.match(android.net.Uri)int
android.content.UriPermission.getUri)android.net.Uri
android.content.UriPermission.isReadPermission)boolean
android.content.UriPermission.isWritePermission)boolean
android.content.UriPermission.getPersistedTime)long
android.content.UriPermission.toString)String
android.content.UriPermission.describeContents)int
android.content.UriPermission.writeToParcel(android.os.Parcel,int)void
android.content.pm.ActivityInfo.getThemeResource)int
android.content.pm.ActivityInfo.dump(android.util.Printer,String)void
android.content.pm.ActivityInfo.toString)String
android.content.pm.ActivityInfo.describeContents)int
android.content.pm.ActivityInfo.writeToParcel(android.os.Parcel,int)void
android.content.pm.ApplicationInfo.compare(android.content.pm.ApplicationInfo,android.content.pm.ApplicationInfo)int
android.content.pm.ApplicationInfo.getCategoryTitle(android.content.Context,int)CharSequence
android.content.pm.ApplicationInfo.dump(android.util.Printer,String)void
android.content.pm.ApplicationInfo.toString)String
android.content.pm.ApplicationInfo.describeContents)int
android.content.pm.ApplicationInfo.writeToParcel(android.os.Parcel,int)void
android.content.pm.ApplicationInfo.loadDescription(android.content.pm.PackageManager)CharSequence
android.content.pm.ApplicationInfo.isVirtualPreload)boolean
android.content.pm.ApplicationInfo.isProfileableByShell)boolean
android.content.pm.ApplicationInfo.isResourceOverlay)boolean
android.content.pm.ChangedPackages.describeContents)int
android.content.pm.ChangedPackages.writeToParcel(android.os.Parcel,int)void
android.content.pm.ChangedPackages.getSequenceNumber)int
android.content.pm.ChangedPackages.getPackageNames)java.util.List
android.content.pm.ComponentInfo.isEnabled)boolean
android.content.pm.ComponentInfo.getIconResource)int
android.content.pm.ComponentInfo.getLogoResource)int
android.content.pm.ComponentInfo.getBannerResource)int
android.content.pm.ComponentInfo.dumpFront(android.util.Printer,String)void
android.content.pm.ComponentInfo.dumpBack(android.util.Printer,String)void
android.content.pm.ComponentInfo.writeToParcel(android.os.Parcel,int)void
android.content.pm.ConfigurationInfo.toString)String
android.content.pm.ConfigurationInfo.describeContents)int
android.content.pm.ConfigurationInfo.writeToParcel(android.os.Parcel,int)void
android.content.pm.ConfigurationInfo.getGlEsVersion)String
android.content.pm.CrossProfileApps.startMainActivity(android.content.ComponentName,android.os.UserHandle)void
android.content.pm.CrossProfileApps.getTargetUserProfiles)java.util.List
android.content.pm.CrossProfileApps.getProfileSwitchingLabel(android.os.UserHandle)CharSequence
android.content.pm.CrossProfileApps.getProfileSwitchingIconDrawable(android.os.UserHandle)android.graphics.drawable.Drawable
android.content.pm.FeatureGroupInfo.describeContents)int
android.content.pm.FeatureGroupInfo.writeToParcel(android.os.Parcel,int)void
android.content.pm.FeatureInfo.toString)String
android.content.pm.FeatureInfo.describeContents)int
android.content.pm.FeatureInfo.writeToParcel(android.os.Parcel,int)void
android.content.pm.FeatureInfo.getGlEsVersion)String
android.content.pm.InstrumentationInfo.toString)String
android.content.pm.InstrumentationInfo.describeContents)int
android.content.pm.InstrumentationInfo.writeToParcel(android.os.Parcel,int)void
android.content.pm.LabeledIntent.getSourcePackage)String
android.content.pm.LabeledIntent.getLabelResource)int
android.content.pm.LabeledIntent.getNonLocalizedLabel)CharSequence
android.content.pm.LabeledIntent.getIconResource)int
android.content.pm.LabeledIntent.loadLabel(android.content.pm.PackageManager)CharSequence
android.content.pm.LabeledIntent.loadIcon(android.content.pm.PackageManager)android.graphics.drawable.Drawable
android.content.pm.LabeledIntent.writeToParcel(android.os.Parcel,int)void
android.content.pm.LabeledIntent.readFromParcel(android.os.Parcel)void
android.content.pm.LauncherActivityInfo.getComponentName)android.content.ComponentName
android.content.pm.LauncherActivityInfo.getUser)android.os.UserHandle
android.content.pm.LauncherActivityInfo.getLabel)CharSequence
android.content.pm.LauncherActivityInfo.getIcon(int)android.graphics.drawable.Drawable
android.content.pm.LauncherActivityInfo.getApplicationInfo)android.content.pm.ApplicationInfo
android.content.pm.LauncherActivityInfo.getFirstInstallTime)long
android.content.pm.LauncherActivityInfo.getName)String
android.content.pm.LauncherActivityInfo.getBadgedIcon(int)android.graphics.drawable.Drawable
android.content.pm.LauncherApps.setChangedSince(long)android.content.pm.LauncherApps.ShortcutQuery
android.content.pm.LauncherApps.setPackage(String)android.content.pm.LauncherApps.ShortcutQuery
android.content.pm.LauncherApps.setShortcutIds(java.util.List)android.content.pm.LauncherApps.ShortcutQuery
android.content.pm.LauncherApps.setActivity(ComponentName)android.content.pm.LauncherApps.ShortcutQuery
android.content.pm.LauncherApps.setQueryFlags(int)android.content.pm.LauncherApps.ShortcutQuery
android.content.pm.LauncherApps.getRequestType)int
android.content.pm.LauncherApps.getShortcutInfo)android.content.pm.ShortcutInfo
android.content.pm.LauncherApps.getAppWidgetProviderInfo(Context)android.appwidget.AppWidgetProviderInfo
android.content.pm.LauncherApps.getExtras)Bundle
android.content.pm.LauncherApps.isValid)boolean
android.content.pm.LauncherApps.accept(Bundle)boolean
android.content.pm.LauncherApps.accept)boolean
android.content.pm.LauncherApps.writeToParcel(Parcel,int)void
android.content.pm.LauncherApps.describeContents)int
android.content.pm.LauncherApps.onPackagesSuspended(String,UserHandle)void
android.content.pm.LauncherApps.onPackagesSuspended(String,UserHandle,Bundle)void
android.content.pm.LauncherApps.onPackagesUnsuspended(String,UserHandle)void
android.content.pm.LauncherApps.onShortcutsChanged(String,java.util.List,UserHandle)void
android.content.pm.LauncherApps.getProfiles)java.util.List
android.content.pm.LauncherApps.getActivityList(String,UserHandle)java.util.List
android.content.pm.LauncherApps.resolveActivity(Intent,UserHandle)android.content.pm.LauncherActivityInfo
android.content.pm.LauncherApps.startMainActivity(ComponentName,UserHandle,android.graphics.Rect,Bundle)void
android.content.pm.LauncherApps.startPackageInstallerSessionDetailsActivity(PackageInstaller.SessionInfo,android.graphics.Rect,Bundle)void
android.content.pm.LauncherApps.startAppDetailsActivity(ComponentName,UserHandle,android.graphics.Rect,Bundle)void
android.content.pm.LauncherApps.getShortcutConfigActivityList(String,UserHandle)java.util.List
android.content.pm.LauncherApps.getShortcutConfigActivityIntent(android.content.pm.LauncherActivityInfo)IntentSender
android.content.pm.LauncherApps.isPackageEnabled(String,UserHandle)boolean
android.content.pm.LauncherApps.getSuspendedPackageLauncherExtras(String,UserHandle)Bundle
android.content.pm.LauncherApps.shouldHideFromSuggestions(String,UserHandle)boolean
android.content.pm.LauncherApps.getApplicationInfo(String,int,UserHandle)android.content.pm.ApplicationInfo
android.content.pm.LauncherApps.isActivityEnabled(ComponentName,UserHandle)boolean
android.content.pm.LauncherApps.hasShortcutHostPermission)boolean
android.content.pm.LauncherApps.getShortcuts(android.content.pm.LauncherApps.ShortcutQuery,UserHandle)java.util.List
android.content.pm.LauncherApps.pinShortcuts(String,java.util.List,UserHandle)void
android.content.pm.LauncherApps.getShortcutIconDrawable(android.content.pm.ShortcutInfo,int)android.graphics.drawable.Drawable
android.content.pm.LauncherApps.getShortcutBadgedIconDrawable(android.content.pm.ShortcutInfo,int)android.graphics.drawable.Drawable
android.content.pm.LauncherApps.startShortcut(String,String,android.graphics.Rect,Bundle,UserHandle)void
android.content.pm.LauncherApps.startShortcut(android.content.pm.ShortcutInfo,android.graphics.Rect,Bundle)void
android.content.pm.LauncherApps.registerCallback(Callback)void
android.content.pm.LauncherApps.registerCallback(Callback,Handler)void
android.content.pm.LauncherApps.unregisterCallback(Callback)void
android.content.pm.LauncherApps.registerPackageInstallerSessionCallback(java.util.concurrent.Executor,PackageInstaller.SessionCallback)void
android.content.pm.LauncherApps.unregisterPackageInstallerSessionCallback(PackageInstaller.SessionCallback)void
android.content.pm.LauncherApps.getAllPackageInstallerSessions)java.util.List
android.content.pm.LauncherApps.getPinItemRequest(Intent)PinItemRequest
android.content.pm.ModuleInfo.getName)CharSequence
android.content.pm.ModuleInfo.getPackageName)String
android.content.pm.ModuleInfo.isHidden)boolean
android.content.pm.ModuleInfo.toString)String
android.content.pm.ModuleInfo.describeContents)int
android.content.pm.ModuleInfo.hashCode)int
android.content.pm.ModuleInfo.equals(Object)boolean
android.content.pm.ModuleInfo.writeToParcel(android.os.Parcel,int)void
android.content.pm.PackageInfo.getLongVersionCode)long
android.content.pm.PackageInfo.setLongVersionCode(long)void
android.content.pm.PackageInfo.toString)String
android.content.pm.PackageInfo.describeContents)int
android.content.pm.PackageInfo.writeToParcel(android.os.Parcel,int)void
android.content.pm.PackageInstaller.setInstallLocation(int)void
android.content.pm.PackageInstaller.setSize(long)void
android.content.pm.PackageInstaller.setAppPackageName(String)void
android.content.pm.PackageInstaller.setAppIcon(android.graphics.Bitmap)void
android.content.pm.PackageInstaller.setAppLabel(CharSequence)void
android.content.pm.PackageInstaller.setOriginatingUri(android.net.Uri)void
android.content.pm.PackageInstaller.setOriginatingUid(int)void
android.content.pm.PackageInstaller.setReferrerUri(android.net.Uri)void
android.content.pm.PackageInstaller.setWhitelistedRestrictedPermissions(java.util.Set)void
android.content.pm.PackageInstaller.setInstallReason(int)void
android.content.pm.PackageInstaller.setMultiPackage)void
android.content.pm.PackageInstaller.describeContents)int
android.content.pm.PackageInstaller.writeToParcel(Parcel,int)void
android.content.pm.PackageInstaller.getSessionId)int
android.content.pm.PackageInstaller.getUser)UserHandle
android.content.pm.PackageInstaller.getInstallerPackageName)String
android.content.pm.PackageInstaller.getProgress)float
android.content.pm.PackageInstaller.isActive)boolean
android.content.pm.PackageInstaller.isSealed)boolean
android.content.pm.PackageInstaller.getInstallReason)int
android.content.pm.PackageInstaller.getAppPackageName)String
android.content.pm.PackageInstaller.getAppIcon)android.graphics.Bitmap
android.content.pm.PackageInstaller.getAppLabel)CharSequence
android.content.pm.PackageInstaller.createDetailsIntent)android.content.Intent
android.content.pm.PackageInstaller.getMode)int
android.content.pm.PackageInstaller.getInstallLocation)int
android.content.pm.PackageInstaller.getSize)long
android.content.pm.PackageInstaller.getOriginatingUri)android.net.Uri
android.content.pm.PackageInstaller.getOriginatingUid)int
android.content.pm.PackageInstaller.getReferrerUri)android.net.Uri
android.content.pm.PackageInstaller.isMultiPackage)boolean
android.content.pm.PackageInstaller.isStaged)boolean
android.content.pm.PackageInstaller.getParentSessionId)int
android.content.pm.PackageInstaller.isStagedSessionApplied)boolean
android.content.pm.PackageInstaller.isStagedSessionReady)boolean
android.content.pm.PackageInstaller.isStagedSessionFailed)boolean
android.content.pm.PackageInstaller.getStagedSessionErrorCode)int
android.content.pm.PackageInstaller.getStagedSessionErrorMessage)String
android.content.pm.PackageInstaller.isCommitted)boolean
android.content.pm.PackageInstaller.getUpdatedMillis)long
android.content.pm.PackageInstaller.describeContents)int
android.content.pm.PackageInstaller.writeToParcel(Parcel,int)void
android.content.pm.PackageInstaller.setStagingProgress(float)void
android.content.pm.PackageInstaller.openWrite(String,long,long)OutputStream
android.content.pm.PackageInstaller.fsync(OutputStream)void
android.content.pm.PackageInstaller.openRead(String)InputStream
android.content.pm.PackageInstaller.removeSplit(String)void
android.content.pm.PackageInstaller.commit(android.content.IntentSender)void
android.content.pm.PackageInstaller.transfer(String)void
android.content.pm.PackageInstaller.close)void
android.content.pm.PackageInstaller.abandon)void
android.content.pm.PackageInstaller.isMultiPackage)boolean
android.content.pm.PackageInstaller.isStaged)boolean
android.content.pm.PackageInstaller.getParentSessionId)int
android.content.pm.PackageInstaller.addChildSessionId(int)void
android.content.pm.PackageInstaller.removeChildSessionId(int)void
android.content.pm.PackageInstaller.createSession(android.content.pm.PackageInstaller.SessionParams)int
android.content.pm.PackageInstaller.openSession(int)android.content.pm.PackageInstaller.Session
android.content.pm.PackageInstaller.updateSessionAppIcon(int,android.graphics.Bitmap)void
android.content.pm.PackageInstaller.updateSessionAppLabel(int,CharSequence)void
android.content.pm.PackageInstaller.abandonSession(int)void
android.content.pm.PackageInstaller.getSessionInfo(int)android.content.pm.PackageInstaller.SessionInfo
android.content.pm.PackageInstaller.getAllSessions)java.util.List
android.content.pm.PackageInstaller.getMySessions)java.util.List
android.content.pm.PackageInstaller.getStagedSessions)java.util.List
android.content.pm.PackageInstaller.getActiveStagedSession)android.content.pm.PackageInstaller.SessionInfo
android.content.pm.PackageInstaller.uninstall(String,android.content.IntentSender)void
android.content.pm.PackageInstaller.uninstall(android.content.pm.VersionedPackage,android.content.IntentSender)void
android.content.pm.PackageInstaller.installExistingPackage(String,int,android.content.IntentSender)void
android.content.pm.PackageInstaller.registerSessionCallback(SessionCallback)void
android.content.pm.PackageInstaller.registerSessionCallback(SessionCallback,Handler)void
android.content.pm.PackageInstaller.unregisterSessionCallback(SessionCallback)void
android.content.pm.PackageItemInfo.compare(android.content.pm.PackageItemInfo,android.content.pm.PackageItemInfo)int
android.content.pm.PackageItemInfo.loadLabel(android.content.pm.PackageManager)CharSequence
android.content.pm.PackageItemInfo.loadIcon(android.content.pm.PackageManager)android.graphics.drawable.Drawable
android.content.pm.PackageItemInfo.loadUnbadgedIcon(android.content.pm.PackageManager)android.graphics.drawable.Drawable
android.content.pm.PackageItemInfo.loadBanner(android.content.pm.PackageManager)android.graphics.drawable.Drawable
android.content.pm.PackageItemInfo.loadLogo(android.content.pm.PackageManager)android.graphics.drawable.Drawable
android.content.pm.PackageItemInfo.loadXmlMetaData(android.content.pm.PackageManager,String)android.content.res.XmlResourceParser
android.content.pm.PackageItemInfo.dumpFront(android.util.Printer,String)void
android.content.pm.PackageItemInfo.dumpBack(android.util.Printer,String)void
android.content.pm.PackageItemInfo.writeToParcel(android.os.Parcel,int)void
android.content.pm.PackageManager.getPackageInfo(String,int)android.content.pm.PackageInfo
android.content.pm.PackageManager.getPackageInfo(android.content.pm.VersionedPackage,int)android.content.pm.PackageInfo
android.content.pm.PackageManager.getPackageUid(String,int)int
android.content.pm.PackageManager.getPermissionInfo(String,int)android.content.pm.PermissionInfo
android.content.pm.PackageManager.queryPermissionsByGroup(String,int)java.util.List
android.content.pm.PackageManager.getPermissionGroupInfo(String,int)android.content.pm.PermissionGroupInfo
android.content.pm.PackageManager.getApplicationInfo(String,int)android.content.pm.ApplicationInfo
android.content.pm.PackageManager.getActivityInfo(ComponentName,int)android.content.pm.ActivityInfo
android.content.pm.PackageManager.getReceiverInfo(ComponentName,int)android.content.pm.ActivityInfo
android.content.pm.PackageManager.getServiceInfo(ComponentName,int)android.content.pm.ServiceInfo
android.content.pm.PackageManager.getProviderInfo(ComponentName,int)android.content.pm.ProviderInfo
android.content.pm.PackageManager.getModuleInfo(String,int)android.content.pm.ModuleInfo
android.content.pm.PackageManager.getInstalledModules(int)java.util.List
android.content.pm.PackageManager.getWhitelistedRestrictedPermissions(String,int)java.util.Set
android.content.pm.PackageManager.addWhitelistedRestrictedPermission(String,String,int)boolean
android.content.pm.PackageManager.removeWhitelistedRestrictedPermission(String,String,int)boolean
android.content.pm.PackageManager.getInstrumentationInfo(ComponentName,int)android.content.pm.InstrumentationInfo
android.content.pm.PackageManager.getActivityIcon(ComponentName)android.graphics.drawable.Drawable
android.content.pm.PackageManager.getActivityIcon(Intent)android.graphics.drawable.Drawable
android.content.pm.PackageManager.getActivityBanner(ComponentName)android.graphics.drawable.Drawable
android.content.pm.PackageManager.getActivityBanner(Intent)android.graphics.drawable.Drawable
android.content.pm.PackageManager.getApplicationIcon(String)android.graphics.drawable.Drawable
android.content.pm.PackageManager.getApplicationBanner(String)android.graphics.drawable.Drawable
android.content.pm.PackageManager.getActivityLogo(ComponentName)android.graphics.drawable.Drawable
android.content.pm.PackageManager.getActivityLogo(Intent)android.graphics.drawable.Drawable
android.content.pm.PackageManager.getApplicationLogo(String)android.graphics.drawable.Drawable
android.content.pm.PackageManager.getResourcesForActivity(ComponentName)android.content.res.Resources
android.content.pm.PackageManager.getResourcesForApplication(android.content.pm.ApplicationInfo)android.content.res.Resources
android.content.pm.PackageManager.getResourcesForApplication(String)android.content.res.Resources
android.content.pm.PackageManager.getPackageArchiveInfo(String,int)android.content.pm.PackageInfo
android.content.pm.PackageManager.getSyntheticAppDetailsActivityEnabled(String)boolean
android.content.pm.PackageManager.isPackageSuspended(String)boolean
android.content.pm.PackageManager.isPackageSuspended)boolean
android.content.pm.PackageManager.getSuspendedPackageAppExtras)android.os.Bundle
android.content.pm.PackageManager.isDeviceUpgrading)boolean
android.content.pm.PackageManager.hasSigningCertificate(String,byte,int)boolean
android.content.pm.PackageManager.hasSigningCertificate(int,byte,int)boolean
android.content.pm.PackageStats.toString)String
android.content.pm.PackageStats.describeContents)int
android.content.pm.PackageStats.writeToParcel(android.os.Parcel,int)void
android.content.pm.PackageStats.equals(Object)boolean
android.content.pm.PackageStats.hashCode)int
android.content.pm.PathPermission.getReadPermission)String
android.content.pm.PathPermission.getWritePermission)String
android.content.pm.PathPermission.writeToParcel(Parcel,int)void
android.content.pm.PermissionGroupInfo.loadDescription(android.content.pm.PackageManager)CharSequence
android.content.pm.PermissionGroupInfo.toString)String
android.content.pm.PermissionGroupInfo.describeContents)int
android.content.pm.PermissionGroupInfo.writeToParcel(android.os.Parcel,int)void
android.content.pm.PermissionInfo.loadDescription(android.content.pm.PackageManager)CharSequence
android.content.pm.PermissionInfo.getProtection)int
android.content.pm.PermissionInfo.getProtectionFlags)int
android.content.pm.PermissionInfo.toString)String
android.content.pm.PermissionInfo.describeContents)int
android.content.pm.PermissionInfo.writeToParcel(android.os.Parcel,int)void
android.content.pm.ProviderInfo.dump(android.util.Printer,String)void
android.content.pm.ProviderInfo.describeContents)int
android.content.pm.ProviderInfo.writeToParcel(Parcel,int)void
android.content.pm.ProviderInfo.toString)String
android.content.pm.ResolveInfo.compare(android.content.pm.ResolveInfo,android.content.pm.ResolveInfo)int
android.content.pm.ResolveInfo.loadLabel(android.content.pm.PackageManager)CharSequence
android.content.pm.ResolveInfo.loadIcon(android.content.pm.PackageManager)android.graphics.drawable.Drawable
android.content.pm.ResolveInfo.getIconResource)int
android.content.pm.ResolveInfo.dump(android.util.Printer,String)void
android.content.pm.ResolveInfo.toString)String
android.content.pm.ResolveInfo.describeContents)int
android.content.pm.ResolveInfo.writeToParcel(android.os.Parcel,int)void
android.content.pm.ServiceInfo.getForegroundServiceType)int
android.content.pm.ServiceInfo.dump(android.util.Printer,String)void
android.content.pm.ServiceInfo.toString)String
android.content.pm.ServiceInfo.describeContents)int
android.content.pm.ServiceInfo.writeToParcel(android.os.Parcel,int)void
android.content.pm.SharedLibraryInfo.getType)int
android.content.pm.SharedLibraryInfo.getName)String
android.content.pm.SharedLibraryInfo.getVersion)int
android.content.pm.SharedLibraryInfo.getLongVersion)long
android.content.pm.SharedLibraryInfo.getDeclaringPackage)android.content.pm.VersionedPackage
android.content.pm.SharedLibraryInfo.getDependentPackages)java.util.List
android.content.pm.SharedLibraryInfo.describeContents)int
android.content.pm.SharedLibraryInfo.toString)String
android.content.pm.SharedLibraryInfo.writeToParcel(android.os.Parcel,int)void
android.content.pm.ShortcutInfo.setLocusId(LocusId)android.content.pm.ShortcutInfo.Builder
android.content.pm.ShortcutInfo.setActivity(ComponentName)android.content.pm.ShortcutInfo.Builder
android.content.pm.ShortcutInfo.setIcon(android.graphics.drawable.Icon)android.content.pm.ShortcutInfo.Builder
android.content.pm.ShortcutInfo.setShortLabel(CharSequence)android.content.pm.ShortcutInfo.Builder
android.content.pm.ShortcutInfo.setLongLabel(CharSequence)android.content.pm.ShortcutInfo.Builder
android.content.pm.ShortcutInfo.setDisabledMessage(CharSequence)android.content.pm.ShortcutInfo.Builder
android.content.pm.ShortcutInfo.setCategories(java.util.Set)android.content.pm.ShortcutInfo.Builder
android.content.pm.ShortcutInfo.setIntent(Intent)android.content.pm.ShortcutInfo.Builder
android.content.pm.ShortcutInfo.setIntents(Intent)android.content.pm.ShortcutInfo.Builder
android.content.pm.ShortcutInfo.setPerson(android.app.Person)android.content.pm.ShortcutInfo.Builder
android.content.pm.ShortcutInfo.setPersons(android.app.Person)android.content.pm.ShortcutInfo.Builder
android.content.pm.ShortcutInfo.setLongLived(boolean)android.content.pm.ShortcutInfo.Builder
android.content.pm.ShortcutInfo.setRank(int)android.content.pm.ShortcutInfo.Builder
android.content.pm.ShortcutInfo.setExtras(PersistableBundle)android.content.pm.ShortcutInfo.Builder
android.content.pm.ShortcutInfo.build)android.content.pm.ShortcutInfo
android.content.pm.ShortcutInfo.getId)String
android.content.pm.ShortcutInfo.getLocusId)LocusId
android.content.pm.ShortcutInfo.getPackage)String
android.content.pm.ShortcutInfo.getActivity)ComponentName
android.content.pm.ShortcutInfo.getShortLabel)CharSequence
android.content.pm.ShortcutInfo.getLongLabel)CharSequence
android.content.pm.ShortcutInfo.getDisabledMessage)CharSequence
android.content.pm.ShortcutInfo.getDisabledReason)int
android.content.pm.ShortcutInfo.getCategories)java.util.Set
android.content.pm.ShortcutInfo.getIntent)Intent
android.content.pm.ShortcutInfo.getRank)int
android.content.pm.ShortcutInfo.getExtras)PersistableBundle
android.content.pm.ShortcutInfo.getUserHandle)UserHandle
android.content.pm.ShortcutInfo.getLastChangedTimestamp)long
android.content.pm.ShortcutInfo.isDynamic)boolean
android.content.pm.ShortcutInfo.isPinned)boolean
android.content.pm.ShortcutInfo.isDeclaredInManifest)boolean
android.content.pm.ShortcutInfo.isImmutable)boolean
android.content.pm.ShortcutInfo.isEnabled)boolean
android.content.pm.ShortcutInfo.hasKeyFieldsOnly)boolean
android.content.pm.ShortcutInfo.writeToParcel(Parcel,int)void
android.content.pm.ShortcutInfo.describeContents)int
android.content.pm.ShortcutInfo.toString)String
android.content.pm.ShortcutManager.setDynamicShortcuts(java.util.List)boolean
android.content.pm.ShortcutManager.getDynamicShortcuts)java.util.List
android.content.pm.ShortcutManager.getManifestShortcuts)java.util.List
android.content.pm.ShortcutManager.addDynamicShortcuts(java.util.List)boolean
android.content.pm.ShortcutManager.removeDynamicShortcuts(java.util.List)void
android.content.pm.ShortcutManager.removeAllDynamicShortcuts)void
android.content.pm.ShortcutManager.getPinnedShortcuts)java.util.List
android.content.pm.ShortcutManager.updateShortcuts(java.util.List)boolean
android.content.pm.ShortcutManager.disableShortcuts(java.util.List)void
android.content.pm.ShortcutManager.disableShortcuts(java.util.List,CharSequence)void
android.content.pm.ShortcutManager.enableShortcuts(java.util.List)void
android.content.pm.ShortcutManager.getMaxShortcutCountPerActivity)int
android.content.pm.ShortcutManager.isRateLimitingActive)boolean
android.content.pm.ShortcutManager.getIconMaxWidth)int
android.content.pm.ShortcutManager.getIconMaxHeight)int
android.content.pm.ShortcutManager.reportShortcutUsed(String)void
android.content.pm.ShortcutManager.isRequestPinShortcutSupported)boolean
android.content.pm.ShortcutManager.requestPinShortcut(android.content.pm.ShortcutInfo,IntentSender)boolean
android.content.pm.ShortcutManager.createShortcutResultIntent(android.content.pm.ShortcutInfo)Intent
android.content.pm.Signature.toCharsString)String
android.content.pm.Signature.equals(Object)boolean
android.content.pm.Signature.hashCode)int
android.content.pm.Signature.describeContents)int
android.content.pm.Signature.writeToParcel(android.os.Parcel,int)void
android.content.pm.SigningInfo.hasMultipleSigners)boolean
android.content.pm.SigningInfo.hasPastSigningCertificates)boolean
android.content.pm.SigningInfo.describeContents)int
android.content.pm.SigningInfo.writeToParcel(android.os.Parcel,int)void
android.content.pm.VersionedPackage.getPackageName)String
android.content.pm.VersionedPackage.getVersionCode)int
android.content.pm.VersionedPackage.getLongVersionCode)long
android.content.pm.VersionedPackage.toString)String
android.content.pm.VersionedPackage.describeContents)int
android.content.pm.VersionedPackage.writeToParcel(android.os.Parcel,int)void
android.content.res.AssetFileDescriptor.write(byte,int,int)void
android.content.res.AssetFileDescriptor.write(byte)void
android.content.res.AssetFileDescriptor.write(int)void
android.content.res.AssetFileDescriptor.available)int
android.content.res.AssetFileDescriptor.read)int
android.content.res.AssetFileDescriptor.read(byte,int,int)int
android.content.res.AssetFileDescriptor.read(byte)int
android.content.res.AssetFileDescriptor.skip(long)long
android.content.res.AssetFileDescriptor.mark(int)void
android.content.res.AssetFileDescriptor.markSupported)boolean
android.content.res.AssetFileDescriptor.getParcelFileDescriptor)ParcelFileDescriptor
android.content.res.AssetFileDescriptor.getFileDescriptor)FileDescriptor
android.content.res.AssetFileDescriptor.getStartOffset)long
android.content.res.AssetFileDescriptor.getExtras)Bundle
android.content.res.AssetFileDescriptor.getLength)long
android.content.res.AssetFileDescriptor.getDeclaredLength)long
android.content.res.AssetFileDescriptor.close)void
android.content.res.AssetFileDescriptor.createInputStream)FileInputStream
android.content.res.AssetFileDescriptor.createOutputStream)FileOutputStream
android.content.res.AssetFileDescriptor.toString)String
android.content.res.AssetFileDescriptor.describeContents)int
android.content.res.AssetFileDescriptor.writeToParcel(Parcel,int)void
android.content.res.AssetManager.read)int
android.content.res.AssetManager.read(byte)int
android.content.res.AssetManager.read(byte,int,int)int
android.content.res.AssetManager.skip(long)long
android.content.res.AssetManager.available)int
android.content.res.AssetManager.markSupported)boolean
android.content.res.AssetManager.mark(int)void
android.content.res.AssetManager.reset)void
android.content.res.AssetManager.close)void
android.content.res.AssetManager.finalize)void
android.content.res.AssetManager.close)void
android.content.res.AssetManager.open(String)java.io.InputStream
android.content.res.AssetManager.open(String,int)java.io.InputStream
android.content.res.AssetManager.openFd(String)android.content.res.AssetFileDescriptor
android.content.res.AssetManager.openNonAssetFd(String)android.content.res.AssetFileDescriptor
android.content.res.AssetManager.openNonAssetFd(int,String)android.content.res.AssetFileDescriptor
android.content.res.AssetManager.openXmlResourceParser(String)android.content.res.XmlResourceParser
android.content.res.AssetManager.openXmlResourceParser(int,String)android.content.res.XmlResourceParser
android.content.res.AssetManager.finalize)void
android.content.res.ColorStateList.valueOf(int)android.content.res.ColorStateList
android.content.res.ColorStateList.createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser)android.content.res.ColorStateList
android.content.res.ColorStateList.createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,Resources.Theme)android.content.res.ColorStateList
android.content.res.ColorStateList.withAlpha(int)android.content.res.ColorStateList
android.content.res.ColorStateList.getChangingConfigurations)int
android.content.res.ColorStateList.isStateful)boolean
android.content.res.ColorStateList.isOpaque)boolean
android.content.res.ColorStateList.getColorForState(int,int)int
android.content.res.ColorStateList.getDefaultColor)int
android.content.res.ColorStateList.toString)String
android.content.res.ColorStateList.describeContents)int
android.content.res.ColorStateList.writeToParcel(android.os.Parcel,int)void
android.content.res.Configuration.isLayoutSizeAtLeast(int)boolean
android.content.res.Configuration.setTo(android.content.res.Configuration)void
android.content.res.Configuration.toString)String
android.content.res.Configuration.setToDefaults)void
android.content.res.Configuration.updateFrom(android.content.res.Configuration)int
android.content.res.Configuration.diff(android.content.res.Configuration)int
android.content.res.Configuration.needNewResources(int,int)boolean
android.content.res.Configuration.describeContents)int
android.content.res.Configuration.writeToParcel(Parcel,int)void
android.content.res.Configuration.readFromParcel(Parcel)void
android.content.res.Configuration.compareTo(android.content.res.Configuration)int
android.content.res.Configuration.equals(android.content.res.Configuration)boolean
android.content.res.Configuration.equals(Object)boolean
android.content.res.Configuration.hashCode)int
android.content.res.Configuration.getLocales)LocaleList
android.content.res.Configuration.setLocales(LocaleList)void
android.content.res.Configuration.setLocale(java.util.Locale)void
android.content.res.Configuration.getLayoutDirection)int
android.content.res.Configuration.setLayoutDirection(java.util.Locale)void
android.content.res.Configuration.isScreenRound)boolean
android.content.res.Configuration.isScreenWideColorGamut)boolean
android.content.res.Configuration.isScreenHdr)boolean
android.content.res.ObbInfo.toString)String
android.content.res.ObbInfo.describeContents)int
android.content.res.ObbInfo.writeToParcel(android.os.Parcel,int)void
android.content.res.ObbScanner.getObbInfo(String)android.content.res.ObbInfo
android.content.res.Resources.applyStyle(int,boolean)void
android.content.res.Resources.setTo(android.content.res.Resources.Theme)void
android.content.res.Resources.obtainStyledAttributes(int)android.content.res.TypedArray
android.content.res.Resources.obtainStyledAttributes(int,int)android.content.res.TypedArray
android.content.res.Resources.obtainStyledAttributes(AttributeSet,int,int,int)android.content.res.TypedArray
android.content.res.Resources.resolveAttribute(int,TypedValue,boolean)boolean
android.content.res.Resources.getResources)android.content.res.Resources
android.content.res.Resources.getDrawable(int)android.graphics.drawable.Drawable
android.content.res.Resources.getChangingConfigurations)int
android.content.res.Resources.dump(int,String,String)void
android.content.res.Resources.rebase)void
android.content.res.Resources.getExplicitStyle(AttributeSet)int
android.content.res.Resources.getSystem)android.content.res.Resources
android.content.res.Resources.getText(int)CharSequence
android.content.res.Resources.getFont(int)android.graphics.Typeface
android.content.res.Resources.getQuantityText(int,int)CharSequence
android.content.res.Resources.getString(int)String
android.content.res.Resources.getQuantityString(int,int)String
android.content.res.Resources.getText(int,CharSequence)CharSequence
android.content.res.Resources.obtainTypedArray(int)android.content.res.TypedArray
android.content.res.Resources.getDimension(int)float
android.content.res.Resources.getDimensionPixelOffset(int)int
android.content.res.Resources.getDimensionPixelSize(int)int
android.content.res.Resources.getFraction(int,int,int)float
android.content.res.Resources.getDrawable(int)android.graphics.drawable.Drawable
android.content.res.Resources.getDrawable(int,android.content.res.Resources.Theme)android.graphics.drawable.Drawable
android.content.res.Resources.getDrawableForDensity(int,int)android.graphics.drawable.Drawable
android.content.res.Resources.getDrawableForDensity(int,int,android.content.res.Resources.Theme)android.graphics.drawable.Drawable
android.content.res.Resources.getMovie(int)android.graphics.Movie
android.content.res.Resources.getColor(int)int
android.content.res.Resources.getColor(int,android.content.res.Resources.Theme)int
android.content.res.Resources.getColorStateList(int)android.content.res.ColorStateList
android.content.res.Resources.getColorStateList(int,android.content.res.Resources.Theme)android.content.res.ColorStateList
android.content.res.Resources.getBoolean(int)boolean
android.content.res.Resources.getInteger(int)int
android.content.res.Resources.getFloat(int)float
android.content.res.Resources.getLayout(int)android.content.res.XmlResourceParser
android.content.res.Resources.getAnimation(int)android.content.res.XmlResourceParser
android.content.res.Resources.getXml(int)android.content.res.XmlResourceParser
android.content.res.Resources.openRawResource(int)java.io.InputStream
android.content.res.Resources.openRawResource(int,TypedValue)java.io.InputStream
android.content.res.Resources.openRawResourceFd(int)android.content.res.AssetFileDescriptor
android.content.res.Resources.getValue(int,TypedValue,boolean)void
android.content.res.Resources.getValueForDensity(int,int,TypedValue,boolean)void
android.content.res.Resources.getValue(String,TypedValue,boolean)void
android.content.res.Resources.getAttributeSetSourceResId(AttributeSet)int
android.content.res.Resources.newTheme)android.content.res.Resources.Theme
android.content.res.Resources.obtainAttributes(AttributeSet,int)android.content.res.TypedArray
android.content.res.Resources.updateConfiguration(android.content.res.Configuration,DisplayMetrics)void
android.content.res.Resources.getDisplayMetrics)DisplayMetrics
android.content.res.Resources.getConfiguration)android.content.res.Configuration
android.content.res.Resources.getIdentifier(String,String,String)int
android.content.res.Resources.getResourceName(int)String
android.content.res.Resources.getResourcePackageName(int)String
android.content.res.Resources.getResourceTypeName(int)String
android.content.res.Resources.getResourceEntryName(int)String
android.content.res.Resources.parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle)void
android.content.res.Resources.parseBundleExtra(String,AttributeSet,android.os.Bundle)void
android.content.res.Resources.getAssets)android.content.res.AssetManager
android.content.res.Resources.flushLayoutCache)void
android.content.res.Resources.finishPreloading)void
android.content.res.TypedArray.length)int
android.content.res.TypedArray.getIndexCount)int
android.content.res.TypedArray.getIndex(int)int
android.content.res.TypedArray.getResources)android.content.res.Resources
android.content.res.TypedArray.getText(int)CharSequence
android.content.res.TypedArray.getString(int)String
android.content.res.TypedArray.getNonResourceString(int)String
android.content.res.TypedArray.getBoolean(int,boolean)boolean
android.content.res.TypedArray.getInt(int,int)int
android.content.res.TypedArray.getFloat(int,float)float
android.content.res.TypedArray.getColor(int,int)int
android.content.res.TypedArray.getColorStateList(int)android.content.res.ColorStateList
android.content.res.TypedArray.getInteger(int,int)int
android.content.res.TypedArray.getDimension(int,float)float
android.content.res.TypedArray.getDimensionPixelOffset(int,int)int
android.content.res.TypedArray.getDimensionPixelSize(int,int)int
android.content.res.TypedArray.getLayoutDimension(int,String)int
android.content.res.TypedArray.getLayoutDimension(int,int)int
android.content.res.TypedArray.getFraction(int,int,int,float)float
android.content.res.TypedArray.getResourceId(int,int)int
android.content.res.TypedArray.getDrawable(int)android.graphics.drawable.Drawable
android.content.res.TypedArray.getFont(int)android.graphics.Typeface
android.content.res.TypedArray.getValue(int,android.util.TypedValue)boolean
android.content.res.TypedArray.getType(int)int
android.content.res.TypedArray.getSourceResourceId(int,int)int
android.content.res.TypedArray.hasValue(int)boolean
android.content.res.TypedArray.hasValueOrEmpty(int)boolean
android.content.res.TypedArray.peekValue(int)android.util.TypedValue
android.content.res.TypedArray.getPositionDescription)String
android.content.res.TypedArray.recycle)void
android.content.res.TypedArray.getChangingConfigurations)int
android.content.res.TypedArray.toString)String
android.database.AbstractCursor.deliverSelfNotifications)boolean
android.database.AbstractCursor.onChange(boolean)void
android.database.AbstractCursor.getType(int)int
android.database.AbstractCursor.getWindow)android.database.CursorWindow
android.database.AbstractCursor.getColumnCount)int
android.database.AbstractCursor.deactivate)void
android.database.AbstractCursor.requery)boolean
android.database.AbstractCursor.isClosed)boolean
android.database.AbstractCursor.close)void
android.database.AbstractCursor.onMove(int,int)boolean
android.database.AbstractCursor.copyStringToBuffer(int,android.database.CharArrayBuffer)void
android.database.AbstractCursor.getPosition)int
android.database.AbstractCursor.moveToPosition(int)boolean
android.database.AbstractCursor.fillWindow(int,android.database.CursorWindow)void
android.database.AbstractCursor.move(int)boolean
android.database.AbstractCursor.moveToFirst)boolean
android.database.AbstractCursor.moveToLast)boolean
android.database.AbstractCursor.moveToNext)boolean
android.database.AbstractCursor.moveToPrevious)boolean
android.database.AbstractCursor.isFirst)boolean
android.database.AbstractCursor.isLast)boolean
android.database.AbstractCursor.isBeforeFirst)boolean
android.database.AbstractCursor.isAfterLast)boolean
android.database.AbstractCursor.getColumnIndex(String)int
android.database.AbstractCursor.getColumnIndexOrThrow(String)int
android.database.AbstractCursor.getColumnName(int)String
android.database.AbstractCursor.registerContentObserver(android.database.ContentObserver)void
android.database.AbstractCursor.unregisterContentObserver(android.database.ContentObserver)void
android.database.AbstractCursor.registerDataSetObserver(android.database.DataSetObserver)void
android.database.AbstractCursor.unregisterDataSetObserver(android.database.DataSetObserver)void
android.database.AbstractCursor.onChange(boolean)void
android.database.AbstractCursor.setNotificationUri(android.content.ContentResolver,android.net.Uri)void
android.database.AbstractCursor.setNotificationUris(android.content.ContentResolver,java.util.List)void
android.database.AbstractCursor.getNotificationUri)android.net.Uri
android.database.AbstractCursor.getNotificationUris)java.util.List
android.database.AbstractCursor.getWantsAllOnMoveCalls)boolean
android.database.AbstractCursor.setExtras(android.os.Bundle)void
android.database.AbstractCursor.getExtras)android.os.Bundle
android.database.AbstractCursor.respond(android.os.Bundle)android.os.Bundle
android.database.AbstractCursor.isFieldUpdated(int)boolean
android.database.AbstractCursor.getUpdatedField(int)Object
android.database.AbstractCursor.checkPosition)void
android.database.AbstractCursor.finalize)void
android.database.AbstractWindowedCursor.getString(int)String
android.database.AbstractWindowedCursor.copyStringToBuffer(int,android.database.CharArrayBuffer)void
android.database.AbstractWindowedCursor.getShort(int)short
android.database.AbstractWindowedCursor.getInt(int)int
android.database.AbstractWindowedCursor.getLong(int)long
android.database.AbstractWindowedCursor.getFloat(int)float
android.database.AbstractWindowedCursor.getDouble(int)double
android.database.AbstractWindowedCursor.isNull(int)boolean
android.database.AbstractWindowedCursor.isBlob(int)boolean
android.database.AbstractWindowedCursor.isString(int)boolean
android.database.AbstractWindowedCursor.isLong(int)boolean
android.database.AbstractWindowedCursor.isFloat(int)boolean
android.database.AbstractWindowedCursor.getType(int)int
android.database.AbstractWindowedCursor.checkPosition)void
android.database.AbstractWindowedCursor.getWindow)android.database.CursorWindow
android.database.AbstractWindowedCursor.setWindow(android.database.CursorWindow)void
android.database.AbstractWindowedCursor.hasWindow)boolean
android.database.ContentObservable.registerObserver(android.database.ContentObserver)void
android.database.ContentObservable.dispatchChange(boolean)void
android.database.ContentObservable.dispatchChange(boolean,android.net.Uri)void
android.database.ContentObservable.notifyChange(boolean)void
android.database.ContentObserver.deliverSelfNotifications)boolean
android.database.ContentObserver.onChange(boolean)void
android.database.ContentObserver.onChange(boolean,android.net.Uri)void
android.database.ContentObserver.dispatchChange(boolean)void
android.database.ContentObserver.dispatchChange(boolean,android.net.Uri)void
android.database.CrossProcessCursorWrapper.fillWindow(int,android.database.CursorWindow)void
android.database.CrossProcessCursorWrapper.getWindow)android.database.CursorWindow
android.database.CrossProcessCursorWrapper.onMove(int,int)boolean
android.database.Cursor.getColumnIndexOrThrow(String)int
android.database.Cursor.setNotificationUris(android.content.ContentResolver,java.util.List)void
android.database.Cursor.getNotificationUris)java.util.List
android.database.CursorJoiner.valueOf(String)Result
android.database.CursorJoiner.iterator)java.util.Iterator
android.database.CursorJoiner.hasNext)boolean
android.database.CursorJoiner.next)Result
android.database.CursorJoiner.remove)void
android.database.CursorWindow.finalize)void
android.database.CursorWindow.clear)void
android.database.CursorWindow.getStartPosition)int
android.database.CursorWindow.setStartPosition(int)void
android.database.CursorWindow.getNumRows)int
android.database.CursorWindow.setNumColumns(int)boolean
android.database.CursorWindow.allocRow)boolean
android.database.CursorWindow.freeLastRow)void
android.database.CursorWindow.isNull(int,int)boolean
android.database.CursorWindow.isBlob(int,int)boolean
android.database.CursorWindow.isLong(int,int)boolean
android.database.CursorWindow.isFloat(int,int)boolean
android.database.CursorWindow.isString(int,int)boolean
android.database.CursorWindow.getType(int,int)int
android.database.CursorWindow.getString(int,int)String
android.database.CursorWindow.copyStringToBuffer(int,int,android.database.CharArrayBuffer)void
android.database.CursorWindow.getLong(int,int)long
android.database.CursorWindow.getDouble(int,int)double
android.database.CursorWindow.getShort(int,int)short
android.database.CursorWindow.getInt(int,int)int
android.database.CursorWindow.getFloat(int,int)float
android.database.CursorWindow.putBlob(byte,int,int)boolean
android.database.CursorWindow.putString(String,int,int)boolean
android.database.CursorWindow.putLong(long,int,int)boolean
android.database.CursorWindow.putDouble(double,int,int)boolean
android.database.CursorWindow.putNull(int,int)boolean
android.database.CursorWindow.newFromParcel(android.os.Parcel)android.database.CursorWindow
android.database.CursorWindow.describeContents)int
android.database.CursorWindow.writeToParcel(android.os.Parcel,int)void
android.database.CursorWindow.onAllReferencesReleased)void
android.database.CursorWindow.toString)String
android.database.CursorWrapper.getWrappedCursor)android.database.Cursor
android.database.CursorWrapper.close)void
android.database.CursorWrapper.isClosed)boolean
android.database.CursorWrapper.getCount)int
android.database.CursorWrapper.deactivate)void
android.database.CursorWrapper.moveToFirst)boolean
android.database.CursorWrapper.getColumnCount)int
android.database.CursorWrapper.getColumnIndex(String)int
android.database.CursorWrapper.getColumnIndexOrThrow(String)int
android.database.CursorWrapper.getColumnName(int)String
android.database.CursorWrapper.getDouble(int)double
android.database.CursorWrapper.setExtras(android.os.Bundle)void
android.database.CursorWrapper.getExtras)android.os.Bundle
android.database.CursorWrapper.getFloat(int)float
android.database.CursorWrapper.getInt(int)int
android.database.CursorWrapper.getLong(int)long
android.database.CursorWrapper.getShort(int)short
android.database.CursorWrapper.getString(int)String
android.database.CursorWrapper.copyStringToBuffer(int,android.database.CharArrayBuffer)void
android.database.CursorWrapper.getWantsAllOnMoveCalls)boolean
android.database.CursorWrapper.isAfterLast)boolean
android.database.CursorWrapper.isBeforeFirst)boolean
android.database.CursorWrapper.isFirst)boolean
android.database.CursorWrapper.isLast)boolean
android.database.CursorWrapper.getType(int)int
android.database.CursorWrapper.isNull(int)boolean
android.database.CursorWrapper.moveToLast)boolean
android.database.CursorWrapper.move(int)boolean
android.database.CursorWrapper.moveToPosition(int)boolean
android.database.CursorWrapper.moveToNext)boolean
android.database.CursorWrapper.getPosition)int
android.database.CursorWrapper.moveToPrevious)boolean
android.database.CursorWrapper.registerContentObserver(android.database.ContentObserver)void
android.database.CursorWrapper.registerDataSetObserver(android.database.DataSetObserver)void
android.database.CursorWrapper.requery)boolean
android.database.CursorWrapper.respond(android.os.Bundle)android.os.Bundle
android.database.CursorWrapper.setNotificationUri(android.content.ContentResolver,android.net.Uri)void
android.database.CursorWrapper.setNotificationUris(android.content.ContentResolver,java.util.List)void
android.database.CursorWrapper.getNotificationUri)android.net.Uri
android.database.CursorWrapper.getNotificationUris)java.util.List
android.database.CursorWrapper.unregisterContentObserver(android.database.ContentObserver)void
android.database.CursorWrapper.unregisterDataSetObserver(android.database.DataSetObserver)void
android.database.DatabaseUtils.getColumnIndex(String)int
android.database.DatabaseUtils.bind(int,double)void
android.database.DatabaseUtils.bind(int,float)void
android.database.DatabaseUtils.bind(int,long)void
android.database.DatabaseUtils.bind(int,int)void
android.database.DatabaseUtils.bind(int,boolean)void
android.database.DatabaseUtils.bindNull(int)void
android.database.DatabaseUtils.bind(int,byte)void
android.database.DatabaseUtils.bind(int,String)void
android.database.DatabaseUtils.insert(ContentValues)long
android.database.DatabaseUtils.execute)long
android.database.DatabaseUtils.prepareForInsert)void
android.database.DatabaseUtils.prepareForReplace)void
android.database.DatabaseUtils.replace(ContentValues)long
android.database.DatabaseUtils.close)void
android.database.DatabaseUtils.writeExceptionToParcel(android.os.Parcel,Exception)void
android.database.DatabaseUtils.readExceptionFromParcel(android.os.Parcel)void
android.database.DatabaseUtils.readExceptionWithFileNotFoundExceptionFromParcel(android.os.Parcel)void
android.database.DatabaseUtils.readExceptionWithOperationApplicationExceptionFromParcel(android.os.Parcel)void
android.database.DatabaseUtils.bindObjectToProgram(android.database.sqlite.SQLiteProgram,int,Object)void
android.database.DatabaseUtils.appendEscapedSQLString(StringBuilder,String)void
android.database.DatabaseUtils.sqlEscapeString(String)String
android.database.DatabaseUtils.appendValueToSql(StringBuilder,Object)void
android.database.DatabaseUtils.concatenateWhere(String,String)String
android.database.DatabaseUtils.getCollationKey(String)String
android.database.DatabaseUtils.getHexCollationKey(String)String
android.database.DatabaseUtils.dumpCursor(android.database.Cursor)void
android.database.DatabaseUtils.dumpCursor(android.database.Cursor,java.io.PrintStream)void
android.database.DatabaseUtils.dumpCursor(android.database.Cursor,StringBuilder)void
android.database.DatabaseUtils.dumpCursorToString(android.database.Cursor)String
android.database.DatabaseUtils.dumpCurrentRow(android.database.Cursor)void
android.database.DatabaseUtils.dumpCurrentRow(android.database.Cursor,java.io.PrintStream)void
android.database.DatabaseUtils.dumpCurrentRow(android.database.Cursor,StringBuilder)void
android.database.DatabaseUtils.dumpCurrentRowToString(android.database.Cursor)String
android.database.DatabaseUtils.cursorStringToContentValues(android.database.Cursor,String,ContentValues)void
android.database.DatabaseUtils.cursorStringToInsertHelper(android.database.Cursor,String,android.database.DatabaseUtils.InsertHelper,int)void
android.database.DatabaseUtils.cursorStringToContentValues(android.database.Cursor,String,ContentValues,String)void
android.database.DatabaseUtils.cursorIntToContentValues(android.database.Cursor,String,ContentValues)void
android.database.DatabaseUtils.cursorIntToContentValues(android.database.Cursor,String,ContentValues,String)void
android.database.DatabaseUtils.cursorLongToContentValues(android.database.Cursor,String,ContentValues)void
android.database.DatabaseUtils.cursorLongToContentValues(android.database.Cursor,String,ContentValues,String)void
android.database.DatabaseUtils.cursorDoubleToCursorValues(android.database.Cursor,String,ContentValues)void
android.database.DatabaseUtils.cursorDoubleToContentValues(android.database.Cursor,String,ContentValues,String)void
android.database.DatabaseUtils.cursorRowToContentValues(android.database.Cursor,ContentValues)void
android.database.DatabaseUtils.queryNumEntries(android.database.sqlite.SQLiteDatabase,String)long
android.database.DatabaseUtils.queryNumEntries(android.database.sqlite.SQLiteDatabase,String,String)long
android.database.DatabaseUtils.queryNumEntries(android.database.sqlite.SQLiteDatabase,String,String,String)long
android.database.DatabaseUtils.longForQuery(android.database.sqlite.SQLiteDatabase,String,String)long
android.database.DatabaseUtils.longForQuery(android.database.sqlite.SQLiteStatement,String)long
android.database.DatabaseUtils.stringForQuery(android.database.sqlite.SQLiteDatabase,String,String)String
android.database.DatabaseUtils.stringForQuery(android.database.sqlite.SQLiteStatement,String)String
android.database.DatabaseUtils.blobFileDescriptorForQuery(android.database.sqlite.SQLiteDatabase,String,String)android.os.ParcelFileDescriptor
android.database.DatabaseUtils.blobFileDescriptorForQuery(android.database.sqlite.SQLiteStatement,String)android.os.ParcelFileDescriptor
android.database.DatabaseUtils.cursorStringToContentValuesIfPresent(android.database.Cursor,ContentValues,String)void
android.database.DatabaseUtils.cursorLongToContentValuesIfPresent(android.database.Cursor,ContentValues,String)void
android.database.DatabaseUtils.cursorShortToContentValuesIfPresent(android.database.Cursor,ContentValues,String)void
android.database.DatabaseUtils.cursorIntToContentValuesIfPresent(android.database.Cursor,ContentValues,String)void
android.database.DatabaseUtils.cursorFloatToContentValuesIfPresent(android.database.Cursor,ContentValues,String)void
android.database.DatabaseUtils.cursorDoubleToContentValuesIfPresent(android.database.Cursor,ContentValues,String)void
android.database.DatabaseUtils.createDbFromSqlStatements(Context,String,int,String)void
android.database.DatabaseUtils.getSqlStatementType(String)int
android.database.DataSetObservable.notifyChanged)void
android.database.DataSetObservable.notifyInvalidated)void
android.database.DataSetObserver.onChanged)void
android.database.DataSetObserver.onInvalidated)void
android.database.DefaultDatabaseErrorHandler.onCorruption(android.database.sqlite.SQLiteDatabase)void
android.database.MatrixCursor.add(Object)android.database.MatrixCursor.RowBuilder
android.database.MatrixCursor.add(String,Object)android.database.MatrixCursor.RowBuilder
android.database.MatrixCursor.newRow)android.database.MatrixCursor.RowBuilder
android.database.MatrixCursor.addRow(Object)void
android.database.MatrixCursor.addRow(Iterable)void
android.database.MatrixCursor.getCount)int
android.database.MatrixCursor.getString(int)String
android.database.MatrixCursor.getShort(int)short
android.database.MatrixCursor.getInt(int)int
android.database.MatrixCursor.getLong(int)long
android.database.MatrixCursor.getFloat(int)float
android.database.MatrixCursor.getDouble(int)double
android.database.MatrixCursor.getType(int)int
android.database.MatrixCursor.isNull(int)boolean
android.database.MergeCursor.getCount)int
android.database.MergeCursor.onMove(int,int)boolean
android.database.MergeCursor.getString(int)String
android.database.MergeCursor.getShort(int)short
android.database.MergeCursor.getInt(int)int
android.database.MergeCursor.getLong(int)long
android.database.MergeCursor.getFloat(int)float
android.database.MergeCursor.getDouble(int)double
android.database.MergeCursor.getType(int)int
android.database.MergeCursor.isNull(int)boolean
android.database.MergeCursor.deactivate)void
android.database.MergeCursor.close)void
android.database.MergeCursor.registerContentObserver(android.database.ContentObserver)void
android.database.MergeCursor.unregisterContentObserver(android.database.ContentObserver)void
android.database.MergeCursor.registerDataSetObserver(android.database.DataSetObserver)void
android.database.MergeCursor.unregisterDataSetObserver(android.database.DataSetObserver)void
android.database.MergeCursor.requery)boolean
android.database.Observable.registerObserver(Object)void
android.database.Observable.unregisterObserver(Object)void
android.database.Observable.unregisterAll)void
android.database.sqlite.SQLiteClosable.onAllReferencesReleasedFromContainer)void
android.database.sqlite.SQLiteClosable.acquireReference)void
android.database.sqlite.SQLiteClosable.releaseReference)void
android.database.sqlite.SQLiteClosable.releaseReferenceFromContainer)void
android.database.sqlite.SQLiteClosable.close)void
android.database.sqlite.SQLiteCursor.getDatabase)android.database.sqlite.SQLiteDatabase
android.database.sqlite.SQLiteCursor.onMove(int,int)boolean
android.database.sqlite.SQLiteCursor.getCount)int
android.database.sqlite.SQLiteCursor.getColumnIndex(String)int
android.database.sqlite.SQLiteCursor.deactivate)void
android.database.sqlite.SQLiteCursor.close)void
android.database.sqlite.SQLiteCursor.requery)boolean
android.database.sqlite.SQLiteCursor.setWindow(android.database.CursorWindow)void
android.database.sqlite.SQLiteCursor.setSelectionArguments(String)void
android.database.sqlite.SQLiteCursor.setFillWindowForwardOnly(boolean)void
android.database.sqlite.SQLiteCursor.finalize)void
android.database.sqlite.SQLiteDatabase.setLookasideConfig(int,int)Builder
android.database.sqlite.SQLiteDatabase.setOpenFlags(int)Builder
android.database.sqlite.SQLiteDatabase.addOpenFlags(int)Builder
android.database.sqlite.SQLiteDatabase.removeOpenFlags(int)Builder
android.database.sqlite.SQLiteDatabase.setCursorFactory(android.database.sqlite.SQLiteDatabase.CursorFactory)Builder
android.database.sqlite.SQLiteDatabase.setErrorHandler(DatabaseErrorHandler)Builder
android.database.sqlite.SQLiteDatabase.setIdleConnectionTimeout(long)Builder
android.database.sqlite.SQLiteDatabase.setJournalMode(String)Builder
android.database.sqlite.SQLiteDatabase.setSynchronousMode(String)Builder
android.database.sqlite.SQLiteDatabase.build)OpenParams
android.database.sqlite.SQLiteDatabase.getLookasideSlotSize)int
android.database.sqlite.SQLiteDatabase.getLookasideSlotCount)int
android.database.sqlite.SQLiteDatabase.getOpenFlags)int
android.database.sqlite.SQLiteDatabase.getCursorFactory)android.database.sqlite.SQLiteDatabase.CursorFactory
android.database.sqlite.SQLiteDatabase.getErrorHandler)DatabaseErrorHandler
android.database.sqlite.SQLiteDatabase.getIdleConnectionTimeout)long
android.database.sqlite.SQLiteDatabase.getJournalMode)String
android.database.sqlite.SQLiteDatabase.getSynchronousMode)String
android.database.sqlite.SQLiteDatabase.finalize)void
android.database.sqlite.SQLiteDatabase.onAllReferencesReleased)void
android.database.sqlite.SQLiteDatabase.releaseMemory)int
android.database.sqlite.SQLiteDatabase.setLockingEnabled(boolean)void
android.database.sqlite.SQLiteDatabase.beginTransaction)void
android.database.sqlite.SQLiteDatabase.beginTransactionNonExclusive)void
android.database.sqlite.SQLiteDatabase.beginTransactionWithListener(android.database.sqlite.SQLiteTransactionListener)void
android.database.sqlite.SQLiteDatabase.beginTransactionWithListenerNonExclusive(android.database.sqlite.SQLiteTransactionListener)void
android.database.sqlite.SQLiteDatabase.endTransaction)void
android.database.sqlite.SQLiteDatabase.setTransactionSuccessful)void
android.database.sqlite.SQLiteDatabase.inTransaction)boolean
android.database.sqlite.SQLiteDatabase.isDbLockedByCurrentThread)boolean
android.database.sqlite.SQLiteDatabase.isDbLockedByOtherThreads)boolean
android.database.sqlite.SQLiteDatabase.yieldIfContended)boolean
android.database.sqlite.SQLiteDatabase.yieldIfContendedSafely)boolean
android.database.sqlite.SQLiteDatabase.yieldIfContendedSafely(long)boolean
android.database.sqlite.SQLiteDatabase.getSyncedTables)Map
android.database.sqlite.SQLiteDatabase.openDatabase(String,android.database.sqlite.SQLiteDatabase.CursorFactory,int)android.database.sqlite.SQLiteDatabase
android.database.sqlite.SQLiteDatabase.openDatabase(java.io.File,OpenParams)android.database.sqlite.SQLiteDatabase
android.database.sqlite.SQLiteDatabase.openDatabase(String,android.database.sqlite.SQLiteDatabase.CursorFactory,int,DatabaseErrorHandler)android.database.sqlite.SQLiteDatabase
android.database.sqlite.SQLiteDatabase.openOrCreateDatabase(java.io.File,android.database.sqlite.SQLiteDatabase.CursorFactory)android.database.sqlite.SQLiteDatabase
android.database.sqlite.SQLiteDatabase.openOrCreateDatabase(String,android.database.sqlite.SQLiteDatabase.CursorFactory)android.database.sqlite.SQLiteDatabase
android.database.sqlite.SQLiteDatabase.openOrCreateDatabase(String,android.database.sqlite.SQLiteDatabase.CursorFactory,DatabaseErrorHandler)android.database.sqlite.SQLiteDatabase
android.database.sqlite.SQLiteDatabase.deleteDatabase(java.io.File)boolean
android.database.sqlite.SQLiteDatabase.create(android.database.sqlite.SQLiteDatabase.CursorFactory)android.database.sqlite.SQLiteDatabase
android.database.sqlite.SQLiteDatabase.createInMemory(OpenParams)android.database.sqlite.SQLiteDatabase
android.database.sqlite.SQLiteDatabase.getVersion)int
android.database.sqlite.SQLiteDatabase.setVersion(int)void
android.database.sqlite.SQLiteDatabase.getMaximumSize)long
android.database.sqlite.SQLiteDatabase.setMaximumSize(long)long
android.database.sqlite.SQLiteDatabase.getPageSize)long
android.database.sqlite.SQLiteDatabase.setPageSize(long)void
android.database.sqlite.SQLiteDatabase.markTableSyncable(String,String)void
android.database.sqlite.SQLiteDatabase.markTableSyncable(String,String,String)void
android.database.sqlite.SQLiteDatabase.findEditTable(String)String
android.database.sqlite.SQLiteDatabase.compileStatement(String)android.database.sqlite.SQLiteStatement
android.database.sqlite.SQLiteDatabase.query(String,String,String,String,String,String,String)Cursor
android.database.sqlite.SQLiteDatabase.rawQuery(String,String)Cursor
android.database.sqlite.SQLiteDatabase.rawQuery(String,String,android.os.CancellationSignal)Cursor
android.database.sqlite.SQLiteDatabase.rawQueryWithFactory(android.database.sqlite.SQLiteDatabase.CursorFactory,String,String,String)Cursor
android.database.sqlite.SQLiteDatabase.rawQueryWithFactory(android.database.sqlite.SQLiteDatabase.CursorFactory,String,String,String,android.os.CancellationSignal)Cursor
android.database.sqlite.SQLiteDatabase.insert(String,String,android.content.ContentValues)long
android.database.sqlite.SQLiteDatabase.insertOrThrow(String,String,android.content.ContentValues)long
android.database.sqlite.SQLiteDatabase.replace(String,String,android.content.ContentValues)long
android.database.sqlite.SQLiteDatabase.replaceOrThrow(String,String,android.content.ContentValues)long
android.database.sqlite.SQLiteDatabase.insertWithOnConflict(String,String,android.content.ContentValues,int)long
android.database.sqlite.SQLiteDatabase.delete(String,String,String)int
android.database.sqlite.SQLiteDatabase.update(String,android.content.ContentValues,String,String)int
android.database.sqlite.SQLiteDatabase.updateWithOnConflict(String,android.content.ContentValues,String,String,int)int
android.database.sqlite.SQLiteDatabase.execSQL(String)void
android.database.sqlite.SQLiteDatabase.execSQL(String,Object)void
android.database.sqlite.SQLiteDatabase.validateSql(String,android.os.CancellationSignal)void
android.database.sqlite.SQLiteDatabase.isReadOnly)boolean
android.database.sqlite.SQLiteDatabase.isOpen)boolean
android.database.sqlite.SQLiteDatabase.needUpgrade(int)boolean
android.database.sqlite.SQLiteDatabase.getPath)String
android.database.sqlite.SQLiteDatabase.setLocale(Locale)void
android.database.sqlite.SQLiteDatabase.setMaxSqlCacheSize(int)void
android.database.sqlite.SQLiteDatabase.setForeignKeyConstraintsEnabled(boolean)void
android.database.sqlite.SQLiteDatabase.enableWriteAheadLogging)boolean
android.database.sqlite.SQLiteDatabase.disableWriteAheadLogging)void
android.database.sqlite.SQLiteDatabase.isWriteAheadLoggingEnabled)boolean
android.database.sqlite.SQLiteDatabase.getAttachedDbs)List
android.database.sqlite.SQLiteDatabase.isDatabaseIntegrityOk)boolean
android.database.sqlite.SQLiteDatabase.toString)String
android.database.sqlite.SQLiteOpenHelper.getDatabaseName)String
android.database.sqlite.SQLiteOpenHelper.setWriteAheadLoggingEnabled(boolean)void
android.database.sqlite.SQLiteOpenHelper.setLookasideConfig(int,int)void
android.database.sqlite.SQLiteOpenHelper.setOpenParams(SQLiteDatabase.OpenParams)void
android.database.sqlite.SQLiteOpenHelper.setIdleConnectionTimeout(long)void
android.database.sqlite.SQLiteOpenHelper.getWritableDatabase)android.database.sqlite.SQLiteDatabase
android.database.sqlite.SQLiteOpenHelper.getReadableDatabase)android.database.sqlite.SQLiteDatabase
android.database.sqlite.SQLiteOpenHelper.onConfigure(android.database.sqlite.SQLiteDatabase)void
android.database.sqlite.SQLiteOpenHelper.onDowngrade(android.database.sqlite.SQLiteDatabase,int,int)void
android.database.sqlite.SQLiteOpenHelper.onOpen(android.database.sqlite.SQLiteDatabase)void
android.database.sqlite.SQLiteProgram.getUniqueId)int
android.database.sqlite.SQLiteProgram.bindNull(int)void
android.database.sqlite.SQLiteProgram.bindLong(int,long)void
android.database.sqlite.SQLiteProgram.bindDouble(int,double)void
android.database.sqlite.SQLiteProgram.bindString(int,String)void
android.database.sqlite.SQLiteProgram.bindBlob(int,byte)void
android.database.sqlite.SQLiteProgram.clearBindings)void
android.database.sqlite.SQLiteProgram.bindAllArgsAsStrings(String)void
android.database.sqlite.SQLiteProgram.onAllReferencesReleased)void
android.database.sqlite.SQLiteQuery.toString)String
android.database.sqlite.SQLiteQueryBuilder.setDistinct(boolean)void
android.database.sqlite.SQLiteQueryBuilder.isDistinct)boolean
android.database.sqlite.SQLiteQueryBuilder.getTables)String
android.database.sqlite.SQLiteQueryBuilder.setTables(String)void
android.database.sqlite.SQLiteQueryBuilder.appendWhere(CharSequence)void
android.database.sqlite.SQLiteQueryBuilder.appendWhereEscapeString(String)void
android.database.sqlite.SQLiteQueryBuilder.appendWhereStandalone(CharSequence)void
android.database.sqlite.SQLiteQueryBuilder.setProjectionMap(java.util.Map)void
android.database.sqlite.SQLiteQueryBuilder.getProjectionMap)java.util.Map
android.database.sqlite.SQLiteQueryBuilder.setCursorFactory(SQLiteDatabase.CursorFactory)void
android.database.sqlite.SQLiteQueryBuilder.setStrict(boolean)void
android.database.sqlite.SQLiteQueryBuilder.isStrict)boolean
android.database.sqlite.SQLiteQueryBuilder.buildQueryString(boolean,String,String,String,String,String,String,String)String
android.database.sqlite.SQLiteQueryBuilder.appendColumns(StringBuilder,String)void
android.database.sqlite.SQLiteQueryBuilder.query(android.database.sqlite.SQLiteDatabase,String,String,String,String,String,String)android.database.Cursor
android.database.sqlite.SQLiteQueryBuilder.update(android.database.sqlite.SQLiteDatabase,android.content.ContentValues,String,String)int
android.database.sqlite.SQLiteQueryBuilder.delete(android.database.sqlite.SQLiteDatabase,String,String)int
android.database.sqlite.SQLiteQueryBuilder.buildQuery(String,String,String,String,String,String)String
android.database.sqlite.SQLiteQueryBuilder.buildQuery(String,String,String,String,String,String,String)String
android.database.sqlite.SQLiteQueryBuilder.buildUnionQuery(String,String,String)String
android.database.sqlite.SQLiteStatement.execute)void
android.database.sqlite.SQLiteStatement.executeUpdateDelete)int
android.database.sqlite.SQLiteStatement.executeInsert)long
android.database.sqlite.SQLiteStatement.simpleQueryForLong)long
android.database.sqlite.SQLiteStatement.simpleQueryForString)String
android.database.sqlite.SQLiteStatement.simpleQueryForBlobFileDescriptor)android.os.ParcelFileDescriptor
android.database.sqlite.SQLiteStatement.toString)String
android.drm.DrmEvent.getUniqueId)int
android.drm.DrmEvent.getType)int
android.drm.DrmEvent.getMessage)String
android.drm.DrmEvent.getAttribute(String)Object
android.drm.DrmInfo.put(String,Object)void
android.drm.DrmInfo.get(String)Object
android.drm.DrmInfo.keyIterator)java.util.Iterator
android.drm.DrmInfo.iterator)java.util.Iterator
android.drm.DrmInfo.getMimeType)String
android.drm.DrmInfo.getInfoType)int
android.drm.DrmInfoRequest.getMimeType)String
android.drm.DrmInfoRequest.getInfoType)int
android.drm.DrmInfoRequest.put(String,Object)void
android.drm.DrmInfoRequest.get(String)Object
android.drm.DrmInfoRequest.keyIterator)java.util.Iterator
android.drm.DrmInfoRequest.iterator)java.util.Iterator
android.drm.DrmManagerClient.finalize)void
android.drm.DrmManagerClient.close)void
android.drm.DrmManagerClient.release)void
android.drm.DrmManagerClient.getConstraints(String,int)android.content.ContentValues
android.drm.DrmManagerClient.getMetadata(String)android.content.ContentValues
android.drm.DrmManagerClient.getConstraints(android.net.Uri,int)android.content.ContentValues
android.drm.DrmManagerClient.getMetadata(android.net.Uri)android.content.ContentValues
android.drm.DrmManagerClient.saveRights(android.drm.DrmRights,String,String)int
android.drm.DrmManagerClient.canHandle(String,String)boolean
android.drm.DrmManagerClient.canHandle(android.net.Uri,String)boolean
android.drm.DrmManagerClient.processDrmInfo(android.drm.DrmInfo)int
android.drm.DrmManagerClient.acquireDrmInfo(android.drm.DrmInfoRequest)android.drm.DrmInfo
android.drm.DrmManagerClient.acquireRights(android.drm.DrmInfoRequest)int
android.drm.DrmManagerClient.getDrmObjectType(String,String)int
android.drm.DrmManagerClient.getDrmObjectType(android.net.Uri,String)int
android.drm.DrmManagerClient.getOriginalMimeType(String)String
android.drm.DrmManagerClient.getOriginalMimeType(android.net.Uri)String
android.drm.DrmManagerClient.checkRightsStatus(String)int
android.drm.DrmManagerClient.checkRightsStatus(android.net.Uri)int
android.drm.DrmManagerClient.checkRightsStatus(String,int)int
android.drm.DrmManagerClient.checkRightsStatus(android.net.Uri,int)int
android.drm.DrmManagerClient.removeRights(String)int
android.drm.DrmManagerClient.removeRights(android.net.Uri)int
android.drm.DrmManagerClient.removeAllRights)int
android.drm.DrmManagerClient.openConvertSession(String)int
android.drm.DrmManagerClient.convertData(int,byte)android.drm.DrmConvertedStatus
android.drm.DrmManagerClient.closeConvertSession(int)android.drm.DrmConvertedStatus
android.drm.DrmRights.getMimeType)String
android.drm.DrmRights.getAccountId)String
android.drm.DrmRights.getSubscriptionId)String
android.drm.DrmSupportInfo.addMimeType(String)void
android.drm.DrmSupportInfo.addFileSuffix(String)void
android.drm.DrmSupportInfo.getMimeTypeIterator)java.util.Iterator
android.drm.DrmSupportInfo.getFileSuffixIterator)java.util.Iterator
android.drm.DrmSupportInfo.setDescription(String)void
android.drm.DrmSupportInfo.getDescriprition)String
android.drm.DrmSupportInfo.getDescription)String
android.drm.DrmSupportInfo.hashCode)int
android.drm.DrmSupportInfo.equals(Object)boolean
android.drm.DrmUtils.iterator)java.util.Iterator
android.drm.DrmUtils.keyIterator)java.util.Iterator
android.drm.DrmUtils.get(String)String
android.drm.DrmUtils.getExtendedMetadataParser(byte)android.drm.DrmUtils.ExtendedMetadataParser
android.drm.ProcessedData.getAccountId)String
android.drm.ProcessedData.getSubscriptionId)String
android.gesture.Gesture.clone)Object
android.gesture.Gesture.getStrokes)java.util.ArrayList
android.gesture.Gesture.getStrokesCount)int
android.gesture.Gesture.addStroke(android.gesture.GestureStroke)void
android.gesture.Gesture.getLength)float
android.gesture.Gesture.getBoundingBox)RectF
android.gesture.Gesture.toPath)Path
android.gesture.Gesture.toPath(Path)Path
android.gesture.Gesture.toPath(int,int,int,int)Path
android.gesture.Gesture.toPath(Path,int,int,int,int)Path
android.gesture.Gesture.getID)long
android.gesture.Gesture.toBitmap(int,int,int,int,int)Bitmap
android.gesture.Gesture.toBitmap(int,int,int,int)Bitmap
android.gesture.Gesture.writeToParcel(android.os.Parcel,int)void
android.gesture.Gesture.describeContents)int
android.gesture.GestureLibraries.fromFile(String)android.gesture.GestureLibrary
android.gesture.GestureLibraries.fromFile(java.io.File)android.gesture.GestureLibrary
android.gesture.GestureLibraries.fromPrivateFile(android.content.Context,String)android.gesture.GestureLibrary
android.gesture.GestureLibraries.fromRawResource(android.content.Context,int)android.gesture.GestureLibrary
android.gesture.GestureLibrary.isReadOnly)boolean
android.gesture.GestureLibrary.setOrientationStyle(int)void
android.gesture.GestureLibrary.getOrientationStyle)int
android.gesture.GestureLibrary.setSequenceType(int)void
android.gesture.GestureLibrary.getSequenceType)int
android.gesture.GestureLibrary.getGestureEntries)java.util.Set
android.gesture.GestureLibrary.recognize(android.gesture.Gesture)java.util.ArrayList
android.gesture.GestureLibrary.addGesture(String,android.gesture.Gesture)void
android.gesture.GestureLibrary.removeGesture(String,android.gesture.Gesture)void
android.gesture.GestureLibrary.removeEntry(String)void
android.gesture.GestureLibrary.getGestures(String)java.util.ArrayList
android.gesture.GestureOverlayView.getCurrentStroke)java.util.ArrayList
android.gesture.GestureOverlayView.getOrientation)int
android.gesture.GestureOverlayView.setOrientation(int)void
android.gesture.GestureOverlayView.setGestureColor(int)void
android.gesture.GestureOverlayView.setUncertainGestureColor(int)void
android.gesture.GestureOverlayView.getUncertainGestureColor)int
android.gesture.GestureOverlayView.getGestureColor)int
android.gesture.GestureOverlayView.getGestureStrokeWidth)float
android.gesture.GestureOverlayView.setGestureStrokeWidth(float)void
android.gesture.GestureOverlayView.getGestureStrokeType)int
android.gesture.GestureOverlayView.setGestureStrokeType(int)void
android.gesture.GestureOverlayView.getGestureStrokeLengthThreshold)float
android.gesture.GestureOverlayView.setGestureStrokeLengthThreshold(float)void
android.gesture.GestureOverlayView.getGestureStrokeSquarenessTreshold)float
android.gesture.GestureOverlayView.setGestureStrokeSquarenessTreshold(float)void
android.gesture.GestureOverlayView.getGestureStrokeAngleThreshold)float
android.gesture.GestureOverlayView.setGestureStrokeAngleThreshold(float)void
android.gesture.GestureOverlayView.isEventsInterceptionEnabled)boolean
android.gesture.GestureOverlayView.setEventsInterceptionEnabled(boolean)void
android.gesture.GestureOverlayView.isFadeEnabled)boolean
android.gesture.GestureOverlayView.setFadeEnabled(boolean)void
android.gesture.GestureOverlayView.getGesture)android.gesture.Gesture
android.gesture.GestureOverlayView.setGesture(android.gesture.Gesture)void
android.gesture.GestureOverlayView.getGesturePath)android.graphics.Path
android.gesture.GestureOverlayView.getGesturePath(android.graphics.Path)android.graphics.Path
android.gesture.GestureOverlayView.isGestureVisible)boolean
android.gesture.GestureOverlayView.setGestureVisible(boolean)void
android.gesture.GestureOverlayView.getFadeOffset)long
android.gesture.GestureOverlayView.setFadeOffset(long)void
android.gesture.GestureOverlayView.addOnGestureListener(android.gesture.GestureOverlayView.OnGestureListener)void
android.gesture.GestureOverlayView.removeOnGestureListener(android.gesture.GestureOverlayView.OnGestureListener)void
android.gesture.GestureOverlayView.removeAllOnGestureListeners)void
android.gesture.GestureOverlayView.addOnGesturePerformedListener(android.gesture.GestureOverlayView.OnGesturePerformedListener)void
android.gesture.GestureOverlayView.removeOnGesturePerformedListener(android.gesture.GestureOverlayView.OnGesturePerformedListener)void
android.gesture.GestureOverlayView.removeAllOnGesturePerformedListeners)void
android.gesture.GestureOverlayView.addOnGesturingListener(android.gesture.GestureOverlayView.OnGesturingListener)void
android.gesture.GestureOverlayView.removeOnGesturingListener(android.gesture.GestureOverlayView.OnGesturingListener)void
android.gesture.GestureOverlayView.removeAllOnGesturingListeners)void
android.gesture.GestureOverlayView.isGesturing)boolean
android.gesture.GestureOverlayView.draw(android.graphics.Canvas)void
android.gesture.GestureOverlayView.clear(boolean)void
android.gesture.GestureOverlayView.cancelClearAnimation)void
android.gesture.GestureOverlayView.cancelGesture)void
android.gesture.GestureOverlayView.onDetachedFromWindow)void
android.gesture.GestureOverlayView.dispatchTouchEvent(android.view.MotionEvent)boolean
android.gesture.GesturePoint.clone)Object
android.gesture.GestureStore.setOrientationStyle(int)void
android.gesture.GestureStore.getOrientationStyle)int
android.gesture.GestureStore.setSequenceType(int)void
android.gesture.GestureStore.getSequenceType)int
android.gesture.GestureStore.getGestureEntries)java.util.Set
android.gesture.GestureStore.recognize(android.gesture.Gesture)java.util.ArrayList
android.gesture.GestureStore.addGesture(String,android.gesture.Gesture)void
android.gesture.GestureStore.removeGesture(String,android.gesture.Gesture)void
android.gesture.GestureStore.removeEntry(String)void
android.gesture.GestureStore.getGestures(String)java.util.ArrayList
android.gesture.GestureStore.hasChanged)boolean
android.gesture.GestureStore.save(OutputStream)void
android.gesture.GestureStore.save(OutputStream,boolean)void
android.gesture.GestureStore.load(InputStream)void
android.gesture.GestureStore.load(InputStream,boolean)void
android.gesture.GestureStroke.clone)Object
android.gesture.GestureStroke.getPath)android.graphics.Path
android.gesture.GestureStroke.toPath(float,float,int)android.graphics.Path
android.gesture.GestureStroke.clearPath)void
android.gesture.GestureStroke.computeOrientedBoundingBox)android.gesture.OrientedBoundingBox
android.gesture.GestureUtils.computeOrientedBoundingBox(java.util.ArrayList)android.gesture.OrientedBoundingBox
android.gesture.GestureUtils.computeOrientedBoundingBox(float)android.gesture.OrientedBoundingBox
android.gesture.Prediction.toString)String
android.graphics.Bitmap.valueOf(String)Config
android.graphics.Bitmap.valueOf(String)CompressFormat
android.graphics.Bitmap.getDensity)int
android.graphics.Bitmap.setDensity(int)void
android.graphics.Bitmap.reconfigure(int,int,Config)void
android.graphics.Bitmap.setWidth(int)void
android.graphics.Bitmap.setHeight(int)void
android.graphics.Bitmap.setConfig(Config)void
android.graphics.Bitmap.recycle)void
android.graphics.Bitmap.isRecycled)boolean
android.graphics.Bitmap.getGenerationId)int
android.graphics.Bitmap.copyPixelsToBuffer(java.nio.Buffer)void
android.graphics.Bitmap.copyPixelsFromBuffer(java.nio.Buffer)void
android.graphics.Bitmap.copy(Config,boolean)android.graphics.Bitmap
android.graphics.Bitmap.wrapHardwareBuffer(android.hardware.HardwareBuffer,android.graphics.ColorSpace)android.graphics.Bitmap
android.graphics.Bitmap.createScaledBitmap(android.graphics.Bitmap,int,int,boolean)android.graphics.Bitmap
android.graphics.Bitmap.createBitmap(android.graphics.Bitmap)android.graphics.Bitmap
android.graphics.Bitmap.createBitmap(android.graphics.Bitmap,int,int,int,int)android.graphics.Bitmap
android.graphics.Bitmap.createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)android.graphics.Bitmap
android.graphics.Bitmap.createBitmap(int,int,Config)android.graphics.Bitmap
android.graphics.Bitmap.createBitmap(android.util.DisplayMetrics,int,int,Config)android.graphics.Bitmap
android.graphics.Bitmap.createBitmap(int,int,Config,boolean)android.graphics.Bitmap
android.graphics.Bitmap.createBitmap(int,int,Config,boolean,android.graphics.ColorSpace)android.graphics.Bitmap
android.graphics.Bitmap.createBitmap(android.util.DisplayMetrics,int,int,Config,boolean)android.graphics.Bitmap
android.graphics.Bitmap.createBitmap(android.util.DisplayMetrics,int,int,Config,boolean,android.graphics.ColorSpace)android.graphics.Bitmap
android.graphics.Bitmap.createBitmap(int,int,int,int,int,Config)android.graphics.Bitmap
android.graphics.Bitmap.createBitmap(android.util.DisplayMetrics,int,int,int,int,int,Config)android.graphics.Bitmap
android.graphics.Bitmap.createBitmap(int,int,int,Config)android.graphics.Bitmap
android.graphics.Bitmap.createBitmap(android.util.DisplayMetrics,int,int,int,Config)android.graphics.Bitmap
android.graphics.Bitmap.createBitmap(android.graphics.Picture)android.graphics.Bitmap
android.graphics.Bitmap.createBitmap(android.graphics.Picture,int,int,Config)android.graphics.Bitmap
android.graphics.Bitmap.compress(CompressFormat,int,java.io.OutputStream)boolean
android.graphics.Bitmap.isMutable)boolean
android.graphics.Bitmap.isPremultiplied)boolean
android.graphics.Bitmap.setPremultiplied(boolean)void
android.graphics.Bitmap.getWidth)int
android.graphics.Bitmap.getHeight)int
android.graphics.Bitmap.getScaledWidth(android.graphics.Canvas)int
android.graphics.Bitmap.getScaledHeight(android.graphics.Canvas)int
android.graphics.Bitmap.getScaledWidth(android.util.DisplayMetrics)int
android.graphics.Bitmap.getScaledHeight(android.util.DisplayMetrics)int
android.graphics.Bitmap.getScaledWidth(int)int
android.graphics.Bitmap.getScaledHeight(int)int
android.graphics.Bitmap.getRowBytes)int
android.graphics.Bitmap.getByteCount)int
android.graphics.Bitmap.getAllocationByteCount)int
android.graphics.Bitmap.getConfig)Config
android.graphics.Bitmap.hasAlpha)boolean
android.graphics.Bitmap.setHasAlpha(boolean)void
android.graphics.Bitmap.hasMipMap)boolean
android.graphics.Bitmap.setHasMipMap(boolean)void
android.graphics.Bitmap.getColorSpace)android.graphics.ColorSpace
android.graphics.Bitmap.setColorSpace(android.graphics.ColorSpace)void
android.graphics.Bitmap.eraseColor(int)void
android.graphics.Bitmap.eraseColor(long)void
android.graphics.Bitmap.getPixel(int,int)int
android.graphics.Bitmap.getColor(int,int)android.graphics.Color
android.graphics.Bitmap.getPixels(int,int,int,int,int,int,int)void
android.graphics.Bitmap.setPixel(int,int,int)void
android.graphics.Bitmap.setPixels(int,int,int,int,int,int,int)void
android.graphics.Bitmap.describeContents)int
android.graphics.Bitmap.writeToParcel(android.os.Parcel,int)void
android.graphics.Bitmap.extractAlpha)android.graphics.Bitmap
android.graphics.Bitmap.extractAlpha(android.graphics.Paint,int)android.graphics.Bitmap
android.graphics.Bitmap.sameAs(android.graphics.Bitmap)boolean
android.graphics.Bitmap.prepareToDraw)void
android.graphics.BitmapFactory.requestCancelDecode)void
android.graphics.BitmapFactory.decodeFile(String,android.graphics.BitmapFactory.Options)android.graphics.Bitmap
android.graphics.BitmapFactory.decodeFile(String)android.graphics.Bitmap
android.graphics.BitmapFactory.decodeResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory.Options)android.graphics.Bitmap
android.graphics.BitmapFactory.decodeResource(android.content.res.Resources,int,android.graphics.BitmapFactory.Options)android.graphics.Bitmap
android.graphics.BitmapFactory.decodeResource(android.content.res.Resources,int)android.graphics.Bitmap
android.graphics.BitmapFactory.decodeByteArray(byte,int,int,android.graphics.BitmapFactory.Options)android.graphics.Bitmap
android.graphics.BitmapFactory.decodeByteArray(byte,int,int)android.graphics.Bitmap
android.graphics.BitmapFactory.decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory.Options)android.graphics.Bitmap
android.graphics.BitmapFactory.decodeStream(java.io.InputStream)android.graphics.Bitmap
android.graphics.BitmapFactory.decodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory.Options)android.graphics.Bitmap
android.graphics.BitmapFactory.decodeFileDescriptor(java.io.FileDescriptor)android.graphics.Bitmap
android.graphics.BitmapRegionDecoder.newInstance(byte,int,int,boolean)android.graphics.BitmapRegionDecoder
android.graphics.BitmapRegionDecoder.newInstance(FileDescriptor,boolean)android.graphics.BitmapRegionDecoder
android.graphics.BitmapRegionDecoder.newInstance(InputStream,boolean)android.graphics.BitmapRegionDecoder
android.graphics.BitmapRegionDecoder.newInstance(String,boolean)android.graphics.BitmapRegionDecoder
android.graphics.BitmapRegionDecoder.decodeRegion(android.graphics.Rect,BitmapFactory.Options)android.graphics.Bitmap
android.graphics.BitmapRegionDecoder.getWidth)int
android.graphics.BitmapRegionDecoder.getHeight)int
android.graphics.BitmapRegionDecoder.recycle)void
android.graphics.BitmapRegionDecoder.isRecycled)boolean
android.graphics.BitmapRegionDecoder.finalize)void
android.graphics.BlendMode.valueOf(String)android.graphics.BlendMode
android.graphics.BlendModeColorFilter.getColor)int
android.graphics.BlendModeColorFilter.getMode)android.graphics.BlendMode
android.graphics.BlendModeColorFilter.equals(Object)boolean
android.graphics.BlendModeColorFilter.hashCode)int
android.graphics.BlurMaskFilter.valueOf(String)Blur
android.graphics.Camera.getMatrix(android.graphics.Matrix)void
android.graphics.Camera.applyToCanvas(android.graphics.Canvas)void
android.graphics.Camera.finalize)void
android.graphics.Canvas.valueOf(String)VertexMode
android.graphics.Canvas.valueOf(String)EdgeType
android.graphics.Canvas.isHardwareAccelerated)boolean
android.graphics.Canvas.setBitmap(android.graphics.Bitmap)void
android.graphics.Canvas.enableZ)void
android.graphics.Canvas.disableZ)void
android.graphics.Canvas.isOpaque)boolean
android.graphics.Canvas.getWidth)int
android.graphics.Canvas.getHeight)int
android.graphics.Canvas.getDensity)int
android.graphics.Canvas.setDensity(int)void
android.graphics.Canvas.getMaximumBitmapWidth)int
android.graphics.Canvas.getMaximumBitmapHeight)int
android.graphics.Canvas.save)int
android.graphics.Canvas.saveLayer(android.graphics.RectF,android.graphics.Paint,int)int
android.graphics.Canvas.saveLayer(android.graphics.RectF,android.graphics.Paint)int
android.graphics.Canvas.saveLayer(float,float,float,float,android.graphics.Paint,int)int
android.graphics.Canvas.saveLayer(float,float,float,float,android.graphics.Paint)int
android.graphics.Canvas.saveLayerAlpha(android.graphics.RectF,int,int)int
android.graphics.Canvas.saveLayerAlpha(android.graphics.RectF,int)int
android.graphics.Canvas.saveLayerAlpha(float,float,float,float,int,int)int
android.graphics.Canvas.saveLayerAlpha(float,float,float,float,int)int
android.graphics.Canvas.restore)void
android.graphics.Canvas.getSaveCount)int
android.graphics.Canvas.restoreToCount(int)void
android.graphics.Canvas.translate(float,float)void
android.graphics.Canvas.scale(float,float)void
android.graphics.Canvas.scale(float,float,float,float)void
android.graphics.Canvas.rotate(float)void
android.graphics.Canvas.rotate(float,float,float)void
android.graphics.Canvas.skew(float,float)void
android.graphics.Canvas.concat(android.graphics.Matrix)void
android.graphics.Canvas.setMatrix(android.graphics.Matrix)void
android.graphics.Canvas.getMatrix(android.graphics.Matrix)void
android.graphics.Canvas.getMatrix)android.graphics.Matrix
android.graphics.Canvas.clipRect(android.graphics.RectF,Region.Op)boolean
android.graphics.Canvas.clipRect(android.graphics.Rect,Region.Op)boolean
android.graphics.Canvas.clipRect(android.graphics.RectF)boolean
android.graphics.Canvas.clipOutRect(android.graphics.RectF)boolean
android.graphics.Canvas.clipRect(android.graphics.Rect)boolean
android.graphics.Canvas.clipOutRect(android.graphics.Rect)boolean
android.graphics.Canvas.clipRect(float,float,float,float,Region.Op)boolean
android.graphics.Canvas.clipRect(float,float,float,float)boolean
android.graphics.Canvas.clipOutRect(float,float,float,float)boolean
android.graphics.Canvas.clipRect(int,int,int,int)boolean
android.graphics.Canvas.clipOutRect(int,int,int,int)boolean
android.graphics.Canvas.clipPath(android.graphics.Path,Region.Op)boolean
android.graphics.Canvas.clipPath(android.graphics.Path)boolean
android.graphics.Canvas.clipOutPath(android.graphics.Path)boolean
android.graphics.Canvas.getDrawFilter)android.graphics.DrawFilter
android.graphics.Canvas.setDrawFilter(android.graphics.DrawFilter)void
android.graphics.Canvas.quickReject(android.graphics.RectF,EdgeType)boolean
android.graphics.Canvas.quickReject(android.graphics.Path,EdgeType)boolean
android.graphics.Canvas.quickReject(float,float,float,float,EdgeType)boolean
android.graphics.Canvas.getClipBounds(android.graphics.Rect)boolean
android.graphics.Canvas.getClipBounds)android.graphics.Rect
android.graphics.Canvas.drawPicture(android.graphics.Picture)void
android.graphics.Canvas.drawPicture(android.graphics.Picture,android.graphics.RectF)void
android.graphics.Canvas.drawPicture(android.graphics.Picture,android.graphics.Rect)void
android.graphics.Canvas.drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)void
android.graphics.Canvas.drawARGB(int,int,int,int)void
android.graphics.Canvas.drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)void
android.graphics.Canvas.drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.RectF,android.graphics.Paint)void
android.graphics.Canvas.drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint)void
android.graphics.Canvas.drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint)void
android.graphics.Canvas.drawCircle(float,float,float,android.graphics.Paint)void
android.graphics.Canvas.drawColor(int)void
android.graphics.Canvas.drawColor(long)void
android.graphics.Canvas.drawColor(int,PorterDuff.Mode)void
android.graphics.Canvas.drawColor(int,android.graphics.BlendMode)void
android.graphics.Canvas.drawColor(long,android.graphics.BlendMode)void
android.graphics.Canvas.drawLine(float,float,float,float,android.graphics.Paint)void
android.graphics.Canvas.drawLines(float,int,int,android.graphics.Paint)void
android.graphics.Canvas.drawLines(float,android.graphics.Paint)void
android.graphics.Canvas.drawOval(android.graphics.RectF,android.graphics.Paint)void
android.graphics.Canvas.drawOval(float,float,float,float,android.graphics.Paint)void
android.graphics.Canvas.drawPaint(android.graphics.Paint)void
android.graphics.Canvas.drawPath(android.graphics.Path,android.graphics.Paint)void
android.graphics.Canvas.drawPoint(float,float,android.graphics.Paint)void
android.graphics.Canvas.drawPoints(float,int,int,android.graphics.Paint)void
android.graphics.Canvas.drawPoints(float,android.graphics.Paint)void
android.graphics.Canvas.drawPosText(char,int,int,float,android.graphics.Paint)void
android.graphics.Canvas.drawPosText(String,float,android.graphics.Paint)void
android.graphics.Canvas.drawRect(android.graphics.RectF,android.graphics.Paint)void
android.graphics.Canvas.drawRect(android.graphics.Rect,android.graphics.Paint)void
android.graphics.Canvas.drawRect(float,float,float,float,android.graphics.Paint)void
android.graphics.Canvas.drawRGB(int,int,int)void
android.graphics.Canvas.drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint)void
android.graphics.Canvas.drawRoundRect(float,float,float,float,float,float,android.graphics.Paint)void
android.graphics.Canvas.drawDoubleRoundRect(android.graphics.RectF,float,float,android.graphics.RectF,float,float,android.graphics.Paint)void
android.graphics.Canvas.drawDoubleRoundRect(android.graphics.RectF,float,android.graphics.RectF,float,android.graphics.Paint)void
android.graphics.Canvas.drawText(char,int,int,float,float,android.graphics.Paint)void
android.graphics.Canvas.drawText(String,float,float,android.graphics.Paint)void
android.graphics.Canvas.drawText(String,int,int,float,float,android.graphics.Paint)void
android.graphics.Canvas.drawText(CharSequence,int,int,float,float,android.graphics.Paint)void
android.graphics.Canvas.drawTextOnPath(char,int,int,android.graphics.Path,float,float,android.graphics.Paint)void
android.graphics.Canvas.drawTextOnPath(String,android.graphics.Path,float,float,android.graphics.Paint)void
android.graphics.Canvas.drawRenderNode(android.graphics.RenderNode)void
android.graphics.Color.getColorSpace)android.graphics.ColorSpace
android.graphics.Color.isWideGamut)boolean
android.graphics.Color.isSrgb)boolean
android.graphics.Color.getComponentCount)int
android.graphics.Color.pack)long
android.graphics.Color.convert(android.graphics.ColorSpace)android.graphics.Color
android.graphics.Color.toArgb)int
android.graphics.Color.red)float
android.graphics.Color.green)float
android.graphics.Color.blue)float
android.graphics.Color.alpha)float
android.graphics.Color.getComponent(int)float
android.graphics.Color.luminance)float
android.graphics.Color.equals(Object)boolean
android.graphics.Color.hashCode)int
android.graphics.Color.toString)String
android.graphics.Color.colorSpace(long)android.graphics.ColorSpace
android.graphics.Color.red(long)float
android.graphics.Color.green(long)float
android.graphics.Color.blue(long)float
android.graphics.Color.alpha(long)float
android.graphics.Color.isSrgb(long)boolean
android.graphics.Color.isWideGamut(long)boolean
android.graphics.Color.isInColorSpace(long,android.graphics.ColorSpace)boolean
android.graphics.Color.toArgb(long)int
android.graphics.Color.valueOf(int)android.graphics.Color
android.graphics.Color.valueOf(long)android.graphics.Color
android.graphics.Color.valueOf(float,float,float)android.graphics.Color
android.graphics.Color.valueOf(float,float,float,float)android.graphics.Color
android.graphics.Color.valueOf(float,float,float,float,android.graphics.ColorSpace)android.graphics.Color
android.graphics.Color.valueOf(float,android.graphics.ColorSpace)android.graphics.Color
android.graphics.Color.pack(int)long
android.graphics.Color.pack(float,float,float)long
android.graphics.Color.pack(float,float,float,float)long
android.graphics.Color.pack(float,float,float,float,android.graphics.ColorSpace)long
android.graphics.Color.convert(int,android.graphics.ColorSpace)long
android.graphics.Color.convert(long,android.graphics.ColorSpace)long
android.graphics.Color.convert(float,float,float,float,android.graphics.ColorSpace,android.graphics.ColorSpace)long
android.graphics.Color.convert(long,ColorSpace.Connector)long
android.graphics.Color.convert(float,float,float,float,ColorSpace.Connector)long
android.graphics.Color.luminance(long)float
android.graphics.Color.alpha(int)int
android.graphics.Color.red(int)int
android.graphics.Color.green(int)int
android.graphics.Color.blue(int)int
android.graphics.Color.rgb(int,int,int)int
android.graphics.Color.rgb(float,float,float)int
android.graphics.Color.argb(int,int,int,int)int
android.graphics.Color.argb(float,float,float,float)int
android.graphics.Color.luminance(int)float
android.graphics.Color.parseColor(String)int
android.graphics.Color.RGBToHSV(int,int,int,float)void
android.graphics.Color.colorToHSV(int,float)void
android.graphics.Color.HSVToColor(float)int
android.graphics.Color.HSVToColor(int,float)int
android.graphics.ColorMatrix.reset)void
android.graphics.ColorMatrix.set(android.graphics.ColorMatrix)void
android.graphics.ColorMatrix.set(float)void
android.graphics.ColorMatrix.setScale(float,float,float,float)void
android.graphics.ColorMatrix.setRotate(int,float)void
android.graphics.ColorMatrix.setConcat(android.graphics.ColorMatrix,android.graphics.ColorMatrix)void
android.graphics.ColorMatrix.preConcat(android.graphics.ColorMatrix)void
android.graphics.ColorMatrix.postConcat(android.graphics.ColorMatrix)void
android.graphics.ColorMatrix.setSaturation(float)void
android.graphics.ColorMatrix.setRGB2YUV)void
android.graphics.ColorMatrix.setYUV2RGB)void
android.graphics.ColorMatrix.equals(Object)boolean
android.graphics.ColorMatrixColorFilter.getColorMatrix(android.graphics.ColorMatrix)void
android.graphics.ColorSpace.getOetf)java.util.function.DoubleUnaryOperator
android.graphics.ColorSpace.getEotf)java.util.function.DoubleUnaryOperator
android.graphics.ColorSpace.getTransferParameters)TransferParameters
android.graphics.ColorSpace.isSrgb)boolean
android.graphics.ColorSpace.isWideGamut)boolean
android.graphics.ColorSpace.getMinValue(int)float
android.graphics.ColorSpace.getMaxValue(int)float
android.graphics.ColorSpace.equals(Object)boolean
android.graphics.ColorSpace.hashCode)int
android.graphics.ColorSpace.valueOf(String)RenderIntent
android.graphics.ColorSpace.valueOf(String)Named
android.graphics.ColorSpace.valueOf(String)Model
android.graphics.ColorSpace.getComponentCount)int
android.graphics.ColorSpace.getSource)android.graphics.ColorSpace
android.graphics.ColorSpace.getDestination)android.graphics.ColorSpace
android.graphics.ColorSpace.getRenderIntent)RenderIntent
android.graphics.ColorSpace.valueOf(String)Adaptation
android.graphics.ColorSpace.getName)String
android.graphics.ColorSpace.getId)int
android.graphics.ColorSpace.getModel)Model
android.graphics.ColorSpace.getComponentCount)int
android.graphics.ColorSpace.isSrgb)boolean
android.graphics.ColorSpace.toString)String
android.graphics.ColorSpace.equals(Object)boolean
android.graphics.ColorSpace.hashCode)int
android.graphics.ColorSpace.connect(android.graphics.ColorSpace,android.graphics.ColorSpace)android.graphics.ColorSpace.Connector
android.graphics.ColorSpace.connect(android.graphics.ColorSpace,android.graphics.ColorSpace,RenderIntent)android.graphics.ColorSpace.Connector
android.graphics.ColorSpace.connect(android.graphics.ColorSpace)android.graphics.ColorSpace.Connector
android.graphics.ColorSpace.connect(android.graphics.ColorSpace,RenderIntent)android.graphics.ColorSpace.Connector
android.graphics.ColorSpace.adapt(android.graphics.ColorSpace,float)android.graphics.ColorSpace
android.graphics.ColorSpace.adapt(android.graphics.ColorSpace,float,Adaptation)android.graphics.ColorSpace
android.graphics.ColorSpace.get(Named)android.graphics.ColorSpace
android.graphics.ColorSpace.match(float,Rgb.TransferParameters)android.graphics.ColorSpace
android.graphics.DrawFilter.finalize)void
android.graphics.HardwareRenderer.setVsyncTime(long)android.graphics.HardwareRenderer.FrameRenderRequest
android.graphics.HardwareRenderer.setFrameCommitCallback(java.util.concurrent.Executor,Runnable)android.graphics.HardwareRenderer.FrameRenderRequest
android.graphics.HardwareRenderer.setWaitForPresent(boolean)android.graphics.HardwareRenderer.FrameRenderRequest
android.graphics.HardwareRenderer.syncAndDraw)int
android.graphics.HardwareRenderer.destroy)void
android.graphics.HardwareRenderer.setName(String)void
android.graphics.HardwareRenderer.setLightSourceGeometry(float,float,float,float)void
android.graphics.HardwareRenderer.setLightSourceAlpha(float,float)void
android.graphics.HardwareRenderer.setContentRoot(android.graphics.RenderNode)void
android.graphics.HardwareRenderer.setSurface(android.view.Surface)void
android.graphics.HardwareRenderer.createRenderRequest)android.graphics.HardwareRenderer.FrameRenderRequest
android.graphics.HardwareRenderer.stop)void
android.graphics.HardwareRenderer.start)void
android.graphics.HardwareRenderer.clearContent)void
android.graphics.HardwareRenderer.notifyFramePending)void
android.graphics.HardwareRenderer.setOpaque(boolean)void
android.graphics.HardwareRenderer.isOpaque)boolean
android.graphics.ImageDecoder.getSize)android.util.Size
android.graphics.ImageDecoder.getMimeType)String
android.graphics.ImageDecoder.isAnimated)boolean
android.graphics.ImageDecoder.getColorSpace)android.graphics.ColorSpace
android.graphics.ImageDecoder.getError)int
android.graphics.ImageDecoder.getSource)Source
android.graphics.ImageDecoder.finalize)void
android.graphics.ImageDecoder.isMimeTypeSupported(String)boolean
android.graphics.ImageDecoder.createSource(android.content.res.Resources,int)Source
android.graphics.ImageDecoder.createSource(android.content.ContentResolver,android.net.Uri)Source
android.graphics.ImageDecoder.createSource(android.content.res.AssetManager,String)Source
android.graphics.ImageDecoder.createSource(java.nio.ByteBuffer)Source
android.graphics.ImageDecoder.createSource(java.io.File)Source
android.graphics.ImageDecoder.createSource(java.util.concurrent.Callable)Source
android.graphics.ImageDecoder.setTargetSize(int,int)void
android.graphics.ImageDecoder.setTargetSampleSize(int)void
android.graphics.ImageDecoder.setAllocator(int)void
android.graphics.ImageDecoder.getAllocator)int
android.graphics.ImageDecoder.setUnpremultipliedRequired(boolean)void
android.graphics.ImageDecoder.isUnpremultipliedRequired)boolean
android.graphics.ImageDecoder.setPostProcessor(android.graphics.PostProcessor)void
android.graphics.ImageDecoder.getPostProcessor)android.graphics.PostProcessor
android.graphics.ImageDecoder.setOnPartialImageListener(android.graphics.ImageDecoder.OnPartialImageListener)void
android.graphics.ImageDecoder.getOnPartialImageListener)android.graphics.ImageDecoder.OnPartialImageListener
android.graphics.ImageDecoder.setCrop(android.graphics.Rect)void
android.graphics.ImageDecoder.getCrop)android.graphics.Rect
android.graphics.ImageDecoder.setMutableRequired(boolean)void
android.graphics.ImageDecoder.isMutableRequired)boolean
android.graphics.ImageDecoder.setMemorySizePolicy(int)void
android.graphics.ImageDecoder.getMemorySizePolicy)int
android.graphics.ImageDecoder.setDecodeAsAlphaMaskEnabled(boolean)void
android.graphics.ImageDecoder.isDecodeAsAlphaMaskEnabled)boolean
android.graphics.ImageDecoder.setTargetColorSpace(android.graphics.ColorSpace)void
android.graphics.ImageDecoder.close)void
android.graphics.ImageDecoder.decodeDrawable(Source,android.graphics.ImageDecoder.OnHeaderDecodedListener)android.graphics.drawable.Drawable
android.graphics.ImageDecoder.decodeDrawable(Source)android.graphics.drawable.Drawable
android.graphics.ImageDecoder.decodeBitmap(Source,android.graphics.ImageDecoder.OnHeaderDecodedListener)android.graphics.Bitmap
android.graphics.ImageDecoder.decodeBitmap(Source)android.graphics.Bitmap
android.graphics.ImageFormat.getBitsPerPixel(int)int
android.graphics.Insets.of(int,int,int,int)android.graphics.Insets
android.graphics.Insets.of(android.graphics.Rect)android.graphics.Insets
android.graphics.Insets.add(android.graphics.Insets,android.graphics.Insets)android.graphics.Insets
android.graphics.Insets.subtract(android.graphics.Insets,android.graphics.Insets)android.graphics.Insets
android.graphics.Insets.max(android.graphics.Insets,android.graphics.Insets)android.graphics.Insets
android.graphics.Insets.min(android.graphics.Insets,android.graphics.Insets)android.graphics.Insets
android.graphics.Insets.equals(Object)boolean
android.graphics.Insets.hashCode)int
android.graphics.Insets.toString)String
android.graphics.Insets.describeContents)int
android.graphics.Insets.writeToParcel(android.os.Parcel,int)void
android.graphics.Interpolator.valueOf(String)Result
android.graphics.Interpolator.reset(int)void
android.graphics.Interpolator.reset(int,int)void
android.graphics.Interpolator.getKeyFrameCount)int
android.graphics.Interpolator.getValueCount)int
android.graphics.Interpolator.setKeyFrame(int,int,float)void
android.graphics.Interpolator.setKeyFrame(int,int,float,float)void
android.graphics.Interpolator.setRepeatMirror(float,boolean)void
android.graphics.Interpolator.timeToValues(float)Result
android.graphics.Interpolator.timeToValues(int,float)Result
android.graphics.Interpolator.finalize)void
android.graphics.LightingColorFilter.getColorMultiply)int
android.graphics.LightingColorFilter.getColorAdd)int
android.graphics.MaskFilter.finalize)void
android.graphics.Matrix.valueOf(String)ScaleToFit
android.graphics.Matrix.isIdentity)boolean
android.graphics.Matrix.isAffine)boolean
android.graphics.Matrix.rectStaysRect)boolean
android.graphics.Matrix.set(android.graphics.Matrix)void
android.graphics.Matrix.equals(Object)boolean
android.graphics.Matrix.hashCode)int
android.graphics.Matrix.reset)void
android.graphics.Matrix.setTranslate(float,float)void
android.graphics.Matrix.setScale(float,float,float,float)void
android.graphics.Matrix.setScale(float,float)void
android.graphics.Matrix.setRotate(float,float,float)void
android.graphics.Matrix.setRotate(float)void
android.graphics.Matrix.setSinCos(float,float,float,float)void
android.graphics.Matrix.setSinCos(float,float)void
android.graphics.Matrix.setSkew(float,float,float,float)void
android.graphics.Matrix.setSkew(float,float)void
android.graphics.Matrix.setConcat(android.graphics.Matrix,android.graphics.Matrix)boolean
android.graphics.Matrix.preTranslate(float,float)boolean
android.graphics.Matrix.preScale(float,float,float,float)boolean
android.graphics.Matrix.preScale(float,float)boolean
android.graphics.Matrix.preRotate(float,float,float)boolean
android.graphics.Matrix.preRotate(float)boolean
android.graphics.Matrix.preSkew(float,float,float,float)boolean
android.graphics.Matrix.preSkew(float,float)boolean
android.graphics.Matrix.preConcat(android.graphics.Matrix)boolean
android.graphics.Matrix.postTranslate(float,float)boolean
android.graphics.Matrix.postScale(float,float,float,float)boolean
android.graphics.Matrix.postScale(float,float)boolean
android.graphics.Matrix.postRotate(float,float,float)boolean
android.graphics.Matrix.postRotate(float)boolean
android.graphics.Matrix.postSkew(float,float,float,float)boolean
android.graphics.Matrix.postSkew(float,float)boolean
android.graphics.Matrix.postConcat(android.graphics.Matrix)boolean
android.graphics.Matrix.setRectToRect(android.graphics.RectF,android.graphics.RectF,ScaleToFit)boolean
android.graphics.Matrix.setPolyToPoly(float,int,float,int,int)boolean
android.graphics.Matrix.invert(android.graphics.Matrix)boolean
android.graphics.Matrix.mapPoints(float,int,float,int,int)void
android.graphics.Matrix.mapVectors(float,int,float,int,int)void
android.graphics.Matrix.mapPoints(float,float)void
android.graphics.Matrix.mapVectors(float,float)void
android.graphics.Matrix.mapPoints(float)void
android.graphics.Matrix.mapVectors(float)void
android.graphics.Matrix.mapRect(android.graphics.RectF,android.graphics.RectF)boolean
android.graphics.Matrix.mapRect(android.graphics.RectF)boolean
android.graphics.Matrix.mapRadius(float)float
android.graphics.Matrix.getValues(float)void
android.graphics.Matrix.setValues(float)void
android.graphics.Matrix.toString)String
android.graphics.Matrix.toShortString)String
android.graphics.Movie.draw(android.graphics.Canvas,float,float,android.graphics.Paint)void
android.graphics.Movie.draw(android.graphics.Canvas,float,float)void
android.graphics.Movie.decodeStream(java.io.InputStream)android.graphics.Movie
android.graphics.Movie.decodeFile(String)android.graphics.Movie
android.graphics.Movie.finalize)void
android.graphics.NinePatch.finalize)void
android.graphics.NinePatch.getName)String
android.graphics.NinePatch.getPaint)android.graphics.Paint
android.graphics.NinePatch.setPaint(android.graphics.Paint)void
android.graphics.NinePatch.getBitmap)android.graphics.Bitmap
android.graphics.NinePatch.draw(android.graphics.Canvas,android.graphics.RectF)void
android.graphics.NinePatch.draw(android.graphics.Canvas,android.graphics.Rect)void
android.graphics.NinePatch.draw(android.graphics.Canvas,android.graphics.Rect,android.graphics.Paint)void
android.graphics.NinePatch.getDensity)int
android.graphics.NinePatch.getWidth)int
android.graphics.NinePatch.getHeight)int
android.graphics.NinePatch.hasAlpha)boolean
android.graphics.NinePatch.getTransparentRegion(android.graphics.Rect)android.graphics.Region
android.graphics.Outline.setEmpty)void
android.graphics.Outline.isEmpty)boolean
android.graphics.Outline.canClip)boolean
android.graphics.Outline.setAlpha(float)void
android.graphics.Outline.getAlpha)float
android.graphics.Outline.set(android.graphics.Outline)void
android.graphics.Outline.setRect(int,int,int,int)void
android.graphics.Outline.setRect(android.graphics.Rect)void
android.graphics.Outline.setRoundRect(int,int,int,int,float)void
android.graphics.Outline.setRoundRect(android.graphics.Rect,float)void
android.graphics.Outline.getRect(android.graphics.Rect)boolean
android.graphics.Outline.getRadius)float
android.graphics.Outline.setOval(int,int,int,int)void
android.graphics.Outline.setOval(android.graphics.Rect)void
android.graphics.Outline.setConvexPath(android.graphics.Path)void
android.graphics.Outline.offset(int,int)void
android.graphics.Paint.valueOf(String)Style
android.graphics.Paint.valueOf(String)Join
android.graphics.Paint.toString)String
android.graphics.Paint.valueOf(String)Cap
android.graphics.Paint.valueOf(String)Align
android.graphics.Paint.reset)void
android.graphics.Paint.set(android.graphics.Paint)void
android.graphics.Paint.getFlags)int
android.graphics.Paint.setFlags(int)void
android.graphics.Paint.getHinting)int
android.graphics.Paint.setHinting(int)void
android.graphics.Paint.isAntiAlias)boolean
android.graphics.Paint.setAntiAlias(boolean)void
android.graphics.Paint.isDither)boolean
android.graphics.Paint.setDither(boolean)void
android.graphics.Paint.isLinearText)boolean
android.graphics.Paint.setLinearText(boolean)void
android.graphics.Paint.isSubpixelText)boolean
android.graphics.Paint.setSubpixelText(boolean)void
android.graphics.Paint.isUnderlineText)boolean
android.graphics.Paint.getUnderlinePosition)float
android.graphics.Paint.getUnderlineThickness)float
android.graphics.Paint.setUnderlineText(boolean)void
android.graphics.Paint.isStrikeThruText)boolean
android.graphics.Paint.getStrikeThruPosition)float
android.graphics.Paint.getStrikeThruThickness)float
android.graphics.Paint.setStrikeThruText(boolean)void
android.graphics.Paint.isFakeBoldText)boolean
android.graphics.Paint.setFakeBoldText(boolean)void
android.graphics.Paint.isFilterBitmap)boolean
android.graphics.Paint.setFilterBitmap(boolean)void
android.graphics.Paint.getStyle)Style
android.graphics.Paint.setStyle(Style)void
android.graphics.Paint.getColor)int
android.graphics.Paint.getColorLong)long
android.graphics.Paint.setColor(int)void
android.graphics.Paint.setColor(long)void
android.graphics.Paint.getAlpha)int
android.graphics.Paint.setAlpha(int)void
android.graphics.Paint.setARGB(int,int,int,int)void
android.graphics.Paint.getStrokeWidth)float
android.graphics.Paint.setStrokeWidth(float)void
android.graphics.Paint.getStrokeMiter)float
android.graphics.Paint.setStrokeMiter(float)void
android.graphics.Paint.getStrokeCap)Cap
android.graphics.Paint.setStrokeCap(Cap)void
android.graphics.Paint.getStrokeJoin)Join
android.graphics.Paint.setStrokeJoin(Join)void
android.graphics.Paint.getFillPath(android.graphics.Path,android.graphics.Path)boolean
android.graphics.Paint.getShader)android.graphics.Shader
android.graphics.Paint.setShader(android.graphics.Shader)android.graphics.Shader
android.graphics.Paint.getColorFilter)android.graphics.ColorFilter
android.graphics.Paint.setColorFilter(android.graphics.ColorFilter)android.graphics.ColorFilter
android.graphics.Paint.getXfermode)android.graphics.Xfermode
android.graphics.Paint.getBlendMode)android.graphics.BlendMode
android.graphics.Paint.setXfermode(android.graphics.Xfermode)android.graphics.Xfermode
android.graphics.Paint.setBlendMode(android.graphics.BlendMode)void
android.graphics.Paint.getPathEffect)android.graphics.PathEffect
android.graphics.Paint.setPathEffect(android.graphics.PathEffect)android.graphics.PathEffect
android.graphics.Paint.getMaskFilter)android.graphics.MaskFilter
android.graphics.Paint.setMaskFilter(android.graphics.MaskFilter)android.graphics.MaskFilter
android.graphics.Paint.getTypeface)android.graphics.Typeface
android.graphics.Paint.setTypeface(android.graphics.Typeface)android.graphics.Typeface
android.graphics.Paint.setShadowLayer(float,float,float,int)void
android.graphics.Paint.setShadowLayer(float,float,float,long)void
android.graphics.Paint.clearShadowLayer)void
android.graphics.Paint.getShadowLayerRadius)float
android.graphics.Paint.getShadowLayerDx)float
android.graphics.Paint.getShadowLayerDy)float
android.graphics.Paint.getShadowLayerColor)int
android.graphics.Paint.getShadowLayerColorLong)long
android.graphics.Paint.getTextAlign)Align
android.graphics.Paint.setTextAlign(Align)void
android.graphics.Paint.getTextLocale)java.util.Locale
android.graphics.Paint.getTextLocales)android.os.LocaleList
android.graphics.Paint.setTextLocale(java.util.Locale)void
android.graphics.Paint.setTextLocales(android.os.LocaleList)void
android.graphics.Paint.isElegantTextHeight)boolean
android.graphics.Paint.setElegantTextHeight(boolean)void
android.graphics.Paint.getTextSize)float
android.graphics.Paint.setTextSize(float)void
android.graphics.Paint.getTextScaleX)float
android.graphics.Paint.setTextScaleX(float)void
android.graphics.Paint.getTextSkewX)float
android.graphics.Paint.setTextSkewX(float)void
android.graphics.Paint.getLetterSpacing)float
android.graphics.Paint.setLetterSpacing(float)void
android.graphics.Paint.getWordSpacing)float
android.graphics.Paint.setWordSpacing(float)void
android.graphics.Paint.getFontFeatureSettings)String
android.graphics.Paint.setFontFeatureSettings(String)void
android.graphics.Paint.getFontVariationSettings)String
android.graphics.Paint.setFontVariationSettings(String)boolean
android.graphics.Paint.getStartHyphenEdit)int
android.graphics.Paint.getEndHyphenEdit)int
android.graphics.Paint.setStartHyphenEdit(int)void
android.graphics.Paint.setEndHyphenEdit(int)void
android.graphics.Paint.ascent)float
android.graphics.Paint.descent)float
android.graphics.Paint.getFontMetrics(android.graphics.Paint.FontMetrics)float
android.graphics.Paint.getFontMetrics)android.graphics.Paint.FontMetrics
android.graphics.Paint.getFontMetricsInt(android.graphics.Paint.FontMetricsInt)int
android.graphics.Paint.getFontMetricsInt)android.graphics.Paint.FontMetricsInt
android.graphics.Paint.getFontSpacing)float
android.graphics.Paint.measureText(char,int,int)float
android.graphics.Paint.measureText(String,int,int)float
android.graphics.Paint.measureText(String)float
android.graphics.Paint.measureText(CharSequence,int,int)float
android.graphics.Paint.breakText(char,int,int,float,float)int
android.graphics.Paint.breakText(CharSequence,int,int,boolean,float,float)int
android.graphics.Paint.breakText(String,boolean,float,float)int
android.graphics.Paint.getTextWidths(char,int,int,float)int
android.graphics.Paint.getTextWidths(CharSequence,int,int,float)int
android.graphics.Paint.getTextWidths(String,int,int,float)int
android.graphics.Paint.getTextWidths(String,float)int
android.graphics.Paint.getTextRunCursor(char,int,int,boolean,int,int)int
android.graphics.Paint.getTextRunCursor(CharSequence,int,int,boolean,int,int)int
android.graphics.Paint.getTextPath(char,int,int,float,float,android.graphics.Path)void
android.graphics.Paint.getTextPath(String,int,int,float,float,android.graphics.Path)void
android.graphics.Paint.getTextBounds(String,int,int,android.graphics.Rect)void
android.graphics.Paint.getTextBounds(CharSequence,int,int,android.graphics.Rect)void
android.graphics.Paint.getTextBounds(char,int,int,android.graphics.Rect)void
android.graphics.Paint.hasGlyph(String)boolean
android.graphics.Paint.getRunAdvance(char,int,int,int,int,boolean,int)float
android.graphics.Paint.getRunAdvance(CharSequence,int,int,int,int,boolean,int)float
android.graphics.Paint.getOffsetForAdvance(char,int,int,int,int,boolean,float)int
android.graphics.Paint.getOffsetForAdvance(CharSequence,int,int,int,int,boolean,float)int
android.graphics.Paint.equalsForTextMeasurement(android.graphics.Paint)boolean
android.graphics.Path.valueOf(String)Op
android.graphics.Path.valueOf(String)FillType
android.graphics.Path.valueOf(String)Direction
android.graphics.Path.reset)void
android.graphics.Path.rewind)void
android.graphics.Path.set(android.graphics.Path)void
android.graphics.Path.op(android.graphics.Path,Op)boolean
android.graphics.Path.op(android.graphics.Path,android.graphics.Path,Op)boolean
android.graphics.Path.isConvex)boolean
android.graphics.Path.getFillType)FillType
android.graphics.Path.setFillType(FillType)void
android.graphics.Path.isInverseFillType)boolean
android.graphics.Path.toggleInverseFillType)void
android.graphics.Path.isEmpty)boolean
android.graphics.Path.isRect(android.graphics.RectF)boolean
android.graphics.Path.computeBounds(android.graphics.RectF,boolean)void
android.graphics.Path.incReserve(int)void
android.graphics.Path.moveTo(float,float)void
android.graphics.Path.rMoveTo(float,float)void
android.graphics.Path.lineTo(float,float)void
android.graphics.Path.rLineTo(float,float)void
android.graphics.Path.quadTo(float,float,float,float)void
android.graphics.Path.rQuadTo(float,float,float,float)void
android.graphics.Path.cubicTo(float,float,float,float,float,float)void
android.graphics.Path.rCubicTo(float,float,float,float,float,float)void
android.graphics.Path.arcTo(android.graphics.RectF,float,float,boolean)void
android.graphics.Path.arcTo(android.graphics.RectF,float,float)void
android.graphics.Path.arcTo(float,float,float,float,float,float,boolean)void
android.graphics.Path.close)void
android.graphics.Path.addRect(android.graphics.RectF,Direction)void
android.graphics.Path.addRect(float,float,float,float,Direction)void
android.graphics.Path.addOval(android.graphics.RectF,Direction)void
android.graphics.Path.addOval(float,float,float,float,Direction)void
android.graphics.Path.addCircle(float,float,float,Direction)void
android.graphics.Path.addArc(android.graphics.RectF,float,float)void
android.graphics.Path.addArc(float,float,float,float,float,float)void
android.graphics.Path.addRoundRect(android.graphics.RectF,float,float,Direction)void
android.graphics.Path.addRoundRect(float,float,float,float,float,float,Direction)void
android.graphics.Path.addRoundRect(android.graphics.RectF,float,Direction)void
android.graphics.Path.addRoundRect(float,float,float,float,float,Direction)void
android.graphics.Path.addPath(android.graphics.Path,float,float)void
android.graphics.Path.addPath(android.graphics.Path)void
android.graphics.Path.addPath(android.graphics.Path,android.graphics.Matrix)void
android.graphics.Path.offset(float,float,android.graphics.Path)void
android.graphics.Path.offset(float,float)void
android.graphics.Path.setLastPoint(float,float)void
android.graphics.Path.transform(android.graphics.Matrix,android.graphics.Path)void
android.graphics.Path.transform(android.graphics.Matrix)void
android.graphics.PathDashPathEffect.valueOf(String)Style
android.graphics.PathEffect.finalize)void
android.graphics.PathMeasure.setPath(android.graphics.Path,boolean)void
android.graphics.PathMeasure.getLength)float
android.graphics.PathMeasure.getPosTan(float,float,float)boolean
android.graphics.PathMeasure.getMatrix(float,android.graphics.Matrix,int)boolean
android.graphics.PathMeasure.getSegment(float,float,android.graphics.Path,boolean)boolean
android.graphics.PathMeasure.isClosed)boolean
android.graphics.PathMeasure.nextContour)boolean
android.graphics.PathMeasure.finalize)void
android.graphics.Picture.finalize)void
android.graphics.Picture.beginRecording(int,int)android.graphics.Canvas
android.graphics.Picture.endRecording)void
android.graphics.Picture.getWidth)int
android.graphics.Picture.getHeight)int
android.graphics.Picture.requiresHardwareAcceleration)boolean
android.graphics.Picture.draw(android.graphics.Canvas)void
android.graphics.PixelFormat.getPixelFormatInfo(int,android.graphics.PixelFormat)void
android.graphics.PixelFormat.formatHasAlpha(int)boolean
android.graphics.Point.set(int,int)void
android.graphics.Point.negate)void
android.graphics.Point.offset(int,int)void
android.graphics.Point.equals(int,int)boolean
android.graphics.Point.equals(Object)boolean
android.graphics.Point.hashCode)int
android.graphics.Point.toString)String
android.graphics.Point.describeContents)int
android.graphics.Point.writeToParcel(android.os.Parcel,int)void
android.graphics.Point.readFromParcel(android.os.Parcel)void
android.graphics.PointF.set(float,float)void
android.graphics.PointF.set(android.graphics.PointF)void
android.graphics.PointF.negate)void
android.graphics.PointF.offset(float,float)void
android.graphics.PointF.equals(float,float)boolean
android.graphics.PointF.equals(Object)boolean
android.graphics.PointF.hashCode)int
android.graphics.PointF.toString)String
android.graphics.PointF.length)float
android.graphics.PointF.length(float,float)float
android.graphics.PointF.describeContents)int
android.graphics.PointF.writeToParcel(android.os.Parcel,int)void
android.graphics.PointF.readFromParcel(android.os.Parcel)void
android.graphics.PorterDuff.valueOf(String)Mode
android.graphics.PorterDuffColorFilter.equals(Object)boolean
android.graphics.PorterDuffColorFilter.hashCode)int
android.graphics.RecordingCanvas.setDensity(int)void
android.graphics.RecordingCanvas.isHardwareAccelerated)boolean
android.graphics.RecordingCanvas.setBitmap(android.graphics.Bitmap)void
android.graphics.RecordingCanvas.isOpaque)boolean
android.graphics.RecordingCanvas.getWidth)int
android.graphics.RecordingCanvas.getHeight)int
android.graphics.RecordingCanvas.getMaximumBitmapWidth)int
android.graphics.RecordingCanvas.getMaximumBitmapHeight)int
android.graphics.RecordingCanvas.enableZ)void
android.graphics.RecordingCanvas.disableZ)void
android.graphics.RecordingCanvas.drawRenderNode(android.graphics.RenderNode)void
android.graphics.RecordingCanvas.drawTextOnPath(char,int,int,android.graphics.Path,float,float,android.graphics.Paint)void
android.graphics.RecordingCanvas.drawTextOnPath(String,android.graphics.Path,float,float,android.graphics.Paint)void
android.graphics.RecordingCanvas.drawPosText(char,int,int,float,android.graphics.Paint)void
android.graphics.RecordingCanvas.drawPosText(String,float,android.graphics.Paint)void
android.graphics.RecordingCanvas.drawOval(float,float,float,float,android.graphics.Paint)void
android.graphics.RecordingCanvas.drawOval(android.graphics.RectF,android.graphics.Paint)void
android.graphics.RecordingCanvas.drawDoubleRoundRect(android.graphics.RectF,float,float,android.graphics.RectF,float,float,android.graphics.Paint)void
android.graphics.RecordingCanvas.drawDoubleRoundRect(android.graphics.RectF,float,android.graphics.RectF,float,android.graphics.Paint)void
android.graphics.RecordingCanvas.drawPoint(float,float,android.graphics.Paint)void
android.graphics.RecordingCanvas.drawPatch(android.graphics.NinePatch,android.graphics.Rect,android.graphics.Paint)void
android.graphics.RecordingCanvas.drawPatch(android.graphics.NinePatch,android.graphics.RectF,android.graphics.Paint)void
android.graphics.RecordingCanvas.drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)void
android.graphics.RecordingCanvas.drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint)void
android.graphics.RecordingCanvas.drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint)void
android.graphics.RecordingCanvas.drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.RectF,android.graphics.Paint)void
android.graphics.RecordingCanvas.drawColor(int)void
android.graphics.RecordingCanvas.drawColor(int,PorterDuff.Mode)void
android.graphics.RecordingCanvas.drawColor(int,android.graphics.BlendMode)void
android.graphics.RecordingCanvas.drawColor(long,android.graphics.BlendMode)void
android.graphics.RecordingCanvas.drawPoints(float,int,int,android.graphics.Paint)void
android.graphics.RecordingCanvas.drawPoints(float,android.graphics.Paint)void
android.graphics.RecordingCanvas.drawRoundRect(float,float,float,float,float,float,android.graphics.Paint)void
android.graphics.RecordingCanvas.drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint)void
android.graphics.RecordingCanvas.drawPaint(android.graphics.Paint)void
android.graphics.RecordingCanvas.drawCircle(float,float,float,android.graphics.Paint)void
android.graphics.RecordingCanvas.drawText(char,int,int,float,float,android.graphics.Paint)void
android.graphics.RecordingCanvas.drawText(CharSequence,int,int,float,float,android.graphics.Paint)void
android.graphics.RecordingCanvas.drawText(String,float,float,android.graphics.Paint)void
android.graphics.RecordingCanvas.drawText(String,int,int,float,float,android.graphics.Paint)void
android.graphics.RecordingCanvas.drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)void
android.graphics.RecordingCanvas.drawLine(float,float,float,float,android.graphics.Paint)void
android.graphics.RecordingCanvas.drawRGB(int,int,int)void
android.graphics.RecordingCanvas.drawLines(float,int,int,android.graphics.Paint)void
android.graphics.RecordingCanvas.drawLines(float,android.graphics.Paint)void
android.graphics.RecordingCanvas.drawPicture(android.graphics.Picture)void
android.graphics.RecordingCanvas.drawPicture(android.graphics.Picture,android.graphics.Rect)void
android.graphics.RecordingCanvas.drawPicture(android.graphics.Picture,android.graphics.RectF)void
android.graphics.RecordingCanvas.drawARGB(int,int,int,int)void
android.graphics.RecordingCanvas.drawPath(android.graphics.Path,android.graphics.Paint)void
android.graphics.RecordingCanvas.drawRect(float,float,float,float,android.graphics.Paint)void
android.graphics.RecordingCanvas.drawRect(android.graphics.Rect,android.graphics.Paint)void
android.graphics.RecordingCanvas.drawRect(android.graphics.RectF,android.graphics.Paint)void
android.graphics.Rect.equals(Object)boolean
android.graphics.Rect.hashCode)int
android.graphics.Rect.toString)String
android.graphics.Rect.toShortString)String
android.graphics.Rect.flattenToString)String
android.graphics.Rect.unflattenFromString(String)android.graphics.Rect
android.graphics.Rect.isEmpty)boolean
android.graphics.Rect.width)int
android.graphics.Rect.height)int
android.graphics.Rect.centerX)int
android.graphics.Rect.centerY)int
android.graphics.Rect.exactCenterX)float
android.graphics.Rect.exactCenterY)float
android.graphics.Rect.setEmpty)void
android.graphics.Rect.set(int,int,int,int)void
android.graphics.Rect.set(android.graphics.Rect)void
android.graphics.Rect.offset(int,int)void
android.graphics.Rect.offsetTo(int,int)void
android.graphics.Rect.inset(int,int)void
android.graphics.Rect.contains(int,int)boolean
android.graphics.Rect.contains(int,int,int,int)boolean
android.graphics.Rect.contains(android.graphics.Rect)boolean
android.graphics.Rect.intersect(int,int,int,int)boolean
android.graphics.Rect.intersect(android.graphics.Rect)boolean
android.graphics.Rect.setIntersect(android.graphics.Rect,android.graphics.Rect)boolean
android.graphics.Rect.intersects(int,int,int,int)boolean
android.graphics.Rect.intersects(android.graphics.Rect,android.graphics.Rect)boolean
android.graphics.Rect.union(int,int,int,int)void
android.graphics.Rect.union(android.graphics.Rect)void
android.graphics.Rect.union(int,int)void
android.graphics.Rect.sort)void
android.graphics.Rect.describeContents)int
android.graphics.Rect.writeToParcel(android.os.Parcel,int)void
android.graphics.Rect.readFromParcel(android.os.Parcel)void
android.graphics.RectF.equals(Object)boolean
android.graphics.RectF.hashCode)int
android.graphics.RectF.toString)String
android.graphics.RectF.toShortString)String
android.graphics.RectF.isEmpty)boolean
android.graphics.RectF.width)float
android.graphics.RectF.height)float
android.graphics.RectF.centerX)float
android.graphics.RectF.centerY)float
android.graphics.RectF.setEmpty)void
android.graphics.RectF.set(float,float,float,float)void
android.graphics.RectF.set(android.graphics.RectF)void
android.graphics.RectF.set(android.graphics.Rect)void
android.graphics.RectF.offset(float,float)void
android.graphics.RectF.offsetTo(float,float)void
android.graphics.RectF.inset(float,float)void
android.graphics.RectF.contains(float,float)boolean
android.graphics.RectF.contains(float,float,float,float)boolean
android.graphics.RectF.contains(android.graphics.RectF)boolean
android.graphics.RectF.intersect(float,float,float,float)boolean
android.graphics.RectF.intersect(android.graphics.RectF)boolean
android.graphics.RectF.setIntersect(android.graphics.RectF,android.graphics.RectF)boolean
android.graphics.RectF.intersects(float,float,float,float)boolean
android.graphics.RectF.intersects(android.graphics.RectF,android.graphics.RectF)boolean
android.graphics.RectF.round(android.graphics.Rect)void
android.graphics.RectF.roundOut(android.graphics.Rect)void
android.graphics.RectF.union(float,float,float,float)void
android.graphics.RectF.union(android.graphics.RectF)void
android.graphics.RectF.union(float,float)void
android.graphics.RectF.sort)void
android.graphics.RectF.describeContents)int
android.graphics.RectF.writeToParcel(android.os.Parcel,int)void
android.graphics.RectF.readFromParcel(android.os.Parcel)void
android.graphics.Region.valueOf(String)Op
android.graphics.Region.setEmpty)void
android.graphics.Region.set(android.graphics.Region)boolean
android.graphics.Region.set(android.graphics.Rect)boolean
android.graphics.Region.set(int,int,int,int)boolean
android.graphics.Region.setPath(android.graphics.Path,android.graphics.Region)boolean
android.graphics.Region.getBounds)android.graphics.Rect
android.graphics.Region.getBounds(android.graphics.Rect)boolean
android.graphics.Region.getBoundaryPath)android.graphics.Path
android.graphics.Region.getBoundaryPath(android.graphics.Path)boolean
android.graphics.Region.quickContains(android.graphics.Rect)boolean
android.graphics.Region.quickReject(android.graphics.Rect)boolean
android.graphics.Region.translate(int,int)void
android.graphics.Region.union(android.graphics.Rect)boolean
android.graphics.Region.op(android.graphics.Rect,Op)boolean
android.graphics.Region.op(int,int,int,int,Op)boolean
android.graphics.Region.op(android.graphics.Region,Op)boolean
android.graphics.Region.op(android.graphics.Rect,android.graphics.Region,Op)boolean
android.graphics.Region.op(android.graphics.Region,android.graphics.Region,Op)boolean
android.graphics.Region.toString)String
android.graphics.Region.describeContents)int
android.graphics.Region.writeToParcel(android.os.Parcel,int)void
android.graphics.Region.equals(Object)boolean
android.graphics.Region.finalize)void
android.graphics.RegionIterator.next(android.graphics.Rect)boolean
android.graphics.RegionIterator.finalize)void
android.graphics.RenderNode.beginRecording(int,int)android.graphics.RecordingCanvas
android.graphics.RenderNode.beginRecording)android.graphics.RecordingCanvas
android.graphics.RenderNode.endRecording)void
android.graphics.RenderNode.discardDisplayList)void
android.graphics.RenderNode.hasDisplayList)boolean
android.graphics.RenderNode.hasIdentityMatrix)boolean
android.graphics.RenderNode.getMatrix(android.graphics.Matrix)void
android.graphics.RenderNode.getInverseMatrix(android.graphics.Matrix)void
android.graphics.RenderNode.setUseCompositingLayer(boolean,android.graphics.Paint)boolean
android.graphics.RenderNode.getUseCompositingLayer)boolean
android.graphics.RenderNode.setClipRect(android.graphics.Rect)boolean
android.graphics.RenderNode.setClipToBounds(boolean)boolean
android.graphics.RenderNode.getClipToBounds)boolean
android.graphics.RenderNode.setProjectBackwards(boolean)boolean
android.graphics.RenderNode.setProjectionReceiver(boolean)boolean
android.graphics.RenderNode.setOutline(android.graphics.Outline)boolean
android.graphics.RenderNode.hasShadow)boolean
android.graphics.RenderNode.setSpotShadowColor(int)boolean
android.graphics.RenderNode.getSpotShadowColor)int
android.graphics.RenderNode.setAmbientShadowColor(int)boolean
android.graphics.RenderNode.getAmbientShadowColor)int
android.graphics.RenderNode.setClipToOutline(boolean)boolean
android.graphics.RenderNode.getClipToOutline)boolean
android.graphics.RenderNode.setAlpha(float)boolean
android.graphics.RenderNode.getAlpha)float
android.graphics.RenderNode.setHasOverlappingRendering(boolean)boolean
android.graphics.RenderNode.hasOverlappingRendering)boolean
android.graphics.RenderNode.setElevation(float)boolean
android.graphics.RenderNode.getElevation)float
android.graphics.RenderNode.setTranslationX(float)boolean
android.graphics.RenderNode.getTranslationX)float
android.graphics.RenderNode.setTranslationY(float)boolean
android.graphics.RenderNode.getTranslationY)float
android.graphics.RenderNode.setTranslationZ(float)boolean
android.graphics.RenderNode.getTranslationZ)float
android.graphics.RenderNode.setRotationZ(float)boolean
android.graphics.RenderNode.getRotationZ)float
android.graphics.RenderNode.setRotationX(float)boolean
android.graphics.RenderNode.getRotationX)float
android.graphics.RenderNode.setRotationY(float)boolean
android.graphics.RenderNode.getRotationY)float
android.graphics.RenderNode.setScaleX(float)boolean
android.graphics.RenderNode.getScaleX)float
android.graphics.RenderNode.setScaleY(float)boolean
android.graphics.RenderNode.getScaleY)float
android.graphics.RenderNode.setPivotX(float)boolean
android.graphics.RenderNode.getPivotX)float
android.graphics.RenderNode.setPivotY(float)boolean
android.graphics.RenderNode.getPivotY)float
android.graphics.RenderNode.isPivotExplicitlySet)boolean
android.graphics.RenderNode.resetPivot)boolean
android.graphics.RenderNode.setCameraDistance(float)boolean
android.graphics.RenderNode.getCameraDistance)float
android.graphics.RenderNode.getLeft)int
android.graphics.RenderNode.getTop)int
android.graphics.RenderNode.getRight)int
android.graphics.RenderNode.getBottom)int
android.graphics.RenderNode.getWidth)int
android.graphics.RenderNode.getHeight)int
android.graphics.RenderNode.setPosition(int,int,int,int)boolean
android.graphics.RenderNode.setPosition(android.graphics.Rect)boolean
android.graphics.RenderNode.offsetLeftAndRight(int)boolean
android.graphics.RenderNode.offsetTopAndBottom(int)boolean
android.graphics.RenderNode.computeApproximateMemoryUsage)long
android.graphics.RenderNode.setForceDarkAllowed(boolean)boolean
android.graphics.RenderNode.isForceDarkAllowed)boolean
android.graphics.RenderNode.getUniqueId)long
android.graphics.Shader.valueOf(String)TileMode
android.graphics.Shader.getLocalMatrix(android.graphics.Matrix)boolean
android.graphics.Shader.setLocalMatrix(android.graphics.Matrix)void
android.graphics.SurfaceTexture.setOnFrameAvailableListener(android.graphics.SurfaceTexture.OnFrameAvailableListener)void
android.graphics.SurfaceTexture.setOnFrameAvailableListener(android.graphics.SurfaceTexture.OnFrameAvailableListener,android.os.Handler)void
android.graphics.SurfaceTexture.setDefaultBufferSize(int,int)void
android.graphics.SurfaceTexture.updateTexImage)void
android.graphics.SurfaceTexture.releaseTexImage)void
android.graphics.SurfaceTexture.detachFromGLContext)void
android.graphics.SurfaceTexture.attachToGLContext(int)void
android.graphics.SurfaceTexture.getTransformMatrix(float)void
android.graphics.SurfaceTexture.getTimestamp)long
android.graphics.SurfaceTexture.release)void
android.graphics.SurfaceTexture.isReleased)boolean
android.graphics.SurfaceTexture.finalize)void
android.graphics.Typeface.getMaxCustomFallbackCount)int
android.graphics.Typeface.setSystemFallback(String)CustomFallbackBuilder
android.graphics.Typeface.setStyle(android.graphics.fonts.FontStyle)CustomFallbackBuilder
android.graphics.Typeface.addCustomFallback(android.graphics.fonts.FontFamily)CustomFallbackBuilder
android.graphics.Typeface.build)android.graphics.Typeface
android.graphics.Typeface.setWeight(int)Builder
android.graphics.Typeface.setItalic(boolean)Builder
android.graphics.Typeface.setTtcIndex(int)Builder
android.graphics.Typeface.setFontVariationSettings(String)Builder
android.graphics.Typeface.setFontVariationSettings(android.graphics.fonts.FontVariationAxis)Builder
android.graphics.Typeface.setFallback(String)Builder
android.graphics.Typeface.build)android.graphics.Typeface
android.graphics.Typeface.getWeight)int
android.graphics.Typeface.getStyle)int
android.graphics.Typeface.isBold)boolean
android.graphics.Typeface.isItalic)boolean
android.graphics.Typeface.create(String,int)android.graphics.Typeface
android.graphics.Typeface.create(android.graphics.Typeface,int)android.graphics.Typeface
android.graphics.Typeface.create(android.graphics.Typeface,int,boolean)android.graphics.Typeface
android.graphics.Typeface.defaultFromStyle(int)android.graphics.Typeface
android.graphics.Typeface.createFromAsset(android.content.res.AssetManager,String)android.graphics.Typeface
android.graphics.Typeface.createFromFile(java.io.File)android.graphics.Typeface
android.graphics.Typeface.createFromFile(String)android.graphics.Typeface
android.graphics.Typeface.equals(Object)boolean
android.graphics.Typeface.hashCode)int
android.graphics.YuvImage.compressToJpeg(android.graphics.Rect,int,java.io.OutputStream)boolean
android.graphics.YuvImage.getYuvFormat)int
android.graphics.YuvImage.getWidth)int
android.graphics.YuvImage.getHeight)int
android.graphics.drawable.AdaptiveIconDrawable.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)void
android.graphics.drawable.AdaptiveIconDrawable.getExtraInsetFraction)float
android.graphics.drawable.AdaptiveIconDrawable.getIconMask)Path
android.graphics.drawable.AdaptiveIconDrawable.getForeground)android.graphics.drawable.Drawable
android.graphics.drawable.AdaptiveIconDrawable.getBackground)android.graphics.drawable.Drawable
android.graphics.drawable.AdaptiveIconDrawable.onBoundsChange(Rect)void
android.graphics.drawable.AdaptiveIconDrawable.draw(Canvas)void
android.graphics.drawable.AdaptiveIconDrawable.invalidateSelf)void
android.graphics.drawable.AdaptiveIconDrawable.getOutline(Outline)void
android.graphics.drawable.AdaptiveIconDrawable.getTransparentRegion)Region
android.graphics.drawable.AdaptiveIconDrawable.applyTheme(android.content.res.Resources.Theme)void
android.graphics.drawable.AdaptiveIconDrawable.canApplyTheme)boolean
android.graphics.drawable.AdaptiveIconDrawable.isProjected)boolean
android.graphics.drawable.AdaptiveIconDrawable.invalidateDrawable(android.graphics.drawable.Drawable)void
android.graphics.drawable.AdaptiveIconDrawable.scheduleDrawable(android.graphics.drawable.Drawable,Runnable,long)void
android.graphics.drawable.AdaptiveIconDrawable.unscheduleDrawable(android.graphics.drawable.Drawable,Runnable)void
android.graphics.drawable.AdaptiveIconDrawable.getChangingConfigurations)int
android.graphics.drawable.AdaptiveIconDrawable.setHotspot(float,float)void
android.graphics.drawable.AdaptiveIconDrawable.setHotspotBounds(int,int,int,int)void
android.graphics.drawable.AdaptiveIconDrawable.getHotspotBounds(Rect)void
android.graphics.drawable.AdaptiveIconDrawable.setVisible(boolean,boolean)boolean
android.graphics.drawable.AdaptiveIconDrawable.setDither(boolean)void
android.graphics.drawable.AdaptiveIconDrawable.setAlpha(int)void
android.graphics.drawable.AdaptiveIconDrawable.getAlpha)int
android.graphics.drawable.AdaptiveIconDrawable.setColorFilter(ColorFilter)void
android.graphics.drawable.AdaptiveIconDrawable.setTintList(android.content.res.ColorStateList)void
android.graphics.drawable.AdaptiveIconDrawable.setTintBlendMode(BlendMode)void
android.graphics.drawable.AdaptiveIconDrawable.setOpacity(int)void
android.graphics.drawable.AdaptiveIconDrawable.getOpacity)int
android.graphics.drawable.AdaptiveIconDrawable.setAutoMirrored(boolean)void
android.graphics.drawable.AdaptiveIconDrawable.isAutoMirrored)boolean
android.graphics.drawable.AdaptiveIconDrawable.jumpToCurrentState)void
android.graphics.drawable.AdaptiveIconDrawable.isStateful)boolean
android.graphics.drawable.AdaptiveIconDrawable.onStateChange(int)boolean
android.graphics.drawable.AdaptiveIconDrawable.onLevelChange(int)boolean
android.graphics.drawable.AdaptiveIconDrawable.getIntrinsicWidth)int
android.graphics.drawable.AdaptiveIconDrawable.getIntrinsicHeight)int
android.graphics.drawable.AdaptiveIconDrawable.mutate)android.graphics.drawable.Drawable
android.graphics.drawable.Animatable2.onAnimationStart(android.graphics.drawable.Drawable)void
android.graphics.drawable.Animatable2.onAnimationEnd(android.graphics.drawable.Drawable)void
android.graphics.drawable.AnimatedImageDrawable.setRepeatCount(int)void
android.graphics.drawable.AnimatedImageDrawable.getRepeatCount)int
android.graphics.drawable.AnimatedImageDrawable.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)void
android.graphics.drawable.AnimatedImageDrawable.getIntrinsicWidth)int
android.graphics.drawable.AnimatedImageDrawable.getIntrinsicHeight)int
android.graphics.drawable.AnimatedImageDrawable.draw(android.graphics.Canvas)void
android.graphics.drawable.AnimatedImageDrawable.setAlpha(int)void
android.graphics.drawable.AnimatedImageDrawable.getAlpha)int
android.graphics.drawable.AnimatedImageDrawable.setColorFilter(android.graphics.ColorFilter)void
android.graphics.drawable.AnimatedImageDrawable.getColorFilter)android.graphics.ColorFilter
android.graphics.drawable.AnimatedImageDrawable.getOpacity)int
android.graphics.drawable.AnimatedImageDrawable.setAutoMirrored(boolean)void
android.graphics.drawable.AnimatedImageDrawable.onLayoutDirectionChanged(int)boolean
android.graphics.drawable.AnimatedImageDrawable.isAutoMirrored)boolean
android.graphics.drawable.AnimatedImageDrawable.isRunning)boolean
android.graphics.drawable.AnimatedImageDrawable.start)void
android.graphics.drawable.AnimatedImageDrawable.stop)void
android.graphics.drawable.AnimatedImageDrawable.registerAnimationCallback(Animatable2.AnimationCallback)void
android.graphics.drawable.AnimatedImageDrawable.unregisterAnimationCallback(Animatable2.AnimationCallback)boolean
android.graphics.drawable.AnimatedImageDrawable.clearAnimationCallbacks)void
android.graphics.drawable.AnimatedStateListDrawable.setVisible(boolean,boolean)boolean
android.graphics.drawable.AnimatedStateListDrawable.addState(int,android.graphics.drawable.Drawable,int)void
android.graphics.drawable.AnimatedStateListDrawable.addTransition(int,int,android.graphics.drawable.Drawable,boolean)void
android.graphics.drawable.AnimatedStateListDrawable.isStateful)boolean
android.graphics.drawable.AnimatedStateListDrawable.onStateChange(int)boolean
android.graphics.drawable.AnimatedStateListDrawable.jumpToCurrentState)void
android.graphics.drawable.AnimatedStateListDrawable.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)void
android.graphics.drawable.AnimatedStateListDrawable.applyTheme(android.content.res.Resources.Theme)void
android.graphics.drawable.AnimatedStateListDrawable.mutate)android.graphics.drawable.Drawable
android.graphics.drawable.AnimatedStateListDrawable.setConstantState(DrawableContainer.DrawableContainerState)void
android.graphics.drawable.AnimatedVectorDrawable.mutate)android.graphics.drawable.Drawable
android.graphics.drawable.AnimatedVectorDrawable.getChangingConfigurations)int
android.graphics.drawable.AnimatedVectorDrawable.draw(Canvas)void
android.graphics.drawable.AnimatedVectorDrawable.onBoundsChange(Rect)void
android.graphics.drawable.AnimatedVectorDrawable.onStateChange(int)boolean
android.graphics.drawable.AnimatedVectorDrawable.onLevelChange(int)boolean
android.graphics.drawable.AnimatedVectorDrawable.onLayoutDirectionChanged(int)boolean
android.graphics.drawable.AnimatedVectorDrawable.getAlpha)int
android.graphics.drawable.AnimatedVectorDrawable.setAlpha(int)void
android.graphics.drawable.AnimatedVectorDrawable.setColorFilter(ColorFilter)void
android.graphics.drawable.AnimatedVectorDrawable.getColorFilter)ColorFilter
android.graphics.drawable.AnimatedVectorDrawable.setTintList(android.content.res.ColorStateList)void
android.graphics.drawable.AnimatedVectorDrawable.setHotspot(float,float)void
android.graphics.drawable.AnimatedVectorDrawable.setHotspotBounds(int,int,int,int)void
android.graphics.drawable.AnimatedVectorDrawable.setTintBlendMode(BlendMode)void
android.graphics.drawable.AnimatedVectorDrawable.setVisible(boolean,boolean)boolean
android.graphics.drawable.AnimatedVectorDrawable.isStateful)boolean
android.graphics.drawable.AnimatedVectorDrawable.getOpacity)int
android.graphics.drawable.AnimatedVectorDrawable.getIntrinsicWidth)int
android.graphics.drawable.AnimatedVectorDrawable.getIntrinsicHeight)int
android.graphics.drawable.AnimatedVectorDrawable.getOutline(Outline)void
android.graphics.drawable.AnimatedVectorDrawable.getOpticalInsets)Insets
android.graphics.drawable.AnimatedVectorDrawable.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)void
android.graphics.drawable.AnimatedVectorDrawable.canApplyTheme)boolean
android.graphics.drawable.AnimatedVectorDrawable.applyTheme(android.content.res.Resources.Theme)void
android.graphics.drawable.AnimatedVectorDrawable.isRunning)boolean
android.graphics.drawable.AnimatedVectorDrawable.reset)void
android.graphics.drawable.AnimatedVectorDrawable.start)void
android.graphics.drawable.AnimatedVectorDrawable.stop)void
android.graphics.drawable.AnimatedVectorDrawable.registerAnimationCallback(Animatable2.AnimationCallback)void
android.graphics.drawable.AnimatedVectorDrawable.unregisterAnimationCallback(Animatable2.AnimationCallback)boolean
android.graphics.drawable.AnimatedVectorDrawable.clearAnimationCallbacks)void
android.graphics.drawable.AnimationDrawable.setVisible(boolean,boolean)boolean
android.graphics.drawable.AnimationDrawable.start)void
android.graphics.drawable.AnimationDrawable.stop)void
android.graphics.drawable.AnimationDrawable.isRunning)boolean
android.graphics.drawable.AnimationDrawable.run)void
android.graphics.drawable.AnimationDrawable.unscheduleSelf(Runnable)void
android.graphics.drawable.AnimationDrawable.getNumberOfFrames)int
android.graphics.drawable.AnimationDrawable.getFrame(int)android.graphics.drawable.Drawable
android.graphics.drawable.AnimationDrawable.getDuration(int)int
android.graphics.drawable.AnimationDrawable.isOneShot)boolean
android.graphics.drawable.AnimationDrawable.setOneShot(boolean)void
android.graphics.drawable.AnimationDrawable.addFrame(android.graphics.drawable.Drawable,int)void
android.graphics.drawable.AnimationDrawable.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)void
android.graphics.drawable.AnimationDrawable.mutate)android.graphics.drawable.Drawable
android.graphics.drawable.AnimationDrawable.setConstantState(DrawableContainer.DrawableContainerState)void
android.graphics.drawable.BitmapDrawable.getPaint)Paint
android.graphics.drawable.BitmapDrawable.getBitmap)Bitmap
android.graphics.drawable.BitmapDrawable.setTargetDensity(Canvas)void
android.graphics.drawable.BitmapDrawable.setTargetDensity(android.util.DisplayMetrics)void
android.graphics.drawable.BitmapDrawable.setTargetDensity(int)void
android.graphics.drawable.BitmapDrawable.getGravity)int
android.graphics.drawable.BitmapDrawable.setGravity(int)void
android.graphics.drawable.BitmapDrawable.setMipMap(boolean)void
android.graphics.drawable.BitmapDrawable.hasMipMap)boolean
android.graphics.drawable.BitmapDrawable.setAntiAlias(boolean)void
android.graphics.drawable.BitmapDrawable.hasAntiAlias)boolean
android.graphics.drawable.BitmapDrawable.setFilterBitmap(boolean)void
android.graphics.drawable.BitmapDrawable.isFilterBitmap)boolean
android.graphics.drawable.BitmapDrawable.setDither(boolean)void
android.graphics.drawable.BitmapDrawable.setTileModeX(android.graphics.Shader.TileMode)void
android.graphics.drawable.BitmapDrawable.setTileModeY(android.graphics.Shader.TileMode)void
android.graphics.drawable.BitmapDrawable.setTileModeXY(android.graphics.Shader.TileMode,android.graphics.Shader.TileMode)void
android.graphics.drawable.BitmapDrawable.setAutoMirrored(boolean)void
android.graphics.drawable.BitmapDrawable.isAutoMirrored)boolean
android.graphics.drawable.BitmapDrawable.getChangingConfigurations)int
android.graphics.drawable.BitmapDrawable.onBoundsChange(Rect)void
android.graphics.drawable.BitmapDrawable.draw(Canvas)void
android.graphics.drawable.BitmapDrawable.getOpticalInsets)Insets
android.graphics.drawable.BitmapDrawable.getOutline(Outline)void
android.graphics.drawable.BitmapDrawable.setAlpha(int)void
android.graphics.drawable.BitmapDrawable.getAlpha)int
android.graphics.drawable.BitmapDrawable.setColorFilter(ColorFilter)void
android.graphics.drawable.BitmapDrawable.getColorFilter)ColorFilter
android.graphics.drawable.BitmapDrawable.setTintList(android.content.res.ColorStateList)void
android.graphics.drawable.BitmapDrawable.setTintBlendMode(BlendMode)void
android.graphics.drawable.BitmapDrawable.mutate)android.graphics.drawable.Drawable
android.graphics.drawable.BitmapDrawable.onStateChange(int)boolean
android.graphics.drawable.BitmapDrawable.isStateful)boolean
android.graphics.drawable.BitmapDrawable.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)void
android.graphics.drawable.BitmapDrawable.applyTheme(android.content.res.Resources.Theme)void
android.graphics.drawable.BitmapDrawable.canApplyTheme)boolean
android.graphics.drawable.BitmapDrawable.getIntrinsicWidth)int
android.graphics.drawable.BitmapDrawable.getIntrinsicHeight)int
android.graphics.drawable.BitmapDrawable.getOpacity)int
android.graphics.drawable.ClipDrawable.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)void
android.graphics.drawable.ClipDrawable.applyTheme(android.content.res.Resources.Theme)void
android.graphics.drawable.ClipDrawable.onLevelChange(int)boolean
android.graphics.drawable.ClipDrawable.getOpacity)int
android.graphics.drawable.ClipDrawable.draw(android.graphics.Canvas)void
android.graphics.drawable.ColorDrawable.getChangingConfigurations)int
android.graphics.drawable.ColorDrawable.mutate)android.graphics.drawable.Drawable
android.graphics.drawable.ColorDrawable.draw(Canvas)void
android.graphics.drawable.ColorDrawable.getColor)int
android.graphics.drawable.ColorDrawable.setColor(int)void
android.graphics.drawable.ColorDrawable.getAlpha)int
android.graphics.drawable.ColorDrawable.setAlpha(int)void
android.graphics.drawable.ColorDrawable.setColorFilter(ColorFilter)void
android.graphics.drawable.ColorDrawable.getColorFilter)ColorFilter
android.graphics.drawable.ColorDrawable.setTintList(android.content.res.ColorStateList)void
android.graphics.drawable.ColorDrawable.setTintBlendMode(BlendMode)void
android.graphics.drawable.ColorDrawable.onStateChange(int)boolean
android.graphics.drawable.ColorDrawable.isStateful)boolean
android.graphics.drawable.ColorDrawable.getOpacity)int
android.graphics.drawable.ColorDrawable.getOutline(Outline)void
android.graphics.drawable.ColorDrawable.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)void
android.graphics.drawable.ColorDrawable.canApplyTheme)boolean
android.graphics.drawable.ColorDrawable.applyTheme(android.content.res.Resources.Theme)void
android.graphics.drawable.ColorStateListDrawable.draw(Canvas)void
android.graphics.drawable.ColorStateListDrawable.getAlpha)int
android.graphics.drawable.ColorStateListDrawable.isStateful)boolean
android.graphics.drawable.ColorStateListDrawable.hasFocusStateSpecified)boolean
android.graphics.drawable.ColorStateListDrawable.getCurrent)android.graphics.drawable.Drawable
android.graphics.drawable.ColorStateListDrawable.applyTheme(android.content.res.Resources.Theme)void
android.graphics.drawable.ColorStateListDrawable.canApplyTheme)boolean
android.graphics.drawable.ColorStateListDrawable.setAlpha(int)void
android.graphics.drawable.ColorStateListDrawable.clearAlpha)void
android.graphics.drawable.ColorStateListDrawable.setTintList(android.content.res.ColorStateList)void
android.graphics.drawable.ColorStateListDrawable.setTintBlendMode(BlendMode)void
android.graphics.drawable.ColorStateListDrawable.getColorFilter)ColorFilter
android.graphics.drawable.ColorStateListDrawable.setColorFilter(ColorFilter)void
android.graphics.drawable.ColorStateListDrawable.getOpacity)int
android.graphics.drawable.ColorStateListDrawable.onBoundsChange(Rect)void
android.graphics.drawable.ColorStateListDrawable.onStateChange(int)boolean
android.graphics.drawable.ColorStateListDrawable.invalidateDrawable(android.graphics.drawable.Drawable)void
android.graphics.drawable.ColorStateListDrawable.scheduleDrawable(android.graphics.drawable.Drawable,Runnable,long)void
android.graphics.drawable.ColorStateListDrawable.unscheduleDrawable(android.graphics.drawable.Drawable,Runnable)void
android.graphics.drawable.ColorStateListDrawable.getColorStateList)android.content.res.ColorStateList
android.graphics.drawable.ColorStateListDrawable.getChangingConfigurations)int
android.graphics.drawable.ColorStateListDrawable.mutate)android.graphics.drawable.Drawable
android.graphics.drawable.ColorStateListDrawable.setColorStateList(android.content.res.ColorStateList)void
android.graphics.drawable.Drawable.newDrawable(android.content.res.Resources)android.graphics.drawable.Drawable
android.graphics.drawable.Drawable.newDrawable(android.content.res.Resources,android.content.res.Resources.Theme)android.graphics.drawable.Drawable
android.graphics.drawable.Drawable.canApplyTheme)boolean
android.graphics.drawable.Drawable.setBounds(int,int,int,int)void
android.graphics.drawable.Drawable.setBounds(Rect)void
android.graphics.drawable.Drawable.copyBounds(Rect)void
android.graphics.drawable.Drawable.copyBounds)Rect
android.graphics.drawable.Drawable.getBounds)Rect
android.graphics.drawable.Drawable.getDirtyBounds)Rect
android.graphics.drawable.Drawable.setChangingConfigurations(int)void
android.graphics.drawable.Drawable.getChangingConfigurations)int
android.graphics.drawable.Drawable.setDither(boolean)void
android.graphics.drawable.Drawable.setFilterBitmap(boolean)void
android.graphics.drawable.Drawable.isFilterBitmap)boolean
android.graphics.drawable.Drawable.setCallback(android.graphics.drawable.Drawable.Callback)void
android.graphics.drawable.Drawable.getCallback)android.graphics.drawable.Drawable.Callback
android.graphics.drawable.Drawable.invalidateSelf)void
android.graphics.drawable.Drawable.scheduleSelf(Runnable,long)void
android.graphics.drawable.Drawable.unscheduleSelf(Runnable)void
android.graphics.drawable.Drawable.getLayoutDirection)int
android.graphics.drawable.Drawable.setLayoutDirection(int)boolean
android.graphics.drawable.Drawable.onLayoutDirectionChanged(int)boolean
android.graphics.drawable.Drawable.getAlpha)int
android.graphics.drawable.Drawable.setColorFilter(int,android.graphics.PorterDuff.Mode)void
android.graphics.drawable.Drawable.setTint(int)void
android.graphics.drawable.Drawable.setTintList(android.content.res.ColorStateList)void
android.graphics.drawable.Drawable.setTintMode(android.graphics.PorterDuff.Mode)void
android.graphics.drawable.Drawable.setTintBlendMode(BlendMode)void
android.graphics.drawable.Drawable.getColorFilter)ColorFilter
android.graphics.drawable.Drawable.clearColorFilter)void
android.graphics.drawable.Drawable.setHotspot(float,float)void
android.graphics.drawable.Drawable.setHotspotBounds(int,int,int,int)void
android.graphics.drawable.Drawable.getHotspotBounds(Rect)void
android.graphics.drawable.Drawable.isProjected)boolean
android.graphics.drawable.Drawable.isStateful)boolean
android.graphics.drawable.Drawable.setState(int)boolean
android.graphics.drawable.Drawable.jumpToCurrentState)void
android.graphics.drawable.Drawable.getCurrent)android.graphics.drawable.Drawable
android.graphics.drawable.Drawable.setLevel(int)boolean
android.graphics.drawable.Drawable.getLevel)int
android.graphics.drawable.Drawable.setVisible(boolean,boolean)boolean
android.graphics.drawable.Drawable.isVisible)boolean
android.graphics.drawable.Drawable.setAutoMirrored(boolean)void
android.graphics.drawable.Drawable.isAutoMirrored)boolean
android.graphics.drawable.Drawable.applyTheme(android.content.res.Resources.Theme)void
android.graphics.drawable.Drawable.canApplyTheme)boolean
android.graphics.drawable.Drawable.resolveOpacity(int,int)int
android.graphics.drawable.Drawable.getTransparentRegion)Region
android.graphics.drawable.Drawable.onStateChange(int)boolean
android.graphics.drawable.Drawable.onLevelChange(int)boolean
android.graphics.drawable.Drawable.onBoundsChange(Rect)void
android.graphics.drawable.Drawable.getIntrinsicWidth)int
android.graphics.drawable.Drawable.getIntrinsicHeight)int
android.graphics.drawable.Drawable.getMinimumWidth)int
android.graphics.drawable.Drawable.getMinimumHeight)int
android.graphics.drawable.Drawable.getPadding(Rect)boolean
android.graphics.drawable.Drawable.getOpticalInsets)Insets
android.graphics.drawable.Drawable.getOutline(Outline)void
android.graphics.drawable.Drawable.mutate)android.graphics.drawable.Drawable
android.graphics.drawable.Drawable.createFromStream(java.io.InputStream,String)android.graphics.drawable.Drawable
android.graphics.drawable.Drawable.createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,String)android.graphics.drawable.Drawable
android.graphics.drawable.Drawable.createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,String,android.graphics.BitmapFactory.Options)android.graphics.drawable.Drawable
android.graphics.drawable.Drawable.createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser)android.graphics.drawable.Drawable
android.graphics.drawable.Drawable.createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources.Theme)android.graphics.drawable.Drawable
android.graphics.drawable.Drawable.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)android.graphics.drawable.Drawable
android.graphics.drawable.Drawable.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)android.graphics.drawable.Drawable
android.graphics.drawable.Drawable.createFromPath(String)android.graphics.drawable.Drawable
android.graphics.drawable.Drawable.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)void
android.graphics.drawable.Drawable.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)void
android.graphics.drawable.Drawable.getConstantState)ConstantState
android.graphics.drawable.DrawableContainer.getChangingConfigurations)int
android.graphics.drawable.DrawableContainer.addChild(android.graphics.drawable.Drawable)int
android.graphics.drawable.DrawableContainer.getChildCount)int
android.graphics.drawable.DrawableContainer.getChild(int)android.graphics.drawable.Drawable
android.graphics.drawable.DrawableContainer.canApplyTheme)boolean
android.graphics.drawable.DrawableContainer.setVariablePadding(boolean)void
android.graphics.drawable.DrawableContainer.getConstantPadding)Rect
android.graphics.drawable.DrawableContainer.setConstantSize(boolean)void
android.graphics.drawable.DrawableContainer.isConstantSize)boolean
android.graphics.drawable.DrawableContainer.getConstantWidth)int
android.graphics.drawable.DrawableContainer.getConstantHeight)int
android.graphics.drawable.DrawableContainer.getConstantMinimumWidth)int
android.graphics.drawable.DrawableContainer.getConstantMinimumHeight)int
android.graphics.drawable.DrawableContainer.computeConstantSize)void
android.graphics.drawable.DrawableContainer.setEnterFadeDuration(int)void
android.graphics.drawable.DrawableContainer.getEnterFadeDuration)int
android.graphics.drawable.DrawableContainer.setExitFadeDuration(int)void
android.graphics.drawable.DrawableContainer.getExitFadeDuration)int
android.graphics.drawable.DrawableContainer.getOpacity)int
android.graphics.drawable.DrawableContainer.isStateful)boolean
android.graphics.drawable.DrawableContainer.growArray(int,int)void
android.graphics.drawable.DrawableContainer.draw(Canvas)void
android.graphics.drawable.DrawableContainer.getChangingConfigurations)int
android.graphics.drawable.DrawableContainer.getPadding(Rect)boolean
android.graphics.drawable.DrawableContainer.getOpticalInsets)Insets
android.graphics.drawable.DrawableContainer.getOutline(Outline)void
android.graphics.drawable.DrawableContainer.setAlpha(int)void
android.graphics.drawable.DrawableContainer.getAlpha)int
android.graphics.drawable.DrawableContainer.setDither(boolean)void
android.graphics.drawable.DrawableContainer.setColorFilter(ColorFilter)void
android.graphics.drawable.DrawableContainer.setTintList(android.content.res.ColorStateList)void
android.graphics.drawable.DrawableContainer.setTintBlendMode(BlendMode)void
android.graphics.drawable.DrawableContainer.setEnterFadeDuration(int)void
android.graphics.drawable.DrawableContainer.setExitFadeDuration(int)void
android.graphics.drawable.DrawableContainer.onBoundsChange(Rect)void
android.graphics.drawable.DrawableContainer.isStateful)boolean
android.graphics.drawable.DrawableContainer.setAutoMirrored(boolean)void
android.graphics.drawable.DrawableContainer.isAutoMirrored)boolean
android.graphics.drawable.DrawableContainer.jumpToCurrentState)void
android.graphics.drawable.DrawableContainer.setHotspot(float,float)void
android.graphics.drawable.DrawableContainer.setHotspotBounds(int,int,int,int)void
android.graphics.drawable.DrawableContainer.getHotspotBounds(Rect)void
android.graphics.drawable.DrawableContainer.onStateChange(int)boolean
android.graphics.drawable.DrawableContainer.onLevelChange(int)boolean
android.graphics.drawable.DrawableContainer.onLayoutDirectionChanged(int)boolean
android.graphics.drawable.DrawableContainer.getIntrinsicWidth)int
android.graphics.drawable.DrawableContainer.getIntrinsicHeight)int
android.graphics.drawable.DrawableContainer.getMinimumWidth)int
android.graphics.drawable.DrawableContainer.getMinimumHeight)int
android.graphics.drawable.DrawableContainer.invalidateDrawable(android.graphics.drawable.Drawable)void
android.graphics.drawable.DrawableContainer.scheduleDrawable(android.graphics.drawable.Drawable,Runnable,long)void
android.graphics.drawable.DrawableContainer.unscheduleDrawable(android.graphics.drawable.Drawable,Runnable)void
android.graphics.drawable.DrawableContainer.setVisible(boolean,boolean)boolean
android.graphics.drawable.DrawableContainer.getOpacity)int
android.graphics.drawable.DrawableContainer.selectDrawable(int)boolean
android.graphics.drawable.DrawableContainer.getCurrent)android.graphics.drawable.Drawable
android.graphics.drawable.DrawableContainer.applyTheme(android.content.res.Resources.Theme)void
android.graphics.drawable.DrawableContainer.canApplyTheme)boolean
android.graphics.drawable.DrawableContainer.mutate)android.graphics.drawable.Drawable
android.graphics.drawable.DrawableContainer.setConstantState(DrawableContainerState)void
android.graphics.drawable.DrawableWrapper.setDrawable(android.graphics.drawable.Drawable)void
android.graphics.drawable.DrawableWrapper.getDrawable)android.graphics.drawable.Drawable
android.graphics.drawable.DrawableWrapper.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)void
android.graphics.drawable.DrawableWrapper.applyTheme(android.content.res.Resources.Theme)void
android.graphics.drawable.DrawableWrapper.canApplyTheme)boolean
android.graphics.drawable.DrawableWrapper.invalidateDrawable(android.graphics.drawable.Drawable)void
android.graphics.drawable.DrawableWrapper.scheduleDrawable(android.graphics.drawable.Drawable,Runnable,long)void
android.graphics.drawable.DrawableWrapper.unscheduleDrawable(android.graphics.drawable.Drawable,Runnable)void
android.graphics.drawable.DrawableWrapper.draw(Canvas)void
android.graphics.drawable.DrawableWrapper.getChangingConfigurations)int
android.graphics.drawable.DrawableWrapper.getPadding(Rect)boolean
android.graphics.drawable.DrawableWrapper.getOpticalInsets)Insets
android.graphics.drawable.DrawableWrapper.setHotspot(float,float)void
android.graphics.drawable.DrawableWrapper.setHotspotBounds(int,int,int,int)void
android.graphics.drawable.DrawableWrapper.getHotspotBounds(Rect)void
android.graphics.drawable.DrawableWrapper.setVisible(boolean,boolean)boolean
android.graphics.drawable.DrawableWrapper.setAlpha(int)void
android.graphics.drawable.DrawableWrapper.getAlpha)int
android.graphics.drawable.DrawableWrapper.setColorFilter(ColorFilter)void
android.graphics.drawable.DrawableWrapper.getColorFilter)ColorFilter
android.graphics.drawable.DrawableWrapper.setTintList(android.content.res.ColorStateList)void
android.graphics.drawable.DrawableWrapper.setTintBlendMode(BlendMode)void
android.graphics.drawable.DrawableWrapper.onLayoutDirectionChanged(int)boolean
android.graphics.drawable.DrawableWrapper.getOpacity)int
android.graphics.drawable.DrawableWrapper.isStateful)boolean
android.graphics.drawable.DrawableWrapper.onStateChange(int)boolean
android.graphics.drawable.DrawableWrapper.onLevelChange(int)boolean
android.graphics.drawable.DrawableWrapper.onBoundsChange(Rect)void
android.graphics.drawable.DrawableWrapper.getIntrinsicWidth)int
android.graphics.drawable.DrawableWrapper.getIntrinsicHeight)int
android.graphics.drawable.DrawableWrapper.getOutline(Outline)void
android.graphics.drawable.DrawableWrapper.mutate)android.graphics.drawable.Drawable
android.graphics.drawable.GradientDrawable.valueOf(String)Orientation
android.graphics.drawable.GradientDrawable.getPadding(Rect)boolean
android.graphics.drawable.GradientDrawable.setCornerRadii(float)void
android.graphics.drawable.GradientDrawable.setCornerRadius(float)void
android.graphics.drawable.GradientDrawable.getCornerRadius)float
android.graphics.drawable.GradientDrawable.setStroke(int,int)void
android.graphics.drawable.GradientDrawable.setStroke(int,android.content.res.ColorStateList)void
android.graphics.drawable.GradientDrawable.setStroke(int,int,float,float)void
android.graphics.drawable.GradientDrawable.setStroke(int,android.content.res.ColorStateList,float,float)void
android.graphics.drawable.GradientDrawable.setSize(int,int)void
android.graphics.drawable.GradientDrawable.setShape(int)void
android.graphics.drawable.GradientDrawable.getShape)int
android.graphics.drawable.GradientDrawable.setGradientType(int)void
android.graphics.drawable.GradientDrawable.getGradientType)int
android.graphics.drawable.GradientDrawable.setGradientCenter(float,float)void
android.graphics.drawable.GradientDrawable.getGradientCenterX)float
android.graphics.drawable.GradientDrawable.getGradientCenterY)float
android.graphics.drawable.GradientDrawable.setGradientRadius(float)void
android.graphics.drawable.GradientDrawable.getGradientRadius)float
android.graphics.drawable.GradientDrawable.setUseLevel(boolean)void
android.graphics.drawable.GradientDrawable.getUseLevel)boolean
android.graphics.drawable.GradientDrawable.getOrientation)Orientation
android.graphics.drawable.GradientDrawable.setOrientation(Orientation)void
android.graphics.drawable.GradientDrawable.setColors(int)void
android.graphics.drawable.GradientDrawable.setColors(int,float)void
android.graphics.drawable.GradientDrawable.draw(Canvas)void
android.graphics.drawable.GradientDrawable.setInnerRadiusRatio(float)void
android.graphics.drawable.GradientDrawable.getInnerRadiusRatio)float
android.graphics.drawable.GradientDrawable.setInnerRadius(int)void
android.graphics.drawable.GradientDrawable.getInnerRadius)int
android.graphics.drawable.GradientDrawable.setThicknessRatio(float)void
android.graphics.drawable.GradientDrawable.getThicknessRatio)float
android.graphics.drawable.GradientDrawable.setThickness(int)void
android.graphics.drawable.GradientDrawable.getThickness)int
android.graphics.drawable.GradientDrawable.setPadding(int,int,int,int)void
android.graphics.drawable.GradientDrawable.setColor(int)void
android.graphics.drawable.GradientDrawable.setColor(android.content.res.ColorStateList)void
android.graphics.drawable.GradientDrawable.getColor)android.content.res.ColorStateList
android.graphics.drawable.GradientDrawable.onStateChange(int)boolean
android.graphics.drawable.GradientDrawable.isStateful)boolean
android.graphics.drawable.GradientDrawable.getChangingConfigurations)int
android.graphics.drawable.GradientDrawable.setAlpha(int)void
android.graphics.drawable.GradientDrawable.getAlpha)int
android.graphics.drawable.GradientDrawable.setDither(boolean)void
android.graphics.drawable.GradientDrawable.getColorFilter)ColorFilter
android.graphics.drawable.GradientDrawable.setColorFilter(ColorFilter)void
android.graphics.drawable.GradientDrawable.setTintList(android.content.res.ColorStateList)void
android.graphics.drawable.GradientDrawable.setTintBlendMode(BlendMode)void
android.graphics.drawable.GradientDrawable.getOpacity)int
android.graphics.drawable.GradientDrawable.onBoundsChange(Rect)void
android.graphics.drawable.GradientDrawable.onLevelChange(int)boolean
android.graphics.drawable.GradientDrawable.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)void
android.graphics.drawable.GradientDrawable.applyTheme(android.content.res.Resources.Theme)void
android.graphics.drawable.GradientDrawable.canApplyTheme)boolean
android.graphics.drawable.GradientDrawable.getIntrinsicWidth)int
android.graphics.drawable.GradientDrawable.getIntrinsicHeight)int
android.graphics.drawable.GradientDrawable.getOpticalInsets)Insets
android.graphics.drawable.GradientDrawable.getOutline(Outline)void
android.graphics.drawable.GradientDrawable.mutate)android.graphics.drawable.Drawable
android.graphics.drawable.Icon.getType)int
android.graphics.drawable.Icon.getResPackage)String
android.graphics.drawable.Icon.getResId)int
android.graphics.drawable.Icon.getUri)android.net.Uri
android.graphics.drawable.Icon.loadDrawableAsync(android.content.Context,Message)void
android.graphics.drawable.Icon.loadDrawableAsync(android.content.Context,android.graphics.drawable.Icon.OnDrawableLoadedListener,Handler)void
android.graphics.drawable.Icon.loadDrawable(android.content.Context)android.graphics.drawable.Drawable
android.graphics.drawable.Icon.createWithResource(android.content.Context,int)android.graphics.drawable.Icon
android.graphics.drawable.Icon.createWithResource(String,int)android.graphics.drawable.Icon
android.graphics.drawable.Icon.createWithBitmap(Bitmap)android.graphics.drawable.Icon
android.graphics.drawable.Icon.createWithAdaptiveBitmap(Bitmap)android.graphics.drawable.Icon
android.graphics.drawable.Icon.createWithData(byte,int,int)android.graphics.drawable.Icon
android.graphics.drawable.Icon.createWithContentUri(String)android.graphics.drawable.Icon
android.graphics.drawable.Icon.createWithContentUri(android.net.Uri)android.graphics.drawable.Icon
android.graphics.drawable.Icon.setTint(int)android.graphics.drawable.Icon
android.graphics.drawable.Icon.setTintList(android.content.res.ColorStateList)android.graphics.drawable.Icon
android.graphics.drawable.Icon.setTintMode(android.graphics.PorterDuff.Mode)android.graphics.drawable.Icon
android.graphics.drawable.Icon.setTintBlendMode(BlendMode)android.graphics.drawable.Icon
android.graphics.drawable.Icon.createWithFilePath(String)android.graphics.drawable.Icon
android.graphics.drawable.Icon.toString)String
android.graphics.drawable.Icon.describeContents)int
android.graphics.drawable.Icon.writeToParcel(Parcel,int)void
android.graphics.drawable.InsetDrawable.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)void
android.graphics.drawable.InsetDrawable.applyTheme(android.content.res.Resources.Theme)void
android.graphics.drawable.InsetDrawable.getPadding(Rect)boolean
android.graphics.drawable.InsetDrawable.getOpticalInsets)Insets
android.graphics.drawable.InsetDrawable.getOpacity)int
android.graphics.drawable.InsetDrawable.onBoundsChange(Rect)void
android.graphics.drawable.InsetDrawable.getIntrinsicWidth)int
android.graphics.drawable.InsetDrawable.getIntrinsicHeight)int
android.graphics.drawable.InsetDrawable.getOutline(Outline)void
android.graphics.drawable.LayerDrawable.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)void
android.graphics.drawable.LayerDrawable.applyTheme(android.content.res.Resources.Theme)void
android.graphics.drawable.LayerDrawable.canApplyTheme)boolean
android.graphics.drawable.LayerDrawable.isProjected)boolean
android.graphics.drawable.LayerDrawable.addLayer(android.graphics.drawable.Drawable)int
android.graphics.drawable.LayerDrawable.findDrawableByLayerId(int)android.graphics.drawable.Drawable
android.graphics.drawable.LayerDrawable.setId(int,int)void
android.graphics.drawable.LayerDrawable.getId(int)int
android.graphics.drawable.LayerDrawable.getNumberOfLayers)int
android.graphics.drawable.LayerDrawable.setDrawableByLayerId(int,android.graphics.drawable.Drawable)boolean
android.graphics.drawable.LayerDrawable.findIndexByLayerId(int)int
android.graphics.drawable.LayerDrawable.setDrawable(int,android.graphics.drawable.Drawable)void
android.graphics.drawable.LayerDrawable.getDrawable(int)android.graphics.drawable.Drawable
android.graphics.drawable.LayerDrawable.setLayerSize(int,int,int)void
android.graphics.drawable.LayerDrawable.setLayerWidth(int,int)void
android.graphics.drawable.LayerDrawable.getLayerWidth(int)int
android.graphics.drawable.LayerDrawable.setLayerHeight(int,int)void
android.graphics.drawable.LayerDrawable.getLayerHeight(int)int
android.graphics.drawable.LayerDrawable.setLayerGravity(int,int)void
android.graphics.drawable.LayerDrawable.getLayerGravity(int)int
android.graphics.drawable.LayerDrawable.setLayerInset(int,int,int,int,int)void
android.graphics.drawable.LayerDrawable.setLayerInsetRelative(int,int,int,int,int)void
android.graphics.drawable.LayerDrawable.setLayerInsetLeft(int,int)void
android.graphics.drawable.LayerDrawable.getLayerInsetLeft(int)int
android.graphics.drawable.LayerDrawable.setLayerInsetRight(int,int)void
android.graphics.drawable.LayerDrawable.getLayerInsetRight(int)int
android.graphics.drawable.LayerDrawable.setLayerInsetTop(int,int)void
android.graphics.drawable.LayerDrawable.getLayerInsetTop(int)int
android.graphics.drawable.LayerDrawable.setLayerInsetBottom(int,int)void
android.graphics.drawable.LayerDrawable.getLayerInsetBottom(int)int
android.graphics.drawable.LayerDrawable.setLayerInsetStart(int,int)void
android.graphics.drawable.LayerDrawable.getLayerInsetStart(int)int
android.graphics.drawable.LayerDrawable.setLayerInsetEnd(int,int)void
android.graphics.drawable.LayerDrawable.getLayerInsetEnd(int)int
android.graphics.drawable.LayerDrawable.setPaddingMode(int)void
android.graphics.drawable.LayerDrawable.getPaddingMode)int
android.graphics.drawable.LayerDrawable.invalidateDrawable(android.graphics.drawable.Drawable)void
android.graphics.drawable.LayerDrawable.scheduleDrawable(android.graphics.drawable.Drawable,Runnable,long)void
android.graphics.drawable.LayerDrawable.unscheduleDrawable(android.graphics.drawable.Drawable,Runnable)void
android.graphics.drawable.LayerDrawable.draw(Canvas)void
android.graphics.drawable.LayerDrawable.getChangingConfigurations)int
android.graphics.drawable.LayerDrawable.getPadding(Rect)boolean
android.graphics.drawable.LayerDrawable.setPadding(int,int,int,int)void
android.graphics.drawable.LayerDrawable.setPaddingRelative(int,int,int,int)void
android.graphics.drawable.LayerDrawable.getLeftPadding)int
android.graphics.drawable.LayerDrawable.getRightPadding)int
android.graphics.drawable.LayerDrawable.getStartPadding)int
android.graphics.drawable.LayerDrawable.getEndPadding)int
android.graphics.drawable.LayerDrawable.getTopPadding)int
android.graphics.drawable.LayerDrawable.getBottomPadding)int
android.graphics.drawable.LayerDrawable.getOutline(Outline)void
android.graphics.drawable.LayerDrawable.setHotspot(float,float)void
android.graphics.drawable.LayerDrawable.setHotspotBounds(int,int,int,int)void
android.graphics.drawable.LayerDrawable.getHotspotBounds(Rect)void
android.graphics.drawable.LayerDrawable.setVisible(boolean,boolean)boolean
android.graphics.drawable.LayerDrawable.setDither(boolean)void
android.graphics.drawable.LayerDrawable.setAlpha(int)void
android.graphics.drawable.LayerDrawable.getAlpha)int
android.graphics.drawable.LayerDrawable.setColorFilter(ColorFilter)void
android.graphics.drawable.LayerDrawable.setTintList(android.content.res.ColorStateList)void
android.graphics.drawable.LayerDrawable.setTintBlendMode(BlendMode)void
android.graphics.drawable.LayerDrawable.setOpacity(int)void
android.graphics.drawable.LayerDrawable.getOpacity)int
android.graphics.drawable.LayerDrawable.setAutoMirrored(boolean)void
android.graphics.drawable.LayerDrawable.isAutoMirrored)boolean
android.graphics.drawable.LayerDrawable.jumpToCurrentState)void
android.graphics.drawable.LayerDrawable.isStateful)boolean
android.graphics.drawable.LayerDrawable.onStateChange(int)boolean
android.graphics.drawable.LayerDrawable.onLevelChange(int)boolean
android.graphics.drawable.LayerDrawable.onBoundsChange(Rect)void
android.graphics.drawable.LayerDrawable.getIntrinsicWidth)int
android.graphics.drawable.LayerDrawable.getIntrinsicHeight)int
android.graphics.drawable.LayerDrawable.mutate)android.graphics.drawable.Drawable
android.graphics.drawable.LayerDrawable.onLayoutDirectionChanged(int)boolean
android.graphics.drawable.LevelListDrawable.addLevel(int,int,android.graphics.drawable.Drawable)void
android.graphics.drawable.LevelListDrawable.onLevelChange(int)boolean
android.graphics.drawable.LevelListDrawable.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)void
android.graphics.drawable.LevelListDrawable.mutate)android.graphics.drawable.Drawable
android.graphics.drawable.LevelListDrawable.setConstantState(DrawableContainer.DrawableContainerState)void
android.graphics.drawable.NinePatchDrawable.setTargetDensity(Canvas)void
android.graphics.drawable.NinePatchDrawable.setTargetDensity(android.util.DisplayMetrics)void
android.graphics.drawable.NinePatchDrawable.setTargetDensity(int)void
android.graphics.drawable.NinePatchDrawable.draw(Canvas)void
android.graphics.drawable.NinePatchDrawable.getChangingConfigurations)int
android.graphics.drawable.NinePatchDrawable.getPadding(Rect)boolean
android.graphics.drawable.NinePatchDrawable.getOutline(Outline)void
android.graphics.drawable.NinePatchDrawable.getOpticalInsets)Insets
android.graphics.drawable.NinePatchDrawable.setAlpha(int)void
android.graphics.drawable.NinePatchDrawable.getAlpha)int
android.graphics.drawable.NinePatchDrawable.setColorFilter(ColorFilter)void
android.graphics.drawable.NinePatchDrawable.setTintList(android.content.res.ColorStateList)void
android.graphics.drawable.NinePatchDrawable.setTintBlendMode(BlendMode)void
android.graphics.drawable.NinePatchDrawable.setDither(boolean)void
android.graphics.drawable.NinePatchDrawable.setAutoMirrored(boolean)void
android.graphics.drawable.NinePatchDrawable.isAutoMirrored)boolean
android.graphics.drawable.NinePatchDrawable.setFilterBitmap(boolean)void
android.graphics.drawable.NinePatchDrawable.isFilterBitmap)boolean
android.graphics.drawable.NinePatchDrawable.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)void
android.graphics.drawable.NinePatchDrawable.applyTheme(android.content.res.Resources.Theme)void
android.graphics.drawable.NinePatchDrawable.canApplyTheme)boolean
android.graphics.drawable.NinePatchDrawable.getPaint)Paint
android.graphics.drawable.NinePatchDrawable.getIntrinsicWidth)int
android.graphics.drawable.NinePatchDrawable.getIntrinsicHeight)int
android.graphics.drawable.NinePatchDrawable.getOpacity)int
android.graphics.drawable.NinePatchDrawable.getTransparentRegion)Region
android.graphics.drawable.NinePatchDrawable.mutate)android.graphics.drawable.Drawable
android.graphics.drawable.NinePatchDrawable.onStateChange(int)boolean
android.graphics.drawable.NinePatchDrawable.isStateful)boolean
android.graphics.drawable.PaintDrawable.setCornerRadius(float)void
android.graphics.drawable.PaintDrawable.setCornerRadii(float)void
android.graphics.drawable.PaintDrawable.inflateTag(String,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)boolean
android.graphics.drawable.PictureDrawable.getPicture)Picture
android.graphics.drawable.PictureDrawable.setPicture(Picture)void
android.graphics.drawable.PictureDrawable.draw(Canvas)void
android.graphics.drawable.PictureDrawable.getIntrinsicWidth)int
android.graphics.drawable.PictureDrawable.getIntrinsicHeight)int
android.graphics.drawable.PictureDrawable.getOpacity)int
android.graphics.drawable.PictureDrawable.setColorFilter(ColorFilter)void
android.graphics.drawable.PictureDrawable.setAlpha(int)void
android.graphics.drawable.RippleDrawable.jumpToCurrentState)void
android.graphics.drawable.RippleDrawable.getOpacity)int
android.graphics.drawable.RippleDrawable.onStateChange(int)boolean
android.graphics.drawable.RippleDrawable.onBoundsChange(Rect)void
android.graphics.drawable.RippleDrawable.setVisible(boolean,boolean)boolean
android.graphics.drawable.RippleDrawable.isProjected)boolean
android.graphics.drawable.RippleDrawable.isStateful)boolean
android.graphics.drawable.RippleDrawable.setColor(android.content.res.ColorStateList)void
android.graphics.drawable.RippleDrawable.setRadius(int)void
android.graphics.drawable.RippleDrawable.getRadius)int
android.graphics.drawable.RippleDrawable.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)void
android.graphics.drawable.RippleDrawable.setDrawableByLayerId(int,android.graphics.drawable.Drawable)boolean
android.graphics.drawable.RippleDrawable.setPaddingMode(int)void
android.graphics.drawable.RippleDrawable.applyTheme(android.content.res.Resources.Theme)void
android.graphics.drawable.RippleDrawable.canApplyTheme)boolean
android.graphics.drawable.RippleDrawable.setHotspot(float,float)void
android.graphics.drawable.RippleDrawable.setHotspotBounds(int,int,int,int)void
android.graphics.drawable.RippleDrawable.getHotspotBounds(Rect)void
android.graphics.drawable.RippleDrawable.getOutline(Outline)void
android.graphics.drawable.RippleDrawable.draw(Canvas)void
android.graphics.drawable.RippleDrawable.invalidateSelf)void
android.graphics.drawable.RippleDrawable.getDirtyBounds)Rect
android.graphics.drawable.RippleDrawable.mutate)android.graphics.drawable.Drawable
android.graphics.drawable.RotateDrawable.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)void
android.graphics.drawable.RotateDrawable.applyTheme(android.content.res.Resources.Theme)void
android.graphics.drawable.RotateDrawable.draw(android.graphics.Canvas)void
android.graphics.drawable.RotateDrawable.setFromDegrees(float)void
android.graphics.drawable.RotateDrawable.getFromDegrees)float
android.graphics.drawable.RotateDrawable.setToDegrees(float)void
android.graphics.drawable.RotateDrawable.getToDegrees)float
android.graphics.drawable.RotateDrawable.setPivotX(float)void
android.graphics.drawable.RotateDrawable.getPivotX)float
android.graphics.drawable.RotateDrawable.setPivotXRelative(boolean)void
android.graphics.drawable.RotateDrawable.isPivotXRelative)boolean
android.graphics.drawable.RotateDrawable.setPivotY(float)void
android.graphics.drawable.RotateDrawable.getPivotY)float
android.graphics.drawable.RotateDrawable.setPivotYRelative(boolean)void
android.graphics.drawable.RotateDrawable.isPivotYRelative)boolean
android.graphics.drawable.RotateDrawable.onLevelChange(int)boolean
android.graphics.drawable.ScaleDrawable.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)void
android.graphics.drawable.ScaleDrawable.applyTheme(android.content.res.Resources.Theme)void
android.graphics.drawable.ScaleDrawable.draw(android.graphics.Canvas)void
android.graphics.drawable.ScaleDrawable.getOpacity)int
android.graphics.drawable.ScaleDrawable.onLevelChange(int)boolean
android.graphics.drawable.ScaleDrawable.onBoundsChange(android.graphics.Rect)void
android.graphics.drawable.ShapeDrawable.getShape)android.graphics.drawable.shapes.Shape
android.graphics.drawable.ShapeDrawable.setShape(android.graphics.drawable.shapes.Shape)void
android.graphics.drawable.ShapeDrawable.setShaderFactory(ShaderFactory)void
android.graphics.drawable.ShapeDrawable.getShaderFactory)ShaderFactory
android.graphics.drawable.ShapeDrawable.getPaint)Paint
android.graphics.drawable.ShapeDrawable.setPadding(int,int,int,int)void
android.graphics.drawable.ShapeDrawable.setPadding(Rect)void
android.graphics.drawable.ShapeDrawable.setIntrinsicWidth(int)void
android.graphics.drawable.ShapeDrawable.setIntrinsicHeight(int)void
android.graphics.drawable.ShapeDrawable.getIntrinsicWidth)int
android.graphics.drawable.ShapeDrawable.getIntrinsicHeight)int
android.graphics.drawable.ShapeDrawable.getPadding(Rect)boolean
android.graphics.drawable.ShapeDrawable.onDraw(android.graphics.drawable.shapes.Shape,Canvas,Paint)void
android.graphics.drawable.ShapeDrawable.draw(Canvas)void
android.graphics.drawable.ShapeDrawable.getChangingConfigurations)int
android.graphics.drawable.ShapeDrawable.setAlpha(int)void
android.graphics.drawable.ShapeDrawable.getAlpha)int
android.graphics.drawable.ShapeDrawable.setTintList(android.content.res.ColorStateList)void
android.graphics.drawable.ShapeDrawable.setTintBlendMode(BlendMode)void
android.graphics.drawable.ShapeDrawable.setColorFilter(ColorFilter)void
android.graphics.drawable.ShapeDrawable.getOpacity)int
android.graphics.drawable.ShapeDrawable.setDither(boolean)void
android.graphics.drawable.ShapeDrawable.onBoundsChange(Rect)void
android.graphics.drawable.ShapeDrawable.onStateChange(int)boolean
android.graphics.drawable.ShapeDrawable.isStateful)boolean
android.graphics.drawable.ShapeDrawable.inflateTag(String,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)boolean
android.graphics.drawable.ShapeDrawable.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)void
android.graphics.drawable.ShapeDrawable.applyTheme(android.content.res.Resources.Theme)void
android.graphics.drawable.ShapeDrawable.getOutline(Outline)void
android.graphics.drawable.ShapeDrawable.mutate)android.graphics.drawable.Drawable
android.graphics.drawable.StateListDrawable.addState(int,android.graphics.drawable.Drawable)void
android.graphics.drawable.StateListDrawable.isStateful)boolean
android.graphics.drawable.StateListDrawable.onStateChange(int)boolean
android.graphics.drawable.StateListDrawable.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)void
android.graphics.drawable.StateListDrawable.getStateCount)int
android.graphics.drawable.StateListDrawable.getStateDrawable(int)android.graphics.drawable.Drawable
android.graphics.drawable.StateListDrawable.findStateDrawableIndex(int)int
android.graphics.drawable.StateListDrawable.mutate)android.graphics.drawable.Drawable
android.graphics.drawable.StateListDrawable.applyTheme(android.content.res.Resources.Theme)void
android.graphics.drawable.StateListDrawable.setConstantState(DrawableContainer.DrawableContainerState)void
android.graphics.drawable.TransitionDrawable.startTransition(int)void
android.graphics.drawable.TransitionDrawable.resetTransition)void
android.graphics.drawable.TransitionDrawable.reverseTransition(int)void
android.graphics.drawable.TransitionDrawable.draw(android.graphics.Canvas)void
android.graphics.drawable.TransitionDrawable.setCrossFadeEnabled(boolean)void
android.graphics.drawable.TransitionDrawable.isCrossFadeEnabled)boolean
android.graphics.drawable.VectorDrawable.mutate)android.graphics.drawable.Drawable
android.graphics.drawable.VectorDrawable.draw(Canvas)void
android.graphics.drawable.VectorDrawable.getAlpha)int
android.graphics.drawable.VectorDrawable.setAlpha(int)void
android.graphics.drawable.VectorDrawable.setColorFilter(ColorFilter)void
android.graphics.drawable.VectorDrawable.getColorFilter)ColorFilter
android.graphics.drawable.VectorDrawable.setTintList(android.content.res.ColorStateList)void
android.graphics.drawable.VectorDrawable.setTintBlendMode(BlendMode)void
android.graphics.drawable.VectorDrawable.isStateful)boolean
android.graphics.drawable.VectorDrawable.onStateChange(int)boolean
android.graphics.drawable.VectorDrawable.getOpacity)int
android.graphics.drawable.VectorDrawable.getIntrinsicWidth)int
android.graphics.drawable.VectorDrawable.getIntrinsicHeight)int
android.graphics.drawable.VectorDrawable.getOpticalInsets)Insets
android.graphics.drawable.VectorDrawable.canApplyTheme)boolean
android.graphics.drawable.VectorDrawable.applyTheme(android.content.res.Resources.Theme)void
android.graphics.drawable.VectorDrawable.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)void
android.graphics.drawable.VectorDrawable.getChangingConfigurations)int
android.graphics.drawable.VectorDrawable.setAutoMirrored(boolean)void
android.graphics.drawable.VectorDrawable.isAutoMirrored)boolean
android.graphics.drawable.shapes.ArcShape.getStartAngle)float
android.graphics.drawable.shapes.ArcShape.getSweepAngle)float
android.graphics.drawable.shapes.ArcShape.draw(Canvas,Paint)void
android.graphics.drawable.shapes.ArcShape.getOutline(Outline)void
android.graphics.drawable.shapes.ArcShape.clone)android.graphics.drawable.shapes.ArcShape
android.graphics.drawable.shapes.ArcShape.equals(Object)boolean
android.graphics.drawable.shapes.ArcShape.hashCode)int
android.graphics.drawable.shapes.OvalShape.draw(Canvas,Paint)void
android.graphics.drawable.shapes.OvalShape.getOutline(Outline)void
android.graphics.drawable.shapes.OvalShape.clone)android.graphics.drawable.shapes.OvalShape
android.graphics.drawable.shapes.PathShape.draw(Canvas,Paint)void
android.graphics.drawable.shapes.PathShape.onResize(float,float)void
android.graphics.drawable.shapes.PathShape.clone)android.graphics.drawable.shapes.PathShape
android.graphics.drawable.shapes.PathShape.equals(Object)boolean
android.graphics.drawable.shapes.PathShape.hashCode)int
android.graphics.drawable.shapes.RectShape.draw(Canvas,Paint)void
android.graphics.drawable.shapes.RectShape.getOutline(Outline)void
android.graphics.drawable.shapes.RectShape.onResize(float,float)void
android.graphics.drawable.shapes.RectShape.rect)RectF
android.graphics.drawable.shapes.RectShape.clone)android.graphics.drawable.shapes.RectShape
android.graphics.drawable.shapes.RectShape.equals(Object)boolean
android.graphics.drawable.shapes.RectShape.hashCode)int
android.graphics.drawable.shapes.RoundRectShape.draw(Canvas,Paint)void
android.graphics.drawable.shapes.RoundRectShape.getOutline(Outline)void
android.graphics.drawable.shapes.RoundRectShape.onResize(float,float)void
android.graphics.drawable.shapes.RoundRectShape.clone)android.graphics.drawable.shapes.RoundRectShape
android.graphics.drawable.shapes.RoundRectShape.equals(Object)boolean
android.graphics.drawable.shapes.RoundRectShape.hashCode)int
android.graphics.drawable.shapes.Shape.getWidth)float
android.graphics.drawable.shapes.Shape.getHeight)float
android.graphics.drawable.shapes.Shape.resize(float,float)void
android.graphics.drawable.shapes.Shape.hasAlpha)boolean
android.graphics.drawable.shapes.Shape.onResize(float,float)void
android.graphics.drawable.shapes.Shape.getOutline(Outline)void
android.graphics.drawable.shapes.Shape.clone)android.graphics.drawable.shapes.Shape
android.graphics.drawable.shapes.Shape.equals(Object)boolean
android.graphics.drawable.shapes.Shape.hashCode)int
android.graphics.fonts.Font.setWeight(int)Builder
android.graphics.fonts.Font.setSlant(int)Builder
android.graphics.fonts.Font.setTtcIndex(int)Builder
android.graphics.fonts.Font.setFontVariationSettings(String)Builder
android.graphics.fonts.Font.setFontVariationSettings(android.graphics.fonts.FontVariationAxis)Builder
android.graphics.fonts.Font.build)android.graphics.fonts.Font
android.graphics.fonts.Font.getBuffer)java.nio.ByteBuffer
android.graphics.fonts.Font.getFile)java.io.File
android.graphics.fonts.Font.getStyle)android.graphics.fonts.FontStyle
android.graphics.fonts.Font.getTtcIndex)int
android.graphics.fonts.Font.getLocaleList)android.os.LocaleList
android.graphics.fonts.Font.equals(Object)boolean
android.graphics.fonts.Font.hashCode)int
android.graphics.fonts.Font.toString)String
android.graphics.fonts.FontFamily.addFont(android.graphics.fonts.Font)Builder
android.graphics.fonts.FontFamily.build)android.graphics.fonts.FontFamily
android.graphics.fonts.FontFamily.getFont(int)android.graphics.fonts.Font
android.graphics.fonts.FontFamily.getSize)int
android.graphics.fonts.FontStyle.getWeight)int
android.graphics.fonts.FontStyle.getSlant)int
android.graphics.fonts.FontStyle.equals(Object)boolean
android.graphics.fonts.FontStyle.hashCode)int
android.graphics.fonts.FontStyle.toString)String
android.graphics.fonts.FontVariationAxis.getTag)String
android.graphics.fonts.FontVariationAxis.getStyleValue)float
android.graphics.fonts.FontVariationAxis.toString)String
android.graphics.fonts.FontVariationAxis.toFontVariationSettings(android.graphics.fonts.FontVariationAxis)String
android.graphics.fonts.FontVariationAxis.equals(Object)boolean
android.graphics.fonts.FontVariationAxis.hashCode)int
android.graphics.fonts.SystemFonts.getAvailableFonts)java.util.Set
android.graphics.pdf.PdfDocument.setContentRect(android.graphics.Rect)Builder
android.graphics.pdf.PdfDocument.create)PageInfo
android.graphics.pdf.PdfDocument.getPageWidth)int
android.graphics.pdf.PdfDocument.getPageHeight)int
android.graphics.pdf.PdfDocument.getContentRect)android.graphics.Rect
android.graphics.pdf.PdfDocument.getPageNumber)int
android.graphics.pdf.PdfDocument.getCanvas)android.graphics.Canvas
android.graphics.pdf.PdfDocument.getInfo)PageInfo
android.graphics.pdf.PdfDocument.startPage(PageInfo)Page
android.graphics.pdf.PdfDocument.finishPage(Page)void
android.graphics.pdf.PdfDocument.writeTo(java.io.OutputStream)void
android.graphics.pdf.PdfDocument.getPages)java.util.List
android.graphics.pdf.PdfDocument.close)void
android.graphics.pdf.PdfDocument.finalize)void
android.graphics.pdf.PdfRenderer.getIndex)int
android.graphics.pdf.PdfRenderer.getWidth)int
android.graphics.pdf.PdfRenderer.getHeight)int
android.graphics.pdf.PdfRenderer.render(Bitmap,Rect,Matrix,int)void
android.graphics.pdf.PdfRenderer.close)void
android.graphics.pdf.PdfRenderer.finalize)void
android.graphics.pdf.PdfRenderer.close)void
android.graphics.pdf.PdfRenderer.getPageCount)int
android.graphics.pdf.PdfRenderer.shouldScaleForPrinting)boolean
android.graphics.pdf.PdfRenderer.openPage(int)android.graphics.pdf.PdfRenderer.Page
android.graphics.pdf.PdfRenderer.finalize)void
android.graphics.text.LineBreaker.getLineCount)int
android.graphics.text.LineBreaker.getLineBreakOffset(int)int
android.graphics.text.LineBreaker.getLineWidth(int)float
android.graphics.text.LineBreaker.getLineAscent(int)float
android.graphics.text.LineBreaker.getLineDescent(int)float
android.graphics.text.LineBreaker.hasLineTab(int)boolean
android.graphics.text.LineBreaker.getStartLineHyphenEdit(int)int
android.graphics.text.LineBreaker.getEndLineHyphenEdit(int)int
android.graphics.text.LineBreaker.setWidth(float)void
android.graphics.text.LineBreaker.setIndent(float,int)void
android.graphics.text.LineBreaker.setTabStops(float,float)void
android.graphics.text.LineBreaker.getWidth)float
android.graphics.text.LineBreaker.getFirstWidth)float
android.graphics.text.LineBreaker.getFirstWidthLineCount)int
android.graphics.text.LineBreaker.getDefaultTabStop)float
android.graphics.text.LineBreaker.setBreakStrategy(int)Builder
android.graphics.text.LineBreaker.setHyphenationFrequency(int)Builder
android.graphics.text.LineBreaker.setJustificationMode(int)Builder
android.graphics.text.LineBreaker.setIndents(int)Builder
android.graphics.text.LineBreaker.build)android.graphics.text.LineBreaker
android.graphics.text.LineBreaker.computeLineBreaks(android.graphics.text.MeasuredText,android.graphics.text.LineBreaker.ParagraphConstraints,int)android.graphics.text.LineBreaker.Result
android.graphics.text.MeasuredText.appendStyleRun(android.graphics.Paint,int,boolean)Builder
android.graphics.text.MeasuredText.appendReplacementRun(android.graphics.Paint,int,float)Builder
android.graphics.text.MeasuredText.setComputeHyphenation(boolean)Builder
android.graphics.text.MeasuredText.setComputeLayout(boolean)Builder
android.graphics.text.MeasuredText.build)android.graphics.text.MeasuredText
android.graphics.text.MeasuredText.getWidth(int,int)float
android.graphics.text.MeasuredText.getBounds(int,int,android.graphics.Rect)void
android.graphics.text.MeasuredText.getCharWidthAt(int)float
android.hardware.Camera.equals(Object)boolean
android.hardware.Camera.hashCode)int
android.hardware.Camera.flatten)String
android.hardware.Camera.unflatten(String)void
android.hardware.Camera.remove(String)void
android.hardware.Camera.set(String,String)void
android.hardware.Camera.set(String,int)void
android.hardware.Camera.get(String)String
android.hardware.Camera.getInt(String)int
android.hardware.Camera.setPreviewSize(int,int)void
android.hardware.Camera.getPreviewSize)android.hardware.Camera.Size
android.hardware.Camera.getSupportedPreviewSizes)java.util.List
android.hardware.Camera.getSupportedVideoSizes)java.util.List
android.hardware.Camera.getPreferredPreviewSizeForVideo)android.hardware.Camera.Size
android.hardware.Camera.setJpegThumbnailSize(int,int)void
android.hardware.Camera.getJpegThumbnailSize)android.hardware.Camera.Size
android.hardware.Camera.getSupportedJpegThumbnailSizes)java.util.List
android.hardware.Camera.setJpegThumbnailQuality(int)void
android.hardware.Camera.getJpegThumbnailQuality)int
android.hardware.Camera.setJpegQuality(int)void
android.hardware.Camera.getJpegQuality)int
android.hardware.Camera.setPreviewFrameRate(int)void
android.hardware.Camera.getPreviewFrameRate)int
android.hardware.Camera.getSupportedPreviewFrameRates)java.util.List
android.hardware.Camera.setPreviewFpsRange(int,int)void
android.hardware.Camera.getPreviewFpsRange(int)void
android.hardware.Camera.getSupportedPreviewFpsRange)java.util.List
android.hardware.Camera.setPreviewFormat(int)void
android.hardware.Camera.getPreviewFormat)int
android.hardware.Camera.getSupportedPreviewFormats)java.util.List
android.hardware.Camera.setPictureSize(int,int)void
android.hardware.Camera.getPictureSize)android.hardware.Camera.Size
android.hardware.Camera.getSupportedPictureSizes)java.util.List
android.hardware.Camera.setPictureFormat(int)void
android.hardware.Camera.getPictureFormat)int
android.hardware.Camera.getSupportedPictureFormats)java.util.List
android.hardware.Camera.setRotation(int)void
android.hardware.Camera.setGpsLatitude(double)void
android.hardware.Camera.setGpsLongitude(double)void
android.hardware.Camera.setGpsAltitude(double)void
android.hardware.Camera.setGpsTimestamp(long)void
android.hardware.Camera.setGpsProcessingMethod(String)void
android.hardware.Camera.removeGpsData)void
android.hardware.Camera.getWhiteBalance)String
android.hardware.Camera.setWhiteBalance(String)void
android.hardware.Camera.getSupportedWhiteBalance)java.util.List
android.hardware.Camera.getColorEffect)String
android.hardware.Camera.setColorEffect(String)void
android.hardware.Camera.getSupportedColorEffects)java.util.List
android.hardware.Camera.getAntibanding)String
android.hardware.Camera.setAntibanding(String)void
android.hardware.Camera.getSupportedAntibanding)java.util.List
android.hardware.Camera.getSceneMode)String
android.hardware.Camera.setSceneMode(String)void
android.hardware.Camera.getSupportedSceneModes)java.util.List
android.hardware.Camera.getFlashMode)String
android.hardware.Camera.setFlashMode(String)void
android.hardware.Camera.getSupportedFlashModes)java.util.List
android.hardware.Camera.getFocusMode)String
android.hardware.Camera.setFocusMode(String)void
android.hardware.Camera.getSupportedFocusModes)java.util.List
android.hardware.Camera.getFocalLength)float
android.hardware.Camera.getHorizontalViewAngle)float
android.hardware.Camera.getVerticalViewAngle)float
android.hardware.Camera.getExposureCompensation)int
android.hardware.Camera.setExposureCompensation(int)void
android.hardware.Camera.getMaxExposureCompensation)int
android.hardware.Camera.getMinExposureCompensation)int
android.hardware.Camera.getExposureCompensationStep)float
android.hardware.Camera.setAutoExposureLock(boolean)void
android.hardware.Camera.getAutoExposureLock)boolean
android.hardware.Camera.isAutoExposureLockSupported)boolean
android.hardware.Camera.setAutoWhiteBalanceLock(boolean)void
android.hardware.Camera.getAutoWhiteBalanceLock)boolean
android.hardware.Camera.isAutoWhiteBalanceLockSupported)boolean
android.hardware.Camera.getZoom)int
android.hardware.Camera.setZoom(int)void
android.hardware.Camera.isZoomSupported)boolean
android.hardware.Camera.getMaxZoom)int
android.hardware.Camera.getZoomRatios)java.util.List
android.hardware.Camera.isSmoothZoomSupported)boolean
android.hardware.Camera.getFocusDistances(float)void
android.hardware.Camera.getMaxNumFocusAreas)int
android.hardware.Camera.getFocusAreas)java.util.List
android.hardware.Camera.setFocusAreas(java.util.List)void
android.hardware.Camera.getMaxNumMeteringAreas)int
android.hardware.Camera.getMeteringAreas)java.util.List
android.hardware.Camera.setMeteringAreas(java.util.List)void
android.hardware.Camera.getMaxNumDetectedFaces)int
android.hardware.Camera.setRecordingHint(boolean)void
android.hardware.Camera.isVideoSnapshotSupported)boolean
android.hardware.Camera.setVideoStabilization(boolean)void
android.hardware.Camera.getVideoStabilization)boolean
android.hardware.Camera.isVideoStabilizationSupported)boolean
android.hardware.Camera.equals(Object)boolean
android.hardware.Camera.getCameraInfo(int,android.hardware.Camera.CameraInfo)void
android.hardware.Camera.open(int)android.hardware.Camera
android.hardware.Camera.open)android.hardware.Camera
android.hardware.Camera.finalize)void
android.hardware.Camera.release)void
android.hardware.Camera.setPreviewDisplay(android.view.SurfaceHolder)void
android.hardware.Camera.stopPreview)void
android.hardware.Camera.setPreviewCallback(android.hardware.Camera.PreviewCallback)void
android.hardware.Camera.setOneShotPreviewCallback(android.hardware.Camera.PreviewCallback)void
android.hardware.Camera.setPreviewCallbackWithBuffer(android.hardware.Camera.PreviewCallback)void
android.hardware.Camera.addCallbackBuffer(byte)void
android.hardware.Camera.autoFocus(android.hardware.Camera.AutoFocusCallback)void
android.hardware.Camera.cancelAutoFocus)void
android.hardware.Camera.setAutoFocusMoveCallback(android.hardware.Camera.AutoFocusMoveCallback)void
android.hardware.Camera.takePicture(android.hardware.Camera.ShutterCallback,android.hardware.Camera.PictureCallback,android.hardware.Camera.PictureCallback)void
android.hardware.Camera.takePicture(android.hardware.Camera.ShutterCallback,android.hardware.Camera.PictureCallback,android.hardware.Camera.PictureCallback,android.hardware.Camera.PictureCallback)void
android.hardware.Camera.enableShutterSound(boolean)boolean
android.hardware.Camera.setZoomChangeListener(android.hardware.Camera.OnZoomChangeListener)void
android.hardware.Camera.setFaceDetectionListener(android.hardware.Camera.FaceDetectionListener)void
android.hardware.Camera.startFaceDetection)void
android.hardware.Camera.stopFaceDetection)void
android.hardware.Camera.setErrorCallback(android.hardware.Camera.ErrorCallback)void
android.hardware.Camera.setParameters(android.hardware.Camera.Parameters)void
android.hardware.Camera.getParameters)android.hardware.Camera.Parameters
android.hardware.ConsumerIrManager.getMinFrequency)int
android.hardware.ConsumerIrManager.getMaxFrequency)int
android.hardware.ConsumerIrManager.hasIrEmitter)boolean
android.hardware.ConsumerIrManager.transmit(int,int)void
android.hardware.GeomagneticField.getX)float
android.hardware.GeomagneticField.getY)float
android.hardware.GeomagneticField.getZ)float
android.hardware.GeomagneticField.getDeclination)float
android.hardware.GeomagneticField.getInclination)float
android.hardware.GeomagneticField.getHorizontalStrength)float
android.hardware.GeomagneticField.getFieldStrength)float
android.hardware.HardwareBuffer.create(int,int,int,int,long)android.hardware.HardwareBuffer
android.hardware.HardwareBuffer.isSupported(int,int,int,int,long)boolean
android.hardware.HardwareBuffer.finalize)void
android.hardware.HardwareBuffer.getWidth)int
android.hardware.HardwareBuffer.getHeight)int
android.hardware.HardwareBuffer.getFormat)int
android.hardware.HardwareBuffer.getLayers)int
android.hardware.HardwareBuffer.getUsage)long
android.hardware.HardwareBuffer.close)void
android.hardware.HardwareBuffer.isClosed)boolean
android.hardware.HardwareBuffer.describeContents)int
android.hardware.HardwareBuffer.writeToParcel(android.os.Parcel,int)void
android.hardware.Sensor.getReportingMode)int
android.hardware.Sensor.getHighestDirectReportRateLevel)int
android.hardware.Sensor.isDirectChannelTypeSupported(int)boolean
android.hardware.Sensor.getName)String
android.hardware.Sensor.getVendor)String
android.hardware.Sensor.getType)int
android.hardware.Sensor.getVersion)int
android.hardware.Sensor.getMaximumRange)float
android.hardware.Sensor.getResolution)float
android.hardware.Sensor.getPower)float
android.hardware.Sensor.getMinDelay)int
android.hardware.Sensor.getFifoReservedEventCount)int
android.hardware.Sensor.getFifoMaxEventCount)int
android.hardware.Sensor.getStringType)String
android.hardware.Sensor.getId)int
android.hardware.Sensor.getMaxDelay)int
android.hardware.Sensor.isWakeUpSensor)boolean
android.hardware.Sensor.isDynamicSensor)boolean
android.hardware.Sensor.isAdditionalInfoSupported)boolean
android.hardware.Sensor.toString)String
android.hardware.SensorDirectChannel.isOpen)boolean
android.hardware.SensorDirectChannel.close)void
android.hardware.SensorDirectChannel.configure(android.hardware.Sensor,int)int
android.hardware.SensorDirectChannel.finalize)void
android.hardware.SensorEventCallback.onSensorChanged(android.hardware.SensorEvent)void
android.hardware.SensorEventCallback.onAccuracyChanged(android.hardware.Sensor,int)void
android.hardware.SensorEventCallback.onFlushCompleted(android.hardware.Sensor)void
android.hardware.SensorEventCallback.onSensorAdditionalInfo(android.hardware.SensorAdditionalInfo)void
android.hardware.SensorManager.onDynamicSensorConnected(android.hardware.Sensor)void
android.hardware.SensorManager.onDynamicSensorDisconnected(android.hardware.Sensor)void
android.hardware.SensorManager.getSensors)int
android.hardware.SensorManager.getSensorList(int)java.util.List
android.hardware.SensorManager.getDynamicSensorList(int)java.util.List
android.hardware.SensorManager.getDefaultSensor(int)android.hardware.Sensor
android.hardware.SensorManager.getDefaultSensor(int,boolean)android.hardware.Sensor
android.hardware.SensorManager.registerListener(android.hardware.SensorListener,int)boolean
android.hardware.SensorManager.registerListener(android.hardware.SensorListener,int,int)boolean
android.hardware.SensorManager.unregisterListener(android.hardware.SensorListener)void
android.hardware.SensorManager.unregisterListener(android.hardware.SensorListener,int)void
android.hardware.SensorManager.unregisterListener(android.hardware.SensorEventListener,android.hardware.Sensor)void
android.hardware.SensorManager.unregisterListener(android.hardware.SensorEventListener)void
android.hardware.SensorManager.registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int)boolean
android.hardware.SensorManager.registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int,int)boolean
android.hardware.SensorManager.registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int,android.os.Handler)boolean
android.hardware.SensorManager.registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int,int,android.os.Handler)boolean
android.hardware.SensorManager.flush(android.hardware.SensorEventListener)boolean
android.hardware.SensorManager.createDirectChannel(android.os.MemoryFile)android.hardware.SensorDirectChannel
android.hardware.SensorManager.createDirectChannel(android.hardware.HardwareBuffer)android.hardware.SensorDirectChannel
android.hardware.SensorManager.registerDynamicSensorCallback(DynamicSensorCallback)void
android.hardware.SensorManager.registerDynamicSensorCallback(DynamicSensorCallback,android.os.Handler)void
android.hardware.SensorManager.unregisterDynamicSensorCallback(DynamicSensorCallback)void
android.hardware.SensorManager.isDynamicSensorDiscoverySupported)boolean
android.hardware.SensorManager.getRotationMatrix(float,float,float,float)boolean
android.hardware.SensorManager.getInclination(float)float
android.hardware.SensorManager.remapCoordinateSystem(float,int,int,float)boolean
android.hardware.SensorManager.getAltitude(float,float)float
android.hardware.SensorManager.getAngleChange(float,float,float)void
android.hardware.SensorManager.getRotationMatrixFromVector(float,float)void
android.hardware.SensorManager.getQuaternionFromVector(float,float)void
android.hardware.SensorManager.requestTriggerSensor(android.hardware.TriggerEventListener,android.hardware.Sensor)boolean
android.hardware.SensorManager.cancelTriggerSensor(android.hardware.TriggerEventListener,android.hardware.Sensor)boolean
android.hardware.biometrics.BiometricManager.canAuthenticate)int
android.hardware.biometrics.BiometricPrompt.getSignature)java.security.Signature
android.hardware.biometrics.BiometricPrompt.getCipher)javax.crypto.Cipher
android.hardware.biometrics.BiometricPrompt.getMac)javax.crypto.Mac
android.hardware.biometrics.BiometricPrompt.setTitle(CharSequence)android.hardware.biometrics.BiometricPrompt.Builder
android.hardware.biometrics.BiometricPrompt.setSubtitle(CharSequence)android.hardware.biometrics.BiometricPrompt.Builder
android.hardware.biometrics.BiometricPrompt.setDescription(CharSequence)android.hardware.biometrics.BiometricPrompt.Builder
android.hardware.biometrics.BiometricPrompt.setNegativeButton(CharSequence,java.util.concurrent.Executor,android.content.DialogInterface.OnClickListener)android.hardware.biometrics.BiometricPrompt.Builder
android.hardware.biometrics.BiometricPrompt.setConfirmationRequired(boolean)android.hardware.biometrics.BiometricPrompt.Builder
android.hardware.biometrics.BiometricPrompt.setDeviceCredentialAllowed(boolean)android.hardware.biometrics.BiometricPrompt.Builder
android.hardware.biometrics.BiometricPrompt.build)android.hardware.biometrics.BiometricPrompt
android.hardware.biometrics.BiometricPrompt.getCryptoObject)CryptoObject
android.hardware.biometrics.BiometricPrompt.onAuthenticationError(int,CharSequence)void
android.hardware.biometrics.BiometricPrompt.onAuthenticationHelp(int,CharSequence)void
android.hardware.biometrics.BiometricPrompt.onAuthenticationSucceeded(android.hardware.biometrics.BiometricPrompt.AuthenticationResult)void
android.hardware.biometrics.BiometricPrompt.onAuthenticationFailed)void
android.hardware.biometrics.BiometricPrompt.authenticate(CryptoObject,android.os.CancellationSignal,java.util.concurrent.Executor,AuthenticationCallback)void
android.hardware.biometrics.BiometricPrompt.authenticate(android.os.CancellationSignal,java.util.concurrent.Executor,AuthenticationCallback)void
android.hardware.camera2.CameraAccessException.getReason)int
android.hardware.camera2.CameraCaptureSession.onReady(android.hardware.camera2.CameraCaptureSession)void
android.hardware.camera2.CameraCaptureSession.onActive(android.hardware.camera2.CameraCaptureSession)void
android.hardware.camera2.CameraCaptureSession.onCaptureQueueEmpty(android.hardware.camera2.CameraCaptureSession)void
android.hardware.camera2.CameraCaptureSession.onClosed(android.hardware.camera2.CameraCaptureSession)void
android.hardware.camera2.CameraCaptureSession.onSurfacePrepared(android.hardware.camera2.CameraCaptureSession,android.view.Surface)void
android.hardware.camera2.CameraCaptureSession.onCaptureStarted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,long,long)void
android.hardware.camera2.CameraCaptureSession.onCaptureProgressed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureResult)void
android.hardware.camera2.CameraCaptureSession.onCaptureCompleted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult)void
android.hardware.camera2.CameraCaptureSession.onCaptureFailed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureFailure)void
android.hardware.camera2.CameraCaptureSession.onCaptureSequenceCompleted(android.hardware.camera2.CameraCaptureSession,int,long)void
android.hardware.camera2.CameraCaptureSession.onCaptureSequenceAborted(android.hardware.camera2.CameraCaptureSession,int)void
android.hardware.camera2.CameraCaptureSession.onCaptureBufferLost(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.view.Surface,long)void
android.hardware.camera2.CameraCaptureSession.prepare(android.view.Surface)void
android.hardware.camera2.CameraCaptureSession.finalizeOutputConfigurations(java.util.List)void
android.hardware.camera2.CameraCaptureSession.capture(android.hardware.camera2.CaptureRequest,CaptureCallback,android.os.Handler)int
android.hardware.camera2.CameraCaptureSession.captureSingleRequest(android.hardware.camera2.CaptureRequest,java.util.concurrent.Executor,CaptureCallback)int
android.hardware.camera2.CameraCaptureSession.captureBurst(java.util.List,CaptureCallback,android.os.Handler)int
android.hardware.camera2.CameraCaptureSession.captureBurstRequests(java.util.List,java.util.concurrent.Executor,CaptureCallback)int
android.hardware.camera2.CameraCaptureSession.setRepeatingRequest(android.hardware.camera2.CaptureRequest,CaptureCallback,android.os.Handler)int
android.hardware.camera2.CameraCaptureSession.setSingleRepeatingRequest(android.hardware.camera2.CaptureRequest,java.util.concurrent.Executor,CaptureCallback)int
android.hardware.camera2.CameraCaptureSession.setRepeatingBurst(java.util.List,CaptureCallback,android.os.Handler)int
android.hardware.camera2.CameraCaptureSession.setRepeatingBurstRequests(java.util.List,java.util.concurrent.Executor,CaptureCallback)int
android.hardware.camera2.CameraCaptureSession.stopRepeating)void
android.hardware.camera2.CameraCaptureSession.abortCaptures)void
android.hardware.camera2.CameraCaptureSession.updateOutputConfiguration(android.hardware.camera2.params.OutputConfiguration)void
android.hardware.camera2.CameraCharacteristics.getName)String
android.hardware.camera2.CameraCharacteristics.hashCode)int
android.hardware.camera2.CameraCharacteristics.equals(Object)boolean
android.hardware.camera2.CameraCharacteristics.toString)String
android.hardware.camera2.CameraCharacteristics.get(Key)Object
android.hardware.camera2.CameraCharacteristics.getKeys)java.util.List
android.hardware.camera2.CameraCharacteristics.getKeysNeedingPermission)java.util.List
android.hardware.camera2.CameraCharacteristics.getRecommendedStreamConfigurationMap(int)android.hardware.camera2.params.RecommendedStreamConfigurationMap
android.hardware.camera2.CameraCharacteristics.getAvailableSessionKeys)java.util.List
android.hardware.camera2.CameraCharacteristics.getAvailablePhysicalCameraRequestKeys)java.util.List
android.hardware.camera2.CameraCharacteristics.getAvailableCaptureRequestKeys)java.util.List
android.hardware.camera2.CameraCharacteristics.getAvailableCaptureResultKeys)java.util.List
android.hardware.camera2.CameraCharacteristics.getPhysicalCameraIds)java.util.Set
android.hardware.camera2.CameraConstrainedHighSpeedCaptureSession.createHighSpeedRequestList(android.hardware.camera2.CaptureRequest)java.util.List
android.hardware.camera2.CameraDevice.onClosed(android.hardware.camera2.CameraDevice)void
android.hardware.camera2.CameraDevice.createCaptureSession(java.util.List,CameraCaptureSession.StateCallback,android.os.Handler)void
android.hardware.camera2.CameraDevice.createCaptureSessionByOutputConfigurations(java.util.List,CameraCaptureSession.StateCallback,android.os.Handler)void
android.hardware.camera2.CameraDevice.createReprocessableCaptureSession(android.hardware.camera2.params.InputConfiguration,java.util.List,CameraCaptureSession.StateCallback,android.os.Handler)void
android.hardware.camera2.CameraDevice.createReprocessableCaptureSessionByConfigurations(android.hardware.camera2.params.InputConfiguration,java.util.List,CameraCaptureSession.StateCallback,android.os.Handler)void
android.hardware.camera2.CameraDevice.createConstrainedHighSpeedCaptureSession(java.util.List,CameraCaptureSession.StateCallback,android.os.Handler)void
android.hardware.camera2.CameraDevice.createCaptureSession(android.hardware.camera2.params.SessionConfiguration)void
android.hardware.camera2.CameraDevice.isSessionConfigurationSupported(android.hardware.camera2.params.SessionConfiguration)boolean
android.hardware.camera2.CameraManager.onTorchModeUnavailable(String)void
android.hardware.camera2.CameraManager.onTorchModeChanged(String,boolean)void
android.hardware.camera2.CameraManager.onCameraAvailable(String)void
android.hardware.camera2.CameraManager.onCameraUnavailable(String)void
android.hardware.camera2.CameraManager.onCameraAccessPrioritiesChanged)void
android.hardware.camera2.CameraManager.registerAvailabilityCallback(AvailabilityCallback,android.os.Handler)void
android.hardware.camera2.CameraManager.registerAvailabilityCallback(java.util.concurrent.Executor,AvailabilityCallback)void
android.hardware.camera2.CameraManager.unregisterAvailabilityCallback(AvailabilityCallback)void
android.hardware.camera2.CameraManager.registerTorchCallback(TorchCallback,android.os.Handler)void
android.hardware.camera2.CameraManager.registerTorchCallback(java.util.concurrent.Executor,TorchCallback)void
android.hardware.camera2.CameraManager.unregisterTorchCallback(TorchCallback)void
android.hardware.camera2.CameraManager.getCameraCharacteristics(String)android.hardware.camera2.CameraCharacteristics
android.hardware.camera2.CameraManager.openCamera(String,CameraDevice.StateCallback,android.os.Handler)void
android.hardware.camera2.CameraManager.openCamera(String,java.util.concurrent.Executor,CameraDevice.StateCallback)void
android.hardware.camera2.CameraManager.setTorchMode(String,boolean)void
android.hardware.camera2.CameraMetadata.getKeys)java.util.List
android.hardware.camera2.CaptureFailure.getRequest)android.hardware.camera2.CaptureRequest
android.hardware.camera2.CaptureFailure.getFrameNumber)long
android.hardware.camera2.CaptureFailure.getReason)int
android.hardware.camera2.CaptureFailure.wasImageCaptured)boolean
android.hardware.camera2.CaptureFailure.getSequenceId)int
android.hardware.camera2.CaptureFailure.getPhysicalCameraId)String
android.hardware.camera2.CaptureRequest.getName)String
android.hardware.camera2.CaptureRequest.hashCode)int
android.hardware.camera2.CaptureRequest.equals(Object)boolean
android.hardware.camera2.CaptureRequest.toString)String
android.hardware.camera2.CaptureRequest.addTarget(android.view.Surface)void
android.hardware.camera2.CaptureRequest.removeTarget(android.view.Surface)void
android.hardware.camera2.CaptureRequest.set(Key,Object)void
android.hardware.camera2.CaptureRequest.get(Key)Object
android.hardware.camera2.CaptureRequest.setPhysicalCameraKey(Key,Object,String)Builder
android.hardware.camera2.CaptureRequest.getPhysicalCameraKey(Key,String)Object
android.hardware.camera2.CaptureRequest.setTag(Object)void
android.hardware.camera2.CaptureRequest.build)android.hardware.camera2.CaptureRequest
android.hardware.camera2.CaptureRequest.get(Key)Object
android.hardware.camera2.CaptureRequest.getKeys)java.util.List
android.hardware.camera2.CaptureRequest.getTag)Object
android.hardware.camera2.CaptureRequest.isReprocess)boolean
android.hardware.camera2.CaptureRequest.equals(Object)boolean
android.hardware.camera2.CaptureRequest.hashCode)int
android.hardware.camera2.CaptureRequest.describeContents)int
android.hardware.camera2.CaptureRequest.writeToParcel(android.os.Parcel,int)void
android.hardware.camera2.CaptureResult.getName)String
android.hardware.camera2.CaptureResult.hashCode)int
android.hardware.camera2.CaptureResult.equals(Object)boolean
android.hardware.camera2.CaptureResult.toString)String
android.hardware.camera2.CaptureResult.get(Key)Object
android.hardware.camera2.CaptureResult.getKeys)java.util.List
android.hardware.camera2.CaptureResult.getRequest)android.hardware.camera2.CaptureRequest
android.hardware.camera2.CaptureResult.getFrameNumber)long
android.hardware.camera2.CaptureResult.getSequenceId)int
android.hardware.camera2.DngCreator.setOrientation(int)android.hardware.camera2.DngCreator
android.hardware.camera2.DngCreator.setThumbnail(android.graphics.Bitmap)android.hardware.camera2.DngCreator
android.hardware.camera2.DngCreator.setThumbnail(android.media.Image)android.hardware.camera2.DngCreator
android.hardware.camera2.DngCreator.setLocation(android.location.Location)android.hardware.camera2.DngCreator
android.hardware.camera2.DngCreator.setDescription(String)android.hardware.camera2.DngCreator
android.hardware.camera2.DngCreator.writeInputStream(OutputStream,android.util.Size,InputStream,long)void
android.hardware.camera2.DngCreator.writeByteBuffer(OutputStream,android.util.Size,java.nio.ByteBuffer,long)void
android.hardware.camera2.DngCreator.writeImage(OutputStream,android.media.Image)void
android.hardware.camera2.DngCreator.close)void
android.hardware.camera2.DngCreator.finalize)void
android.hardware.camera2.TotalCaptureResult.getPartialResults)java.util.List
android.hardware.camera2.TotalCaptureResult.getPhysicalCameraResults)java.util.Map
android.hardware.camera2.params.BlackLevelPattern.getOffsetForIndex(int,int)int
android.hardware.camera2.params.BlackLevelPattern.copyTo(int,int)void
android.hardware.camera2.params.BlackLevelPattern.equals(Object)boolean
android.hardware.camera2.params.BlackLevelPattern.hashCode)int
android.hardware.camera2.params.BlackLevelPattern.toString)String
android.hardware.camera2.params.ColorSpaceTransform.getElement(int,int)android.util.Rational
android.hardware.camera2.params.ColorSpaceTransform.copyElements(android.util.Rational,int)void
android.hardware.camera2.params.ColorSpaceTransform.copyElements(int,int)void
android.hardware.camera2.params.ColorSpaceTransform.equals(Object)boolean
android.hardware.camera2.params.ColorSpaceTransform.hashCode)int
android.hardware.camera2.params.ColorSpaceTransform.toString)String
android.hardware.camera2.params.Face.getBounds)android.graphics.Rect
android.hardware.camera2.params.Face.getScore)int
android.hardware.camera2.params.Face.getId)int
android.hardware.camera2.params.Face.getLeftEyePosition)android.graphics.Point
android.hardware.camera2.params.Face.getRightEyePosition)android.graphics.Point
android.hardware.camera2.params.Face.getMouthPosition)android.graphics.Point
android.hardware.camera2.params.Face.toString)String
android.hardware.camera2.params.InputConfiguration.getWidth)int
android.hardware.camera2.params.InputConfiguration.getHeight)int
android.hardware.camera2.params.InputConfiguration.getFormat)int
android.hardware.camera2.params.InputConfiguration.equals(Object)boolean
android.hardware.camera2.params.InputConfiguration.hashCode)int
android.hardware.camera2.params.InputConfiguration.toString)String
android.hardware.camera2.params.LensShadingMap.getRowCount)int
android.hardware.camera2.params.LensShadingMap.getColumnCount)int
android.hardware.camera2.params.LensShadingMap.getGainFactorCount)int
android.hardware.camera2.params.LensShadingMap.getGainFactor(int,int,int)float
android.hardware.camera2.params.LensShadingMap.getGainFactorVector(int,int)android.hardware.camera2.params.RggbChannelVector
android.hardware.camera2.params.LensShadingMap.copyGainFactors(float,int)void
android.hardware.camera2.params.LensShadingMap.equals(Object)boolean
android.hardware.camera2.params.LensShadingMap.hashCode)int
android.hardware.camera2.params.LensShadingMap.toString)String
android.hardware.camera2.params.MandatoryStreamCombination.isInput)boolean
android.hardware.camera2.params.MandatoryStreamCombination.getAvailableSizes)java.util.List
android.hardware.camera2.params.MandatoryStreamCombination.getFormat)int
android.hardware.camera2.params.MandatoryStreamCombination.equals(Object)boolean
android.hardware.camera2.params.MandatoryStreamCombination.hashCode)int
android.hardware.camera2.params.MandatoryStreamCombination.getDescription)CharSequence
android.hardware.camera2.params.MandatoryStreamCombination.isReprocessable)boolean
android.hardware.camera2.params.MandatoryStreamCombination.getStreamsInformation)java.util.List
android.hardware.camera2.params.MandatoryStreamCombination.equals(Object)boolean
android.hardware.camera2.params.MandatoryStreamCombination.hashCode)int
android.hardware.camera2.params.MeteringRectangle.getX)int
android.hardware.camera2.params.MeteringRectangle.getY)int
android.hardware.camera2.params.MeteringRectangle.getWidth)int
android.hardware.camera2.params.MeteringRectangle.getHeight)int
android.hardware.camera2.params.MeteringRectangle.getMeteringWeight)int
android.hardware.camera2.params.MeteringRectangle.getUpperLeftPoint)android.graphics.Point
android.hardware.camera2.params.MeteringRectangle.getSize)android.util.Size
android.hardware.camera2.params.MeteringRectangle.getRect)android.graphics.Rect
android.hardware.camera2.params.MeteringRectangle.equals(Object)boolean
android.hardware.camera2.params.MeteringRectangle.equals(android.hardware.camera2.params.MeteringRectangle)boolean
android.hardware.camera2.params.MeteringRectangle.hashCode)int
android.hardware.camera2.params.MeteringRectangle.toString)String
android.hardware.camera2.params.OisSample.getTimestamp)long
android.hardware.camera2.params.OisSample.getXshift)float
android.hardware.camera2.params.OisSample.getYshift)float
android.hardware.camera2.params.OisSample.equals(Object)boolean
android.hardware.camera2.params.OisSample.hashCode)int
android.hardware.camera2.params.OisSample.toString)String
android.hardware.camera2.params.OutputConfiguration.enableSurfaceSharing)void
android.hardware.camera2.params.OutputConfiguration.setPhysicalCameraId(String)void
android.hardware.camera2.params.OutputConfiguration.addSurface(android.view.Surface)void
android.hardware.camera2.params.OutputConfiguration.removeSurface(android.view.Surface)void
android.hardware.camera2.params.OutputConfiguration.getMaxSharedSurfaceCount)int
android.hardware.camera2.params.OutputConfiguration.getSurface)android.view.Surface
android.hardware.camera2.params.OutputConfiguration.getSurfaces)java.util.List
android.hardware.camera2.params.OutputConfiguration.getSurfaceGroupId)int
android.hardware.camera2.params.OutputConfiguration.describeContents)int
android.hardware.camera2.params.OutputConfiguration.writeToParcel(android.os.Parcel,int)void
android.hardware.camera2.params.OutputConfiguration.equals(Object)boolean
android.hardware.camera2.params.OutputConfiguration.hashCode)int
android.hardware.camera2.params.RecommendedStreamConfigurationMap.getRecommendedUseCase)int
android.hardware.camera2.params.RecommendedStreamConfigurationMap.getOutputFormats)java.util.Set
android.hardware.camera2.params.RecommendedStreamConfigurationMap.getValidOutputFormatsForInput(int)java.util.Set
android.hardware.camera2.params.RecommendedStreamConfigurationMap.getInputFormats)java.util.Set
android.hardware.camera2.params.RecommendedStreamConfigurationMap.getInputSizes(int)java.util.Set
android.hardware.camera2.params.RecommendedStreamConfigurationMap.isOutputSupportedFor(int)boolean
android.hardware.camera2.params.RecommendedStreamConfigurationMap.getOutputSizes(int)java.util.Set
android.hardware.camera2.params.RecommendedStreamConfigurationMap.getHighSpeedVideoSizes)java.util.Set
android.hardware.camera2.params.RecommendedStreamConfigurationMap.getHighSpeedVideoFpsRangesFor(android.util.Size)java.util.Set
android.hardware.camera2.params.RecommendedStreamConfigurationMap.getHighSpeedVideoFpsRanges)java.util.Set
android.hardware.camera2.params.RecommendedStreamConfigurationMap.getHighSpeedVideoSizesFor(android.util.Range)java.util.Set
android.hardware.camera2.params.RecommendedStreamConfigurationMap.getHighResolutionOutputSizes(int)java.util.Set
android.hardware.camera2.params.RecommendedStreamConfigurationMap.getOutputMinFrameDuration(int,android.util.Size)long
android.hardware.camera2.params.RecommendedStreamConfigurationMap.getOutputStallDuration(int,android.util.Size)long
android.hardware.camera2.params.RecommendedStreamConfigurationMap.getOutputSizes(Class)java.util.Set
android.hardware.camera2.params.RecommendedStreamConfigurationMap.getOutputMinFrameDuration(Class,android.util.Size)long
android.hardware.camera2.params.RecommendedStreamConfigurationMap.getOutputStallDuration(Class,android.util.Size)long
android.hardware.camera2.params.RecommendedStreamConfigurationMap.isOutputSupportedFor(android.view.Surface)boolean
android.hardware.camera2.params.RggbChannelVector.getRed)float
android.hardware.camera2.params.RggbChannelVector.getGreenEven)float
android.hardware.camera2.params.RggbChannelVector.getGreenOdd)float
android.hardware.camera2.params.RggbChannelVector.getBlue)float
android.hardware.camera2.params.RggbChannelVector.getComponent(int)float
android.hardware.camera2.params.RggbChannelVector.copyTo(float,int)void
android.hardware.camera2.params.RggbChannelVector.equals(Object)boolean
android.hardware.camera2.params.RggbChannelVector.hashCode)int
android.hardware.camera2.params.RggbChannelVector.toString)String
android.hardware.camera2.params.SessionConfiguration.writeToParcel(android.os.Parcel,int)void
android.hardware.camera2.params.SessionConfiguration.describeContents)int
android.hardware.camera2.params.SessionConfiguration.equals(Object)boolean
android.hardware.camera2.params.SessionConfiguration.hashCode)int
android.hardware.camera2.params.SessionConfiguration.getSessionType)int
android.hardware.camera2.params.SessionConfiguration.getOutputConfigurations)java.util.List
android.hardware.camera2.params.SessionConfiguration.getExecutor)java.util.concurrent.Executor
android.hardware.camera2.params.SessionConfiguration.setInputConfiguration(android.hardware.camera2.params.InputConfiguration)void
android.hardware.camera2.params.SessionConfiguration.getInputConfiguration)android.hardware.camera2.params.InputConfiguration
android.hardware.camera2.params.SessionConfiguration.setSessionParameters(android.hardware.camera2.CaptureRequest)void
android.hardware.camera2.params.SessionConfiguration.getSessionParameters)android.hardware.camera2.CaptureRequest
android.hardware.camera2.params.StreamConfigurationMap.isOutputSupportedFor(int)boolean
android.hardware.camera2.params.StreamConfigurationMap.isOutputSupportedFor(Class)boolean
android.hardware.camera2.params.StreamConfigurationMap.isOutputSupportedFor(android.view.Surface)boolean
android.hardware.camera2.params.StreamConfigurationMap.getOutputMinFrameDuration(int,android.util.Size)long
android.hardware.camera2.params.StreamConfigurationMap.getOutputMinFrameDuration(Class,android.util.Size)long
android.hardware.camera2.params.StreamConfigurationMap.getOutputStallDuration(int,android.util.Size)long
android.hardware.camera2.params.StreamConfigurationMap.getOutputStallDuration(Class,android.util.Size)long
android.hardware.camera2.params.StreamConfigurationMap.equals(Object)boolean
android.hardware.camera2.params.StreamConfigurationMap.hashCode)int
android.hardware.camera2.params.StreamConfigurationMap.toString)String
android.hardware.camera2.params.TonemapCurve.getPointCount(int)int
android.hardware.camera2.params.TonemapCurve.getPoint(int,int)android.graphics.PointF
android.hardware.camera2.params.TonemapCurve.copyColorCurve(int,float,int)void
android.hardware.camera2.params.TonemapCurve.equals(Object)boolean
android.hardware.camera2.params.TonemapCurve.hashCode)int
android.hardware.camera2.params.TonemapCurve.toString)String
android.hardware.display.DisplayManager.getDisplay(int)android.view.Display
android.hardware.display.DisplayManager.registerDisplayListener(android.hardware.display.DisplayManager.DisplayListener,android.os.Handler)void
android.hardware.display.DisplayManager.unregisterDisplayListener(android.hardware.display.DisplayManager.DisplayListener)void
android.hardware.display.DisplayManager.createVirtualDisplay(String,int,int,int,android.view.Surface,int)android.hardware.display.VirtualDisplay
android.hardware.display.VirtualDisplay.onPaused)void
android.hardware.display.VirtualDisplay.onResumed)void
android.hardware.display.VirtualDisplay.onStopped)void
android.hardware.display.VirtualDisplay.getDisplay)android.view.Display
android.hardware.display.VirtualDisplay.getSurface)android.view.Surface
android.hardware.display.VirtualDisplay.setSurface(android.view.Surface)void
android.hardware.display.VirtualDisplay.resize(int,int,int)void
android.hardware.display.VirtualDisplay.release)void
android.hardware.display.VirtualDisplay.toString)String
android.hardware.fingerprint.FingerprintManager.getSignature)java.security.Signature
android.hardware.fingerprint.FingerprintManager.getCipher)javax.crypto.Cipher
android.hardware.fingerprint.FingerprintManager.getMac)javax.crypto.Mac
android.hardware.fingerprint.FingerprintManager.getCryptoObject)CryptoObject
android.hardware.fingerprint.FingerprintManager.onAuthenticationError(int,CharSequence)void
android.hardware.fingerprint.FingerprintManager.onAuthenticationHelp(int,CharSequence)void
android.hardware.fingerprint.FingerprintManager.onAuthenticationSucceeded(android.hardware.fingerprint.FingerprintManager.AuthenticationResult)void
android.hardware.fingerprint.FingerprintManager.onAuthenticationFailed)void
android.hardware.fingerprint.FingerprintManager.authenticate(CryptoObject,android.os.CancellationSignal,int,AuthenticationCallback,android.os.Handler)void
android.hardware.fingerprint.FingerprintManager.hasEnrolledFingerprints)boolean
android.hardware.fingerprint.FingerprintManager.isHardwareDetected)boolean
android.hardware.input.InputManager.getInputDevice(int)android.view.InputDevice
android.hardware.input.InputManager.registerInputDeviceListener(android.hardware.input.InputManager.InputDeviceListener,android.os.Handler)void
android.hardware.input.InputManager.unregisterInputDeviceListener(android.hardware.input.InputManager.InputDeviceListener)void
android.hardware.usb.UsbAccessory.getManufacturer)String
android.hardware.usb.UsbAccessory.getModel)String
android.hardware.usb.UsbAccessory.getDescription)String
android.hardware.usb.UsbAccessory.getVersion)String
android.hardware.usb.UsbAccessory.getUri)String
android.hardware.usb.UsbAccessory.getSerial)String
android.hardware.usb.UsbAccessory.equals(Object)boolean
android.hardware.usb.UsbAccessory.hashCode)int
android.hardware.usb.UsbAccessory.toString)String
android.hardware.usb.UsbAccessory.describeContents)int
android.hardware.usb.UsbAccessory.writeToParcel(android.os.Parcel,int)void
android.hardware.usb.UsbConfiguration.getId)int
android.hardware.usb.UsbConfiguration.getName)String
android.hardware.usb.UsbConfiguration.isSelfPowered)boolean
android.hardware.usb.UsbConfiguration.isRemoteWakeup)boolean
android.hardware.usb.UsbConfiguration.getMaxPower)int
android.hardware.usb.UsbConfiguration.getInterfaceCount)int
android.hardware.usb.UsbConfiguration.getInterface(int)android.hardware.usb.UsbInterface
android.hardware.usb.UsbConfiguration.toString)String
android.hardware.usb.UsbConfiguration.describeContents)int
android.hardware.usb.UsbConfiguration.writeToParcel(android.os.Parcel,int)void
android.hardware.usb.UsbDevice.getDeviceName)String
android.hardware.usb.UsbDevice.getManufacturerName)String
android.hardware.usb.UsbDevice.getProductName)String
android.hardware.usb.UsbDevice.getVersion)String
android.hardware.usb.UsbDevice.getSerialNumber)String
android.hardware.usb.UsbDevice.getDeviceId)int
android.hardware.usb.UsbDevice.getVendorId)int
android.hardware.usb.UsbDevice.getProductId)int
android.hardware.usb.UsbDevice.getDeviceClass)int
android.hardware.usb.UsbDevice.getDeviceSubclass)int
android.hardware.usb.UsbDevice.getDeviceProtocol)int
android.hardware.usb.UsbDevice.getConfigurationCount)int
android.hardware.usb.UsbDevice.getConfiguration(int)android.hardware.usb.UsbConfiguration
android.hardware.usb.UsbDevice.getInterfaceCount)int
android.hardware.usb.UsbDevice.getInterface(int)android.hardware.usb.UsbInterface
android.hardware.usb.UsbDevice.equals(Object)boolean
android.hardware.usb.UsbDevice.hashCode)int
android.hardware.usb.UsbDevice.toString)String
android.hardware.usb.UsbDevice.describeContents)int
android.hardware.usb.UsbDevice.writeToParcel(android.os.Parcel,int)void
android.hardware.usb.UsbDevice.getDeviceId(String)int
android.hardware.usb.UsbDevice.getDeviceName(int)String
android.hardware.usb.UsbDeviceConnection.close)void
android.hardware.usb.UsbDeviceConnection.getFileDescriptor)int
android.hardware.usb.UsbDeviceConnection.claimInterface(android.hardware.usb.UsbInterface,boolean)boolean
android.hardware.usb.UsbDeviceConnection.releaseInterface(android.hardware.usb.UsbInterface)boolean
android.hardware.usb.UsbDeviceConnection.setInterface(android.hardware.usb.UsbInterface)boolean
android.hardware.usb.UsbDeviceConnection.setConfiguration(android.hardware.usb.UsbConfiguration)boolean
android.hardware.usb.UsbDeviceConnection.controlTransfer(int,int,int,int,byte,int,int)int
android.hardware.usb.UsbDeviceConnection.bulkTransfer(android.hardware.usb.UsbEndpoint,byte,int,int)int
android.hardware.usb.UsbDeviceConnection.bulkTransfer(android.hardware.usb.UsbEndpoint,byte,int,int,int)int
android.hardware.usb.UsbDeviceConnection.requestWait)android.hardware.usb.UsbRequest
android.hardware.usb.UsbDeviceConnection.requestWait(long)android.hardware.usb.UsbRequest
android.hardware.usb.UsbDeviceConnection.getSerial)String
android.hardware.usb.UsbDeviceConnection.finalize)void
android.hardware.usb.UsbEndpoint.getAddress)int
android.hardware.usb.UsbEndpoint.getEndpointNumber)int
android.hardware.usb.UsbEndpoint.getDirection)int
android.hardware.usb.UsbEndpoint.getAttributes)int
android.hardware.usb.UsbEndpoint.getType)int
android.hardware.usb.UsbEndpoint.getMaxPacketSize)int
android.hardware.usb.UsbEndpoint.getInterval)int
android.hardware.usb.UsbEndpoint.toString)String
android.hardware.usb.UsbEndpoint.describeContents)int
android.hardware.usb.UsbEndpoint.writeToParcel(android.os.Parcel,int)void
android.hardware.usb.UsbInterface.getId)int
android.hardware.usb.UsbInterface.getAlternateSetting)int
android.hardware.usb.UsbInterface.getName)String
android.hardware.usb.UsbInterface.getInterfaceClass)int
android.hardware.usb.UsbInterface.getInterfaceSubclass)int
android.hardware.usb.UsbInterface.getInterfaceProtocol)int
android.hardware.usb.UsbInterface.getEndpointCount)int
android.hardware.usb.UsbInterface.getEndpoint(int)android.hardware.usb.UsbEndpoint
android.hardware.usb.UsbInterface.toString)String
android.hardware.usb.UsbInterface.describeContents)int
android.hardware.usb.UsbInterface.writeToParcel(android.os.Parcel,int)void
android.hardware.usb.UsbManager.getDeviceList)java.util.HashMap
android.hardware.usb.UsbManager.openDevice(android.hardware.usb.UsbDevice)android.hardware.usb.UsbDeviceConnection
android.hardware.usb.UsbManager.openAccessory(android.hardware.usb.UsbAccessory)android.os.ParcelFileDescriptor
android.hardware.usb.UsbManager.hasPermission(android.hardware.usb.UsbDevice)boolean
android.hardware.usb.UsbManager.hasPermission(android.hardware.usb.UsbAccessory)boolean
android.hardware.usb.UsbManager.requestPermission(android.hardware.usb.UsbDevice,android.app.PendingIntent)void
android.hardware.usb.UsbManager.requestPermission(android.hardware.usb.UsbAccessory,android.app.PendingIntent)void
android.hardware.usb.UsbRequest.initialize(android.hardware.usb.UsbDeviceConnection,android.hardware.usb.UsbEndpoint)boolean
android.hardware.usb.UsbRequest.close)void
android.hardware.usb.UsbRequest.finalize)void
android.hardware.usb.UsbRequest.getEndpoint)android.hardware.usb.UsbEndpoint
android.hardware.usb.UsbRequest.getClientData)Object
android.hardware.usb.UsbRequest.setClientData(Object)void
android.hardware.usb.UsbRequest.queue(java.nio.ByteBuffer,int)boolean
android.hardware.usb.UsbRequest.queue(java.nio.ByteBuffer)boolean
android.hardware.usb.UsbRequest.cancel)boolean
android.icu.lang.UCharacter.getInstance(int)UnicodeBlock
android.icu.lang.UCharacter.of(int)UnicodeBlock
android.icu.lang.UCharacter.forName(String)UnicodeBlock
android.icu.lang.UCharacter.getID)int
android.icu.lang.UCharacter.digit(int,int)int
android.icu.lang.UCharacter.digit(int)int
android.icu.lang.UCharacter.getNumericValue(int)int
android.icu.lang.UCharacter.getUnicodeNumericValue(int)double
android.icu.lang.UCharacter.getType(int)int
android.icu.lang.UCharacter.isDefined(int)boolean
android.icu.lang.UCharacter.isDigit(int)boolean
android.icu.lang.UCharacter.isISOControl(int)boolean
android.icu.lang.UCharacter.isLetter(int)boolean
android.icu.lang.UCharacter.isLetterOrDigit(int)boolean
android.icu.lang.UCharacter.isJavaIdentifierStart(int)boolean
android.icu.lang.UCharacter.isJavaIdentifierPart(int)boolean
android.icu.lang.UCharacter.isLowerCase(int)boolean
android.icu.lang.UCharacter.isWhitespace(int)boolean
android.icu.lang.UCharacter.isSpaceChar(int)boolean
android.icu.lang.UCharacter.isTitleCase(int)boolean
android.icu.lang.UCharacter.isUnicodeIdentifierPart(int)boolean
android.icu.lang.UCharacter.isUnicodeIdentifierStart(int)boolean
android.icu.lang.UCharacter.isIdentifierIgnorable(int)boolean
android.icu.lang.UCharacter.isUpperCase(int)boolean
android.icu.lang.UCharacter.toLowerCase(int)int
android.icu.lang.UCharacter.toString(int)String
android.icu.lang.UCharacter.toTitleCase(int)int
android.icu.lang.UCharacter.toUpperCase(int)int
android.icu.lang.UCharacter.isSupplementary(int)boolean
android.icu.lang.UCharacter.isBMP(int)boolean
android.icu.lang.UCharacter.isPrintable(int)boolean
android.icu.lang.UCharacter.isBaseForm(int)boolean
android.icu.lang.UCharacter.getDirection(int)int
android.icu.lang.UCharacter.isMirrored(int)boolean
android.icu.lang.UCharacter.getMirror(int)int
android.icu.lang.UCharacter.getBidiPairedBracket(int)int
android.icu.lang.UCharacter.getCombiningClass(int)int
android.icu.lang.UCharacter.isLegal(int)boolean
android.icu.lang.UCharacter.isLegal(String)boolean
android.icu.lang.UCharacter.getUnicodeVersion)VersionInfo
android.icu.lang.UCharacter.getName(int)String
android.icu.lang.UCharacter.getName(String,String)String
android.icu.lang.UCharacter.getExtendedName(int)String
android.icu.lang.UCharacter.getNameAlias(int)String
android.icu.lang.UCharacter.getCharFromName(String)int
android.icu.lang.UCharacter.getCharFromExtendedName(String)int
android.icu.lang.UCharacter.getCharFromNameAlias(String)int
android.icu.lang.UCharacter.getPropertyName(int,int)String
android.icu.lang.UCharacter.getPropertyEnum(CharSequence)int
android.icu.lang.UCharacter.getPropertyValueName(int,int,int)String
android.icu.lang.UCharacter.getPropertyValueEnum(int,CharSequence)int
android.icu.lang.UCharacter.getCodePoint(char,char)int
android.icu.lang.UCharacter.getCodePoint(char)int
android.icu.lang.UCharacter.toUpperCase(String)String
android.icu.lang.UCharacter.toLowerCase(String)String
android.icu.lang.UCharacter.toTitleCase(String,android.icu.text.BreakIterator)String
android.icu.lang.UCharacter.toUpperCase(java.util.Locale,String)String
android.icu.lang.UCharacter.toUpperCase(ULocale,String)String
android.icu.lang.UCharacter.toLowerCase(java.util.Locale,String)String
android.icu.lang.UCharacter.toLowerCase(ULocale,String)String
android.icu.lang.UCharacter.toTitleCase(java.util.Locale,String,android.icu.text.BreakIterator)String
android.icu.lang.UCharacter.toTitleCase(ULocale,String,android.icu.text.BreakIterator)String
android.icu.lang.UCharacter.toTitleCase(ULocale,String,android.icu.text.BreakIterator,int)String
android.icu.lang.UCharacter.toTitleCase(java.util.Locale,String,android.icu.text.BreakIterator,int)String
android.icu.lang.UCharacter.foldCase(int,boolean)int
android.icu.lang.UCharacter.foldCase(String,boolean)String
android.icu.lang.UCharacter.foldCase(int,int)int
android.icu.lang.UCharacter.foldCase(String,int)String
android.icu.lang.UCharacter.getHanNumericValue(int)int
android.icu.lang.UCharacter.getTypeIterator)RangeValueIterator
android.icu.lang.UCharacter.getNameIterator)ValueIterator
android.icu.lang.UCharacter.getExtendedNameIterator)ValueIterator
android.icu.lang.UCharacter.getAge(int)VersionInfo
android.icu.lang.UCharacter.hasBinaryProperty(int,int)boolean
android.icu.lang.UCharacter.isUAlphabetic(int)boolean
android.icu.lang.UCharacter.isULowercase(int)boolean
android.icu.lang.UCharacter.isUUppercase(int)boolean
android.icu.lang.UCharacter.isUWhiteSpace(int)boolean
android.icu.lang.UCharacter.getIntPropertyValue(int,int)int
android.icu.lang.UCharacter.getIntPropertyMinValue(int)int
android.icu.lang.UCharacter.getIntPropertyMaxValue(int)int
android.icu.lang.UCharacter.forDigit(int,int)char
android.icu.lang.UCharacter.isValidCodePoint(int)boolean
android.icu.lang.UCharacter.isSupplementaryCodePoint(int)boolean
android.icu.lang.UCharacter.isHighSurrogate(char)boolean
android.icu.lang.UCharacter.isLowSurrogate(char)boolean
android.icu.lang.UCharacter.isSurrogatePair(char,char)boolean
android.icu.lang.UCharacter.charCount(int)int
android.icu.lang.UCharacter.toCodePoint(char,char)int
android.icu.lang.UCharacter.codePointAt(CharSequence,int)int
android.icu.lang.UCharacter.codePointAt(char,int)int
android.icu.lang.UCharacter.codePointAt(char,int,int)int
android.icu.lang.UCharacter.codePointBefore(CharSequence,int)int
android.icu.lang.UCharacter.codePointBefore(char,int)int
android.icu.lang.UCharacter.codePointBefore(char,int,int)int
android.icu.lang.UCharacter.toChars(int,char,int)int
android.icu.lang.UCharacter.getDirectionality(int)byte
android.icu.lang.UCharacter.codePointCount(CharSequence,int,int)int
android.icu.lang.UCharacter.codePointCount(char,int,int)int
android.icu.lang.UCharacter.offsetByCodePoints(CharSequence,int,int)int
android.icu.lang.UCharacter.offsetByCodePoints(char,int,int,int,int)int
android.icu.lang.UCharacterCategory.toString(int)String
android.icu.lang.UCharacterDirection.toString(int)String
android.icu.lang.UScript.valueOf(String)ScriptUsage
android.icu.lang.UScript.getCodeFromName(String)int
android.icu.lang.UScript.getScript(int)int
android.icu.lang.UScript.hasScript(int,int)boolean
android.icu.lang.UScript.getScriptExtensions(int,java.util.BitSet)int
android.icu.lang.UScript.getName(int)String
android.icu.lang.UScript.getShortName(int)String
android.icu.lang.UScript.getSampleString(int)String
android.icu.lang.UScript.getUsage(int)ScriptUsage
android.icu.lang.UScript.isRightToLeft(int)boolean
android.icu.lang.UScript.breaksBetweenLetters(int)boolean
android.icu.lang.UScript.isCased(int)boolean
android.icu.math.BigDecimal.abs)android.icu.math.BigDecimal
android.icu.math.BigDecimal.abs(android.icu.math.MathContext)android.icu.math.BigDecimal
android.icu.math.BigDecimal.add(android.icu.math.BigDecimal)android.icu.math.BigDecimal
android.icu.math.BigDecimal.add(android.icu.math.BigDecimal,android.icu.math.MathContext)android.icu.math.BigDecimal
android.icu.math.BigDecimal.compareTo(android.icu.math.BigDecimal)int
android.icu.math.BigDecimal.compareTo(android.icu.math.BigDecimal,android.icu.math.MathContext)int
android.icu.math.BigDecimal.divide(android.icu.math.BigDecimal)android.icu.math.BigDecimal
android.icu.math.BigDecimal.divide(android.icu.math.BigDecimal,int)android.icu.math.BigDecimal
android.icu.math.BigDecimal.divide(android.icu.math.BigDecimal,int,int)android.icu.math.BigDecimal
android.icu.math.BigDecimal.divide(android.icu.math.BigDecimal,android.icu.math.MathContext)android.icu.math.BigDecimal
android.icu.math.BigDecimal.divideInteger(android.icu.math.BigDecimal)android.icu.math.BigDecimal
android.icu.math.BigDecimal.divideInteger(android.icu.math.BigDecimal,android.icu.math.MathContext)android.icu.math.BigDecimal
android.icu.math.BigDecimal.max(android.icu.math.BigDecimal)android.icu.math.BigDecimal
android.icu.math.BigDecimal.max(android.icu.math.BigDecimal,android.icu.math.MathContext)android.icu.math.BigDecimal
android.icu.math.BigDecimal.min(android.icu.math.BigDecimal)android.icu.math.BigDecimal
android.icu.math.BigDecimal.min(android.icu.math.BigDecimal,android.icu.math.MathContext)android.icu.math.BigDecimal
android.icu.math.BigDecimal.multiply(android.icu.math.BigDecimal)android.icu.math.BigDecimal
android.icu.math.BigDecimal.multiply(android.icu.math.BigDecimal,android.icu.math.MathContext)android.icu.math.BigDecimal
android.icu.math.BigDecimal.negate)android.icu.math.BigDecimal
android.icu.math.BigDecimal.negate(android.icu.math.MathContext)android.icu.math.BigDecimal
android.icu.math.BigDecimal.plus)android.icu.math.BigDecimal
android.icu.math.BigDecimal.plus(android.icu.math.MathContext)android.icu.math.BigDecimal
android.icu.math.BigDecimal.pow(android.icu.math.BigDecimal)android.icu.math.BigDecimal
android.icu.math.BigDecimal.pow(android.icu.math.BigDecimal,android.icu.math.MathContext)android.icu.math.BigDecimal
android.icu.math.BigDecimal.remainder(android.icu.math.BigDecimal)android.icu.math.BigDecimal
android.icu.math.BigDecimal.remainder(android.icu.math.BigDecimal,android.icu.math.MathContext)android.icu.math.BigDecimal
android.icu.math.BigDecimal.subtract(android.icu.math.BigDecimal)android.icu.math.BigDecimal
android.icu.math.BigDecimal.subtract(android.icu.math.BigDecimal,android.icu.math.MathContext)android.icu.math.BigDecimal
android.icu.math.BigDecimal.byteValueExact)byte
android.icu.math.BigDecimal.doubleValue)double
android.icu.math.BigDecimal.equals(Object)boolean
android.icu.math.BigDecimal.floatValue)float
android.icu.math.BigDecimal.format(int,int)String
android.icu.math.BigDecimal.format(int,int,int,int,int,int)String
android.icu.math.BigDecimal.hashCode)int
android.icu.math.BigDecimal.intValue)int
android.icu.math.BigDecimal.intValueExact)int
android.icu.math.BigDecimal.longValue)long
android.icu.math.BigDecimal.longValueExact)long
android.icu.math.BigDecimal.movePointLeft(int)android.icu.math.BigDecimal
android.icu.math.BigDecimal.movePointRight(int)android.icu.math.BigDecimal
android.icu.math.BigDecimal.scale)int
android.icu.math.BigDecimal.setScale(int)android.icu.math.BigDecimal
android.icu.math.BigDecimal.setScale(int,int)android.icu.math.BigDecimal
android.icu.math.BigDecimal.shortValueExact)short
android.icu.math.BigDecimal.signum)int
android.icu.math.BigDecimal.toBigInteger)java.math.BigInteger
android.icu.math.BigDecimal.toBigIntegerExact)java.math.BigInteger
android.icu.math.BigDecimal.toString)String
android.icu.math.BigDecimal.unscaledValue)java.math.BigInteger
android.icu.math.BigDecimal.valueOf(double)android.icu.math.BigDecimal
android.icu.math.BigDecimal.valueOf(long)android.icu.math.BigDecimal
android.icu.math.BigDecimal.valueOf(long,int)android.icu.math.BigDecimal
android.icu.math.MathContext.getDigits)int
android.icu.math.MathContext.getForm)int
android.icu.math.MathContext.getLostDigits)boolean
android.icu.math.MathContext.getRoundingMode)int
android.icu.math.MathContext.toString)String
android.icu.text.AlphabeticIndex.getName)CharSequence
android.icu.text.AlphabeticIndex.getData)Object
android.icu.text.AlphabeticIndex.toString)String
android.icu.text.AlphabeticIndex.getBucketCount)int
android.icu.text.AlphabeticIndex.getBucketIndex(CharSequence)int
android.icu.text.AlphabeticIndex.getBucket(int)android.icu.text.AlphabeticIndex.Bucket
android.icu.text.AlphabeticIndex.iterator)Iterator
android.icu.text.AlphabeticIndex.valueOf(String)LabelType
android.icu.text.AlphabeticIndex.getLabel)String
android.icu.text.AlphabeticIndex.getLabelType)LabelType
android.icu.text.AlphabeticIndex.size)int
android.icu.text.AlphabeticIndex.iterator)Iterator
android.icu.text.AlphabeticIndex.toString)String
android.icu.text.AlphabeticIndex.addLabels(android.icu.text.UnicodeSet)android.icu.text.AlphabeticIndex
android.icu.text.AlphabeticIndex.setOverflowLabel(String)android.icu.text.AlphabeticIndex
android.icu.text.AlphabeticIndex.getUnderflowLabel)String
android.icu.text.AlphabeticIndex.setUnderflowLabel(String)android.icu.text.AlphabeticIndex
android.icu.text.AlphabeticIndex.getOverflowLabel)String
android.icu.text.AlphabeticIndex.setInflowLabel(String)android.icu.text.AlphabeticIndex
android.icu.text.AlphabeticIndex.getInflowLabel)String
android.icu.text.AlphabeticIndex.getMaxLabelCount)int
android.icu.text.AlphabeticIndex.setMaxLabelCount(int)android.icu.text.AlphabeticIndex
android.icu.text.AlphabeticIndex.buildImmutableIndex)ImmutableIndex
android.icu.text.AlphabeticIndex.getBucketLabels)List
android.icu.text.AlphabeticIndex.getCollator)android.icu.text.RuleBasedCollator
android.icu.text.AlphabeticIndex.addRecord(CharSequence,Object)android.icu.text.AlphabeticIndex
android.icu.text.AlphabeticIndex.getBucketIndex(CharSequence)int
android.icu.text.AlphabeticIndex.clearRecords)android.icu.text.AlphabeticIndex
android.icu.text.AlphabeticIndex.getBucketCount)int
android.icu.text.AlphabeticIndex.getRecordCount)int
android.icu.text.AlphabeticIndex.iterator)Iterator
android.icu.text.Bidi.setInverse(boolean)void
android.icu.text.Bidi.isInverse)boolean
android.icu.text.Bidi.setReorderingMode(int)void
android.icu.text.Bidi.getReorderingMode)int
android.icu.text.Bidi.setReorderingOptions(int)void
android.icu.text.Bidi.getReorderingOptions)int
android.icu.text.Bidi.getBaseDirection(CharSequence)byte
android.icu.text.Bidi.setContext(String,String)void
android.icu.text.Bidi.setPara(String,byte,byte)void
android.icu.text.Bidi.setPara(char,byte,byte)void
android.icu.text.Bidi.setPara(java.text.AttributedCharacterIterator)void
android.icu.text.Bidi.orderParagraphsLTR(boolean)void
android.icu.text.Bidi.isOrderParagraphsLTR)boolean
android.icu.text.Bidi.getDirection)byte
android.icu.text.Bidi.getTextAsString)String
android.icu.text.Bidi.getLength)int
android.icu.text.Bidi.getProcessedLength)int
android.icu.text.Bidi.getResultLength)int
android.icu.text.Bidi.getParaLevel)byte
android.icu.text.Bidi.countParagraphs)int
android.icu.text.Bidi.getParagraphByIndex(int)android.icu.text.BidiRun
android.icu.text.Bidi.getParagraph(int)android.icu.text.BidiRun
android.icu.text.Bidi.getParagraphIndex(int)int
android.icu.text.Bidi.setCustomClassifier(android.icu.text.BidiClassifier)void
android.icu.text.Bidi.getCustomClassifier)android.icu.text.BidiClassifier
android.icu.text.Bidi.getCustomizedClass(int)int
android.icu.text.Bidi.setLine(int,int)android.icu.text.Bidi
android.icu.text.Bidi.getLevelAt(int)byte
android.icu.text.Bidi.getLogicalRun(int)android.icu.text.BidiRun
android.icu.text.Bidi.countRuns)int
android.icu.text.Bidi.getVisualRun(int)android.icu.text.BidiRun
android.icu.text.Bidi.getVisualIndex(int)int
android.icu.text.Bidi.getLogicalIndex(int)int
android.icu.text.Bidi.createLineBidi(int,int)android.icu.text.Bidi
android.icu.text.Bidi.isMixed)boolean
android.icu.text.Bidi.isLeftToRight)boolean
android.icu.text.Bidi.isRightToLeft)boolean
android.icu.text.Bidi.baseIsLeftToRight)boolean
android.icu.text.Bidi.getBaseLevel)int
android.icu.text.Bidi.getRunCount)int
android.icu.text.Bidi.getRunLevel(int)int
android.icu.text.Bidi.getRunStart(int)int
android.icu.text.Bidi.getRunLimit(int)int
android.icu.text.Bidi.requiresBidi(char,int,int)boolean
android.icu.text.Bidi.reorderVisually(byte,int,Object,int,int)void
android.icu.text.Bidi.writeReordered(int)String
android.icu.text.Bidi.writeReverse(String,int)String
android.icu.text.BidiClassifier.setContext(Object)void
android.icu.text.BidiClassifier.getContext)Object
android.icu.text.BidiClassifier.classify(int)int
android.icu.text.BidiRun.getStart)int
android.icu.text.BidiRun.getLimit)int
android.icu.text.BidiRun.getLength)int
android.icu.text.BidiRun.getEmbeddingLevel)byte
android.icu.text.BidiRun.isOddRun)boolean
android.icu.text.BidiRun.isEvenRun)boolean
android.icu.text.BidiRun.getDirection)byte
android.icu.text.BidiRun.toString)String
android.icu.text.BreakIterator.clone)Object
android.icu.text.BreakIterator.preceding(int)int
android.icu.text.BreakIterator.isBoundary(int)boolean
android.icu.text.BreakIterator.getRuleStatus)int
android.icu.text.BreakIterator.getRuleStatusVec(int)int
android.icu.text.BreakIterator.setText(String)void
android.icu.text.BreakIterator.setText(CharSequence)void
android.icu.text.BreakIterator.getWordInstance)android.icu.text.BreakIterator
android.icu.text.BreakIterator.getWordInstance(java.util.Locale)android.icu.text.BreakIterator
android.icu.text.BreakIterator.getWordInstance(android.icu.util.ULocale)android.icu.text.BreakIterator
android.icu.text.BreakIterator.getLineInstance)android.icu.text.BreakIterator
android.icu.text.BreakIterator.getLineInstance(java.util.Locale)android.icu.text.BreakIterator
android.icu.text.BreakIterator.getLineInstance(android.icu.util.ULocale)android.icu.text.BreakIterator
android.icu.text.BreakIterator.getCharacterInstance)android.icu.text.BreakIterator
android.icu.text.BreakIterator.getCharacterInstance(java.util.Locale)android.icu.text.BreakIterator
android.icu.text.BreakIterator.getCharacterInstance(android.icu.util.ULocale)android.icu.text.BreakIterator
android.icu.text.BreakIterator.getSentenceInstance)android.icu.text.BreakIterator
android.icu.text.BreakIterator.getSentenceInstance(java.util.Locale)android.icu.text.BreakIterator
android.icu.text.BreakIterator.getSentenceInstance(android.icu.util.ULocale)android.icu.text.BreakIterator
android.icu.text.BreakIterator.getTitleInstance)android.icu.text.BreakIterator
android.icu.text.BreakIterator.getTitleInstance(java.util.Locale)android.icu.text.BreakIterator
android.icu.text.BreakIterator.getTitleInstance(android.icu.util.ULocale)android.icu.text.BreakIterator
android.icu.text.CaseMap.omitUnchangedText)Upper
android.icu.text.CaseMap.apply(java.util.Locale,CharSequence)String
android.icu.text.CaseMap.apply(java.util.Locale,CharSequence,Appendable,android.icu.text.Edits)Appendable
android.icu.text.CaseMap.wholeString)Title
android.icu.text.CaseMap.sentences)Title
android.icu.text.CaseMap.omitUnchangedText)Title
android.icu.text.CaseMap.noLowercase)Title
android.icu.text.CaseMap.noBreakAdjustment)Title
android.icu.text.CaseMap.adjustToCased)Title
android.icu.text.CaseMap.apply(java.util.Locale,android.icu.text.BreakIterator,CharSequence)String
android.icu.text.CaseMap.apply(java.util.Locale,android.icu.text.BreakIterator,CharSequence,Appendable,android.icu.text.Edits)Appendable
android.icu.text.CaseMap.omitUnchangedText)Lower
android.icu.text.CaseMap.apply(java.util.Locale,CharSequence)String
android.icu.text.CaseMap.apply(java.util.Locale,CharSequence,Appendable,android.icu.text.Edits)Appendable
android.icu.text.CaseMap.omitUnchangedText)Fold
android.icu.text.CaseMap.turkic)Fold
android.icu.text.CaseMap.apply(CharSequence)String
android.icu.text.CaseMap.apply(CharSequence,Appendable,android.icu.text.Edits)Appendable
android.icu.text.CaseMap.toLower)Lower
android.icu.text.CaseMap.toUpper)Upper
android.icu.text.CaseMap.toTitle)Title
android.icu.text.CaseMap.fold)Fold
android.icu.text.CollationElementIterator.primaryOrder(int)int
android.icu.text.CollationElementIterator.secondaryOrder(int)int
android.icu.text.CollationElementIterator.tertiaryOrder(int)int
android.icu.text.CollationElementIterator.getOffset)int
android.icu.text.CollationElementIterator.next)int
android.icu.text.CollationElementIterator.previous)int
android.icu.text.CollationElementIterator.reset)void
android.icu.text.CollationElementIterator.setOffset(int)void
android.icu.text.CollationElementIterator.setText(String)void
android.icu.text.CollationElementIterator.setText(android.icu.text.UCharacterIterator)void
android.icu.text.CollationElementIterator.setText(java.text.CharacterIterator)void
android.icu.text.CollationElementIterator.getMaxExpansion(int)int
android.icu.text.CollationElementIterator.equals(Object)boolean
android.icu.text.CollationElementIterator.hashCode)int
android.icu.text.CollationKey.getSourceString)String
android.icu.text.CollationKey.compareTo(android.icu.text.CollationKey)int
android.icu.text.CollationKey.equals(Object)boolean
android.icu.text.CollationKey.equals(android.icu.text.CollationKey)boolean
android.icu.text.CollationKey.hashCode)int
android.icu.text.CollationKey.getBound(int,int)android.icu.text.CollationKey
android.icu.text.CollationKey.merge(android.icu.text.CollationKey)android.icu.text.CollationKey
android.icu.text.Collator.equals(Object)boolean
android.icu.text.Collator.hashCode)int
android.icu.text.Collator.setStrength(int)void
android.icu.text.Collator.setDecomposition(int)void
android.icu.text.Collator.getInstance)android.icu.text.Collator
android.icu.text.Collator.clone)Object
android.icu.text.Collator.getInstance(ULocale)android.icu.text.Collator
android.icu.text.Collator.getInstance(java.util.Locale)android.icu.text.Collator
android.icu.text.Collator.getFunctionalEquivalent(String,ULocale,boolean)ULocale
android.icu.text.Collator.getFunctionalEquivalent(String,ULocale)ULocale
android.icu.text.Collator.getDisplayName(java.util.Locale,java.util.Locale)String
android.icu.text.Collator.getDisplayName(ULocale,ULocale)String
android.icu.text.Collator.getDisplayName(java.util.Locale)String
android.icu.text.Collator.getDisplayName(ULocale)String
android.icu.text.Collator.getStrength)int
android.icu.text.Collator.getDecomposition)int
android.icu.text.Collator.equals(String,String)boolean
android.icu.text.Collator.getTailoredSet)android.icu.text.UnicodeSet
android.icu.text.Collator.compare(Object,Object)int
android.icu.text.Collator.setMaxVariable(int)android.icu.text.Collator
android.icu.text.Collator.getMaxVariable)int
android.icu.text.Collator.isFrozen)boolean
android.icu.text.Collator.freeze)android.icu.text.Collator
android.icu.text.Collator.cloneAsThawed)android.icu.text.Collator
android.icu.text.CompactDecimalFormat.valueOf(String)CompactStyle
android.icu.text.CompactDecimalFormat.getInstance(android.icu.util.ULocale,CompactStyle)android.icu.text.CompactDecimalFormat
android.icu.text.CompactDecimalFormat.getInstance(java.util.Locale,CompactStyle)android.icu.text.CompactDecimalFormat
android.icu.text.CompactDecimalFormat.parse(String,java.text.ParsePosition)Number
android.icu.text.CompactDecimalFormat.parseCurrency(CharSequence,java.text.ParsePosition)android.icu.util.CurrencyAmount
android.icu.text.CurrencyPluralInfo.getInstance)android.icu.text.CurrencyPluralInfo
android.icu.text.CurrencyPluralInfo.getInstance(java.util.Locale)android.icu.text.CurrencyPluralInfo
android.icu.text.CurrencyPluralInfo.getInstance(android.icu.util.ULocale)android.icu.text.CurrencyPluralInfo
android.icu.text.CurrencyPluralInfo.getPluralRules)android.icu.text.PluralRules
android.icu.text.CurrencyPluralInfo.getCurrencyPluralPattern(String)String
android.icu.text.CurrencyPluralInfo.getLocale)android.icu.util.ULocale
android.icu.text.CurrencyPluralInfo.setPluralRules(String)void
android.icu.text.CurrencyPluralInfo.setCurrencyPluralPattern(String,String)void
android.icu.text.CurrencyPluralInfo.setLocale(android.icu.util.ULocale)void
android.icu.text.CurrencyPluralInfo.clone)Object
android.icu.text.CurrencyPluralInfo.equals(Object)boolean
android.icu.text.CurrencyPluralInfo.hashCode)int
android.icu.text.DateFormat.ofCalendarField(int)android.icu.text.DateFormat.Field
android.icu.text.DateFormat.getCalendarField)int
android.icu.text.DateFormat.readResolve)Object
android.icu.text.DateFormat.valueOf(String)BooleanAttribute
android.icu.text.DateFormat.format(Object,StringBuffer,FieldPosition)StringBuffer
android.icu.text.DateFormat.format(java.util.Date,StringBuffer,FieldPosition)StringBuffer
android.icu.text.DateFormat.format(java.util.Date)String
android.icu.text.DateFormat.parse(String)java.util.Date
android.icu.text.DateFormat.parse(String,ParsePosition)java.util.Date
android.icu.text.DateFormat.parseObject(String,ParsePosition)Object
android.icu.text.DateFormat.getTimeInstance)android.icu.text.DateFormat
android.icu.text.DateFormat.getTimeInstance(int)android.icu.text.DateFormat
android.icu.text.DateFormat.getTimeInstance(int,java.util.Locale)android.icu.text.DateFormat
android.icu.text.DateFormat.getTimeInstance(int,ULocale)android.icu.text.DateFormat
android.icu.text.DateFormat.getDateInstance)android.icu.text.DateFormat
android.icu.text.DateFormat.getDateInstance(int)android.icu.text.DateFormat
android.icu.text.DateFormat.getDateInstance(int,java.util.Locale)android.icu.text.DateFormat
android.icu.text.DateFormat.getDateInstance(int,ULocale)android.icu.text.DateFormat
android.icu.text.DateFormat.getDateTimeInstance)android.icu.text.DateFormat
android.icu.text.DateFormat.getDateTimeInstance(int,int)android.icu.text.DateFormat
android.icu.text.DateFormat.getDateTimeInstance(int,int,java.util.Locale)android.icu.text.DateFormat
android.icu.text.DateFormat.getDateTimeInstance(int,int,ULocale)android.icu.text.DateFormat
android.icu.text.DateFormat.getInstance)android.icu.text.DateFormat
android.icu.text.DateFormat.setCalendar(Calendar)void
android.icu.text.DateFormat.getCalendar)Calendar
android.icu.text.DateFormat.setNumberFormat(android.icu.text.NumberFormat)void
android.icu.text.DateFormat.getNumberFormat)android.icu.text.NumberFormat
android.icu.text.DateFormat.setTimeZone(TimeZone)void
android.icu.text.DateFormat.getTimeZone)TimeZone
android.icu.text.DateFormat.setLenient(boolean)void
android.icu.text.DateFormat.isLenient)boolean
android.icu.text.DateFormat.setCalendarLenient(boolean)void
android.icu.text.DateFormat.isCalendarLenient)boolean
android.icu.text.DateFormat.setBooleanAttribute(BooleanAttribute,boolean)android.icu.text.DateFormat
android.icu.text.DateFormat.getBooleanAttribute(BooleanAttribute)boolean
android.icu.text.DateFormat.setContext(android.icu.text.DisplayContext)void
android.icu.text.DateFormat.getContext(DisplayContext.Type)android.icu.text.DisplayContext
android.icu.text.DateFormat.hashCode)int
android.icu.text.DateFormat.equals(Object)boolean
android.icu.text.DateFormat.clone)Object
android.icu.text.DateFormat.getDateInstance(Calendar,int,java.util.Locale)android.icu.text.DateFormat
android.icu.text.DateFormat.getDateInstance(Calendar,int,ULocale)android.icu.text.DateFormat
android.icu.text.DateFormat.getTimeInstance(Calendar,int,java.util.Locale)android.icu.text.DateFormat
android.icu.text.DateFormat.getTimeInstance(Calendar,int,ULocale)android.icu.text.DateFormat
android.icu.text.DateFormat.getDateTimeInstance(Calendar,int,int,java.util.Locale)android.icu.text.DateFormat
android.icu.text.DateFormat.getDateTimeInstance(Calendar,int,int,ULocale)android.icu.text.DateFormat
android.icu.text.DateFormat.getInstance(Calendar,java.util.Locale)android.icu.text.DateFormat
android.icu.text.DateFormat.getInstance(Calendar)android.icu.text.DateFormat
android.icu.text.DateFormat.getDateInstance(Calendar,int)android.icu.text.DateFormat
android.icu.text.DateFormat.getTimeInstance(Calendar,int)android.icu.text.DateFormat
android.icu.text.DateFormat.getDateTimeInstance(Calendar,int,int)android.icu.text.DateFormat
android.icu.text.DateFormat.getInstanceForSkeleton(String)android.icu.text.DateFormat
android.icu.text.DateFormat.getInstanceForSkeleton(String,java.util.Locale)android.icu.text.DateFormat
android.icu.text.DateFormat.getInstanceForSkeleton(String,ULocale)android.icu.text.DateFormat
android.icu.text.DateFormat.getInstanceForSkeleton(Calendar,String,java.util.Locale)android.icu.text.DateFormat
android.icu.text.DateFormat.getInstanceForSkeleton(Calendar,String,ULocale)android.icu.text.DateFormat
android.icu.text.DateFormat.getPatternInstance(String)android.icu.text.DateFormat
android.icu.text.DateFormat.getPatternInstance(String,java.util.Locale)android.icu.text.DateFormat
android.icu.text.DateFormat.getPatternInstance(String,ULocale)android.icu.text.DateFormat
android.icu.text.DateFormat.getPatternInstance(Calendar,String,java.util.Locale)android.icu.text.DateFormat
android.icu.text.DateFormat.getPatternInstance(Calendar,String,ULocale)android.icu.text.DateFormat
android.icu.text.DateFormatSymbols.getInstance)android.icu.text.DateFormatSymbols
android.icu.text.DateFormatSymbols.getInstance(java.util.Locale)android.icu.text.DateFormatSymbols
android.icu.text.DateFormatSymbols.getInstance(android.icu.util.ULocale)android.icu.text.DateFormatSymbols
android.icu.text.DateFormatSymbols.setEras(String)void
android.icu.text.DateFormatSymbols.setEraNames(String)void
android.icu.text.DateFormatSymbols.setMonths(String)void
android.icu.text.DateFormatSymbols.setMonths(String,int,int)void
android.icu.text.DateFormatSymbols.setShortMonths(String)void
android.icu.text.DateFormatSymbols.setWeekdays(String,int,int)void
android.icu.text.DateFormatSymbols.setWeekdays(String)void
android.icu.text.DateFormatSymbols.setShortWeekdays(String)void
android.icu.text.DateFormatSymbols.setQuarters(String,int,int)void
android.icu.text.DateFormatSymbols.setYearNames(String,int,int)void
android.icu.text.DateFormatSymbols.setZodiacNames(String,int,int)void
android.icu.text.DateFormatSymbols.setAmPmStrings(String)void
android.icu.text.DateFormatSymbols.setZoneStrings(String)void
android.icu.text.DateFormatSymbols.getLocalPatternChars)String
android.icu.text.DateFormatSymbols.setLocalPatternChars(String)void
android.icu.text.DateFormatSymbols.clone)Object
android.icu.text.DateFormatSymbols.hashCode)int
android.icu.text.DateFormatSymbols.equals(Object)boolean
android.icu.text.DateFormatSymbols.initializeData(android.icu.util.ULocale,String)void
android.icu.text.DateIntervalFormat.getInstance(String)android.icu.text.DateIntervalFormat
android.icu.text.DateIntervalFormat.getInstance(String,java.util.Locale)android.icu.text.DateIntervalFormat
android.icu.text.DateIntervalFormat.getInstance(String,ULocale)android.icu.text.DateIntervalFormat
android.icu.text.DateIntervalFormat.getInstance(String,android.icu.text.DateIntervalInfo)android.icu.text.DateIntervalFormat
android.icu.text.DateIntervalFormat.getInstance(String,java.util.Locale,android.icu.text.DateIntervalInfo)android.icu.text.DateIntervalFormat
android.icu.text.DateIntervalFormat.getInstance(String,ULocale,android.icu.text.DateIntervalInfo)android.icu.text.DateIntervalFormat
android.icu.text.DateIntervalFormat.format(Object,StringBuffer,java.text.FieldPosition)StringBuffer
android.icu.text.DateIntervalFormat.parseObject(String,java.text.ParsePosition)Object
android.icu.text.DateIntervalFormat.getDateIntervalInfo)android.icu.text.DateIntervalInfo
android.icu.text.DateIntervalFormat.setDateIntervalInfo(android.icu.text.DateIntervalInfo)void
android.icu.text.DateIntervalFormat.getTimeZone)TimeZone
android.icu.text.DateIntervalFormat.setTimeZone(TimeZone)void
android.icu.text.DateIntervalInfo.getFirstPart)String
android.icu.text.DateIntervalInfo.getSecondPart)String
android.icu.text.DateIntervalInfo.firstDateInPtnIsLaterDate)boolean
android.icu.text.DateIntervalInfo.equals(Object)boolean
android.icu.text.DateIntervalInfo.hashCode)int
android.icu.text.DateIntervalInfo.toString)String
android.icu.text.DateIntervalInfo.setIntervalPattern(String,int,String)void
android.icu.text.DateIntervalInfo.getIntervalPattern(String,int)PatternInfo
android.icu.text.DateIntervalInfo.getFallbackIntervalPattern)String
android.icu.text.DateIntervalInfo.setFallbackIntervalPattern(String)void
android.icu.text.DateIntervalInfo.getDefaultOrder)boolean
android.icu.text.DateIntervalInfo.clone)Object
android.icu.text.DateIntervalInfo.isFrozen)boolean
android.icu.text.DateIntervalInfo.freeze)android.icu.text.DateIntervalInfo
android.icu.text.DateIntervalInfo.cloneAsThawed)android.icu.text.DateIntervalInfo
android.icu.text.DateIntervalInfo.equals(Object)boolean
android.icu.text.DateIntervalInfo.hashCode)int
android.icu.text.DateTimePatternGenerator.getEmptyInstance)android.icu.text.DateTimePatternGenerator
android.icu.text.DateTimePatternGenerator.getInstance)android.icu.text.DateTimePatternGenerator
android.icu.text.DateTimePatternGenerator.getInstance(android.icu.util.ULocale)android.icu.text.DateTimePatternGenerator
android.icu.text.DateTimePatternGenerator.getInstance(Locale)android.icu.text.DateTimePatternGenerator
android.icu.text.DateTimePatternGenerator.getBestPattern(String)String
android.icu.text.DateTimePatternGenerator.getBestPattern(String,int)String
android.icu.text.DateTimePatternGenerator.addPattern(String,boolean,PatternInfo)android.icu.text.DateTimePatternGenerator
android.icu.text.DateTimePatternGenerator.getSkeleton(String)String
android.icu.text.DateTimePatternGenerator.getBaseSkeleton(String)String
android.icu.text.DateTimePatternGenerator.getSkeletons(Map)Map
android.icu.text.DateTimePatternGenerator.getBaseSkeletons(Set)Set
android.icu.text.DateTimePatternGenerator.replaceFieldTypes(String,String)String
android.icu.text.DateTimePatternGenerator.replaceFieldTypes(String,String,int)String
android.icu.text.DateTimePatternGenerator.setDateTimeFormat(String)void
android.icu.text.DateTimePatternGenerator.getDateTimeFormat)String
android.icu.text.DateTimePatternGenerator.setDecimal(String)void
android.icu.text.DateTimePatternGenerator.getDecimal)String
android.icu.text.DateTimePatternGenerator.setAppendItemFormat(int,String)void
android.icu.text.DateTimePatternGenerator.getAppendItemFormat(int)String
android.icu.text.DateTimePatternGenerator.setAppendItemName(int,String)void
android.icu.text.DateTimePatternGenerator.getAppendItemName(int)String
android.icu.text.DateTimePatternGenerator.isFrozen)boolean
android.icu.text.DateTimePatternGenerator.freeze)android.icu.text.DateTimePatternGenerator
android.icu.text.DateTimePatternGenerator.cloneAsThawed)android.icu.text.DateTimePatternGenerator
android.icu.text.DateTimePatternGenerator.clone)Object
android.icu.text.DecimalFormat.clone)Object
android.icu.text.DecimalFormat.format(double,StringBuffer,java.text.FieldPosition)StringBuffer
android.icu.text.DecimalFormat.format(long,StringBuffer,java.text.FieldPosition)StringBuffer
android.icu.text.DecimalFormat.format(java.math.BigInteger,StringBuffer,java.text.FieldPosition)StringBuffer
android.icu.text.DecimalFormat.format(java.math.BigDecimal,StringBuffer,java.text.FieldPosition)StringBuffer
android.icu.text.DecimalFormat.format(android.icu.math.BigDecimal,StringBuffer,java.text.FieldPosition)StringBuffer
android.icu.text.DecimalFormat.formatToCharacterIterator(Object)java.text.AttributedCharacterIterator
android.icu.text.DecimalFormat.format(android.icu.util.CurrencyAmount,StringBuffer,java.text.FieldPosition)StringBuffer
android.icu.text.DecimalFormat.parse(String,java.text.ParsePosition)Number
android.icu.text.DecimalFormat.parseCurrency(CharSequence,java.text.ParsePosition)android.icu.util.CurrencyAmount
android.icu.text.DecimalFormat.getParseMaxDigits)int
android.icu.text.DecimalFormat.setParseMaxDigits(int)void
android.icu.text.DecimalFormat.toString)String
android.icu.text.DecimalFormatSymbols.getInstance)android.icu.text.DecimalFormatSymbols
android.icu.text.DecimalFormatSymbols.getInstance(java.util.Locale)android.icu.text.DecimalFormatSymbols
android.icu.text.DecimalFormatSymbols.getInstance(android.icu.util.ULocale)android.icu.text.DecimalFormatSymbols
android.icu.text.DecimalFormatSymbols.forNumberingSystem(java.util.Locale,android.icu.text.NumberingSystem)android.icu.text.DecimalFormatSymbols
android.icu.text.DecimalFormatSymbols.forNumberingSystem(android.icu.util.ULocale,android.icu.text.NumberingSystem)android.icu.text.DecimalFormatSymbols
android.icu.text.DecimalFormatSymbols.getZeroDigit)char
android.icu.text.DecimalFormatSymbols.setZeroDigit(char)void
android.icu.text.DecimalFormatSymbols.setDigitStrings(String)void
android.icu.text.DecimalFormatSymbols.getSignificantDigit)char
android.icu.text.DecimalFormatSymbols.setSignificantDigit(char)void
android.icu.text.DecimalFormatSymbols.getGroupingSeparator)char
android.icu.text.DecimalFormatSymbols.setGroupingSeparator(char)void
android.icu.text.DecimalFormatSymbols.getGroupingSeparatorString)String
android.icu.text.DecimalFormatSymbols.setGroupingSeparatorString(String)void
android.icu.text.DecimalFormatSymbols.getDecimalSeparator)char
android.icu.text.DecimalFormatSymbols.setDecimalSeparator(char)void
android.icu.text.DecimalFormatSymbols.getDecimalSeparatorString)String
android.icu.text.DecimalFormatSymbols.setDecimalSeparatorString(String)void
android.icu.text.DecimalFormatSymbols.getPerMill)char
android.icu.text.DecimalFormatSymbols.setPerMill(char)void
android.icu.text.DecimalFormatSymbols.getPerMillString)String
android.icu.text.DecimalFormatSymbols.setPerMillString(String)void
android.icu.text.DecimalFormatSymbols.getPercent)char
android.icu.text.DecimalFormatSymbols.setPercent(char)void
android.icu.text.DecimalFormatSymbols.getPercentString)String
android.icu.text.DecimalFormatSymbols.setPercentString(String)void
android.icu.text.DecimalFormatSymbols.getDigit)char
android.icu.text.DecimalFormatSymbols.setDigit(char)void
android.icu.text.DecimalFormatSymbols.getPatternSeparator)char
android.icu.text.DecimalFormatSymbols.setPatternSeparator(char)void
android.icu.text.DecimalFormatSymbols.getInfinity)String
android.icu.text.DecimalFormatSymbols.setInfinity(String)void
android.icu.text.DecimalFormatSymbols.getNaN)String
android.icu.text.DecimalFormatSymbols.setNaN(String)void
android.icu.text.DecimalFormatSymbols.getMinusSign)char
android.icu.text.DecimalFormatSymbols.setMinusSign(char)void
android.icu.text.DecimalFormatSymbols.getMinusSignString)String
android.icu.text.DecimalFormatSymbols.setMinusSignString(String)void
android.icu.text.DecimalFormatSymbols.getPlusSign)char
android.icu.text.DecimalFormatSymbols.setPlusSign(char)void
android.icu.text.DecimalFormatSymbols.getPlusSignString)String
android.icu.text.DecimalFormatSymbols.setPlusSignString(String)void
android.icu.text.DecimalFormatSymbols.getCurrencySymbol)String
android.icu.text.DecimalFormatSymbols.setCurrencySymbol(String)void
android.icu.text.DecimalFormatSymbols.getInternationalCurrencySymbol)String
android.icu.text.DecimalFormatSymbols.setInternationalCurrencySymbol(String)void
android.icu.text.DecimalFormatSymbols.getCurrency)android.icu.util.Currency
android.icu.text.DecimalFormatSymbols.setCurrency(android.icu.util.Currency)void
android.icu.text.DecimalFormatSymbols.getMonetaryDecimalSeparator)char
android.icu.text.DecimalFormatSymbols.setMonetaryDecimalSeparator(char)void
android.icu.text.DecimalFormatSymbols.getMonetaryDecimalSeparatorString)String
android.icu.text.DecimalFormatSymbols.setMonetaryDecimalSeparatorString(String)void
android.icu.text.DecimalFormatSymbols.getMonetaryGroupingSeparator)char
android.icu.text.DecimalFormatSymbols.setMonetaryGroupingSeparator(char)void
android.icu.text.DecimalFormatSymbols.getMonetaryGroupingSeparatorString)String
android.icu.text.DecimalFormatSymbols.setMonetaryGroupingSeparatorString(String)void
android.icu.text.DecimalFormatSymbols.getExponentMultiplicationSign)String
android.icu.text.DecimalFormatSymbols.setExponentMultiplicationSign(String)void
android.icu.text.DecimalFormatSymbols.getExponentSeparator)String
android.icu.text.DecimalFormatSymbols.setExponentSeparator(String)void
android.icu.text.DecimalFormatSymbols.getPadEscape)char
android.icu.text.DecimalFormatSymbols.setPadEscape(char)void
android.icu.text.DecimalFormatSymbols.getPatternForCurrencySpacing(int,boolean)String
android.icu.text.DecimalFormatSymbols.setPatternForCurrencySpacing(int,boolean,String)void
android.icu.text.DecimalFormatSymbols.getLocale)java.util.Locale
android.icu.text.DecimalFormatSymbols.getULocale)android.icu.util.ULocale
android.icu.text.DecimalFormatSymbols.clone)Object
android.icu.text.DecimalFormatSymbols.equals(Object)boolean
android.icu.text.DecimalFormatSymbols.hashCode)int
android.icu.text.DisplayContext.valueOf(String)Type
android.icu.text.DisplayContext.valueOf(String)android.icu.text.DisplayContext
android.icu.text.DisplayContext.type)Type
android.icu.text.DisplayContext.value)int
android.icu.text.Edits.next)boolean
android.icu.text.Edits.findSourceIndex(int)boolean
android.icu.text.Edits.findDestinationIndex(int)boolean
android.icu.text.Edits.destinationIndexFromSourceIndex(int)int
android.icu.text.Edits.sourceIndexFromDestinationIndex(int)int
android.icu.text.Edits.hasChange)boolean
android.icu.text.Edits.oldLength)int
android.icu.text.Edits.newLength)int
android.icu.text.Edits.sourceIndex)int
android.icu.text.Edits.replacementIndex)int
android.icu.text.Edits.destinationIndex)int
android.icu.text.Edits.toString)String
android.icu.text.Edits.reset)void
android.icu.text.Edits.addUnchanged(int)void
android.icu.text.Edits.addReplace(int,int)void
android.icu.text.Edits.lengthDelta)int
android.icu.text.Edits.hasChanges)boolean
android.icu.text.Edits.numberOfChanges)int
android.icu.text.Edits.getCoarseChangesIterator)Iterator
android.icu.text.Edits.getCoarseIterator)Iterator
android.icu.text.Edits.getFineChangesIterator)Iterator
android.icu.text.Edits.getFineIterator)Iterator
android.icu.text.Edits.mergeAndAppend(android.icu.text.Edits,android.icu.text.Edits)android.icu.text.Edits
android.icu.text.IDNA.hasErrors)boolean
android.icu.text.IDNA.getErrors)java.util.Set
android.icu.text.IDNA.isTransitionalDifferent)boolean
android.icu.text.IDNA.valueOf(String)Error
android.icu.text.IDNA.getUTS46Instance(int)android.icu.text.IDNA
android.icu.text.ListFormatter.getInstance(android.icu.util.ULocale)android.icu.text.ListFormatter
android.icu.text.ListFormatter.getInstance(java.util.Locale)android.icu.text.ListFormatter
android.icu.text.ListFormatter.getInstance)android.icu.text.ListFormatter
android.icu.text.ListFormatter.format(java.util.Collection)String
android.icu.text.ListFormatter.getPatternForNumItems(int)String
android.icu.text.LocaleDisplayNames.equals(Object)boolean
android.icu.text.LocaleDisplayNames.hashCode)int
android.icu.text.LocaleDisplayNames.toString)String
android.icu.text.LocaleDisplayNames.getComparator(Comparator,boolean)Comparator
android.icu.text.LocaleDisplayNames.valueOf(String)DialectHandling
android.icu.text.LocaleDisplayNames.getInstance(android.icu.util.ULocale)android.icu.text.LocaleDisplayNames
android.icu.text.LocaleDisplayNames.getInstance(Locale)android.icu.text.LocaleDisplayNames
android.icu.text.LocaleDisplayNames.getInstance(android.icu.util.ULocale,DialectHandling)android.icu.text.LocaleDisplayNames
android.icu.text.LocaleDisplayNames.getUiList(Set,boolean,Comparator)List
android.icu.text.MeasureFormat.valueOf(String)FormatWidth
android.icu.text.MeasureFormat.getInstance(ULocale,FormatWidth)android.icu.text.MeasureFormat
android.icu.text.MeasureFormat.getInstance(java.util.Locale,FormatWidth)android.icu.text.MeasureFormat
android.icu.text.MeasureFormat.getInstance(ULocale,FormatWidth,android.icu.text.NumberFormat)android.icu.text.MeasureFormat
android.icu.text.MeasureFormat.getInstance(java.util.Locale,FormatWidth,android.icu.text.NumberFormat)android.icu.text.MeasureFormat
android.icu.text.MeasureFormat.format(Object,StringBuffer,java.text.FieldPosition)StringBuffer
android.icu.text.MeasureFormat.parseObject(String,java.text.ParsePosition)Measure
android.icu.text.MeasureFormat.formatMeasurePerUnit(Measure,MeasureUnit,StringBuilder,java.text.FieldPosition)StringBuilder
android.icu.text.MeasureFormat.getUnitDisplayName(MeasureUnit)String
android.icu.text.MeasureFormat.equals(Object)boolean
android.icu.text.MeasureFormat.hashCode)int
android.icu.text.MeasureFormat.getWidth)FormatWidth
android.icu.text.MeasureFormat.getLocale)ULocale
android.icu.text.MeasureFormat.getNumberFormat)android.icu.text.NumberFormat
android.icu.text.MeasureFormat.getCurrencyFormat(ULocale)android.icu.text.MeasureFormat
android.icu.text.MeasureFormat.getCurrencyFormat(java.util.Locale)android.icu.text.MeasureFormat
android.icu.text.MeasureFormat.getCurrencyFormat)android.icu.text.MeasureFormat
android.icu.text.MessageFormat.readResolve)Object
android.icu.text.MessageFormat.setLocale(Locale)void
android.icu.text.MessageFormat.setLocale(android.icu.util.ULocale)void
android.icu.text.MessageFormat.getLocale)Locale
android.icu.text.MessageFormat.getULocale)android.icu.util.ULocale
android.icu.text.MessageFormat.applyPattern(String)void
android.icu.text.MessageFormat.applyPattern(String,MessagePattern.ApostropheMode)void
android.icu.text.MessageFormat.toPattern)String
android.icu.text.MessageFormat.setFormatsByArgumentIndex(Format)void
android.icu.text.MessageFormat.setFormatsByArgumentName(Map)void
android.icu.text.MessageFormat.setFormats(Format)void
android.icu.text.MessageFormat.setFormatByArgumentIndex(int,Format)void
android.icu.text.MessageFormat.setFormatByArgumentName(String,Format)void
android.icu.text.MessageFormat.setFormat(int,Format)void
android.icu.text.MessageFormat.getArgumentNames)Set
android.icu.text.MessageFormat.getFormatByArgumentName(String)Format
android.icu.text.MessageFormat.format(Object,StringBuffer,FieldPosition)StringBuffer
android.icu.text.MessageFormat.format(Map,StringBuffer,FieldPosition)StringBuffer
android.icu.text.MessageFormat.format(String,Map)String
android.icu.text.MessageFormat.usesNamedArguments)boolean
android.icu.text.MessageFormat.format(Object,StringBuffer,FieldPosition)StringBuffer
android.icu.text.MessageFormat.formatToCharacterIterator(Object)AttributedCharacterIterator
android.icu.text.MessageFormat.parseToMap(String,ParsePosition)Map
android.icu.text.MessageFormat.parseToMap(String)Map
android.icu.text.MessageFormat.parseObject(String,ParsePosition)Object
android.icu.text.MessageFormat.clone)Object
android.icu.text.MessageFormat.equals(Object)boolean
android.icu.text.MessageFormat.hashCode)int
android.icu.text.MessageFormat.autoQuoteApostrophe(String)String
android.icu.text.MessagePattern.getType)Type
android.icu.text.MessagePattern.getIndex)int
android.icu.text.MessagePattern.getLength)int
android.icu.text.MessagePattern.getLimit)int
android.icu.text.MessagePattern.getValue)int
android.icu.text.MessagePattern.getArgType)ArgType
android.icu.text.MessagePattern.toString)String
android.icu.text.MessagePattern.equals(Object)boolean
android.icu.text.MessagePattern.hashCode)int
android.icu.text.MessagePattern.valueOf(String)ArgType
android.icu.text.MessagePattern.hasPluralStyle)boolean
android.icu.text.MessagePattern.valueOf(String)ApostropheMode
android.icu.text.MessagePattern.parse(String)android.icu.text.MessagePattern
android.icu.text.MessagePattern.parseChoiceStyle(String)android.icu.text.MessagePattern
android.icu.text.MessagePattern.parsePluralStyle(String)android.icu.text.MessagePattern
android.icu.text.MessagePattern.parseSelectStyle(String)android.icu.text.MessagePattern
android.icu.text.MessagePattern.clear)void
android.icu.text.MessagePattern.clearPatternAndSetApostropheMode(ApostropheMode)void
android.icu.text.MessagePattern.equals(Object)boolean
android.icu.text.MessagePattern.hashCode)int
android.icu.text.MessagePattern.getApostropheMode)ApostropheMode
android.icu.text.MessagePattern.getPatternString)String
android.icu.text.MessagePattern.hasNamedArguments)boolean
android.icu.text.MessagePattern.hasNumberedArguments)boolean
android.icu.text.MessagePattern.toString)String
android.icu.text.MessagePattern.validateArgumentName(String)int
android.icu.text.MessagePattern.autoQuoteApostropheDeep)String
android.icu.text.MessagePattern.countParts)int
android.icu.text.MessagePattern.getPart(int)Part
android.icu.text.MessagePattern.getPatternIndex(int)int
android.icu.text.MessagePattern.getSubstring(Part)String
android.icu.text.MessagePattern.partSubstringMatches(Part,String)boolean
android.icu.text.MessagePattern.getNumericValue(Part)double
android.icu.text.MessagePattern.getPluralOffset(int)double
android.icu.text.MessagePattern.getLimitPartIndex(int)int
android.icu.text.MessagePattern.clone)Object
android.icu.text.MessagePattern.cloneAsThawed)android.icu.text.MessagePattern
android.icu.text.MessagePattern.freeze)android.icu.text.MessagePattern
android.icu.text.MessagePattern.isFrozen)boolean
android.icu.text.Normalizer.clone)Object
android.icu.text.Normalizer.compare(char,int,int,char,int,int,int)int
android.icu.text.Normalizer.compare(String,String,int)int
android.icu.text.Normalizer.compare(char,char,int)int
android.icu.text.Normalizer.compare(int,int,int)int
android.icu.text.Normalizer.compare(int,String,int)int
android.icu.text.Normalizer2.valueOf(String)Mode
android.icu.text.Normalizer2.getNFCInstance)android.icu.text.Normalizer2
android.icu.text.Normalizer2.getNFDInstance)android.icu.text.Normalizer2
android.icu.text.Normalizer2.getNFKCInstance)android.icu.text.Normalizer2
android.icu.text.Normalizer2.getNFKDInstance)android.icu.text.Normalizer2
android.icu.text.Normalizer2.getNFKCCasefoldInstance)android.icu.text.Normalizer2
android.icu.text.Normalizer2.getInstance(java.io.InputStream,String,Mode)android.icu.text.Normalizer2
android.icu.text.Normalizer2.normalize(CharSequence)String
android.icu.text.Normalizer2.getRawDecomposition(int)String
android.icu.text.Normalizer2.composePair(int,int)int
android.icu.text.Normalizer2.getCombiningClass(int)int
android.icu.text.NumberFormat.readResolve)Object
android.icu.text.NumberFormat.format(Object,StringBuffer,java.text.FieldPosition)StringBuffer
android.icu.text.NumberFormat.parseObject(String,java.text.ParsePosition)Object
android.icu.text.NumberFormat.format(double)String
android.icu.text.NumberFormat.format(long)String
android.icu.text.NumberFormat.format(java.math.BigInteger)String
android.icu.text.NumberFormat.format(java.math.BigDecimal)String
android.icu.text.NumberFormat.format(android.icu.math.BigDecimal)String
android.icu.text.NumberFormat.format(android.icu.util.CurrencyAmount)String
android.icu.text.NumberFormat.format(android.icu.util.CurrencyAmount,StringBuffer,java.text.FieldPosition)StringBuffer
android.icu.text.NumberFormat.parse(String)Number
android.icu.text.NumberFormat.parseCurrency(CharSequence,java.text.ParsePosition)android.icu.util.CurrencyAmount
android.icu.text.NumberFormat.isParseIntegerOnly)boolean
android.icu.text.NumberFormat.setParseIntegerOnly(boolean)void
android.icu.text.NumberFormat.setParseStrict(boolean)void
android.icu.text.NumberFormat.isParseStrict)boolean
android.icu.text.NumberFormat.setContext(android.icu.text.DisplayContext)void
android.icu.text.NumberFormat.getContext(DisplayContext.Type)android.icu.text.DisplayContext
android.icu.text.NumberFormat.getInstance)android.icu.text.NumberFormat
android.icu.text.NumberFormat.getInstance(java.util.Locale)android.icu.text.NumberFormat
android.icu.text.NumberFormat.getInstance(android.icu.util.ULocale)android.icu.text.NumberFormat
android.icu.text.NumberFormat.getInstance(int)android.icu.text.NumberFormat
android.icu.text.NumberFormat.getInstance(java.util.Locale,int)android.icu.text.NumberFormat
android.icu.text.NumberFormat.getNumberInstance)android.icu.text.NumberFormat
android.icu.text.NumberFormat.getNumberInstance(java.util.Locale)android.icu.text.NumberFormat
android.icu.text.NumberFormat.getNumberInstance(android.icu.util.ULocale)android.icu.text.NumberFormat
android.icu.text.NumberFormat.getIntegerInstance)android.icu.text.NumberFormat
android.icu.text.NumberFormat.getIntegerInstance(java.util.Locale)android.icu.text.NumberFormat
android.icu.text.NumberFormat.getIntegerInstance(android.icu.util.ULocale)android.icu.text.NumberFormat
android.icu.text.NumberFormat.getCurrencyInstance)android.icu.text.NumberFormat
android.icu.text.NumberFormat.getCurrencyInstance(java.util.Locale)android.icu.text.NumberFormat
android.icu.text.NumberFormat.getCurrencyInstance(android.icu.util.ULocale)android.icu.text.NumberFormat
android.icu.text.NumberFormat.getPercentInstance)android.icu.text.NumberFormat
android.icu.text.NumberFormat.getPercentInstance(java.util.Locale)android.icu.text.NumberFormat
android.icu.text.NumberFormat.getPercentInstance(android.icu.util.ULocale)android.icu.text.NumberFormat
android.icu.text.NumberFormat.getScientificInstance)android.icu.text.NumberFormat
android.icu.text.NumberFormat.getScientificInstance(java.util.Locale)android.icu.text.NumberFormat
android.icu.text.NumberFormat.getScientificInstance(android.icu.util.ULocale)android.icu.text.NumberFormat
android.icu.text.NumberFormat.hashCode)int
android.icu.text.NumberFormat.equals(Object)boolean
android.icu.text.NumberFormat.clone)Object
android.icu.text.NumberFormat.isGroupingUsed)boolean
android.icu.text.NumberFormat.setGroupingUsed(boolean)void
android.icu.text.NumberFormat.getMaximumIntegerDigits)int
android.icu.text.NumberFormat.setMaximumIntegerDigits(int)void
android.icu.text.NumberFormat.getMinimumIntegerDigits)int
android.icu.text.NumberFormat.setMinimumIntegerDigits(int)void
android.icu.text.NumberFormat.getMaximumFractionDigits)int
android.icu.text.NumberFormat.setMaximumFractionDigits(int)void
android.icu.text.NumberFormat.getMinimumFractionDigits)int
android.icu.text.NumberFormat.setMinimumFractionDigits(int)void
android.icu.text.NumberFormat.setCurrency(android.icu.util.Currency)void
android.icu.text.NumberFormat.getCurrency)android.icu.util.Currency
android.icu.text.NumberFormat.getRoundingMode)int
android.icu.text.NumberFormat.setRoundingMode(int)void
android.icu.text.NumberFormat.getInstance(android.icu.util.ULocale,int)android.icu.text.NumberFormat
android.icu.text.NumberFormat.getPattern(android.icu.util.ULocale,int)String
android.icu.text.NumberingSystem.getInstance(int,boolean,String)android.icu.text.NumberingSystem
android.icu.text.NumberingSystem.getInstance(java.util.Locale)android.icu.text.NumberingSystem
android.icu.text.NumberingSystem.getInstance(android.icu.util.ULocale)android.icu.text.NumberingSystem
android.icu.text.NumberingSystem.getInstance)android.icu.text.NumberingSystem
android.icu.text.NumberingSystem.getInstanceByName(String)android.icu.text.NumberingSystem
android.icu.text.NumberingSystem.isValidDigitString(String)boolean
android.icu.text.NumberingSystem.getRadix)int
android.icu.text.NumberingSystem.getDescription)String
android.icu.text.NumberingSystem.getName)String
android.icu.text.NumberingSystem.isAlgorithmic)boolean
android.icu.text.PluralFormat.applyPattern(String)void
android.icu.text.PluralFormat.toPattern)String
android.icu.text.PluralFormat.format(double)String
android.icu.text.PluralFormat.format(Object,StringBuffer,java.text.FieldPosition)StringBuffer
android.icu.text.PluralFormat.parse(String,java.text.ParsePosition)Number
android.icu.text.PluralFormat.parseObject(String,java.text.ParsePosition)Object
android.icu.text.PluralFormat.setNumberFormat(android.icu.text.NumberFormat)void
android.icu.text.PluralFormat.equals(Object)boolean
android.icu.text.PluralFormat.equals(android.icu.text.PluralFormat)boolean
android.icu.text.PluralFormat.hashCode)int
android.icu.text.PluralFormat.toString)String
android.icu.text.PluralRules.valueOf(String)PluralType
android.icu.text.PluralRules.parseDescription(String)android.icu.text.PluralRules
android.icu.text.PluralRules.createRules(String)android.icu.text.PluralRules
android.icu.text.PluralRules.forLocale(android.icu.util.ULocale)android.icu.text.PluralRules
android.icu.text.PluralRules.forLocale(Locale)android.icu.text.PluralRules
android.icu.text.PluralRules.forLocale(android.icu.util.ULocale,PluralType)android.icu.text.PluralRules
android.icu.text.PluralRules.forLocale(Locale,PluralType)android.icu.text.PluralRules
android.icu.text.PluralRules.hashCode)int
android.icu.text.PluralRules.select(double)String
android.icu.text.PluralRules.getKeywords)Set
android.icu.text.PluralRules.getUniqueKeywordValue(String)double
android.icu.text.PluralRules.getAllKeywordValues(String)Collection
android.icu.text.PluralRules.getSamples(String)Collection
android.icu.text.PluralRules.toString)String
android.icu.text.PluralRules.equals(Object)boolean
android.icu.text.PluralRules.equals(android.icu.text.PluralRules)boolean
android.icu.text.RelativeDateTimeFormatter.valueOf(String)Style
android.icu.text.RelativeDateTimeFormatter.valueOf(String)RelativeUnit
android.icu.text.RelativeDateTimeFormatter.valueOf(String)RelativeDateTimeUnit
android.icu.text.RelativeDateTimeFormatter.valueOf(String)Direction
android.icu.text.RelativeDateTimeFormatter.valueOf(String)AbsoluteUnit
android.icu.text.RelativeDateTimeFormatter.getInstance)android.icu.text.RelativeDateTimeFormatter
android.icu.text.RelativeDateTimeFormatter.getInstance(android.icu.util.ULocale)android.icu.text.RelativeDateTimeFormatter
android.icu.text.RelativeDateTimeFormatter.getInstance(java.util.Locale)android.icu.text.RelativeDateTimeFormatter
android.icu.text.RelativeDateTimeFormatter.getInstance(android.icu.util.ULocale,android.icu.text.NumberFormat)android.icu.text.RelativeDateTimeFormatter
android.icu.text.RelativeDateTimeFormatter.getInstance(android.icu.util.ULocale,android.icu.text.NumberFormat,Style,android.icu.text.DisplayContext)android.icu.text.RelativeDateTimeFormatter
android.icu.text.RelativeDateTimeFormatter.getInstance(java.util.Locale,android.icu.text.NumberFormat)android.icu.text.RelativeDateTimeFormatter
android.icu.text.RelativeDateTimeFormatter.format(double,Direction,RelativeUnit)String
android.icu.text.RelativeDateTimeFormatter.formatNumeric(double,RelativeDateTimeUnit)String
android.icu.text.RelativeDateTimeFormatter.format(Direction,AbsoluteUnit)String
android.icu.text.RelativeDateTimeFormatter.format(double,RelativeDateTimeUnit)String
android.icu.text.RelativeDateTimeFormatter.combineDateAndTime(String,String)String
android.icu.text.RelativeDateTimeFormatter.getNumberFormat)android.icu.text.NumberFormat
android.icu.text.RelativeDateTimeFormatter.getCapitalizationContext)android.icu.text.DisplayContext
android.icu.text.RelativeDateTimeFormatter.getFormatStyle)Style
android.icu.text.RuleBasedCollator.clone)Object
android.icu.text.RuleBasedCollator.getCollationElementIterator(String)android.icu.text.CollationElementIterator
android.icu.text.RuleBasedCollator.getCollationElementIterator(java.text.CharacterIterator)android.icu.text.CollationElementIterator
android.icu.text.RuleBasedCollator.getCollationElementIterator(android.icu.text.UCharacterIterator)android.icu.text.CollationElementIterator
android.icu.text.RuleBasedCollator.isFrozen)boolean
android.icu.text.RuleBasedCollator.freeze)android.icu.text.Collator
android.icu.text.RuleBasedCollator.cloneAsThawed)android.icu.text.RuleBasedCollator
android.icu.text.RuleBasedCollator.setUpperCaseFirst(boolean)void
android.icu.text.RuleBasedCollator.setLowerCaseFirst(boolean)void
android.icu.text.RuleBasedCollator.setCaseFirstDefault)void
android.icu.text.RuleBasedCollator.setAlternateHandlingDefault)void
android.icu.text.RuleBasedCollator.setCaseLevelDefault)void
android.icu.text.RuleBasedCollator.setDecompositionDefault)void
android.icu.text.RuleBasedCollator.setFrenchCollationDefault)void
android.icu.text.RuleBasedCollator.setStrengthDefault)void
android.icu.text.RuleBasedCollator.setNumericCollationDefault)void
android.icu.text.RuleBasedCollator.setFrenchCollation(boolean)void
android.icu.text.RuleBasedCollator.setAlternateHandlingShifted(boolean)void
android.icu.text.RuleBasedCollator.setCaseLevel(boolean)void
android.icu.text.RuleBasedCollator.setDecomposition(int)void
android.icu.text.RuleBasedCollator.setStrength(int)void
android.icu.text.RuleBasedCollator.setMaxVariable(int)android.icu.text.RuleBasedCollator
android.icu.text.RuleBasedCollator.getMaxVariable)int
android.icu.text.RuleBasedCollator.setNumericCollation(boolean)void
android.icu.text.RuleBasedCollator.getRules)String
android.icu.text.RuleBasedCollator.getRules(boolean)String
android.icu.text.RuleBasedCollator.getTailoredSet)android.icu.text.UnicodeSet
android.icu.text.RuleBasedCollator.getContractionsAndExpansions(android.icu.text.UnicodeSet,android.icu.text.UnicodeSet,boolean)void
android.icu.text.RuleBasedCollator.getCollationKey(String)android.icu.text.CollationKey
android.icu.text.RuleBasedCollator.getStrength)int
android.icu.text.RuleBasedCollator.getDecomposition)int
android.icu.text.RuleBasedCollator.isUpperCaseFirst)boolean
android.icu.text.RuleBasedCollator.isLowerCaseFirst)boolean
android.icu.text.RuleBasedCollator.isAlternateHandlingShifted)boolean
android.icu.text.RuleBasedCollator.isCaseLevel)boolean
android.icu.text.RuleBasedCollator.isFrenchCollation)boolean
android.icu.text.RuleBasedCollator.getVariableTop)int
android.icu.text.RuleBasedCollator.getNumericCollation)boolean
android.icu.text.RuleBasedCollator.equals(Object)boolean
android.icu.text.RuleBasedCollator.hashCode)int
android.icu.text.RuleBasedCollator.compare(String,String)int
android.icu.text.RuleBasedCollator.getVersion)android.icu.util.VersionInfo
android.icu.text.RuleBasedCollator.getUCAVersion)android.icu.util.VersionInfo
android.icu.text.ScientificNumberFormatter.getSuperscriptInstance(android.icu.util.ULocale)android.icu.text.ScientificNumberFormatter
android.icu.text.ScientificNumberFormatter.getSuperscriptInstance(android.icu.text.DecimalFormat)android.icu.text.ScientificNumberFormatter
android.icu.text.ScientificNumberFormatter.getMarkupInstance(android.icu.util.ULocale,String,String)android.icu.text.ScientificNumberFormatter
android.icu.text.ScientificNumberFormatter.getMarkupInstance(android.icu.text.DecimalFormat,String,String)android.icu.text.ScientificNumberFormatter
android.icu.text.ScientificNumberFormatter.format(Object)String
android.icu.text.SearchIterator.valueOf(String)ElementComparisonType
android.icu.text.SearchIterator.setIndex(int)void
android.icu.text.SearchIterator.setOverlapping(boolean)void
android.icu.text.SearchIterator.setBreakIterator(android.icu.text.BreakIterator)void
android.icu.text.SearchIterator.setTarget(java.text.CharacterIterator)void
android.icu.text.SearchIterator.getMatchStart)int
android.icu.text.SearchIterator.getMatchLength)int
android.icu.text.SearchIterator.getBreakIterator)android.icu.text.BreakIterator
android.icu.text.SearchIterator.getTarget)java.text.CharacterIterator
android.icu.text.SearchIterator.getMatchedText)String
android.icu.text.SearchIterator.next)int
android.icu.text.SearchIterator.previous)int
android.icu.text.SearchIterator.isOverlapping)boolean
android.icu.text.SearchIterator.reset)void
android.icu.text.SearchIterator.first)int
android.icu.text.SearchIterator.following(int)int
android.icu.text.SearchIterator.last)int
android.icu.text.SearchIterator.preceding(int)int
android.icu.text.SearchIterator.setMatchLength(int)void
android.icu.text.SearchIterator.setElementComparisonType(ElementComparisonType)void
android.icu.text.SearchIterator.getElementComparisonType)ElementComparisonType
android.icu.text.SelectFormat.applyPattern(String)void
android.icu.text.SelectFormat.toPattern)String
android.icu.text.SelectFormat.format(String)String
android.icu.text.SelectFormat.format(Object,StringBuffer,FieldPosition)StringBuffer
android.icu.text.SelectFormat.parseObject(String,ParsePosition)Object
android.icu.text.SelectFormat.equals(Object)boolean
android.icu.text.SelectFormat.hashCode)int
android.icu.text.SelectFormat.toString)String
android.icu.text.SimpleDateFormat.set2DigitYearStart(java.util.Date)void
android.icu.text.SimpleDateFormat.get2DigitYearStart)java.util.Date
android.icu.text.SimpleDateFormat.setContext(android.icu.text.DisplayContext)void
android.icu.text.SimpleDateFormat.format(android.icu.util.Calendar,StringBuffer,FieldPosition)StringBuffer
android.icu.text.SimpleDateFormat.subFormat(char,int,int,FieldPosition,android.icu.text.DateFormatSymbols,android.icu.util.Calendar)String
android.icu.text.SimpleDateFormat.setNumberFormat(android.icu.text.NumberFormat)void
android.icu.text.SimpleDateFormat.zeroPaddingNumber(long,int,int)String
android.icu.text.SimpleDateFormat.parse(String,android.icu.util.Calendar,ParsePosition)void
android.icu.text.SimpleDateFormat.matchString(String,int,int,String,android.icu.util.Calendar)int
android.icu.text.SimpleDateFormat.matchQuarterString(String,int,int,String,android.icu.util.Calendar)int
android.icu.text.SimpleDateFormat.toPattern)String
android.icu.text.SimpleDateFormat.toLocalizedPattern)String
android.icu.text.SimpleDateFormat.applyPattern(String)void
android.icu.text.SimpleDateFormat.applyLocalizedPattern(String)void
android.icu.text.SimpleDateFormat.getDateFormatSymbols)android.icu.text.DateFormatSymbols
android.icu.text.SimpleDateFormat.setDateFormatSymbols(android.icu.text.DateFormatSymbols)void
android.icu.text.SimpleDateFormat.getSymbols)android.icu.text.DateFormatSymbols
android.icu.text.SimpleDateFormat.getTimeZoneFormat)android.icu.text.TimeZoneFormat
android.icu.text.SimpleDateFormat.setTimeZoneFormat(android.icu.text.TimeZoneFormat)void
android.icu.text.SimpleDateFormat.clone)Object
android.icu.text.SimpleDateFormat.hashCode)int
android.icu.text.SimpleDateFormat.equals(Object)boolean
android.icu.text.SimpleDateFormat.formatToCharacterIterator(Object)AttributedCharacterIterator
android.icu.text.SimpleDateFormat.setNumberFormat(String,android.icu.text.NumberFormat)void
android.icu.text.SimpleDateFormat.getNumberFormat(char)android.icu.text.NumberFormat
android.icu.text.StringPrepParseException.equals(Object)boolean
android.icu.text.StringPrepParseException.hashCode)int
android.icu.text.StringPrepParseException.toString)String
android.icu.text.StringPrepParseException.getError)int
android.icu.text.StringSearch.getCollator)android.icu.text.RuleBasedCollator
android.icu.text.StringSearch.setCollator(android.icu.text.RuleBasedCollator)void
android.icu.text.StringSearch.getPattern)String
android.icu.text.StringSearch.setPattern(String)void
android.icu.text.StringSearch.isCanonical)boolean
android.icu.text.StringSearch.setCanonical(boolean)void
android.icu.text.StringSearch.setTarget(java.text.CharacterIterator)void
android.icu.text.StringSearch.getIndex)int
android.icu.text.StringSearch.setIndex(int)void
android.icu.text.StringSearch.reset)void
android.icu.text.StringSearch.handleNext(int)int
android.icu.text.StringSearch.handlePrevious(int)int
android.icu.text.TimeZoneFormat.valueOf(String)TimeType
android.icu.text.TimeZoneFormat.valueOf(String)Style
android.icu.text.TimeZoneFormat.valueOf(String)ParseOption
android.icu.text.TimeZoneFormat.valueOf(String)GMTOffsetPatternType
android.icu.text.TimeZoneFormat.getInstance(ULocale)android.icu.text.TimeZoneFormat
android.icu.text.TimeZoneFormat.getInstance(java.util.Locale)android.icu.text.TimeZoneFormat
android.icu.text.TimeZoneFormat.getTimeZoneNames)android.icu.text.TimeZoneNames
android.icu.text.TimeZoneFormat.setTimeZoneNames(android.icu.text.TimeZoneNames)android.icu.text.TimeZoneFormat
android.icu.text.TimeZoneFormat.getGMTPattern)String
android.icu.text.TimeZoneFormat.setGMTPattern(String)android.icu.text.TimeZoneFormat
android.icu.text.TimeZoneFormat.getGMTOffsetPattern(GMTOffsetPatternType)String
android.icu.text.TimeZoneFormat.setGMTOffsetPattern(GMTOffsetPatternType,String)android.icu.text.TimeZoneFormat
android.icu.text.TimeZoneFormat.getGMTOffsetDigits)String
android.icu.text.TimeZoneFormat.setGMTOffsetDigits(String)android.icu.text.TimeZoneFormat
android.icu.text.TimeZoneFormat.getGMTZeroFormat)String
android.icu.text.TimeZoneFormat.setGMTZeroFormat(String)android.icu.text.TimeZoneFormat
android.icu.text.TimeZoneFormat.setDefaultParseOptions(java.util.EnumSet)android.icu.text.TimeZoneFormat
android.icu.text.TimeZoneFormat.getDefaultParseOptions)java.util.EnumSet
android.icu.text.TimeZoneFormat.formatOffsetISO8601Basic(int,boolean,boolean,boolean)String
android.icu.text.TimeZoneFormat.formatOffsetISO8601Extended(int,boolean,boolean,boolean)String
android.icu.text.TimeZoneFormat.formatOffsetLocalizedGMT(int)String
android.icu.text.TimeZoneFormat.formatOffsetShortLocalizedGMT(int)String
android.icu.text.TimeZoneFormat.format(Style,TimeZone,long)String
android.icu.text.TimeZoneFormat.format(Style,TimeZone,long,Output)String
android.icu.text.TimeZoneFormat.parseOffsetISO8601(String,ParsePosition)int
android.icu.text.TimeZoneFormat.parseOffsetLocalizedGMT(String,ParsePosition)int
android.icu.text.TimeZoneFormat.parseOffsetShortLocalizedGMT(String,ParsePosition)int
android.icu.text.TimeZoneFormat.parse(Style,String,ParsePosition,java.util.EnumSet,Output)TimeZone
android.icu.text.TimeZoneFormat.parse(Style,String,ParsePosition,Output)TimeZone
android.icu.text.TimeZoneFormat.parse(String,ParsePosition)TimeZone
android.icu.text.TimeZoneFormat.parse(String)TimeZone
android.icu.text.TimeZoneFormat.format(Object,StringBuffer,FieldPosition)StringBuffer
android.icu.text.TimeZoneFormat.formatToCharacterIterator(Object)AttributedCharacterIterator
android.icu.text.TimeZoneFormat.parseObject(String,ParsePosition)Object
android.icu.text.TimeZoneFormat.isFrozen)boolean
android.icu.text.TimeZoneFormat.freeze)android.icu.text.TimeZoneFormat
android.icu.text.TimeZoneFormat.cloneAsThawed)android.icu.text.TimeZoneFormat
android.icu.text.TimeZoneNames.valueOf(String)NameType
android.icu.text.TimeZoneNames.getInstance(android.icu.util.ULocale)android.icu.text.TimeZoneNames
android.icu.text.TimeZoneNames.getInstance(java.util.Locale)android.icu.text.TimeZoneNames
android.icu.text.TimeZoneNames.getTZDBInstance(android.icu.util.ULocale)android.icu.text.TimeZoneNames
android.icu.text.TimeZoneNames.getDisplayName(String,NameType,long)String
android.icu.text.TimeZoneNames.getExemplarLocationName(String)String
android.icu.text.Transliterator.set(android.icu.text.Transliterator.Position)void
android.icu.text.Transliterator.equals(Object)boolean
android.icu.text.Transliterator.hashCode)int
android.icu.text.Transliterator.toString)String
android.icu.text.Transliterator.validate(int)void
android.icu.text.Transliterator.transliterate(android.icu.text.Replaceable,int,int)int
android.icu.text.Transliterator.transliterate(android.icu.text.Replaceable)void
android.icu.text.Transliterator.transliterate(String)String
android.icu.text.Transliterator.transliterate(android.icu.text.Replaceable,android.icu.text.Transliterator.Position,String)void
android.icu.text.Transliterator.transliterate(android.icu.text.Replaceable,android.icu.text.Transliterator.Position,int)void
android.icu.text.Transliterator.transliterate(android.icu.text.Replaceable,android.icu.text.Transliterator.Position)void
android.icu.text.Transliterator.finishTransliteration(android.icu.text.Replaceable,android.icu.text.Transliterator.Position)void
android.icu.text.Transliterator.filteredTransliterate(android.icu.text.Replaceable,android.icu.text.Transliterator.Position,boolean)void
android.icu.text.Transliterator.getMaximumContextLength)int
android.icu.text.Transliterator.getID)String
android.icu.text.Transliterator.getDisplayName(String)String
android.icu.text.Transliterator.getDisplayName(String,java.util.Locale)String
android.icu.text.Transliterator.getDisplayName(String,android.icu.util.ULocale)String
android.icu.text.Transliterator.getFilter)android.icu.text.UnicodeFilter
android.icu.text.Transliterator.setFilter(android.icu.text.UnicodeFilter)void
android.icu.text.Transliterator.getInstance(String)android.icu.text.Transliterator
android.icu.text.Transliterator.getInstance(String,int)android.icu.text.Transliterator
android.icu.text.Transliterator.createFromRules(String,String,int)android.icu.text.Transliterator
android.icu.text.Transliterator.toRules(boolean)String
android.icu.text.Transliterator.getSourceSet)android.icu.text.UnicodeSet
android.icu.text.Transliterator.getTargetSet)android.icu.text.UnicodeSet
android.icu.text.Transliterator.getInverse)android.icu.text.Transliterator
android.icu.text.Transliterator.getAvailableIDs)java.util.Enumeration
android.icu.text.Transliterator.getAvailableSources)java.util.Enumeration
android.icu.text.Transliterator.getAvailableTargets(String)java.util.Enumeration
android.icu.text.Transliterator.getAvailableVariants(String,String)java.util.Enumeration
android.icu.text.UCharacterIterator.getInstance(android.icu.text.Replaceable)android.icu.text.UCharacterIterator
android.icu.text.UCharacterIterator.getInstance(String)android.icu.text.UCharacterIterator
android.icu.text.UCharacterIterator.getInstance(char)android.icu.text.UCharacterIterator
android.icu.text.UCharacterIterator.getInstance(char,int,int)android.icu.text.UCharacterIterator
android.icu.text.UCharacterIterator.getInstance(StringBuffer)android.icu.text.UCharacterIterator
android.icu.text.UCharacterIterator.getInstance(java.text.CharacterIterator)android.icu.text.UCharacterIterator
android.icu.text.UCharacterIterator.getCharacterIterator)java.text.CharacterIterator
android.icu.text.UCharacterIterator.currentCodePoint)int
android.icu.text.UCharacterIterator.nextCodePoint)int
android.icu.text.UCharacterIterator.previousCodePoint)int
android.icu.text.UCharacterIterator.setToLimit)void
android.icu.text.UCharacterIterator.setToStart)void
android.icu.text.UCharacterIterator.getText(char)int
android.icu.text.UCharacterIterator.getText)String
android.icu.text.UCharacterIterator.moveIndex(int)int
android.icu.text.UCharacterIterator.moveCodePointIndex(int)int
android.icu.text.UCharacterIterator.clone)Object
android.icu.text.UnicodeFilter.matches(android.icu.text.Replaceable,int,int,boolean)int
android.icu.text.UnicodeSet.valueOf(String)SpanCondition
android.icu.text.UnicodeSet.toString)String
android.icu.text.UnicodeSet.valueOf(String)ComparisonStyle
android.icu.text.UnicodeSet.UnicodeSet(int)transient
android.icu.text.UnicodeSet.clone)Object
android.icu.text.UnicodeSet.set(int,int)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.set(android.icu.text.UnicodeSet)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.applyPattern(String)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.applyPattern(String,boolean)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.applyPattern(String,int)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.toPattern(boolean)String
android.icu.text.UnicodeSet._generatePattern(StringBuffer,boolean)StringBuffer
android.icu.text.UnicodeSet._generatePattern(StringBuffer,boolean,boolean)StringBuffer
android.icu.text.UnicodeSet.size)int
android.icu.text.UnicodeSet.isEmpty)boolean
android.icu.text.UnicodeSet.matchesIndexValue(int)boolean
android.icu.text.UnicodeSet.matches(android.icu.text.Replaceable,int,int,boolean)int
android.icu.text.UnicodeSet.addMatchSetTo(android.icu.text.UnicodeSet)void
android.icu.text.UnicodeSet.indexOf(int)int
android.icu.text.UnicodeSet.charAt(int)int
android.icu.text.UnicodeSet.add(int,int)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.addAll(int,int)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.add(int)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.add(CharSequence)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.addAll(CharSequence)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.retainAll(CharSequence)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.complementAll(CharSequence)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.removeAll(CharSequence)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.removeAllStrings)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.from(CharSequence)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.fromAll(CharSequence)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.retain(int,int)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.retain(int)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.retain(CharSequence)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.remove(int,int)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.remove(int)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.remove(CharSequence)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.complement(int,int)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.complement(int)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.complement)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.complement(CharSequence)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.contains(int)boolean
android.icu.text.UnicodeSet.contains(int,int)boolean
android.icu.text.UnicodeSet.contains(CharSequence)boolean
android.icu.text.UnicodeSet.containsAll(android.icu.text.UnicodeSet)boolean
android.icu.text.UnicodeSet.containsAll(String)boolean
android.icu.text.UnicodeSet.containsNone(int,int)boolean
android.icu.text.UnicodeSet.containsNone(android.icu.text.UnicodeSet)boolean
android.icu.text.UnicodeSet.containsNone(CharSequence)boolean
android.icu.text.UnicodeSet.containsSome(int,int)boolean
android.icu.text.UnicodeSet.containsSome(android.icu.text.UnicodeSet)boolean
android.icu.text.UnicodeSet.containsSome(CharSequence)boolean
android.icu.text.UnicodeSet.addAll(android.icu.text.UnicodeSet)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.retainAll(android.icu.text.UnicodeSet)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.removeAll(android.icu.text.UnicodeSet)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.complementAll(android.icu.text.UnicodeSet)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.clear)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.getRangeCount)int
android.icu.text.UnicodeSet.getRangeStart(int)int
android.icu.text.UnicodeSet.getRangeEnd(int)int
android.icu.text.UnicodeSet.compact)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.equals(Object)boolean
android.icu.text.UnicodeSet.hashCode)int
android.icu.text.UnicodeSet.toString)String
android.icu.text.UnicodeSet.addAllTo(java.util.Collection)java.util.Collection
android.icu.text.UnicodeSet.add(Iterable)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.addAll(Iterable)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.applyIntPropertyValue(int,int)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.applyPropertyAlias(String,String)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.applyPropertyAlias(String,String,android.icu.text.SymbolTable)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.closeOver(int)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.isFrozen)boolean
android.icu.text.UnicodeSet.freeze)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.span(CharSequence,SpanCondition)int
android.icu.text.UnicodeSet.span(CharSequence,int,SpanCondition)int
android.icu.text.UnicodeSet.spanBack(CharSequence,SpanCondition)int
android.icu.text.UnicodeSet.spanBack(CharSequence,int,SpanCondition)int
android.icu.text.UnicodeSet.cloneAsThawed)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.ranges)Iterable
android.icu.text.UnicodeSet.iterator)java.util.Iterator
android.icu.text.UnicodeSet.containsAll(Iterable)boolean
android.icu.text.UnicodeSet.containsNone(Iterable)boolean
android.icu.text.UnicodeSet.containsSome(Iterable)boolean
android.icu.text.UnicodeSet.removeAll(Iterable)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.retainAll(Iterable)android.icu.text.UnicodeSet
android.icu.text.UnicodeSet.compareTo(android.icu.text.UnicodeSet)int
android.icu.text.UnicodeSet.compareTo(android.icu.text.UnicodeSet,ComparisonStyle)int
android.icu.text.UnicodeSet.compareTo(Iterable)int
android.icu.text.UnicodeSet.strings)java.util.Collection
android.icu.text.UnicodeSetIterator.next)boolean
android.icu.text.UnicodeSetIterator.nextRange)boolean
android.icu.text.UnicodeSetIterator.reset(android.icu.text.UnicodeSet)void
android.icu.text.UnicodeSetIterator.reset)void
android.icu.text.UnicodeSetIterator.getString)String
android.icu.text.UnicodeSetSpanner.valueOf(String)TrimOption
android.icu.text.UnicodeSetSpanner.valueOf(String)CountMethod
android.icu.text.UnicodeSetSpanner.getUnicodeSet)android.icu.text.UnicodeSet
android.icu.text.UnicodeSetSpanner.equals(Object)boolean
android.icu.text.UnicodeSetSpanner.hashCode)int
android.icu.text.UnicodeSetSpanner.countIn(CharSequence)int
android.icu.text.UnicodeSetSpanner.countIn(CharSequence,CountMethod)int
android.icu.text.UnicodeSetSpanner.countIn(CharSequence,CountMethod,UnicodeSet.SpanCondition)int
android.icu.text.UnicodeSetSpanner.deleteFrom(CharSequence)String
android.icu.text.UnicodeSetSpanner.deleteFrom(CharSequence,UnicodeSet.SpanCondition)String
android.icu.text.UnicodeSetSpanner.replaceFrom(CharSequence,CharSequence)String
android.icu.text.UnicodeSetSpanner.replaceFrom(CharSequence,CharSequence,CountMethod)String
android.icu.text.UnicodeSetSpanner.replaceFrom(CharSequence,CharSequence,CountMethod,UnicodeSet.SpanCondition)String
android.icu.text.UnicodeSetSpanner.trim(CharSequence)CharSequence
android.icu.text.UnicodeSetSpanner.trim(CharSequence,TrimOption)CharSequence
android.icu.text.UnicodeSetSpanner.trim(CharSequence,TrimOption,UnicodeSet.SpanCondition)CharSequence
android.icu.util.BuddhistCalendar.handleGetExtendedYear)int
android.icu.util.BuddhistCalendar.handleComputeMonthStart(int,int,boolean)int
android.icu.util.BuddhistCalendar.handleComputeFields(int)void
android.icu.util.BuddhistCalendar.handleGetLimit(int,int)int
android.icu.util.BuddhistCalendar.getType)String
android.icu.util.Calendar.hashCode)int
android.icu.util.Calendar.equals(Object)boolean
android.icu.util.Calendar.toString)String
android.icu.util.Calendar.getInstance)android.icu.util.Calendar
android.icu.util.Calendar.getInstance(android.icu.util.TimeZone)android.icu.util.Calendar
android.icu.util.Calendar.getInstance(java.util.Locale)android.icu.util.Calendar
android.icu.util.Calendar.getInstance(android.icu.util.ULocale)android.icu.util.Calendar
android.icu.util.Calendar.getInstance(android.icu.util.TimeZone,java.util.Locale)android.icu.util.Calendar
android.icu.util.Calendar.getInstance(android.icu.util.TimeZone,android.icu.util.ULocale)android.icu.util.Calendar
android.icu.util.Calendar.getTime)java.util.Date
android.icu.util.Calendar.setTime(java.util.Date)void
android.icu.util.Calendar.getTimeInMillis)long
android.icu.util.Calendar.setTimeInMillis(long)void
android.icu.util.Calendar.get(int)int
android.icu.util.Calendar.internalGet(int)int
android.icu.util.Calendar.internalGet(int,int)int
android.icu.util.Calendar.set(int,int)void
android.icu.util.Calendar.set(int,int,int)void
android.icu.util.Calendar.set(int,int,int,int,int)void
android.icu.util.Calendar.set(int,int,int,int,int,int)void
android.icu.util.Calendar.clear)void
android.icu.util.Calendar.clear(int)void
android.icu.util.Calendar.isSet(int)boolean
android.icu.util.Calendar.complete)void
android.icu.util.Calendar.equals(Object)boolean
android.icu.util.Calendar.isEquivalentTo(android.icu.util.Calendar)boolean
android.icu.util.Calendar.hashCode)int
android.icu.util.Calendar.before(Object)boolean
android.icu.util.Calendar.after(Object)boolean
android.icu.util.Calendar.getActualMaximum(int)int
android.icu.util.Calendar.getActualMinimum(int)int
android.icu.util.Calendar.prepareGetActual(int,boolean)void
android.icu.util.Calendar.roll(int,boolean)void
android.icu.util.Calendar.roll(int,int)void
android.icu.util.Calendar.add(int,int)void
android.icu.util.Calendar.getDisplayName(java.util.Locale)String
android.icu.util.Calendar.getDisplayName(android.icu.util.ULocale)String
android.icu.util.Calendar.compareTo(android.icu.util.Calendar)int
android.icu.util.Calendar.getDateTimeFormat(int,int,java.util.Locale)android.icu.text.DateFormat
android.icu.util.Calendar.getDateTimeFormat(int,int,android.icu.util.ULocale)android.icu.text.DateFormat
android.icu.util.Calendar.handleGetDateFormat(String,java.util.Locale)android.icu.text.DateFormat
android.icu.util.Calendar.handleGetDateFormat(String,String,java.util.Locale)android.icu.text.DateFormat
android.icu.util.Calendar.handleGetDateFormat(String,android.icu.util.ULocale)android.icu.text.DateFormat
android.icu.util.Calendar.pinField(int)void
android.icu.util.Calendar.weekNumber(int,int,int)int
android.icu.util.Calendar.weekNumber(int,int)int
android.icu.util.Calendar.fieldDifference(java.util.Date,int)int
android.icu.util.Calendar.setTimeZone(android.icu.util.TimeZone)void
android.icu.util.Calendar.getTimeZone)android.icu.util.TimeZone
android.icu.util.Calendar.setLenient(boolean)void
android.icu.util.Calendar.isLenient)boolean
android.icu.util.Calendar.setRepeatedWallTimeOption(int)void
android.icu.util.Calendar.getRepeatedWallTimeOption)int
android.icu.util.Calendar.setSkippedWallTimeOption(int)void
android.icu.util.Calendar.getSkippedWallTimeOption)int
android.icu.util.Calendar.setFirstDayOfWeek(int)void
android.icu.util.Calendar.getFirstDayOfWeek)int
android.icu.util.Calendar.setMinimalDaysInFirstWeek(int)void
android.icu.util.Calendar.getMinimalDaysInFirstWeek)int
android.icu.util.Calendar.getLimit(int,int)int
android.icu.util.Calendar.getMinimum(int)int
android.icu.util.Calendar.getMaximum(int)int
android.icu.util.Calendar.getGreatestMinimum(int)int
android.icu.util.Calendar.getLeastMaximum(int)int
android.icu.util.Calendar.isWeekend(java.util.Date)boolean
android.icu.util.Calendar.isWeekend)boolean
android.icu.util.Calendar.clone)Object
android.icu.util.Calendar.toString)String
android.icu.util.Calendar.getWeekDataForRegion(String)WeekData
android.icu.util.Calendar.getWeekData)WeekData
android.icu.util.Calendar.setWeekData(WeekData)android.icu.util.Calendar
android.icu.util.Calendar.computeFields)void
android.icu.util.Calendar.computeGregorianFields(int)void
android.icu.util.Calendar.resolveFields(int)int
android.icu.util.Calendar.newestStamp(int,int,int)int
android.icu.util.Calendar.getStamp(int)int
android.icu.util.Calendar.newerField(int,int)int
android.icu.util.Calendar.validateFields)void
android.icu.util.Calendar.validateField(int)void
android.icu.util.Calendar.validateField(int,int,int)void
android.icu.util.Calendar.computeTime)void
android.icu.util.Calendar.computeMillisInDay)int
android.icu.util.Calendar.computeZoneOffset(long,int)int
android.icu.util.Calendar.computeJulianDay)int
android.icu.util.Calendar.handleGetMonthLength(int,int)int
android.icu.util.Calendar.handleGetYearLength(int)int
android.icu.util.Calendar.handleComputeJulianDay(int)int
android.icu.util.Calendar.computeGregorianMonthStart(int,int)int
android.icu.util.Calendar.handleComputeFields(int)void
android.icu.util.Calendar.getGregorianYear)int
android.icu.util.Calendar.getGregorianMonth)int
android.icu.util.Calendar.getGregorianDayOfYear)int
android.icu.util.Calendar.getGregorianDayOfMonth)int
android.icu.util.Calendar.getFieldCount)int
android.icu.util.Calendar.internalSet(int,int)void
android.icu.util.Calendar.isGregorianLeapYear(int)boolean
android.icu.util.Calendar.gregorianMonthLength(int,int)int
android.icu.util.Calendar.gregorianPreviousMonthLength(int,int)int
android.icu.util.Calendar.floorDivide(long,long)long
android.icu.util.Calendar.floorDivide(int,int)int
android.icu.util.Calendar.floorDivide(int,int,int)int
android.icu.util.Calendar.floorDivide(long,int,int)int
android.icu.util.Calendar.fieldName(int)String
android.icu.util.Calendar.millisToJulianDay(long)int
android.icu.util.Calendar.julianDayToMillis(int)long
android.icu.util.Calendar.julianDayToDayOfWeek(int)int
android.icu.util.Calendar.internalGetTimeInMillis)long
android.icu.util.Calendar.getType)String
android.icu.util.ChineseCalendar.handleGetLimit(int,int)int
android.icu.util.ChineseCalendar.handleGetExtendedYear)int
android.icu.util.ChineseCalendar.handleGetMonthLength(int,int)int
android.icu.util.ChineseCalendar.handleGetDateFormat(String,String,android.icu.util.ULocale)android.icu.text.DateFormat
android.icu.util.ChineseCalendar.add(int,int)void
android.icu.util.ChineseCalendar.roll(int,int)void
android.icu.util.ChineseCalendar.handleComputeFields(int)void
android.icu.util.ChineseCalendar.handleComputeMonthStart(int,int,boolean)int
android.icu.util.ChineseCalendar.getType)String
android.icu.util.CopticCalendar.getType)String
android.icu.util.CopticCalendar.handleGetExtendedYear)int
android.icu.util.CopticCalendar.handleComputeFields(int)void
android.icu.util.CopticCalendar.handleComputeMonthStart(int,int,boolean)int
android.icu.util.CopticCalendar.handleGetLimit(int,int)int
android.icu.util.Currency.valueOf(String)CurrencyUsage
android.icu.util.Currency.getInstance(java.util.Locale)android.icu.util.Currency
android.icu.util.Currency.getInstance(android.icu.util.ULocale)android.icu.util.Currency
android.icu.util.Currency.getAvailableCurrencies)java.util.Set
android.icu.util.Currency.getInstance(String)android.icu.util.Currency
android.icu.util.Currency.fromJavaCurrency(java.util.Currency)android.icu.util.Currency
android.icu.util.Currency.getCurrencyCode)String
android.icu.util.Currency.getNumericCode)int
android.icu.util.Currency.getSymbol)String
android.icu.util.Currency.getSymbol(java.util.Locale)String
android.icu.util.Currency.getSymbol(android.icu.util.ULocale)String
android.icu.util.Currency.getName(java.util.Locale,int,boolean)String
android.icu.util.Currency.getName(android.icu.util.ULocale,int,boolean)String
android.icu.util.Currency.getName(java.util.Locale,int,String,boolean)String
android.icu.util.Currency.getName(android.icu.util.ULocale,int,String,boolean)String
android.icu.util.Currency.getDisplayName)String
android.icu.util.Currency.getDisplayName(java.util.Locale)String
android.icu.util.Currency.getDefaultFractionDigits)int
android.icu.util.Currency.getDefaultFractionDigits(CurrencyUsage)int
android.icu.util.Currency.getRoundingIncrement)double
android.icu.util.Currency.getRoundingIncrement(CurrencyUsage)double
android.icu.util.Currency.toString)String
android.icu.util.Currency.isAvailable(String,java.util.Date,java.util.Date)boolean
android.icu.util.DateInterval.getFromDate)long
android.icu.util.DateInterval.getToDate)long
android.icu.util.DateInterval.equals(Object)boolean
android.icu.util.DateInterval.hashCode)int
android.icu.util.DateInterval.toString)String
android.icu.util.EthiopicCalendar.getType)String
android.icu.util.EthiopicCalendar.setAmeteAlemEra(boolean)void
android.icu.util.EthiopicCalendar.isAmeteAlemEra)boolean
android.icu.util.EthiopicCalendar.handleGetExtendedYear)int
android.icu.util.EthiopicCalendar.handleComputeFields(int)void
android.icu.util.EthiopicCalendar.handleGetLimit(int,int)int
android.icu.util.EthiopicCalendar.handleComputeMonthStart(int,int,boolean)int
android.icu.util.GregorianCalendar.handleGetLimit(int,int)int
android.icu.util.GregorianCalendar.setGregorianChange(java.util.Date)void
android.icu.util.GregorianCalendar.getGregorianChange)java.util.Date
android.icu.util.GregorianCalendar.isLeapYear(int)boolean
android.icu.util.GregorianCalendar.isEquivalentTo(android.icu.util.Calendar)boolean
android.icu.util.GregorianCalendar.hashCode)int
android.icu.util.GregorianCalendar.roll(int,int)void
android.icu.util.GregorianCalendar.getActualMinimum(int)int
android.icu.util.GregorianCalendar.getActualMaximum(int)int
android.icu.util.GregorianCalendar.handleGetMonthLength(int,int)int
android.icu.util.GregorianCalendar.handleGetYearLength(int)int
android.icu.util.GregorianCalendar.handleComputeFields(int)void
android.icu.util.GregorianCalendar.handleGetExtendedYear)int
android.icu.util.GregorianCalendar.handleComputeJulianDay(int)int
android.icu.util.GregorianCalendar.handleComputeMonthStart(int,int,boolean)int
android.icu.util.GregorianCalendar.getType)String
android.icu.util.HebrewCalendar.add(int,int)void
android.icu.util.HebrewCalendar.roll(int,int)void
android.icu.util.HebrewCalendar.handleGetLimit(int,int)int
android.icu.util.HebrewCalendar.handleGetMonthLength(int,int)int
android.icu.util.HebrewCalendar.handleGetYearLength(int)int
android.icu.util.HebrewCalendar.validateField(int)void
android.icu.util.HebrewCalendar.handleComputeFields(int)void
android.icu.util.HebrewCalendar.handleGetExtendedYear)int
android.icu.util.HebrewCalendar.handleComputeMonthStart(int,int,boolean)int
android.icu.util.HebrewCalendar.getType)String
android.icu.util.IllformedLocaleException.getErrorIndex)int
android.icu.util.IndianCalendar.handleGetExtendedYear)int
android.icu.util.IndianCalendar.handleGetYearLength(int)int
android.icu.util.IndianCalendar.handleGetMonthLength(int,int)int
android.icu.util.IndianCalendar.handleComputeFields(int)void
android.icu.util.IndianCalendar.handleGetLimit(int,int)int
android.icu.util.IndianCalendar.handleComputeMonthStart(int,int,boolean)int
android.icu.util.IndianCalendar.getType)String
android.icu.util.IslamicCalendar.valueOf(String)CalculationType
android.icu.util.IslamicCalendar.handleGetLimit(int,int)int
android.icu.util.IslamicCalendar.handleGetMonthLength(int,int)int
android.icu.util.IslamicCalendar.handleGetYearLength(int)int
android.icu.util.IslamicCalendar.handleComputeMonthStart(int,int,boolean)int
android.icu.util.IslamicCalendar.handleGetExtendedYear)int
android.icu.util.IslamicCalendar.handleComputeFields(int)void
android.icu.util.IslamicCalendar.setCalculationType(CalculationType)void
android.icu.util.IslamicCalendar.getCalculationType)CalculationType
android.icu.util.IslamicCalendar.getType)String
android.icu.util.JapaneseCalendar.handleGetExtendedYear)int
android.icu.util.JapaneseCalendar.handleComputeFields(int)void
android.icu.util.JapaneseCalendar.handleGetLimit(int,int)int
android.icu.util.JapaneseCalendar.getType)String
android.icu.util.JapaneseCalendar.getActualMaximum(int)int
android.icu.util.LocaleData.getHeight)int
android.icu.util.LocaleData.getWidth)int
android.icu.util.LocaleData.getInstance(android.icu.util.ULocale)android.icu.util.LocaleData
android.icu.util.LocaleData.getInstance)android.icu.util.LocaleData
android.icu.util.LocaleData.setNoSubstitute(boolean)void
android.icu.util.LocaleData.getNoSubstitute)boolean
android.icu.util.LocaleData.getDelimiter(int)String
android.icu.util.LocaleData.getMeasurementSystem(android.icu.util.ULocale)MeasurementSystem
android.icu.util.LocaleData.getPaperSize(android.icu.util.ULocale)PaperSize
android.icu.util.LocaleData.getCLDRVersion)android.icu.util.VersionInfo
android.icu.util.Measure.equals(Object)boolean
android.icu.util.Measure.hashCode)int
android.icu.util.Measure.toString)String
android.icu.util.Measure.getNumber)Number
android.icu.util.Measure.getUnit)android.icu.util.MeasureUnit
android.icu.util.MeasureUnit.getType)String
android.icu.util.MeasureUnit.getSubtype)String
android.icu.util.MeasureUnit.hashCode)int
android.icu.util.MeasureUnit.equals(Object)boolean
android.icu.util.MeasureUnit.toString)String
android.icu.util.Output.toString)String
android.icu.util.TaiwanCalendar.handleGetExtendedYear)int
android.icu.util.TaiwanCalendar.handleComputeFields(int)void
android.icu.util.TaiwanCalendar.handleGetLimit(int,int)int
android.icu.util.TaiwanCalendar.getType)String
android.icu.util.TimeZone.valueOf(String)SystemTimeZoneType
android.icu.util.TimeZone.getOffset(long)int
android.icu.util.TimeZone.getOffset(long,boolean,int)void
android.icu.util.TimeZone.getID)String
android.icu.util.TimeZone.setID(String)void
android.icu.util.TimeZone.getDisplayName)String
android.icu.util.TimeZone.getDisplayName(Locale)String
android.icu.util.TimeZone.getDisplayName(android.icu.util.ULocale)String
android.icu.util.TimeZone.getDisplayName(boolean,int)String
android.icu.util.TimeZone.getDisplayName(boolean,int,Locale)String
android.icu.util.TimeZone.getDisplayName(boolean,int,android.icu.util.ULocale)String
android.icu.util.TimeZone.getDSTSavings)int
android.icu.util.TimeZone.observesDaylightTime)boolean
android.icu.util.TimeZone.getTimeZone(String)android.icu.util.TimeZone
android.icu.util.TimeZone.getFrozenTimeZone(String)android.icu.util.TimeZone
android.icu.util.TimeZone.getTimeZone(String,int)android.icu.util.TimeZone
android.icu.util.TimeZone.getAvailableIDs(SystemTimeZoneType,String,Integer)Set
android.icu.util.TimeZone.countEquivalentIDs(String)int
android.icu.util.TimeZone.getEquivalentID(String,int)String
android.icu.util.TimeZone.getDefault)android.icu.util.TimeZone
android.icu.util.TimeZone.hasSameRules(android.icu.util.TimeZone)boolean
android.icu.util.TimeZone.clone)Object
android.icu.util.TimeZone.equals(Object)boolean
android.icu.util.TimeZone.hashCode)int
android.icu.util.TimeZone.getTZDataVersion)String
android.icu.util.TimeZone.getCanonicalID(String)String
android.icu.util.TimeZone.getCanonicalID(String,boolean)String
android.icu.util.TimeZone.getRegion(String)String
android.icu.util.TimeZone.getWindowsID(String)String
android.icu.util.TimeZone.getIDForWindowsID(String,String)String
android.icu.util.TimeZone.isFrozen)boolean
android.icu.util.TimeZone.freeze)android.icu.util.TimeZone
android.icu.util.TimeZone.cloneAsThawed)android.icu.util.TimeZone
android.icu.util.ULocale.valueOf(String)Category
android.icu.util.ULocale.setLocale(android.icu.util.ULocale)Builder
android.icu.util.ULocale.setLanguageTag(String)Builder
android.icu.util.ULocale.setLanguage(String)Builder
android.icu.util.ULocale.setScript(String)Builder
android.icu.util.ULocale.setRegion(String)Builder
android.icu.util.ULocale.setVariant(String)Builder
android.icu.util.ULocale.setExtension(char,String)Builder
android.icu.util.ULocale.setUnicodeLocaleKeyword(String,String)Builder
android.icu.util.ULocale.addUnicodeLocaleAttribute(String)Builder
android.icu.util.ULocale.removeUnicodeLocaleAttribute(String)Builder
android.icu.util.ULocale.clear)Builder
android.icu.util.ULocale.clearExtensions)Builder
android.icu.util.ULocale.build)android.icu.util.ULocale
android.icu.util.ULocale.forLocale(Locale)android.icu.util.ULocale
android.icu.util.ULocale.createCanonical(String)android.icu.util.ULocale
android.icu.util.ULocale.toLocale)Locale
android.icu.util.ULocale.getDefault)android.icu.util.ULocale
android.icu.util.ULocale.getDefault(Category)android.icu.util.ULocale
android.icu.util.ULocale.clone)Object
android.icu.util.ULocale.hashCode)int
android.icu.util.ULocale.equals(Object)boolean
android.icu.util.ULocale.compareTo(android.icu.util.ULocale)int
android.icu.util.ULocale.getLanguage)String
android.icu.util.ULocale.getLanguage(String)String
android.icu.util.ULocale.getScript)String
android.icu.util.ULocale.getScript(String)String
android.icu.util.ULocale.getCountry)String
android.icu.util.ULocale.getCountry(String)String
android.icu.util.ULocale.getVariant)String
android.icu.util.ULocale.getVariant(String)String
android.icu.util.ULocale.getFallback(String)String
android.icu.util.ULocale.getFallback)android.icu.util.ULocale
android.icu.util.ULocale.getBaseName)String
android.icu.util.ULocale.getBaseName(String)String
android.icu.util.ULocale.getName)String
android.icu.util.ULocale.getName(String)String
android.icu.util.ULocale.toString)String
android.icu.util.ULocale.getKeywords)Iterator
android.icu.util.ULocale.getKeywords(String)Iterator
android.icu.util.ULocale.getKeywordValue(String)String
android.icu.util.ULocale.getKeywordValue(String,String)String
android.icu.util.ULocale.canonicalize(String)String
android.icu.util.ULocale.setKeywordValue(String,String)android.icu.util.ULocale
android.icu.util.ULocale.setKeywordValue(String,String,String)String
android.icu.util.ULocale.getISO3Language)String
android.icu.util.ULocale.getISO3Language(String)String
android.icu.util.ULocale.getISO3Country)String
android.icu.util.ULocale.getISO3Country(String)String
android.icu.util.ULocale.isRightToLeft)boolean
android.icu.util.ULocale.getDisplayLanguage)String
android.icu.util.ULocale.getDisplayLanguage(android.icu.util.ULocale)String
android.icu.util.ULocale.getDisplayLanguage(String,String)String
android.icu.util.ULocale.getDisplayLanguage(String,android.icu.util.ULocale)String
android.icu.util.ULocale.getDisplayLanguageWithDialect)String
android.icu.util.ULocale.getDisplayLanguageWithDialect(android.icu.util.ULocale)String
android.icu.util.ULocale.getDisplayLanguageWithDialect(String,String)String
android.icu.util.ULocale.getDisplayLanguageWithDialect(String,android.icu.util.ULocale)String
android.icu.util.ULocale.getDisplayScript)String
android.icu.util.ULocale.getDisplayScript(android.icu.util.ULocale)String
android.icu.util.ULocale.getDisplayScript(String,String)String
android.icu.util.ULocale.getDisplayScript(String,android.icu.util.ULocale)String
android.icu.util.ULocale.getDisplayCountry)String
android.icu.util.ULocale.getDisplayCountry(android.icu.util.ULocale)String
android.icu.util.ULocale.getDisplayCountry(String,String)String
android.icu.util.ULocale.getDisplayCountry(String,android.icu.util.ULocale)String
android.icu.util.ULocale.getDisplayVariant)String
android.icu.util.ULocale.getDisplayVariant(android.icu.util.ULocale)String
android.icu.util.ULocale.getDisplayVariant(String,String)String
android.icu.util.ULocale.getDisplayVariant(String,android.icu.util.ULocale)String
android.icu.util.ULocale.getDisplayKeyword(String)String
android.icu.util.ULocale.getDisplayKeyword(String,String)String
android.icu.util.ULocale.getDisplayKeyword(String,android.icu.util.ULocale)String
android.icu.util.ULocale.getDisplayKeywordValue(String)String
android.icu.util.ULocale.getDisplayKeywordValue(String,android.icu.util.ULocale)String
android.icu.util.ULocale.getDisplayKeywordValue(String,String,String)String
android.icu.util.ULocale.getDisplayKeywordValue(String,String,android.icu.util.ULocale)String
android.icu.util.ULocale.getDisplayName)String
android.icu.util.ULocale.getDisplayName(android.icu.util.ULocale)String
android.icu.util.ULocale.getDisplayName(String,String)String
android.icu.util.ULocale.getDisplayName(String,android.icu.util.ULocale)String
android.icu.util.ULocale.getDisplayNameWithDialect)String
android.icu.util.ULocale.getDisplayNameWithDialect(android.icu.util.ULocale)String
android.icu.util.ULocale.getDisplayNameWithDialect(String,String)String
android.icu.util.ULocale.getDisplayNameWithDialect(String,android.icu.util.ULocale)String
android.icu.util.ULocale.getCharacterOrientation)String
android.icu.util.ULocale.getLineOrientation)String
android.icu.util.ULocale.acceptLanguage(String,android.icu.util.ULocale,boolean)android.icu.util.ULocale
android.icu.util.ULocale.acceptLanguage(android.icu.util.ULocale,android.icu.util.ULocale,boolean)android.icu.util.ULocale
android.icu.util.ULocale.acceptLanguage(String,boolean)android.icu.util.ULocale
android.icu.util.ULocale.acceptLanguage(android.icu.util.ULocale,boolean)android.icu.util.ULocale
android.icu.util.ULocale.addLikelySubtags(android.icu.util.ULocale)android.icu.util.ULocale
android.icu.util.ULocale.minimizeSubtags(android.icu.util.ULocale)android.icu.util.ULocale
android.icu.util.ULocale.getExtension(char)String
android.icu.util.ULocale.getExtensionKeys)Set
android.icu.util.ULocale.getUnicodeLocaleAttributes)Set
android.icu.util.ULocale.getUnicodeLocaleType(String)String
android.icu.util.ULocale.getUnicodeLocaleKeys)Set
android.icu.util.ULocale.toLanguageTag)String
android.icu.util.ULocale.forLanguageTag(String)android.icu.util.ULocale
android.icu.util.ULocale.toUnicodeLocaleKey(String)String
android.icu.util.ULocale.toUnicodeLocaleType(String,String)String
android.icu.util.ULocale.toLegacyKey(String)String
android.icu.util.ULocale.toLegacyType(String,String)String
android.icu.util.UniversalTimeScale.from(long,int)long
android.icu.util.UniversalTimeScale.bigDecimalFrom(double,int)android.icu.math.BigDecimal
android.icu.util.UniversalTimeScale.bigDecimalFrom(long,int)android.icu.math.BigDecimal
android.icu.util.UniversalTimeScale.bigDecimalFrom(android.icu.math.BigDecimal,int)android.icu.math.BigDecimal
android.icu.util.UniversalTimeScale.toLong(long,int)long
android.icu.util.UniversalTimeScale.toBigDecimal(long,int)android.icu.math.BigDecimal
android.icu.util.UniversalTimeScale.toBigDecimal(android.icu.math.BigDecimal,int)android.icu.math.BigDecimal
android.icu.util.UniversalTimeScale.getTimeScaleValue(int,int)long
android.icu.util.VersionInfo.getInstance(String)android.icu.util.VersionInfo
android.icu.util.VersionInfo.getInstance(int,int,int,int)android.icu.util.VersionInfo
android.icu.util.VersionInfo.getInstance(int,int,int)android.icu.util.VersionInfo
android.icu.util.VersionInfo.getInstance(int,int)android.icu.util.VersionInfo
android.icu.util.VersionInfo.getInstance(int)android.icu.util.VersionInfo
android.icu.util.VersionInfo.toString)String
android.icu.util.VersionInfo.getMajor)int
android.icu.util.VersionInfo.getMinor)int
android.icu.util.VersionInfo.getMilli)int
android.icu.util.VersionInfo.getMicro)int
android.icu.util.VersionInfo.equals(Object)boolean
android.icu.util.VersionInfo.hashCode)int
android.icu.util.VersionInfo.compareTo(android.icu.util.VersionInfo)int
android.inputmethodservice.AbstractInputMethodService.isEnabled)boolean
android.inputmethodservice.AbstractInputMethodService.isRevoked)boolean
android.inputmethodservice.AbstractInputMethodService.setEnabled(boolean)void
android.inputmethodservice.AbstractInputMethodService.revokeSelf)void
android.inputmethodservice.AbstractInputMethodService.dispatchKeyEvent(int,android.view.KeyEvent,android.view.inputmethod.InputMethodSession.EventCallback)void
android.inputmethodservice.AbstractInputMethodService.dispatchTrackballEvent(int,android.view.MotionEvent,android.view.inputmethod.InputMethodSession.EventCallback)void
android.inputmethodservice.AbstractInputMethodService.dispatchGenericMotionEvent(int,android.view.MotionEvent,android.view.inputmethod.InputMethodSession.EventCallback)void
android.inputmethodservice.AbstractInputMethodService.createSession(android.view.inputmethod.InputMethod.SessionCallback)void
android.inputmethodservice.AbstractInputMethodService.setSessionEnabled(android.view.inputmethod.InputMethodSession,boolean)void
android.inputmethodservice.AbstractInputMethodService.revokeSession(android.view.inputmethod.InputMethodSession)void
android.inputmethodservice.AbstractInputMethodService.dump(java.io.FileDescriptor,java.io.PrintWriter,String)void
android.inputmethodservice.AbstractInputMethodService.onBind(android.content.Intent)android.os.IBinder
android.inputmethodservice.AbstractInputMethodService.onTrackballEvent(android.view.MotionEvent)boolean
android.inputmethodservice.AbstractInputMethodService.onGenericMotionEvent(android.view.MotionEvent)boolean
android.inputmethodservice.ExtractEditText.startInternalChanges)void
android.inputmethodservice.ExtractEditText.finishInternalChanges)void
android.inputmethodservice.ExtractEditText.setExtractedText(android.view.inputmethod.ExtractedText)void
android.inputmethodservice.ExtractEditText.onSelectionChanged(int,int)void
android.inputmethodservice.ExtractEditText.performClick)boolean
android.inputmethodservice.ExtractEditText.onTextContextMenuItem(int)boolean
android.inputmethodservice.ExtractEditText.isInputMethodTarget)boolean
android.inputmethodservice.ExtractEditText.hasVerticalScrollBar)boolean
android.inputmethodservice.ExtractEditText.hasWindowFocus)boolean
android.inputmethodservice.ExtractEditText.isFocused)boolean
android.inputmethodservice.ExtractEditText.hasFocus)boolean
android.inputmethodservice.InputMethodService.finishInput)void
android.inputmethodservice.InputMethodService.displayCompletions(CompletionInfo)void
android.inputmethodservice.InputMethodService.updateExtractedText(int,ExtractedText)void
android.inputmethodservice.InputMethodService.updateSelection(int,int,int,int,int,int)void
android.inputmethodservice.InputMethodService.viewClicked(boolean)void
android.inputmethodservice.InputMethodService.updateCursor(android.graphics.Rect)void
android.inputmethodservice.InputMethodService.appPrivateCommand(String,Bundle)void
android.inputmethodservice.InputMethodService.toggleSoftInput(int,int)void
android.inputmethodservice.InputMethodService.updateCursorAnchorInfo(CursorAnchorInfo)void
android.inputmethodservice.InputMethodService.attachToken(IBinder)void
android.inputmethodservice.InputMethodService.bindInput(InputBinding)void
android.inputmethodservice.InputMethodService.unbindInput)void
android.inputmethodservice.InputMethodService.startInput(InputConnection,EditorInfo)void
android.inputmethodservice.InputMethodService.restartInput(InputConnection,EditorInfo)void
android.inputmethodservice.InputMethodService.hideSoftInput(int,ResultReceiver)void
android.inputmethodservice.InputMethodService.showSoftInput(int,ResultReceiver)void
android.inputmethodservice.InputMethodService.changeInputMethodSubtype(InputMethodSubtype)void
android.inputmethodservice.InputMethodService.setTheme(int)void
android.inputmethodservice.InputMethodService.enableHardwareAcceleration)boolean
android.inputmethodservice.InputMethodService.onCreate)void
android.inputmethodservice.InputMethodService.onInitializeInterface)void
android.inputmethodservice.InputMethodService.onDestroy)void
android.inputmethodservice.InputMethodService.onConfigurationChanged(android.content.res.Configuration)void
android.inputmethodservice.InputMethodService.getLayoutInflater)LayoutInflater
android.inputmethodservice.InputMethodService.getWindow)android.app.Dialog
android.inputmethodservice.InputMethodService.setBackDisposition(int)void
android.inputmethodservice.InputMethodService.getBackDisposition)int
android.inputmethodservice.InputMethodService.getMaxWidth)int
android.inputmethodservice.InputMethodService.getCurrentInputBinding)InputBinding
android.inputmethodservice.InputMethodService.getCurrentInputConnection)InputConnection
android.inputmethodservice.InputMethodService.switchToPreviousInputMethod)boolean
android.inputmethodservice.InputMethodService.switchToNextInputMethod(boolean)boolean
android.inputmethodservice.InputMethodService.shouldOfferSwitchingToNextInputMethod)boolean
android.inputmethodservice.InputMethodService.getCurrentInputStarted)boolean
android.inputmethodservice.InputMethodService.getCurrentInputEditorInfo)EditorInfo
android.inputmethodservice.InputMethodService.updateFullscreenMode)void
android.inputmethodservice.InputMethodService.onConfigureWindow(Window,boolean,boolean)void
android.inputmethodservice.InputMethodService.isFullscreenMode)boolean
android.inputmethodservice.InputMethodService.onEvaluateFullscreenMode)boolean
android.inputmethodservice.InputMethodService.setExtractViewShown(boolean)void
android.inputmethodservice.InputMethodService.isExtractViewShown)boolean
android.inputmethodservice.InputMethodService.onComputeInsets(Insets)void
android.inputmethodservice.InputMethodService.updateInputViewShown)void
android.inputmethodservice.InputMethodService.isShowInputRequested)boolean
android.inputmethodservice.InputMethodService.isInputViewShown)boolean
android.inputmethodservice.InputMethodService.onEvaluateInputViewShown)boolean
android.inputmethodservice.InputMethodService.setCandidatesViewShown(boolean)void
android.inputmethodservice.InputMethodService.getCandidatesHiddenVisibility)int
android.inputmethodservice.InputMethodService.showStatusIcon(int)void
android.inputmethodservice.InputMethodService.hideStatusIcon)void
android.inputmethodservice.InputMethodService.switchInputMethod(String)void
android.inputmethodservice.InputMethodService.switchInputMethod(String,InputMethodSubtype)void
android.inputmethodservice.InputMethodService.setExtractView(View)void
android.inputmethodservice.InputMethodService.setCandidatesView(View)void
android.inputmethodservice.InputMethodService.setInputView(View)void
android.inputmethodservice.InputMethodService.onCreateExtractTextView)View
android.inputmethodservice.InputMethodService.onCreateCandidatesView)View
android.inputmethodservice.InputMethodService.onCreateInputView)View
android.inputmethodservice.InputMethodService.onStartInputView(EditorInfo,boolean)void
android.inputmethodservice.InputMethodService.onFinishInputView(boolean)void
android.inputmethodservice.InputMethodService.onStartCandidatesView(EditorInfo,boolean)void
android.inputmethodservice.InputMethodService.onFinishCandidatesView(boolean)void
android.inputmethodservice.InputMethodService.onShowInputRequested(int,boolean)boolean
android.inputmethodservice.InputMethodService.showWindow(boolean)void
android.inputmethodservice.InputMethodService.hideWindow)void
android.inputmethodservice.InputMethodService.onWindowShown)void
android.inputmethodservice.InputMethodService.onWindowHidden)void
android.inputmethodservice.InputMethodService.onBindInput)void
android.inputmethodservice.InputMethodService.onUnbindInput)void
android.inputmethodservice.InputMethodService.onStartInput(EditorInfo,boolean)void
android.inputmethodservice.InputMethodService.onFinishInput)void
android.inputmethodservice.InputMethodService.onDisplayCompletions(CompletionInfo)void
android.inputmethodservice.InputMethodService.onUpdateExtractedText(int,ExtractedText)void
android.inputmethodservice.InputMethodService.onUpdateSelection(int,int,int,int,int,int)void
android.inputmethodservice.InputMethodService.onViewClicked(boolean)void
android.inputmethodservice.InputMethodService.onUpdateCursor(android.graphics.Rect)void
android.inputmethodservice.InputMethodService.onUpdateCursorAnchorInfo(CursorAnchorInfo)void
android.inputmethodservice.InputMethodService.requestHideSelf(int)void
android.inputmethodservice.InputMethodService.requestShowSelf(int)void
android.inputmethodservice.InputMethodService.onKeyDown(int,KeyEvent)boolean
android.inputmethodservice.InputMethodService.onKeyLongPress(int,KeyEvent)boolean
android.inputmethodservice.InputMethodService.onKeyMultiple(int,int,KeyEvent)boolean
android.inputmethodservice.InputMethodService.onKeyUp(int,KeyEvent)boolean
android.inputmethodservice.InputMethodService.onTrackballEvent(MotionEvent)boolean
android.inputmethodservice.InputMethodService.onGenericMotionEvent(MotionEvent)boolean
android.inputmethodservice.InputMethodService.onAppPrivateCommand(String,Bundle)void
android.inputmethodservice.InputMethodService.sendDownUpKeyEvents(int)void
android.inputmethodservice.InputMethodService.sendDefaultEditorAction(boolean)boolean
android.inputmethodservice.InputMethodService.sendKeyChar(char)void
android.inputmethodservice.InputMethodService.onExtractedSelectionChanged(int,int)void
android.inputmethodservice.InputMethodService.onExtractedTextClicked)void
android.inputmethodservice.InputMethodService.onExtractedCursorMovement(int,int)void
android.inputmethodservice.InputMethodService.onExtractTextContextMenuItem(int)boolean
android.inputmethodservice.InputMethodService.getTextForImeAction(int)CharSequence
android.inputmethodservice.InputMethodService.onUpdateExtractingVisibility(EditorInfo)void
android.inputmethodservice.InputMethodService.onUpdateExtractingViews(EditorInfo)void
android.inputmethodservice.InputMethodService.onExtractingInputChanged(EditorInfo)void
android.inputmethodservice.InputMethodService.onCurrentInputMethodSubtypeChanged(InputMethodSubtype)void
android.inputmethodservice.InputMethodService.getInputMethodWindowRecommendedHeight)int
android.inputmethodservice.InputMethodService.dump(java.io.FileDescriptor,java.io.PrintWriter,String)void
android.inputmethodservice.Keyboard.onPressed)void
android.inputmethodservice.Keyboard.onReleased(boolean)void
android.inputmethodservice.Keyboard.isInside(int,int)boolean
android.inputmethodservice.Keyboard.squaredDistanceFrom(int,int)int
android.inputmethodservice.Keyboard.getKeys)java.util.List
android.inputmethodservice.Keyboard.getModifierKeys)java.util.List
android.inputmethodservice.Keyboard.getHorizontalGap)int
android.inputmethodservice.Keyboard.setHorizontalGap(int)void
android.inputmethodservice.Keyboard.getVerticalGap)int
android.inputmethodservice.Keyboard.setVerticalGap(int)void
android.inputmethodservice.Keyboard.getKeyHeight)int
android.inputmethodservice.Keyboard.setKeyHeight(int)void
android.inputmethodservice.Keyboard.getKeyWidth)int
android.inputmethodservice.Keyboard.setKeyWidth(int)void
android.inputmethodservice.Keyboard.getHeight)int
android.inputmethodservice.Keyboard.getMinWidth)int
android.inputmethodservice.Keyboard.setShifted(boolean)boolean
android.inputmethodservice.Keyboard.isShifted)boolean
android.inputmethodservice.Keyboard.getShiftKeyIndex)int
android.inputmethodservice.Keyboard.createRowFromXml(android.content.res.Resources,android.content.res.XmlResourceParser)android.inputmethodservice.Keyboard.Row
android.inputmethodservice.Keyboard.createKeyFromXml(android.content.res.Resources,android.inputmethodservice.Keyboard.Row,int,int,android.content.res.XmlResourceParser)android.inputmethodservice.Keyboard.Key
android.inputmethodservice.KeyboardView.onAttachedToWindow)void
android.inputmethodservice.KeyboardView.setOnKeyboardActionListener(android.inputmethodservice.KeyboardView.OnKeyboardActionListener)void
android.inputmethodservice.KeyboardView.getOnKeyboardActionListener)android.inputmethodservice.KeyboardView.OnKeyboardActionListener
android.inputmethodservice.KeyboardView.setKeyboard(android.inputmethodservice.Keyboard)void
android.inputmethodservice.KeyboardView.getKeyboard)android.inputmethodservice.Keyboard
android.inputmethodservice.KeyboardView.setShifted(boolean)boolean
android.inputmethodservice.KeyboardView.isShifted)boolean
android.inputmethodservice.KeyboardView.setPreviewEnabled(boolean)void
android.inputmethodservice.KeyboardView.isPreviewEnabled)boolean
android.inputmethodservice.KeyboardView.setVerticalCorrection(int)void
android.inputmethodservice.KeyboardView.setPopupParent(android.view.View)void
android.inputmethodservice.KeyboardView.setPopupOffset(int,int)void
android.inputmethodservice.KeyboardView.setProximityCorrectionEnabled(boolean)void
android.inputmethodservice.KeyboardView.isProximityCorrectionEnabled)boolean
android.inputmethodservice.KeyboardView.onClick(android.view.View)void
android.inputmethodservice.KeyboardView.onMeasure(int,int)void
android.inputmethodservice.KeyboardView.onSizeChanged(int,int,int,int)void
android.inputmethodservice.KeyboardView.onDraw(android.graphics.Canvas)void
android.inputmethodservice.KeyboardView.invalidateAllKeys)void
android.inputmethodservice.KeyboardView.invalidateKey(int)void
android.inputmethodservice.KeyboardView.onLongPress(Keyboard.Key)boolean
android.inputmethodservice.KeyboardView.onHoverEvent(android.view.MotionEvent)boolean
android.inputmethodservice.KeyboardView.onTouchEvent(android.view.MotionEvent)boolean
android.inputmethodservice.KeyboardView.swipeRight)void
android.inputmethodservice.KeyboardView.swipeLeft)void
android.inputmethodservice.KeyboardView.swipeUp)void
android.inputmethodservice.KeyboardView.swipeDown)void
android.inputmethodservice.KeyboardView.closing)void
android.inputmethodservice.KeyboardView.onDetachedFromWindow)void
android.inputmethodservice.KeyboardView.handleBack)boolean
android.location.Address.getLocale)java.util.Locale
android.location.Address.getMaxAddressLineIndex)int
android.location.Address.getAddressLine(int)String
android.location.Address.setAddressLine(int,String)void
android.location.Address.getFeatureName)String
android.location.Address.setFeatureName(String)void
android.location.Address.getAdminArea)String
android.location.Address.setAdminArea(String)void
android.location.Address.getSubAdminArea)String
android.location.Address.setSubAdminArea(String)void
android.location.Address.getLocality)String
android.location.Address.setLocality(String)void
android.location.Address.getSubLocality)String
android.location.Address.setSubLocality(String)void
android.location.Address.getThoroughfare)String
android.location.Address.setThoroughfare(String)void
android.location.Address.getSubThoroughfare)String
android.location.Address.setSubThoroughfare(String)void
android.location.Address.getPremises)String
android.location.Address.setPremises(String)void
android.location.Address.getPostalCode)String
android.location.Address.setPostalCode(String)void
android.location.Address.getCountryCode)String
android.location.Address.setCountryCode(String)void
android.location.Address.getCountryName)String
android.location.Address.setCountryName(String)void
android.location.Address.hasLatitude)boolean
android.location.Address.getLatitude)double
android.location.Address.setLatitude(double)void
android.location.Address.clearLatitude)void
android.location.Address.hasLongitude)boolean
android.location.Address.getLongitude)double
android.location.Address.setLongitude(double)void
android.location.Address.clearLongitude)void
android.location.Address.getPhone)String
android.location.Address.setPhone(String)void
android.location.Address.getUrl)String
android.location.Address.setUrl(String)void
android.location.Address.getExtras)Bundle
android.location.Address.setExtras(Bundle)void
android.location.Address.toString)String
android.location.Address.describeContents)int
android.location.Address.writeToParcel(Parcel,int)void
android.location.Criteria.setHorizontalAccuracy(int)void
android.location.Criteria.getHorizontalAccuracy)int
android.location.Criteria.setVerticalAccuracy(int)void
android.location.Criteria.getVerticalAccuracy)int
android.location.Criteria.setSpeedAccuracy(int)void
android.location.Criteria.getSpeedAccuracy)int
android.location.Criteria.setBearingAccuracy(int)void
android.location.Criteria.getBearingAccuracy)int
android.location.Criteria.setAccuracy(int)void
android.location.Criteria.getAccuracy)int
android.location.Criteria.setPowerRequirement(int)void
android.location.Criteria.getPowerRequirement)int
android.location.Criteria.setCostAllowed(boolean)void
android.location.Criteria.isCostAllowed)boolean
android.location.Criteria.setAltitudeRequired(boolean)void
android.location.Criteria.isAltitudeRequired)boolean
android.location.Criteria.setSpeedRequired(boolean)void
android.location.Criteria.isSpeedRequired)boolean
android.location.Criteria.setBearingRequired(boolean)void
android.location.Criteria.isBearingRequired)boolean
android.location.Criteria.describeContents)int
android.location.Criteria.writeToParcel(android.os.Parcel,int)void
android.location.Criteria.toString)String
android.location.Geocoder.isPresent)boolean
android.location.Geocoder.getFromLocation(double,double,int)java.util.List
android.location.Geocoder.getFromLocationName(String,int)java.util.List
android.location.Geocoder.getFromLocationName(String,int,double,double,double,double)java.util.List
android.location.GnssClock.hasLeapSecond)boolean
android.location.GnssClock.getLeapSecond)int
android.location.GnssClock.getTimeNanos)long
android.location.GnssClock.hasTimeUncertaintyNanos)boolean
android.location.GnssClock.getTimeUncertaintyNanos)double
android.location.GnssClock.hasFullBiasNanos)boolean
android.location.GnssClock.getFullBiasNanos)long
android.location.GnssClock.hasBiasNanos)boolean
android.location.GnssClock.getBiasNanos)double
android.location.GnssClock.hasBiasUncertaintyNanos)boolean
android.location.GnssClock.getBiasUncertaintyNanos)double
android.location.GnssClock.hasDriftNanosPerSecond)boolean
android.location.GnssClock.getDriftNanosPerSecond)double
android.location.GnssClock.hasDriftUncertaintyNanosPerSecond)boolean
android.location.GnssClock.getDriftUncertaintyNanosPerSecond)double
android.location.GnssClock.hasElapsedRealtimeNanos)boolean
android.location.GnssClock.getElapsedRealtimeNanos)long
android.location.GnssClock.hasElapsedRealtimeUncertaintyNanos)boolean
android.location.GnssClock.getElapsedRealtimeUncertaintyNanos)double
android.location.GnssClock.getHardwareClockDiscontinuityCount)int
android.location.GnssClock.writeToParcel(android.os.Parcel,int)void
android.location.GnssClock.describeContents)int
android.location.GnssClock.toString)String
android.location.GnssMeasurement.getSvid)int
android.location.GnssMeasurement.getConstellationType)int
android.location.GnssMeasurement.getTimeOffsetNanos)double
android.location.GnssMeasurement.getState)int
android.location.GnssMeasurement.getReceivedSvTimeNanos)long
android.location.GnssMeasurement.getReceivedSvTimeUncertaintyNanos)long
android.location.GnssMeasurement.getCn0DbHz)double
android.location.GnssMeasurement.getPseudorangeRateMetersPerSecond)double
android.location.GnssMeasurement.getPseudorangeRateUncertaintyMetersPerSecond)double
android.location.GnssMeasurement.getAccumulatedDeltaRangeState)int
android.location.GnssMeasurement.getAccumulatedDeltaRangeMeters)double
android.location.GnssMeasurement.getAccumulatedDeltaRangeUncertaintyMeters)double
android.location.GnssMeasurement.hasCarrierFrequencyHz)boolean
android.location.GnssMeasurement.getCarrierFrequencyHz)float
android.location.GnssMeasurement.hasCarrierCycles)boolean
android.location.GnssMeasurement.getCarrierCycles)long
android.location.GnssMeasurement.hasCarrierPhase)boolean
android.location.GnssMeasurement.getCarrierPhase)double
android.location.GnssMeasurement.hasCarrierPhaseUncertainty)boolean
android.location.GnssMeasurement.getCarrierPhaseUncertainty)double
android.location.GnssMeasurement.getMultipathIndicator)int
android.location.GnssMeasurement.hasSnrInDb)boolean
android.location.GnssMeasurement.getSnrInDb)double
android.location.GnssMeasurement.hasAutomaticGainControlLevelDb)boolean
android.location.GnssMeasurement.getAutomaticGainControlLevelDb)double
android.location.GnssMeasurement.hasCodeType)boolean
android.location.GnssMeasurement.getCodeType)String
android.location.GnssMeasurement.writeToParcel(android.os.Parcel,int)void
android.location.GnssMeasurement.describeContents)int
android.location.GnssMeasurement.toString)String
android.location.GnssMeasurementsEvent.onGnssMeasurementsReceived(android.location.GnssMeasurementsEvent)void
android.location.GnssMeasurementsEvent.onStatusChanged(int)void
android.location.GnssMeasurementsEvent.getClock)android.location.GnssClock
android.location.GnssMeasurementsEvent.getMeasurements)java.util.Collection
android.location.GnssMeasurementsEvent.describeContents)int
android.location.GnssMeasurementsEvent.writeToParcel(android.os.Parcel,int)void
android.location.GnssMeasurementsEvent.toString)String
android.location.GnssNavigationMessage.onGnssNavigationMessageReceived(android.location.GnssNavigationMessage)void
android.location.GnssNavigationMessage.onStatusChanged(int)void
android.location.GnssNavigationMessage.getType)int
android.location.GnssNavigationMessage.getSvid)int
android.location.GnssNavigationMessage.getMessageId)int
android.location.GnssNavigationMessage.getSubmessageId)int
android.location.GnssNavigationMessage.getStatus)int
android.location.GnssNavigationMessage.writeToParcel(android.os.Parcel,int)void
android.location.GnssNavigationMessage.describeContents)int
android.location.GnssNavigationMessage.toString)String
android.location.GnssStatus.onStarted)void
android.location.GnssStatus.onStopped)void
android.location.GnssStatus.onFirstFix(int)void
android.location.GnssStatus.onSatelliteStatusChanged(android.location.GnssStatus)void
android.location.GnssStatus.getSatelliteCount)int
android.location.GnssStatus.getConstellationType(int)int
android.location.GnssStatus.getSvid(int)int
android.location.GnssStatus.getCn0DbHz(int)float
android.location.GnssStatus.getElevationDegrees(int)float
android.location.GnssStatus.getAzimuthDegrees(int)float
android.location.GnssStatus.hasEphemerisData(int)boolean
android.location.GnssStatus.hasAlmanacData(int)boolean
android.location.GnssStatus.usedInFix(int)boolean
android.location.GnssStatus.hasCarrierFrequencyHz(int)boolean
android.location.GnssStatus.getCarrierFrequencyHz(int)float
android.location.GpsSatellite.getPrn)int
android.location.GpsSatellite.getSnr)float
android.location.GpsSatellite.getElevation)float
android.location.GpsSatellite.getAzimuth)float
android.location.GpsSatellite.hasEphemeris)boolean
android.location.GpsSatellite.hasAlmanac)boolean
android.location.GpsSatellite.usedInFix)boolean
android.location.GpsStatus.getTimeToFirstFix)int
android.location.GpsStatus.getSatellites)Iterable
android.location.GpsStatus.getMaxSatellites)int
android.location.Location.set(android.location.Location)void
android.location.Location.reset)void
android.location.Location.convert(double,int)String
android.location.Location.convert(String)double
android.location.Location.distanceTo(android.location.Location)float
android.location.Location.bearingTo(android.location.Location)float
android.location.Location.getProvider)String
android.location.Location.setProvider(String)void
android.location.Location.getTime)long
android.location.Location.setTime(long)void
android.location.Location.getElapsedRealtimeNanos)long
android.location.Location.setElapsedRealtimeNanos(long)void
android.location.Location.getElapsedRealtimeUncertaintyNanos)double
android.location.Location.setElapsedRealtimeUncertaintyNanos(double)void
android.location.Location.hasElapsedRealtimeUncertaintyNanos)boolean
android.location.Location.getLatitude)double
android.location.Location.setLatitude(double)void
android.location.Location.getLongitude)double
android.location.Location.setLongitude(double)void
android.location.Location.hasAltitude)boolean
android.location.Location.getAltitude)double
android.location.Location.setAltitude(double)void
android.location.Location.removeAltitude)void
android.location.Location.hasSpeed)boolean
android.location.Location.getSpeed)float
android.location.Location.setSpeed(float)void
android.location.Location.removeSpeed)void
android.location.Location.hasBearing)boolean
android.location.Location.getBearing)float
android.location.Location.setBearing(float)void
android.location.Location.removeBearing)void
android.location.Location.hasAccuracy)boolean
android.location.Location.getAccuracy)float
android.location.Location.setAccuracy(float)void
android.location.Location.removeAccuracy)void
android.location.Location.hasVerticalAccuracy)boolean
android.location.Location.getVerticalAccuracyMeters)float
android.location.Location.setVerticalAccuracyMeters(float)void
android.location.Location.hasSpeedAccuracy)boolean
android.location.Location.getSpeedAccuracyMetersPerSecond)float
android.location.Location.setSpeedAccuracyMetersPerSecond(float)void
android.location.Location.hasBearingAccuracy)boolean
android.location.Location.getBearingAccuracyDegrees)float
android.location.Location.setBearingAccuracyDegrees(float)void
android.location.Location.getExtras)Bundle
android.location.Location.setExtras(Bundle)void
android.location.Location.toString)String
android.location.Location.dump(android.util.Printer,String)void
android.location.Location.describeContents)int
android.location.Location.writeToParcel(Parcel,int)void
android.location.Location.isFromMockProvider)boolean
android.location.LocationManager.getAllProviders)java.util.List
android.location.LocationManager.getProviders(boolean)java.util.List
android.location.LocationManager.getProvider(String)android.location.LocationProvider
android.location.LocationManager.getProviders(android.location.Criteria,boolean)java.util.List
android.location.LocationManager.getBestProvider(android.location.Criteria,boolean)String
android.location.LocationManager.requestLocationUpdates(String,long,float,android.location.LocationListener)void
android.location.LocationManager.requestLocationUpdates(String,long,float,android.location.LocationListener,Looper)void
android.location.LocationManager.requestLocationUpdates(long,float,android.location.Criteria,android.location.LocationListener,Looper)void
android.location.LocationManager.requestLocationUpdates(String,long,float,android.app.PendingIntent)void
android.location.LocationManager.requestLocationUpdates(long,float,android.location.Criteria,android.app.PendingIntent)void
android.location.LocationManager.requestSingleUpdate(String,android.location.LocationListener,Looper)void
android.location.LocationManager.requestSingleUpdate(android.location.Criteria,android.location.LocationListener,Looper)void
android.location.LocationManager.requestSingleUpdate(String,android.app.PendingIntent)void
android.location.LocationManager.requestSingleUpdate(android.location.Criteria,android.app.PendingIntent)void
android.location.LocationManager.removeUpdates(android.location.LocationListener)void
android.location.LocationManager.removeUpdates(android.app.PendingIntent)void
android.location.LocationManager.removeProximityAlert(android.app.PendingIntent)void
android.location.LocationManager.isLocationEnabled)boolean
android.location.LocationManager.isProviderEnabled(String)boolean
android.location.LocationManager.getLastKnownLocation(String)android.location.Location
android.location.LocationManager.removeTestProvider(String)void
android.location.LocationManager.setTestProviderLocation(String,android.location.Location)void
android.location.LocationManager.clearTestProviderLocation(String)void
android.location.LocationManager.setTestProviderEnabled(String,boolean)void
android.location.LocationManager.clearTestProviderEnabled(String)void
android.location.LocationManager.setTestProviderStatus(String,int,Bundle,long)void
android.location.LocationManager.clearTestProviderStatus(String)void
android.location.LocationManager.addGpsStatusListener(GpsStatus.Listener)boolean
android.location.LocationManager.removeGpsStatusListener(GpsStatus.Listener)void
android.location.LocationManager.registerGnssStatusCallback(GnssStatus.Callback)boolean
android.location.LocationManager.registerGnssStatusCallback(GnssStatus.Callback,Handler)boolean
android.location.LocationManager.unregisterGnssStatusCallback(GnssStatus.Callback)void
android.location.LocationManager.addNmeaListener(android.location.OnNmeaMessageListener)boolean
android.location.LocationManager.addNmeaListener(android.location.OnNmeaMessageListener,Handler)boolean
android.location.LocationManager.removeNmeaListener(android.location.OnNmeaMessageListener)void
android.location.LocationManager.registerGnssMeasurementsCallback(GnssMeasurementsEvent.Callback)boolean
android.location.LocationManager.registerGnssMeasurementsCallback(GnssMeasurementsEvent.Callback,Handler)boolean
android.location.LocationManager.unregisterGnssMeasurementsCallback(GnssMeasurementsEvent.Callback)void
android.location.LocationManager.registerGnssNavigationMessageCallback(GnssNavigationMessage.Callback)boolean
android.location.LocationManager.registerGnssNavigationMessageCallback(GnssNavigationMessage.Callback,Handler)boolean
android.location.LocationManager.unregisterGnssNavigationMessageCallback(GnssNavigationMessage.Callback)void
android.location.LocationManager.getGpsStatus(android.location.GpsStatus)android.location.GpsStatus
android.location.LocationManager.getGnssYearOfHardware)int
android.location.LocationManager.getGnssHardwareModelName)String
android.location.LocationManager.sendExtraCommand(String,String,Bundle)boolean
android.location.LocationProvider.getName)String
android.location.LocationProvider.meetsCriteria(android.location.Criteria)boolean
android.location.LocationProvider.requiresNetwork)boolean
android.location.LocationProvider.requiresSatellite)boolean
android.location.LocationProvider.requiresCell)boolean
android.location.LocationProvider.hasMonetaryCost)boolean
android.location.LocationProvider.supportsAltitude)boolean
android.location.LocationProvider.supportsSpeed)boolean
android.location.LocationProvider.supportsBearing)boolean
android.location.LocationProvider.getPowerRequirement)int
android.location.LocationProvider.getAccuracy)int
android.location.SettingInjectorService.onBind(android.content.Intent)android.os.IBinder
android.location.SettingInjectorService.onStart(android.content.Intent,int)void
android.location.SettingInjectorService.onStartCommand(android.content.Intent,int,int)int
android.location.SettingInjectorService.refreshSettings(android.content.Context)void
android.media.AsyncPlayer.play(android.content.Context,android.net.Uri,boolean,int)void
android.media.AsyncPlayer.play(android.content.Context,android.net.Uri,boolean,android.media.AudioAttributes)void
android.media.AsyncPlayer.stop)void
android.media.AudioAttributes.build)android.media.AudioAttributes
android.media.AudioAttributes.setUsage(int)android.media.AudioAttributes.Builder
android.media.AudioAttributes.setContentType(int)android.media.AudioAttributes.Builder
android.media.AudioAttributes.setFlags(int)android.media.AudioAttributes.Builder
android.media.AudioAttributes.setAllowedCapturePolicy(int)android.media.AudioAttributes.Builder
android.media.AudioAttributes.setLegacyStreamType(int)android.media.AudioAttributes.Builder
android.media.AudioAttributes.setHapticChannelsMuted(boolean)android.media.AudioAttributes.Builder
android.media.AudioAttributes.getContentType)int
android.media.AudioAttributes.getUsage)int
android.media.AudioAttributes.getFlags)int
android.media.AudioAttributes.areHapticChannelsMuted)boolean
android.media.AudioAttributes.getAllowedCapturePolicy)int
android.media.AudioAttributes.describeContents)int
android.media.AudioAttributes.writeToParcel(android.os.Parcel,int)void
android.media.AudioAttributes.equals(Object)boolean
android.media.AudioAttributes.hashCode)int
android.media.AudioAttributes.toString)String
android.media.AudioAttributes.getVolumeControlStream)int
android.media.AudioDeviceCallback.onAudioDevicesAdded(android.media.AudioDeviceInfo)void
android.media.AudioDeviceCallback.onAudioDevicesRemoved(android.media.AudioDeviceInfo)void
android.media.AudioDeviceInfo.equals(Object)boolean
android.media.AudioDeviceInfo.hashCode)int
android.media.AudioDeviceInfo.getId)int
android.media.AudioDeviceInfo.getProductName)CharSequence
android.media.AudioDeviceInfo.getAddress)String
android.media.AudioDeviceInfo.isSource)boolean
android.media.AudioDeviceInfo.isSink)boolean
android.media.AudioDeviceInfo.getType)int
android.media.AudioFocusRequest.setFocusGain(int)Builder
android.media.AudioFocusRequest.setOnAudioFocusChangeListener(AudioManager.OnAudioFocusChangeListener)Builder
android.media.AudioFocusRequest.setOnAudioFocusChangeListener(AudioManager.OnAudioFocusChangeListener,android.os.Handler)Builder
android.media.AudioFocusRequest.setAudioAttributes(android.media.AudioAttributes)Builder
android.media.AudioFocusRequest.setWillPauseWhenDucked(boolean)Builder
android.media.AudioFocusRequest.setAcceptsDelayedFocusGain(boolean)Builder
android.media.AudioFocusRequest.setForceDucking(boolean)Builder
android.media.AudioFocusRequest.build)android.media.AudioFocusRequest
android.media.AudioFocusRequest.getAudioAttributes)android.media.AudioAttributes
android.media.AudioFocusRequest.getFocusGain)int
android.media.AudioFocusRequest.willPauseWhenDucked)boolean
android.media.AudioFocusRequest.acceptsDelayedFocusGain)boolean
android.media.AudioFormat.build)android.media.AudioFormat
android.media.AudioFormat.setEncoding(int)android.media.AudioFormat.Builder
android.media.AudioFormat.setChannelMask(int)android.media.AudioFormat.Builder
android.media.AudioFormat.setChannelIndexMask(int)android.media.AudioFormat.Builder
android.media.AudioFormat.setSampleRate(int)android.media.AudioFormat.Builder
android.media.AudioFormat.getEncoding)int
android.media.AudioFormat.getSampleRate)int
android.media.AudioFormat.getChannelMask)int
android.media.AudioFormat.getChannelIndexMask)int
android.media.AudioFormat.getChannelCount)int
android.media.AudioFormat.getFrameSizeInBytes)int
android.media.AudioFormat.equals(Object)boolean
android.media.AudioFormat.hashCode)int
android.media.AudioFormat.describeContents)int
android.media.AudioFormat.writeToParcel(android.os.Parcel,int)void
android.media.AudioFormat.toString)String
android.media.AudioManager.onRecordingConfigChanged(java.util.List)void
android.media.AudioManager.onPlaybackConfigChanged(java.util.List)void
android.media.AudioManager.dispatchMediaKeyEvent(android.view.KeyEvent)void
android.media.AudioManager.isVolumeFixed)boolean
android.media.AudioManager.adjustStreamVolume(int,int,int)void
android.media.AudioManager.adjustVolume(int,int)void
android.media.AudioManager.adjustSuggestedStreamVolume(int,int,int)void
android.media.AudioManager.getRingerMode)int
android.media.AudioManager.getStreamMaxVolume(int)int
android.media.AudioManager.getStreamMinVolume(int)int
android.media.AudioManager.getStreamVolume(int)int
android.media.AudioManager.getStreamVolumeDb(int,int,int)float
android.media.AudioManager.setRingerMode(int)void
android.media.AudioManager.setStreamVolume(int,int,int)void
android.media.AudioManager.setStreamSolo(int,boolean)void
android.media.AudioManager.setStreamMute(int,boolean)void
android.media.AudioManager.isStreamMute(int)boolean
android.media.AudioManager.shouldVibrate(int)boolean
android.media.AudioManager.getVibrateSetting(int)int
android.media.AudioManager.setVibrateSetting(int,int)void
android.media.AudioManager.setSpeakerphoneOn(boolean)void
android.media.AudioManager.isSpeakerphoneOn)boolean
android.media.AudioManager.setAllowedCapturePolicy(int)void
android.media.AudioManager.getAllowedCapturePolicy)int
android.media.AudioManager.isOffloadedPlaybackSupported(android.media.AudioFormat,android.media.AudioAttributes)boolean
android.media.AudioManager.isBluetoothScoAvailableOffCall)boolean
android.media.AudioManager.startBluetoothSco)void
android.media.AudioManager.stopBluetoothSco)void
android.media.AudioManager.setBluetoothScoOn(boolean)void
android.media.AudioManager.isBluetoothScoOn)boolean
android.media.AudioManager.setBluetoothA2dpOn(boolean)void
android.media.AudioManager.isBluetoothA2dpOn)boolean
android.media.AudioManager.setWiredHeadsetOn(boolean)void
android.media.AudioManager.isWiredHeadsetOn)boolean
android.media.AudioManager.setMicrophoneMute(boolean)void
android.media.AudioManager.isMicrophoneMute)boolean
android.media.AudioManager.setMode(int)void
android.media.AudioManager.getMode)int
android.media.AudioManager.setRouting(int,int,int)void
android.media.AudioManager.getRouting(int)int
android.media.AudioManager.isMusicActive)boolean
android.media.AudioManager.generateAudioSessionId)int
android.media.AudioManager.setParameters(String)void
android.media.AudioManager.getParameters(String)String
android.media.AudioManager.playSoundEffect(int)void
android.media.AudioManager.playSoundEffect(int,float)void
android.media.AudioManager.loadSoundEffects)void
android.media.AudioManager.unloadSoundEffects)void
android.media.AudioManager.requestAudioFocus(android.media.AudioManager.OnAudioFocusChangeListener,int,int)int
android.media.AudioManager.requestAudioFocus(android.media.AudioFocusRequest)int
android.media.AudioManager.abandonAudioFocusRequest(android.media.AudioFocusRequest)int
android.media.AudioManager.abandonAudioFocus(android.media.AudioManager.OnAudioFocusChangeListener)int
android.media.AudioManager.registerMediaButtonEventReceiver(android.content.ComponentName)void
android.media.AudioManager.registerMediaButtonEventReceiver(android.app.PendingIntent)void
android.media.AudioManager.unregisterMediaButtonEventReceiver(android.content.ComponentName)void
android.media.AudioManager.unregisterMediaButtonEventReceiver(android.app.PendingIntent)void
android.media.AudioManager.registerRemoteControlClient(android.media.RemoteControlClient)void
android.media.AudioManager.unregisterRemoteControlClient(android.media.RemoteControlClient)void
android.media.AudioManager.registerRemoteController(android.media.RemoteController)boolean
android.media.AudioManager.unregisterRemoteController(android.media.RemoteController)void
android.media.AudioManager.registerAudioPlaybackCallback(AudioPlaybackCallback,android.os.Handler)void
android.media.AudioManager.unregisterAudioPlaybackCallback(AudioPlaybackCallback)void
android.media.AudioManager.getActivePlaybackConfigurations)java.util.List
android.media.AudioManager.registerAudioRecordingCallback(AudioRecordingCallback,android.os.Handler)void
android.media.AudioManager.unregisterAudioRecordingCallback(AudioRecordingCallback)void
android.media.AudioManager.getActiveRecordingConfigurations)java.util.List
android.media.AudioManager.getProperty(String)String
android.media.AudioManager.registerAudioDeviceCallback(android.media.AudioDeviceCallback,android.os.Handler)void
android.media.AudioManager.unregisterAudioDeviceCallback(android.media.AudioDeviceCallback)void
android.media.AudioManager.getMicrophones)java.util.List
android.media.AudioManager.isHapticPlaybackSupported)boolean
android.media.AudioPlaybackCaptureConfiguration.addMatchingUsage(int)Builder
android.media.AudioPlaybackCaptureConfiguration.addMatchingUid(int)Builder
android.media.AudioPlaybackCaptureConfiguration.excludeUsage(int)Builder
android.media.AudioPlaybackCaptureConfiguration.excludeUid(int)Builder
android.media.AudioPlaybackCaptureConfiguration.build)android.media.AudioPlaybackCaptureConfiguration
android.media.AudioPlaybackCaptureConfiguration.getMediaProjection)android.media.projection.MediaProjection
android.media.AudioPlaybackConfiguration.getAudioAttributes)android.media.AudioAttributes
android.media.AudioPlaybackConfiguration.hashCode)int
android.media.AudioPlaybackConfiguration.describeContents)int
android.media.AudioPlaybackConfiguration.writeToParcel(android.os.Parcel,int)void
android.media.AudioPlaybackConfiguration.equals(Object)boolean
android.media.AudioPresentation.setProgramId(int)Builder
android.media.AudioPresentation.setLocale(android.icu.util.ULocale)Builder
android.media.AudioPresentation.setMasteringIndication(int)Builder
android.media.AudioPresentation.setLabels(java.util.Map)Builder
android.media.AudioPresentation.setHasAudioDescription(boolean)Builder
android.media.AudioPresentation.setHasSpokenSubtitles(boolean)Builder
android.media.AudioPresentation.setHasDialogueEnhancement(boolean)Builder
android.media.AudioPresentation.build)android.media.AudioPresentation
android.media.AudioPresentation.getPresentationId)int
android.media.AudioPresentation.getProgramId)int
android.media.AudioPresentation.getLabels)java.util.Map
android.media.AudioPresentation.getLocale)java.util.Locale
android.media.AudioPresentation.getMasteringIndication)int
android.media.AudioPresentation.hasAudioDescription)boolean
android.media.AudioPresentation.hasSpokenSubtitles)boolean
android.media.AudioPresentation.hasDialogueEnhancement)boolean
android.media.AudioPresentation.equals(Object)boolean
android.media.AudioPresentation.hashCode)int
android.media.AudioPresentation.toString)String
android.media.AudioRecord.onRoutingChanged(android.media.AudioRouting)void
android.media.AudioRecord.setAudioSource(int)android.media.AudioRecord.Builder
android.media.AudioRecord.setAudioFormat(android.media.AudioFormat)android.media.AudioRecord.Builder
android.media.AudioRecord.setBufferSizeInBytes(int)android.media.AudioRecord.Builder
android.media.AudioRecord.setAudioPlaybackCaptureConfig(android.media.AudioPlaybackCaptureConfiguration)android.media.AudioRecord.Builder
android.media.AudioRecord.build)android.media.AudioRecord
android.media.AudioRecord.release)void
android.media.AudioRecord.finalize)void
android.media.AudioRecord.getSampleRate)int
android.media.AudioRecord.getAudioSource)int
android.media.AudioRecord.getAudioFormat)int
android.media.AudioRecord.getChannelConfiguration)int
android.media.AudioRecord.getFormat)android.media.AudioFormat
android.media.AudioRecord.getChannelCount)int
android.media.AudioRecord.getState)int
android.media.AudioRecord.getRecordingState)int
android.media.AudioRecord.getBufferSizeInFrames)int
android.media.AudioRecord.getNotificationMarkerPosition)int
android.media.AudioRecord.getPositionNotificationPeriod)int
android.media.AudioRecord.getTimestamp(android.media.AudioTimestamp,int)int
android.media.AudioRecord.getMinBufferSize(int,int,int)int
android.media.AudioRecord.getAudioSessionId)int
android.media.AudioRecord.startRecording)void
android.media.AudioRecord.startRecording(android.media.MediaSyncEvent)void
android.media.AudioRecord.stop)void
android.media.AudioRecord.read(byte,int,int)int
android.media.AudioRecord.read(byte,int,int,int)int
android.media.AudioRecord.read(short,int,int)int
android.media.AudioRecord.read(short,int,int,int)int
android.media.AudioRecord.read(float,int,int,int)int
android.media.AudioRecord.read(java.nio.ByteBuffer,int)int
android.media.AudioRecord.read(java.nio.ByteBuffer,int,int)int
android.media.AudioRecord.getMetrics)android.os.PersistableBundle
android.media.AudioRecord.setRecordPositionUpdateListener(android.media.AudioRecord.OnRecordPositionUpdateListener)void
android.media.AudioRecord.setRecordPositionUpdateListener(android.media.AudioRecord.OnRecordPositionUpdateListener,android.os.Handler)void
android.media.AudioRecord.setNotificationMarkerPosition(int)int
android.media.AudioRecord.getRoutedDevice)android.media.AudioDeviceInfo
android.media.AudioRecord.addOnRoutingChangedListener(AudioRouting.OnRoutingChangedListener,android.os.Handler)void
android.media.AudioRecord.removeOnRoutingChangedListener(AudioRouting.OnRoutingChangedListener)void
android.media.AudioRecord.addOnRoutingChangedListener(android.media.AudioRecord.OnRoutingChangedListener,android.os.Handler)void
android.media.AudioRecord.removeOnRoutingChangedListener(android.media.AudioRecord.OnRoutingChangedListener)void
android.media.AudioRecord.setPositionNotificationPeriod(int)int
android.media.AudioRecord.setPreferredDevice(android.media.AudioDeviceInfo)boolean
android.media.AudioRecord.getPreferredDevice)android.media.AudioDeviceInfo
android.media.AudioRecord.getActiveMicrophones)java.util.List
android.media.AudioRecord.registerAudioRecordingCallback(java.util.concurrent.Executor,AudioManager.AudioRecordingCallback)void
android.media.AudioRecord.unregisterAudioRecordingCallback(AudioManager.AudioRecordingCallback)void
android.media.AudioRecord.getActiveRecordingConfiguration)android.media.AudioRecordingConfiguration
android.media.AudioRecord.setPreferredMicrophoneDirection(int)boolean
android.media.AudioRecord.setPreferredMicrophoneFieldDimension(float)boolean
android.media.AudioRecordingConfiguration.getClientAudioSource)int
android.media.AudioRecordingConfiguration.getClientAudioSessionId)int
android.media.AudioRecordingConfiguration.getFormat)android.media.AudioFormat
android.media.AudioRecordingConfiguration.getClientFormat)android.media.AudioFormat
android.media.AudioRecordingConfiguration.getAudioDevice)android.media.AudioDeviceInfo
android.media.AudioRecordingConfiguration.isClientSilenced)boolean
android.media.AudioRecordingConfiguration.getAudioSource)int
android.media.AudioRecordingConfiguration.getClientEffects)java.util.List
android.media.AudioRecordingConfiguration.getEffects)java.util.List
android.media.AudioRecordingConfiguration.hashCode)int
android.media.AudioRecordingConfiguration.describeContents)int
android.media.AudioRecordingConfiguration.writeToParcel(android.os.Parcel,int)void
android.media.AudioRecordingConfiguration.equals(Object)boolean
android.media.AudioTrack.onTearDown(android.media.AudioTrack)void
android.media.AudioTrack.onPresentationEnded(android.media.AudioTrack)void
android.media.AudioTrack.onDataRequest(android.media.AudioTrack,int)void
android.media.AudioTrack.onRoutingChanged(android.media.AudioRouting)void
android.media.AudioTrack.setAudioAttributes(android.media.AudioAttributes)android.media.AudioTrack.Builder
android.media.AudioTrack.setAudioFormat(android.media.AudioFormat)android.media.AudioTrack.Builder
android.media.AudioTrack.setBufferSizeInBytes(int)android.media.AudioTrack.Builder
android.media.AudioTrack.setTransferMode(int)android.media.AudioTrack.Builder
android.media.AudioTrack.setSessionId(int)android.media.AudioTrack.Builder
android.media.AudioTrack.setPerformanceMode(int)android.media.AudioTrack.Builder
android.media.AudioTrack.setOffloadedPlayback(boolean)android.media.AudioTrack.Builder
android.media.AudioTrack.build)android.media.AudioTrack
android.media.AudioTrack.setOffloadDelayPadding(int,int)void
android.media.AudioTrack.getOffloadDelay)int
android.media.AudioTrack.getOffloadPadding)int
android.media.AudioTrack.setOffloadEndOfStream)void
android.media.AudioTrack.isOffloadedPlayback)boolean
android.media.AudioTrack.isDirectPlaybackSupported(android.media.AudioFormat,android.media.AudioAttributes)boolean
android.media.AudioTrack.release)void
android.media.AudioTrack.finalize)void
android.media.AudioTrack.getMinVolume)float
android.media.AudioTrack.getMaxVolume)float
android.media.AudioTrack.getSampleRate)int
android.media.AudioTrack.getPlaybackRate)int
android.media.AudioTrack.getPlaybackParams)android.media.PlaybackParams
android.media.AudioTrack.getAudioAttributes)android.media.AudioAttributes
android.media.AudioTrack.getAudioFormat)int
android.media.AudioTrack.getStreamType)int
android.media.AudioTrack.getChannelConfiguration)int
android.media.AudioTrack.getFormat)android.media.AudioFormat
android.media.AudioTrack.getChannelCount)int
android.media.AudioTrack.getState)int
android.media.AudioTrack.getPlayState)int
android.media.AudioTrack.getBufferSizeInFrames)int
android.media.AudioTrack.setBufferSizeInFrames(int)int
android.media.AudioTrack.getBufferCapacityInFrames)int
android.media.AudioTrack.getNativeFrameCount)int
android.media.AudioTrack.getNotificationMarkerPosition)int
android.media.AudioTrack.getPositionNotificationPeriod)int
android.media.AudioTrack.getPlaybackHeadPosition)int
android.media.AudioTrack.getUnderrunCount)int
android.media.AudioTrack.getPerformanceMode)int
android.media.AudioTrack.getNativeOutputSampleRate(int)int
android.media.AudioTrack.getMinBufferSize(int,int,int)int
android.media.AudioTrack.getAudioSessionId)int
android.media.AudioTrack.getTimestamp(android.media.AudioTimestamp)boolean
android.media.AudioTrack.getMetrics)android.os.PersistableBundle
android.media.AudioTrack.setPlaybackPositionUpdateListener(android.media.AudioTrack.OnPlaybackPositionUpdateListener)void
android.media.AudioTrack.setPlaybackPositionUpdateListener(android.media.AudioTrack.OnPlaybackPositionUpdateListener,android.os.Handler)void
android.media.AudioTrack.setStereoVolume(float,float)int
android.media.AudioTrack.setVolume(float)int
android.media.AudioTrack.createVolumeShaper(VolumeShaper.Configuration)android.media.VolumeShaper
android.media.AudioTrack.setPlaybackRate(int)int
android.media.AudioTrack.setPlaybackParams(android.media.PlaybackParams)void
android.media.AudioTrack.setNotificationMarkerPosition(int)int
android.media.AudioTrack.setPositionNotificationPeriod(int)int
android.media.AudioTrack.setPlaybackHeadPosition(int)int
android.media.AudioTrack.setLoopPoints(int,int,int)int
android.media.AudioTrack.setPresentation(android.media.AudioPresentation)int
android.media.AudioTrack.setState(int)void
android.media.AudioTrack.play)void
android.media.AudioTrack.stop)void
android.media.AudioTrack.pause)void
android.media.AudioTrack.flush)void
android.media.AudioTrack.write(byte,int,int)int
android.media.AudioTrack.write(byte,int,int,int)int
android.media.AudioTrack.write(short,int,int)int
android.media.AudioTrack.write(short,int,int,int)int
android.media.AudioTrack.write(float,int,int,int)int
android.media.AudioTrack.write(java.nio.ByteBuffer,int,int)int
android.media.AudioTrack.write(java.nio.ByteBuffer,int,int,long)int
android.media.AudioTrack.reloadStaticData)int
android.media.AudioTrack.attachAuxEffect(int)int
android.media.AudioTrack.setAuxEffectSendLevel(float)int
android.media.AudioTrack.setPreferredDevice(android.media.AudioDeviceInfo)boolean
android.media.AudioTrack.getPreferredDevice)android.media.AudioDeviceInfo
android.media.AudioTrack.getRoutedDevice)android.media.AudioDeviceInfo
android.media.AudioTrack.addOnRoutingChangedListener(AudioRouting.OnRoutingChangedListener,android.os.Handler)void
android.media.AudioTrack.removeOnRoutingChangedListener(AudioRouting.OnRoutingChangedListener)void
android.media.AudioTrack.addOnRoutingChangedListener(android.media.AudioTrack.OnRoutingChangedListener,android.os.Handler)void
android.media.AudioTrack.removeOnRoutingChangedListener(android.media.AudioTrack.OnRoutingChangedListener)void
android.media.AudioTrack.registerStreamEventCallback(java.util.concurrent.Executor,StreamEventCallback)void
android.media.AudioTrack.unregisterStreamEventCallback(StreamEventCallback)void
android.media.CamcorderProfile.get(int)android.media.CamcorderProfile
android.media.CamcorderProfile.get(int,int)android.media.CamcorderProfile
android.media.CamcorderProfile.hasProfile(int)boolean
android.media.CamcorderProfile.hasProfile(int,int)boolean
android.media.CameraProfile.getJpegEncodingQualityParameter(int)int
android.media.CameraProfile.getJpegEncodingQualityParameter(int,int)int
android.media.DrmInitData.equals(Object)boolean
android.media.DrmInitData.hashCode)int
android.media.ExifInterface.getAttribute(String)String
android.media.ExifInterface.getAttributeInt(String,int)int
android.media.ExifInterface.getAttributeDouble(String,double)double
android.media.ExifInterface.setAttribute(String,String)void
android.media.ExifInterface.saveAttributes)void
android.media.ExifInterface.hasThumbnail)boolean
android.media.ExifInterface.hasAttribute(String)boolean
android.media.ExifInterface.getThumbnailBitmap)android.graphics.Bitmap
android.media.ExifInterface.isThumbnailCompressed)boolean
android.media.ExifInterface.getLatLong(float)boolean
android.media.ExifInterface.getAltitude(double)double
android.media.FaceDetector.confidence)float
android.media.FaceDetector.getMidPoint(android.graphics.PointF)void
android.media.FaceDetector.eyesDistance)float
android.media.FaceDetector.pose(int)float
android.media.FaceDetector.findFaces(android.graphics.Bitmap,android.media.FaceDetector.Face)int
android.media.FaceDetector.finalize)void
android.media.Image.getHardwareBuffer)android.hardware.HardwareBuffer
android.media.Image.setTimestamp(long)void
android.media.Image.getCropRect)android.graphics.Rect
android.media.Image.setCropRect(android.graphics.Rect)void
android.media.ImageReader.newInstance(int,int,int,int)android.media.ImageReader
android.media.ImageReader.newInstance(int,int,int,int,long)android.media.ImageReader
android.media.ImageReader.getWidth)int
android.media.ImageReader.getHeight)int
android.media.ImageReader.getImageFormat)int
android.media.ImageReader.getMaxImages)int
android.media.ImageReader.getSurface)android.view.Surface
android.media.ImageReader.acquireLatestImage)android.media.Image
android.media.ImageReader.acquireNextImage)android.media.Image
android.media.ImageReader.setOnImageAvailableListener(android.media.ImageReader.OnImageAvailableListener,android.os.Handler)void
android.media.ImageReader.close)void
android.media.ImageReader.discardFreeBuffers)void
android.media.ImageReader.finalize)void
android.media.ImageWriter.newInstance(android.view.Surface,int)android.media.ImageWriter
android.media.ImageWriter.newInstance(android.view.Surface,int,int)android.media.ImageWriter
android.media.ImageWriter.getMaxImages)int
android.media.ImageWriter.dequeueInputImage)android.media.Image
android.media.ImageWriter.queueInputImage(android.media.Image)void
android.media.ImageWriter.getFormat)int
android.media.ImageWriter.setOnImageReleasedListener(android.media.ImageWriter.OnImageReleasedListener,android.os.Handler)void
android.media.ImageWriter.close)void
android.media.ImageWriter.finalize)void
android.media.JetPlayer.getJetPlayer)android.media.JetPlayer
android.media.JetPlayer.clone)Object
android.media.JetPlayer.finalize)void
android.media.JetPlayer.release)void
android.media.JetPlayer.getMaxTracks)int
android.media.JetPlayer.loadJetFile(String)boolean
android.media.JetPlayer.loadJetFile(android.content.res.AssetFileDescriptor)boolean
android.media.JetPlayer.closeJetFile)boolean
android.media.JetPlayer.play)boolean
android.media.JetPlayer.pause)boolean
android.media.JetPlayer.queueJetSegment(int,int,int,int,int,byte)boolean
android.media.JetPlayer.queueJetSegmentMuteArray(int,int,int,int,boolean,byte)boolean
android.media.JetPlayer.setMuteFlags(int,boolean)boolean
android.media.JetPlayer.setMuteArray(boolean,boolean)boolean
android.media.JetPlayer.setMuteFlag(int,boolean,boolean)boolean
android.media.JetPlayer.triggerClip(int)boolean
android.media.JetPlayer.clearQueue)boolean
android.media.JetPlayer.setEventListener(android.media.JetPlayer.OnJetEventListener)void
android.media.JetPlayer.setEventListener(android.media.JetPlayer.OnJetEventListener,android.os.Handler)void
android.media.MediaActionSound.load(int)void
android.media.MediaActionSound.play(int)void
android.media.MediaActionSound.release)void
android.media.MediaCas.equals(Object)boolean
android.media.MediaCas.setPrivateData(byte)void
android.media.MediaCas.processEcm(byte,int,int)void
android.media.MediaCas.processEcm(byte)void
android.media.MediaCas.sendSessionEvent(int,int,byte)void
android.media.MediaCas.close)void
android.media.MediaCas.getSystemId)int
android.media.MediaCas.getName)String
android.media.MediaCas.toString)String
android.media.MediaCas.onSessionEvent(android.media.MediaCas,android.media.MediaCas.Session,int,int,byte)void
android.media.MediaCas.isSystemIdSupported(int)boolean
android.media.MediaCas.setEventListener(android.media.MediaCas.EventListener,android.os.Handler)void
android.media.MediaCas.setPrivateData(byte)void
android.media.MediaCas.openSession)android.media.MediaCas.Session
android.media.MediaCas.processEmm(byte,int,int)void
android.media.MediaCas.processEmm(byte)void
android.media.MediaCas.sendEvent(int,int,byte)void
android.media.MediaCas.provision(String)void
android.media.MediaCas.refreshEntitlements(int,byte)void
android.media.MediaCas.close)void
android.media.MediaCas.finalize)void
android.media.MediaCasStateException.getDiagnosticInfo)String
android.media.MediaCodec.set(int,int)void
android.media.MediaCodec.getSkipBlocks)int
android.media.MediaCodec.getEncryptBlocks)int
android.media.MediaCodec.set(int,int,int,byte,byte,int)void
android.media.MediaCodec.setPattern(Pattern)void
android.media.MediaCodec.toString)String
android.media.MediaCodec.getErrorCode)int
android.media.MediaCodec.isTransient)boolean
android.media.MediaCodec.isRecoverable)boolean
android.media.MediaCodec.getErrorCode)int
android.media.MediaCodec.getDiagnosticInfo)String
android.media.MediaCodec.set(int,int,long,int)void
android.media.MediaCodec.createDecoderByType(String)android.media.MediaCodec
android.media.MediaCodec.createEncoderByType(String)android.media.MediaCodec
android.media.MediaCodec.createByCodecName(String)android.media.MediaCodec
android.media.MediaCodec.finalize)void
android.media.MediaCodec.reset)void
android.media.MediaCodec.release)void
android.media.MediaCodec.configure(android.media.MediaFormat,android.view.Surface,android.media.MediaCrypto,int)void
android.media.MediaCodec.configure(android.media.MediaFormat,android.view.Surface,int,android.media.MediaDescrambler)void
android.media.MediaCodec.setOutputSurface(android.view.Surface)void
android.media.MediaCodec.createPersistentInputSurface)android.view.Surface
android.media.MediaCodec.setInputSurface(android.view.Surface)void
android.media.MediaCodec.start)void
android.media.MediaCodec.stop)void
android.media.MediaCodec.flush)void
android.media.MediaCodec.queueInputBuffer(int,int,int,long,int)void
android.media.MediaCodec.queueSecureInputBuffer(int,int,CryptoInfo,long,int)void
android.media.MediaCodec.dequeueInputBuffer(long)int
android.media.MediaCodec.dequeueOutputBuffer(BufferInfo,long)int
android.media.MediaCodec.releaseOutputBuffer(int,boolean)void
android.media.MediaCodec.releaseOutputBuffer(int,long)void
android.media.MediaCodec.getOutputFormat)android.media.MediaFormat
android.media.MediaCodec.getInputFormat)android.media.MediaFormat
android.media.MediaCodec.getOutputFormat(int)android.media.MediaFormat
android.media.MediaCodec.getInputBuffer(int)java.nio.ByteBuffer
android.media.MediaCodec.getInputImage(int)android.media.Image
android.media.MediaCodec.getOutputBuffer(int)java.nio.ByteBuffer
android.media.MediaCodec.getOutputImage(int)android.media.Image
android.media.MediaCodec.setAudioPresentation(android.media.AudioPresentation)void
android.media.MediaCodec.getName)String
android.media.MediaCodec.getMetrics)PersistableBundle
android.media.MediaCodec.setParameters(Bundle)void
android.media.MediaCodec.setCallback(Callback,Handler)void
android.media.MediaCodec.setCallback(Callback)void
android.media.MediaCodec.setOnFrameRenderedListener(android.media.MediaCodec.OnFrameRenderedListener,Handler)void
android.media.MediaCodec.getCodecInfo)android.media.MediaCodecInfo
android.media.MediaCodecInfo.toString)String
android.media.MediaCodecInfo.hashCode)int
android.media.MediaCodecInfo.covers(android.media.MediaFormat)boolean
android.media.MediaCodecInfo.covers(PerformancePoint)boolean
android.media.MediaCodecInfo.equals(Object)boolean
android.media.MediaCodecInfo.getBitrateRange)android.util.Range
android.media.MediaCodecInfo.getSupportedWidths)android.util.Range
android.media.MediaCodecInfo.getSupportedHeights)android.util.Range
android.media.MediaCodecInfo.getWidthAlignment)int
android.media.MediaCodecInfo.getHeightAlignment)int
android.media.MediaCodecInfo.getSupportedFrameRates)android.util.Range
android.media.MediaCodecInfo.getSupportedWidthsFor(int)android.util.Range
android.media.MediaCodecInfo.getSupportedHeightsFor(int)android.util.Range
android.media.MediaCodecInfo.getSupportedFrameRatesFor(int,int)android.util.Range
android.media.MediaCodecInfo.getAchievableFrameRatesFor(int,int)android.util.Range
android.media.MediaCodecInfo.getSupportedPerformancePoints)java.util.List
android.media.MediaCodecInfo.areSizeAndRateSupported(int,int,double)boolean
android.media.MediaCodecInfo.isSizeSupported(int,int)boolean
android.media.MediaCodecInfo.getQualityRange)android.util.Range
android.media.MediaCodecInfo.getComplexityRange)android.util.Range
android.media.MediaCodecInfo.isBitrateModeSupported(int)boolean
android.media.MediaCodecInfo.equals(Object)boolean
android.media.MediaCodecInfo.hashCode)int
android.media.MediaCodecInfo.isFeatureSupported(String)boolean
android.media.MediaCodecInfo.isFeatureRequired(String)boolean
android.media.MediaCodecInfo.isFormatSupported(android.media.MediaFormat)boolean
android.media.MediaCodecInfo.getDefaultFormat)android.media.MediaFormat
android.media.MediaCodecInfo.getMimeType)String
android.media.MediaCodecInfo.getMaxSupportedInstances)int
android.media.MediaCodecInfo.getAudioCapabilities)AudioCapabilities
android.media.MediaCodecInfo.getEncoderCapabilities)EncoderCapabilities
android.media.MediaCodecInfo.getVideoCapabilities)VideoCapabilities
android.media.MediaCodecInfo.createFromProfileLevel(String,int,int)CodecCapabilities
android.media.MediaCodecInfo.getBitrateRange)android.util.Range
android.media.MediaCodecInfo.getMaxInputChannelCount)int
android.media.MediaCodecInfo.isSampleRateSupported(int)boolean
android.media.MediaCodecInfo.getName)String
android.media.MediaCodecInfo.getCanonicalName)String
android.media.MediaCodecInfo.isAlias)boolean
android.media.MediaCodecInfo.isEncoder)boolean
android.media.MediaCodecInfo.isVendor)boolean
android.media.MediaCodecInfo.isSoftwareOnly)boolean
android.media.MediaCodecInfo.isHardwareAccelerated)boolean
android.media.MediaCodecInfo.getCapabilitiesForType(String)CodecCapabilities
android.media.MediaCodecList.getCodecCount)int
android.media.MediaCodecList.getCodecInfoAt(int)android.media.MediaCodecInfo
android.media.MediaCodecList.findDecoderForFormat(android.media.MediaFormat)String
android.media.MediaCodecList.findEncoderForFormat(android.media.MediaFormat)String
android.media.MediaController2.onConnected(android.media.MediaController2,android.media.Session2CommandGroup)void
android.media.MediaController2.onDisconnected(android.media.MediaController2)void
android.media.MediaController2.onPlaybackActiveChanged(android.media.MediaController2,boolean)void
android.media.MediaController2.onCommandResult(android.media.MediaController2,Object,android.media.Session2Command,Session2Command.Result)void
android.media.MediaController2.setConnectionHints(android.os.Bundle)Builder
android.media.MediaController2.setControllerCallback(java.util.concurrent.Executor,ControllerCallback)Builder
android.media.MediaController2.build)android.media.MediaController2
android.media.MediaController2.close)void
android.media.MediaController2.getConnectedToken)android.media.Session2Token
android.media.MediaController2.isPlaybackActive)boolean
android.media.MediaController2.sendSessionCommand(android.media.Session2Command,android.os.Bundle)Object
android.media.MediaController2.cancelSessionCommand(Object)void
android.media.MediaCrypto.isCryptoSchemeSupported(java.util.UUID)boolean
android.media.MediaCrypto.finalize)void
android.media.MediaDataSource.readAt(long,byte,int,int)int
android.media.MediaDataSource.getSize)long
android.media.MediaDescrambler.requiresSecureDecoderComponent(String)boolean
android.media.MediaDescrambler.setMediaCasSession(MediaCas.Session)void
android.media.MediaDescrambler.descramble(java.nio.ByteBuffer,java.nio.ByteBuffer,MediaCodec.CryptoInfo)int
android.media.MediaDescrambler.close)void
android.media.MediaDescrambler.finalize)void
android.media.MediaDescription.setMediaId(String)android.media.MediaDescription.Builder
android.media.MediaDescription.setTitle(CharSequence)android.media.MediaDescription.Builder
android.media.MediaDescription.setSubtitle(CharSequence)android.media.MediaDescription.Builder
android.media.MediaDescription.setDescription(CharSequence)android.media.MediaDescription.Builder
android.media.MediaDescription.setIconBitmap(android.graphics.Bitmap)android.media.MediaDescription.Builder
android.media.MediaDescription.setIconUri(android.net.Uri)android.media.MediaDescription.Builder
android.media.MediaDescription.setExtras(Bundle)android.media.MediaDescription.Builder
android.media.MediaDescription.setMediaUri(android.net.Uri)android.media.MediaDescription.Builder
android.media.MediaDescription.build)android.media.MediaDescription
android.media.MediaDescription.getMediaId)String
android.media.MediaDescription.getTitle)CharSequence
android.media.MediaDescription.getSubtitle)CharSequence
android.media.MediaDescription.getDescription)CharSequence
android.media.MediaDescription.getIconBitmap)android.graphics.Bitmap
android.media.MediaDescription.getIconUri)android.net.Uri
android.media.MediaDescription.getExtras)Bundle
android.media.MediaDescription.getMediaUri)android.net.Uri
android.media.MediaDescription.describeContents)int
android.media.MediaDescription.writeToParcel(Parcel,int)void
android.media.MediaDescription.equals(Object)boolean
android.media.MediaDescription.toString)String
android.media.MediaDrm.getErrorCode)int
android.media.MediaDrm.getDefaultUrl)String
android.media.MediaDrm.getDiagnosticInfo)String
android.media.MediaDrm.getStatusCode)int
android.media.MediaDrm.getDefaultUrl)String
android.media.MediaDrm.getRequestType)int
android.media.MediaDrm.verify(byte,byte,byte)boolean
android.media.MediaDrm.isCryptoSchemeSupported(UUID)boolean
android.media.MediaDrm.isCryptoSchemeSupported(UUID,String)boolean
android.media.MediaDrm.isCryptoSchemeSupported(UUID,String,int)boolean
android.media.MediaDrm.setOnExpirationUpdateListener(android.media.MediaDrm.OnExpirationUpdateListener,android.os.Handler)void
android.media.MediaDrm.setOnExpirationUpdateListener(java.util.concurrent.Executor,android.media.MediaDrm.OnExpirationUpdateListener)void
android.media.MediaDrm.clearOnExpirationUpdateListener)void
android.media.MediaDrm.setOnKeyStatusChangeListener(android.media.MediaDrm.OnKeyStatusChangeListener,android.os.Handler)void
android.media.MediaDrm.setOnKeyStatusChangeListener(java.util.concurrent.Executor,android.media.MediaDrm.OnKeyStatusChangeListener)void
android.media.MediaDrm.clearOnKeyStatusChangeListener)void
android.media.MediaDrm.setOnSessionLostStateListener(android.media.MediaDrm.OnSessionLostStateListener,android.os.Handler)void
android.media.MediaDrm.setOnSessionLostStateListener(java.util.concurrent.Executor,android.media.MediaDrm.OnSessionLostStateListener)void
android.media.MediaDrm.clearOnSessionLostStateListener)void
android.media.MediaDrm.setOnEventListener(android.media.MediaDrm.OnEventListener)void
android.media.MediaDrm.setOnEventListener(android.media.MediaDrm.OnEventListener,android.os.Handler)void
android.media.MediaDrm.setOnEventListener(java.util.concurrent.Executor,android.media.MediaDrm.OnEventListener)void
android.media.MediaDrm.clearOnEventListener)void
android.media.MediaDrm.getProvisionRequest)ProvisionRequest
android.media.MediaDrm.provideProvisionResponse(byte)void
android.media.MediaDrm.releaseAllSecureStops)void
android.media.MediaDrm.getMaxSecurityLevel)int
android.media.MediaDrm.getMetrics)android.os.PersistableBundle
android.media.MediaDrm.getCryptoSession(byte,String,String)android.media.MediaDrm.CryptoSession
android.media.MediaDrm.finalize)void
android.media.MediaDrm.close)void
android.media.MediaDrm.release)void
android.media.MediaExtractor.getSystemId)int
android.media.MediaExtractor.setDataSource(android.content.Context,android.net.Uri,java.util.Map)void
android.media.MediaExtractor.setDataSource(String,java.util.Map)void
android.media.MediaExtractor.setDataSource(String)void
android.media.MediaExtractor.setDataSource(android.content.res.AssetFileDescriptor)void
android.media.MediaExtractor.setDataSource(java.io.FileDescriptor)void
android.media.MediaExtractor.setMediaCas(android.media.MediaCas)void
android.media.MediaExtractor.getCasInfo(int)CasInfo
android.media.MediaExtractor.finalize)void
android.media.MediaExtractor.getDrmInitData)android.media.DrmInitData
android.media.MediaExtractor.getAudioPresentations(int)java.util.List
android.media.MediaExtractor.getPsshInfo)java.util.Map
android.media.MediaExtractor.getTrackFormat(int)android.media.MediaFormat
android.media.MediaExtractor.getMetrics)android.os.PersistableBundle
android.media.MediaFormat.containsKey(String)boolean
android.media.MediaFormat.containsFeature(String)boolean
android.media.MediaFormat.getValueTypeForKey(String)int
android.media.MediaFormat.getNumber(String)Number
android.media.MediaFormat.getNumber(String,Number)Number
android.media.MediaFormat.getInteger(String)int
android.media.MediaFormat.getInteger(String,int)int
android.media.MediaFormat.getLong(String)long
android.media.MediaFormat.getLong(String,long)long
android.media.MediaFormat.getFloat(String)float
android.media.MediaFormat.getFloat(String,float)float
android.media.MediaFormat.getString(String)String
android.media.MediaFormat.getString(String,String)String
android.media.MediaFormat.getByteBuffer(String)java.nio.ByteBuffer
android.media.MediaFormat.getByteBuffer(String,java.nio.ByteBuffer)java.nio.ByteBuffer
android.media.MediaFormat.getFeatureEnabled(String)boolean
android.media.MediaFormat.setInteger(String,int)void
android.media.MediaFormat.setLong(String,long)void
android.media.MediaFormat.setFloat(String,float)void
android.media.MediaFormat.setString(String,String)void
android.media.MediaFormat.setByteBuffer(String,java.nio.ByteBuffer)void
android.media.MediaFormat.removeKey(String)void
android.media.MediaFormat.removeFeature(String)void
android.media.MediaFormat.getKeys)java.util.Set
android.media.MediaFormat.getFeatures)java.util.Set
android.media.MediaFormat.setFeatureEnabled(String,boolean)void
android.media.MediaFormat.createAudioFormat(String,int,int)android.media.MediaFormat
android.media.MediaFormat.createSubtitleFormat(String,String)android.media.MediaFormat
android.media.MediaFormat.createVideoFormat(String,int,int)android.media.MediaFormat
android.media.MediaFormat.toString)String
android.media.MediaMetadata.putText(String,CharSequence)Builder
android.media.MediaMetadata.putString(String,String)Builder
android.media.MediaMetadata.putLong(String,long)Builder
android.media.MediaMetadata.putRating(String,android.media.Rating)Builder
android.media.MediaMetadata.putBitmap(String,android.graphics.Bitmap)Builder
android.media.MediaMetadata.build)android.media.MediaMetadata
android.media.MediaMetadata.containsKey(String)boolean
android.media.MediaMetadata.getText(String)CharSequence
android.media.MediaMetadata.getString(String)String
android.media.MediaMetadata.getLong(String)long
android.media.MediaMetadata.getRating(String)android.media.Rating
android.media.MediaMetadata.getBitmap(String)android.graphics.Bitmap
android.media.MediaMetadata.describeContents)int
android.media.MediaMetadata.writeToParcel(Parcel,int)void
android.media.MediaMetadata.size)int
android.media.MediaMetadata.keySet)java.util.Set
android.media.MediaMetadata.getDescription)android.media.MediaDescription
android.media.MediaMetadata.equals(Object)boolean
android.media.MediaMetadata.hashCode)int
android.media.MediaMetadataRetriever.setPreferredConfig(android.graphics.Bitmap.Config)void
android.media.MediaMetadataRetriever.setDataSource(String)void
android.media.MediaMetadataRetriever.setDataSource(String,java.util.Map)void
android.media.MediaMetadataRetriever.setDataSource(java.io.FileDescriptor)void
android.media.MediaMetadataRetriever.setDataSource(android.content.Context,android.net.Uri)void
android.media.MediaMetadataRetriever.setDataSource(android.media.MediaDataSource)void
android.media.MediaMetadataRetriever.getFrameAtTime(long,int)android.graphics.Bitmap
android.media.MediaMetadataRetriever.getScaledFrameAtTime(long,int,int,int)android.graphics.Bitmap
android.media.MediaMetadataRetriever.getFrameAtTime(long)android.graphics.Bitmap
android.media.MediaMetadataRetriever.getFrameAtTime)android.graphics.Bitmap
android.media.MediaMetadataRetriever.getFrameAtIndex(int,BitmapParams)android.graphics.Bitmap
android.media.MediaMetadataRetriever.getFrameAtIndex(int)android.graphics.Bitmap
android.media.MediaMetadataRetriever.getFramesAtIndex(int,int,BitmapParams)java.util.List
android.media.MediaMetadataRetriever.getFramesAtIndex(int,int)java.util.List
android.media.MediaMetadataRetriever.getImageAtIndex(int,BitmapParams)android.graphics.Bitmap
android.media.MediaMetadataRetriever.getImageAtIndex(int)android.graphics.Bitmap
android.media.MediaMetadataRetriever.getPrimaryImage(BitmapParams)android.graphics.Bitmap
android.media.MediaMetadataRetriever.getPrimaryImage)android.graphics.Bitmap
android.media.MediaMetadataRetriever.close)void
android.media.MediaMetadataRetriever.finalize)void
android.media.MediaMuxer.setOrientationHint(int)void
android.media.MediaMuxer.setLocation(float,float)void
android.media.MediaMuxer.start)void
android.media.MediaMuxer.stop)void
android.media.MediaMuxer.finalize)void
android.media.MediaMuxer.addTrack(android.media.MediaFormat)int
android.media.MediaMuxer.writeSampleData(int,java.nio.ByteBuffer,MediaCodec.BufferInfo)void
android.media.MediaMuxer.release)void
android.media.MediaPlayer.getTrackType)int
android.media.MediaPlayer.getLanguage)String
android.media.MediaPlayer.getFormat)android.media.MediaFormat
android.media.MediaPlayer.describeContents)int
android.media.MediaPlayer.writeToParcel(Parcel,int)void
android.media.MediaPlayer.toString)String
android.media.MediaPlayer.getPssh)Map
android.media.MediaPlayer.setDisplay(android.view.SurfaceHolder)void
android.media.MediaPlayer.setSurface(android.view.Surface)void
android.media.MediaPlayer.setVideoScalingMode(int)void
android.media.MediaPlayer.create(android.content.Context,android.net.Uri)android.media.MediaPlayer
android.media.MediaPlayer.create(android.content.Context,android.net.Uri,android.view.SurfaceHolder)android.media.MediaPlayer
android.media.MediaPlayer.create(android.content.Context,android.net.Uri,android.view.SurfaceHolder,android.media.AudioAttributes,int)android.media.MediaPlayer
android.media.MediaPlayer.create(android.content.Context,int)android.media.MediaPlayer
android.media.MediaPlayer.create(android.content.Context,int,android.media.AudioAttributes,int)android.media.MediaPlayer
android.media.MediaPlayer.setDataSource(android.content.Context,android.net.Uri)void
android.media.MediaPlayer.setDataSource(android.content.Context,android.net.Uri,Map,List)void
android.media.MediaPlayer.setDataSource(android.content.Context,android.net.Uri,Map)void
android.media.MediaPlayer.setDataSource(String)void
android.media.MediaPlayer.setDataSource(android.content.res.AssetFileDescriptor)void
android.media.MediaPlayer.setDataSource(java.io.FileDescriptor)void
android.media.MediaPlayer.setDataSource(java.io.FileDescriptor,long,long)void
android.media.MediaPlayer.setDataSource(android.media.MediaDataSource)void
android.media.MediaPlayer.prepare)void
android.media.MediaPlayer.start)void
android.media.MediaPlayer.stop)void
android.media.MediaPlayer.pause)void
android.media.MediaPlayer.createVolumeShaper(VolumeShaper.Configuration)android.media.VolumeShaper
android.media.MediaPlayer.setPreferredDevice(android.media.AudioDeviceInfo)boolean
android.media.MediaPlayer.getPreferredDevice)android.media.AudioDeviceInfo
android.media.MediaPlayer.getRoutedDevice)android.media.AudioDeviceInfo
android.media.MediaPlayer.addOnRoutingChangedListener(AudioRouting.OnRoutingChangedListener,Handler)void
android.media.MediaPlayer.removeOnRoutingChangedListener(AudioRouting.OnRoutingChangedListener)void
android.media.MediaPlayer.setWakeMode(android.content.Context,int)void
android.media.MediaPlayer.setScreenOnWhilePlaying(boolean)void
android.media.MediaPlayer.getMetrics)PersistableBundle
android.media.MediaPlayer.seekTo(long,int)void
android.media.MediaPlayer.seekTo(int)void
android.media.MediaPlayer.getTimestamp)android.media.MediaTimestamp
android.media.MediaPlayer.release)void
android.media.MediaPlayer.reset)void
android.media.MediaPlayer.setAudioStreamType(int)void
android.media.MediaPlayer.setAudioAttributes(android.media.AudioAttributes)void
android.media.MediaPlayer.setVolume(float,float)void
android.media.MediaPlayer.setAuxEffectSendLevel(float)void
android.media.MediaPlayer.addTimedTextSource(String,String)void
android.media.MediaPlayer.addTimedTextSource(android.content.Context,android.net.Uri,String)void
android.media.MediaPlayer.addTimedTextSource(java.io.FileDescriptor,String)void
android.media.MediaPlayer.addTimedTextSource(java.io.FileDescriptor,long,long,String)void
android.media.MediaPlayer.getSelectedTrack(int)int
android.media.MediaPlayer.selectTrack(int)void
android.media.MediaPlayer.deselectTrack(int)void
android.media.MediaPlayer.finalize)void
android.media.MediaPlayer.setOnPreparedListener(android.media.MediaPlayer.OnPreparedListener)void
android.media.MediaPlayer.setOnCompletionListener(android.media.MediaPlayer.OnCompletionListener)void
android.media.MediaPlayer.setOnBufferingUpdateListener(android.media.MediaPlayer.OnBufferingUpdateListener)void
android.media.MediaPlayer.setOnSeekCompleteListener(android.media.MediaPlayer.OnSeekCompleteListener)void
android.media.MediaPlayer.setOnVideoSizeChangedListener(android.media.MediaPlayer.OnVideoSizeChangedListener)void
android.media.MediaPlayer.setOnTimedTextListener(android.media.MediaPlayer.OnTimedTextListener)void
android.media.MediaPlayer.setOnSubtitleDataListener(android.media.MediaPlayer.OnSubtitleDataListener,Handler)void
android.media.MediaPlayer.setOnSubtitleDataListener(android.media.MediaPlayer.OnSubtitleDataListener)void
android.media.MediaPlayer.clearOnSubtitleDataListener)void
android.media.MediaPlayer.setOnMediaTimeDiscontinuityListener(android.media.MediaPlayer.OnMediaTimeDiscontinuityListener,Handler)void
android.media.MediaPlayer.setOnMediaTimeDiscontinuityListener(android.media.MediaPlayer.OnMediaTimeDiscontinuityListener)void
android.media.MediaPlayer.clearOnMediaTimeDiscontinuityListener)void
android.media.MediaPlayer.setOnTimedMetaDataAvailableListener(android.media.MediaPlayer.OnTimedMetaDataAvailableListener)void
android.media.MediaPlayer.setOnErrorListener(android.media.MediaPlayer.OnErrorListener)void
android.media.MediaPlayer.setOnInfoListener(android.media.MediaPlayer.OnInfoListener)void
android.media.MediaPlayer.setOnDrmConfigHelper(android.media.MediaPlayer.OnDrmConfigHelper)void
android.media.MediaPlayer.setOnDrmInfoListener(android.media.MediaPlayer.OnDrmInfoListener)void
android.media.MediaPlayer.setOnDrmInfoListener(android.media.MediaPlayer.OnDrmInfoListener,Handler)void
android.media.MediaPlayer.setOnDrmPreparedListener(android.media.MediaPlayer.OnDrmPreparedListener)void
android.media.MediaPlayer.setOnDrmPreparedListener(android.media.MediaPlayer.OnDrmPreparedListener,Handler)void
android.media.MediaPlayer.getDrmInfo)DrmInfo
android.media.MediaPlayer.prepareDrm(UUID)void
android.media.MediaPlayer.releaseDrm)void
android.media.MediaPlayer.restoreKeys(byte)void
android.media.MediaPlayer.getDrmPropertyString(String)String
android.media.MediaPlayer.setDrmPropertyString(String,String)void
android.media.MediaRecorder.setInputSurface(android.view.Surface)void
android.media.MediaRecorder.setPreviewDisplay(android.view.Surface)void
android.media.MediaRecorder.getAudioSourceMax)int
android.media.MediaRecorder.setProfile(android.media.CamcorderProfile)void
android.media.MediaRecorder.setCaptureRate(double)void
android.media.MediaRecorder.setOrientationHint(int)void
android.media.MediaRecorder.setLocation(float,float)void
android.media.MediaRecorder.setAudioSamplingRate(int)void
android.media.MediaRecorder.setAudioChannels(int)void
android.media.MediaRecorder.setAudioEncodingBitRate(int)void
android.media.MediaRecorder.setVideoEncodingBitRate(int)void
android.media.MediaRecorder.setVideoEncodingProfileLevel(int,int)void
android.media.MediaRecorder.setOutputFile(FileDescriptor)void
android.media.MediaRecorder.setOutputFile(File)void
android.media.MediaRecorder.setNextOutputFile(FileDescriptor)void
android.media.MediaRecorder.setOutputFile(String)void
android.media.MediaRecorder.setNextOutputFile(File)void
android.media.MediaRecorder.prepare)void
android.media.MediaRecorder.reset)void
android.media.MediaRecorder.setOnErrorListener(android.media.MediaRecorder.OnErrorListener)void
android.media.MediaRecorder.setOnInfoListener(android.media.MediaRecorder.OnInfoListener)void
android.media.MediaRecorder.setPreferredDevice(android.media.AudioDeviceInfo)boolean
android.media.MediaRecorder.getPreferredDevice)android.media.AudioDeviceInfo
android.media.MediaRecorder.getRoutedDevice)android.media.AudioDeviceInfo
android.media.MediaRecorder.addOnRoutingChangedListener(AudioRouting.OnRoutingChangedListener,android.os.Handler)void
android.media.MediaRecorder.removeOnRoutingChangedListener(AudioRouting.OnRoutingChangedListener)void
android.media.MediaRecorder.getActiveMicrophones)java.util.List
android.media.MediaRecorder.setPreferredMicrophoneDirection(int)boolean
android.media.MediaRecorder.setPreferredMicrophoneFieldDimension(float)boolean
android.media.MediaRecorder.registerAudioRecordingCallback(java.util.concurrent.Executor,AudioManager.AudioRecordingCallback)void
android.media.MediaRecorder.unregisterAudioRecordingCallback(AudioManager.AudioRecordingCallback)void
android.media.MediaRecorder.getActiveRecordingConfiguration)android.media.AudioRecordingConfiguration
android.media.MediaRecorder.getMetrics)android.os.PersistableBundle
android.media.MediaRecorder.finalize)void
android.media.MediaRouter.setName(CharSequence)void
android.media.MediaRouter.setName(int)void
android.media.MediaRouter.setDescription(CharSequence)void
android.media.MediaRouter.setStatus(CharSequence)void
android.media.MediaRouter.setRemoteControlClient(android.media.RemoteControlClient)void
android.media.MediaRouter.getRemoteControlClient)android.media.RemoteControlClient
android.media.MediaRouter.setIconDrawable(android.graphics.drawable.Drawable)void
android.media.MediaRouter.setIconResource(int)void
android.media.MediaRouter.setVolumeCallback(VolumeCallback)void
android.media.MediaRouter.setPlaybackType(int)void
android.media.MediaRouter.setVolumeHandling(int)void
android.media.MediaRouter.setVolume(int)void
android.media.MediaRouter.requestSetVolume(int)void
android.media.MediaRouter.requestUpdateVolume(int)void
android.media.MediaRouter.setVolumeMax(int)void
android.media.MediaRouter.setPlaybackStream(int)void
android.media.MediaRouter.onRouteSelected(android.media.MediaRouter,int,android.media.MediaRouter.RouteInfo)void
android.media.MediaRouter.onRouteUnselected(android.media.MediaRouter,int,android.media.MediaRouter.RouteInfo)void
android.media.MediaRouter.onRouteAdded(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)void
android.media.MediaRouter.onRouteRemoved(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)void
android.media.MediaRouter.onRouteChanged(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)void
android.media.MediaRouter.onRouteGrouped(android.media.MediaRouter,android.media.MediaRouter.RouteInfo,android.media.MediaRouter.RouteGroup,int)void
android.media.MediaRouter.onRouteUngrouped(android.media.MediaRouter,android.media.MediaRouter.RouteInfo,android.media.MediaRouter.RouteGroup)void
android.media.MediaRouter.onRouteVolumeChanged(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)void
android.media.MediaRouter.getName)CharSequence
android.media.MediaRouter.getName(android.content.Context)CharSequence
android.media.MediaRouter.getDescription)CharSequence
android.media.MediaRouter.getStatus)CharSequence
android.media.MediaRouter.getSupportedTypes)int
android.media.MediaRouter.getDeviceType)int
android.media.MediaRouter.getGroup)android.media.MediaRouter.RouteGroup
android.media.MediaRouter.getCategory)android.media.MediaRouter.RouteCategory
android.media.MediaRouter.getIconDrawable)android.graphics.drawable.Drawable
android.media.MediaRouter.setTag(Object)void
android.media.MediaRouter.getTag)Object
android.media.MediaRouter.getPlaybackType)int
android.media.MediaRouter.getPlaybackStream)int
android.media.MediaRouter.getVolume)int
android.media.MediaRouter.requestSetVolume(int)void
android.media.MediaRouter.requestUpdateVolume(int)void
android.media.MediaRouter.getVolumeMax)int
android.media.MediaRouter.getVolumeHandling)int
android.media.MediaRouter.getPresentationDisplay)android.view.Display
android.media.MediaRouter.isEnabled)boolean
android.media.MediaRouter.isConnecting)boolean
android.media.MediaRouter.toString)String
android.media.MediaRouter.addRoute(android.media.MediaRouter.RouteInfo)void
android.media.MediaRouter.addRoute(android.media.MediaRouter.RouteInfo,int)void
android.media.MediaRouter.removeRoute(android.media.MediaRouter.RouteInfo)void
android.media.MediaRouter.removeRoute(int)void
android.media.MediaRouter.getRouteCount)int
android.media.MediaRouter.getRouteAt(int)android.media.MediaRouter.RouteInfo
android.media.MediaRouter.setIconDrawable(android.graphics.drawable.Drawable)void
android.media.MediaRouter.setIconResource(int)void
android.media.MediaRouter.requestSetVolume(int)void
android.media.MediaRouter.requestUpdateVolume(int)void
android.media.MediaRouter.toString)String
android.media.MediaRouter.getName)CharSequence
android.media.MediaRouter.getName(android.content.Context)CharSequence
android.media.MediaRouter.getRoutes(java.util.List)java.util.List
android.media.MediaRouter.getSupportedTypes)int
android.media.MediaRouter.isGroupable)boolean
android.media.MediaRouter.toString)String
android.media.MediaRouter.onRoutePresentationDisplayChanged(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)void
android.media.MediaRouter.getDefaultRoute)android.media.MediaRouter.RouteInfo
android.media.MediaRouter.getSelectedRoute(int)android.media.MediaRouter.RouteInfo
android.media.MediaRouter.addCallback(int,Callback)void
android.media.MediaRouter.addCallback(int,Callback,int)void
android.media.MediaRouter.removeCallback(Callback)void
android.media.MediaRouter.selectRoute(int,android.media.MediaRouter.RouteInfo)void
android.media.MediaRouter.addUserRoute(android.media.MediaRouter.UserRouteInfo)void
android.media.MediaRouter.removeUserRoute(android.media.MediaRouter.UserRouteInfo)void
android.media.MediaRouter.clearUserRoutes)void
android.media.MediaRouter.getCategoryCount)int
android.media.MediaRouter.getCategoryAt(int)android.media.MediaRouter.RouteCategory
android.media.MediaRouter.getRouteCount)int
android.media.MediaRouter.getRouteAt(int)android.media.MediaRouter.RouteInfo
android.media.MediaRouter.createUserRoute(android.media.MediaRouter.RouteCategory)android.media.MediaRouter.UserRouteInfo
android.media.MediaRouter.createRouteCategory(CharSequence,boolean)android.media.MediaRouter.RouteCategory
android.media.MediaRouter.createRouteCategory(int,boolean)android.media.MediaRouter.RouteCategory
android.media.MediaScannerConnection.connect)void
android.media.MediaScannerConnection.disconnect)void
android.media.MediaScannerConnection.scanFile(String,String)void
android.media.MediaScannerConnection.scanFile(Context,String,String,android.media.MediaScannerConnection.OnScanCompletedListener)void
android.media.MediaScannerConnection.onServiceConnected(ComponentName,android.os.IBinder)void
android.media.MediaScannerConnection.onServiceDisconnected(ComponentName)void
android.media.MediaSession2.onConnect(android.media.MediaSession2,ControllerInfo)android.media.Session2CommandGroup
android.media.MediaSession2.onPostConnect(android.media.MediaSession2,ControllerInfo)void
android.media.MediaSession2.onDisconnected(android.media.MediaSession2,ControllerInfo)void
android.media.MediaSession2.onCommandResult(android.media.MediaSession2,ControllerInfo,Object,android.media.Session2Command,Session2Command.Result)void
android.media.MediaSession2.getPackageName)String
android.media.MediaSession2.getUid)int
android.media.MediaSession2.getConnectionHints)android.os.Bundle
android.media.MediaSession2.hashCode)int
android.media.MediaSession2.equals(Object)boolean
android.media.MediaSession2.toString)String
android.media.MediaSession2.setSessionActivity(android.app.PendingIntent)Builder
android.media.MediaSession2.setId(String)Builder
android.media.MediaSession2.setSessionCallback(java.util.concurrent.Executor,SessionCallback)Builder
android.media.MediaSession2.setExtras(android.os.Bundle)Builder
android.media.MediaSession2.build)android.media.MediaSession2
android.media.MediaSession2.close)void
android.media.MediaSession2.getId)String
android.media.MediaSession2.getToken)android.media.Session2Token
android.media.MediaSession2.broadcastSessionCommand(android.media.Session2Command,android.os.Bundle)void
android.media.MediaSession2.sendSessionCommand(ControllerInfo,android.media.Session2Command,android.os.Bundle)Object
android.media.MediaSession2.cancelSessionCommand(ControllerInfo,Object)void
android.media.MediaSession2.setPlaybackActive(boolean)void
android.media.MediaSession2.isPlaybackActive)boolean
android.media.MediaSession2.getConnectedControllers)java.util.List
android.media.MediaSession2Service.getNotificationId)int
android.media.MediaSession2Service.getNotification)android.app.Notification
android.media.MediaSession2Service.onCreate)void
android.media.MediaSession2Service.onBind(android.content.Intent)android.os.IBinder
android.media.MediaSession2Service.onDestroy)void
android.media.MediaSession2Service.addSession(android.media.MediaSession2)void
android.media.MediaSession2Service.removeSession(android.media.MediaSession2)void
android.media.MediaSession2Service.getSessions)java.util.List
android.media.MediaSync.finalize)void
android.media.MediaSync.release)void
android.media.MediaSync.setCallback(Callback,android.os.Handler)void
android.media.MediaSync.setOnErrorListener(android.media.MediaSync.OnErrorListener,android.os.Handler)void
android.media.MediaSync.setSurface(android.view.Surface)void
android.media.MediaSync.setAudioTrack(android.media.AudioTrack)void
android.media.MediaSync.setPlaybackParams(android.media.PlaybackParams)void
android.media.MediaSync.setSyncParams(android.media.SyncParams)void
android.media.MediaSync.flush)void
android.media.MediaSync.getTimestamp)android.media.MediaTimestamp
android.media.MediaSync.queueAudio(java.nio.ByteBuffer,int,long)void
android.media.MediaSyncEvent.createEvent(int)android.media.MediaSyncEvent
android.media.MediaSyncEvent.setAudioSessionId(int)android.media.MediaSyncEvent
android.media.MediaSyncEvent.getType)int
android.media.MediaSyncEvent.getAudioSessionId)int
android.media.MediaTimestamp.getAnchorMediaTimeUs)long
android.media.MediaTimestamp.getAnchorSytemNanoTime)long
android.media.MediaTimestamp.getAnchorSystemNanoTime)long
android.media.MediaTimestamp.getMediaClockRate)float
android.media.MediaTimestamp.equals(Object)boolean
android.media.MediaTimestamp.toString)String
android.media.MicrophoneInfo.equals(Object)boolean
android.media.MicrophoneInfo.getDescription)String
android.media.MicrophoneInfo.getId)int
android.media.MicrophoneInfo.getType)int
android.media.MicrophoneInfo.getAddress)String
android.media.MicrophoneInfo.getLocation)int
android.media.MicrophoneInfo.getGroup)int
android.media.MicrophoneInfo.getIndexInTheGroup)int
android.media.MicrophoneInfo.getPosition)Coordinate3F
android.media.MicrophoneInfo.getOrientation)Coordinate3F
android.media.MicrophoneInfo.getFrequencyResponse)java.util.List
android.media.MicrophoneInfo.getChannelMapping)java.util.List
android.media.MicrophoneInfo.getSensitivity)float
android.media.MicrophoneInfo.getMaxSpl)float
android.media.MicrophoneInfo.getMinSpl)float
android.media.MicrophoneInfo.getDirectionality)int
android.media.PlaybackParams.allowDefaults)android.media.PlaybackParams
android.media.PlaybackParams.setAudioFallbackMode(int)android.media.PlaybackParams
android.media.PlaybackParams.getAudioFallbackMode)int
android.media.PlaybackParams.setPitch(float)android.media.PlaybackParams
android.media.PlaybackParams.getPitch)float
android.media.PlaybackParams.setSpeed(float)android.media.PlaybackParams
android.media.PlaybackParams.getSpeed)float
android.media.PlaybackParams.describeContents)int
android.media.PlaybackParams.writeToParcel(android.os.Parcel,int)void
android.media.Rating.toString)String
android.media.Rating.describeContents)int
android.media.Rating.writeToParcel(android.os.Parcel,int)void
android.media.Rating.newUnratedRating(int)android.media.Rating
android.media.Rating.newHeartRating(boolean)android.media.Rating
android.media.Rating.newThumbRating(boolean)android.media.Rating
android.media.Rating.newStarRating(int,float)android.media.Rating
android.media.Rating.newPercentageRating(float)android.media.Rating
android.media.Rating.isRated)boolean
android.media.Rating.getRatingStyle)int
android.media.Rating.hasHeart)boolean
android.media.Rating.isThumbUp)boolean
android.media.Rating.getStarRating)float
android.media.Rating.getPercentRating)float
android.media.RemoteControlClient.clone)Object
android.media.RemoteControlClient.getMediaSession)android.media.session.MediaSession
android.media.RemoteControlClient.editMetadata(boolean)android.media.RemoteControlClient.MetadataEditor
android.media.RemoteControlClient.setPlaybackState(int)void
android.media.RemoteControlClient.setPlaybackState(int,long,float)void
android.media.RemoteControlClient.setTransportControlFlags(int)void
android.media.RemoteControlClient.setMetadataUpdateListener(android.media.RemoteControlClient.OnMetadataUpdateListener)void
android.media.RemoteControlClient.setPlaybackPositionUpdateListener(android.media.RemoteControlClient.OnPlaybackPositionUpdateListener)void
android.media.RemoteControlClient.setOnGetPlaybackPositionListener(android.media.RemoteControlClient.OnGetPlaybackPositionListener)void
android.media.RemoteController.getEstimatedMediaPosition)long
android.media.RemoteController.sendMediaKeyEvent(android.view.KeyEvent)boolean
android.media.RemoteController.seekTo(long)boolean
android.media.RemoteController.setArtworkConfiguration(int,int)boolean
android.media.RemoteController.clearArtworkConfiguration)boolean
android.media.RemoteController.setSynchronizationMode(int)boolean
android.media.RemoteController.editMetadata)android.media.RemoteController.MetadataEditor
android.media.Ringtone.setStreamType(int)void
android.media.Ringtone.getStreamType)int
android.media.Ringtone.setAudioAttributes(android.media.AudioAttributes)void
android.media.Ringtone.getAudioAttributes)android.media.AudioAttributes
android.media.Ringtone.setLooping(boolean)void
android.media.Ringtone.isLooping)boolean
android.media.Ringtone.setVolume(float)void
android.media.Ringtone.getVolume)float
android.media.Ringtone.getTitle(android.content.Context)String
android.media.Ringtone.play)void
android.media.Ringtone.stop)void
android.media.Ringtone.isPlaying)boolean
android.media.Ringtone.finalize)void
android.media.RingtoneManager.setType(int)void
android.media.RingtoneManager.inferStreamType)int
android.media.RingtoneManager.setStopPreviousRingtone(boolean)void
android.media.RingtoneManager.getStopPreviousRingtone)boolean
android.media.RingtoneManager.stopPreviousRingtone)void
android.media.RingtoneManager.getIncludeDrm)boolean
android.media.RingtoneManager.setIncludeDrm(boolean)void
android.media.RingtoneManager.getCursor)android.database.Cursor
android.media.RingtoneManager.getRingtone(int)android.media.Ringtone
android.media.RingtoneManager.getRingtoneUri(int)android.net.Uri
android.media.RingtoneManager.getRingtonePosition(android.net.Uri)int
android.media.RingtoneManager.getValidRingtoneUri(android.content.Context)android.net.Uri
android.media.RingtoneManager.getRingtone(android.content.Context,android.net.Uri)android.media.Ringtone
android.media.RingtoneManager.getActualDefaultRingtoneUri(android.content.Context,int)android.net.Uri
android.media.RingtoneManager.setActualDefaultRingtoneUri(android.content.Context,int,android.net.Uri)void
android.media.RingtoneManager.isDefault(android.net.Uri)boolean
android.media.RingtoneManager.getDefaultType(android.net.Uri)int
android.media.RingtoneManager.getDefaultUri(int)android.net.Uri
android.media.RingtoneManager.openDefaultRingtoneUri(android.content.Context,android.net.Uri)android.content.res.AssetFileDescriptor
android.media.RingtoneManager.hasHapticChannels(int)boolean
android.media.RingtoneManager.hasHapticChannels(android.net.Uri)boolean
android.media.Session2Command.getResultCode)int
android.media.Session2Command.getResultData)Bundle
android.media.Session2Command.getCommandCode)int
android.media.Session2Command.getCustomAction)String
android.media.Session2Command.getCustomExtras)Bundle
android.media.Session2Command.describeContents)int
android.media.Session2Command.writeToParcel(Parcel,int)void
android.media.Session2Command.equals(Object)boolean
android.media.Session2Command.hashCode)int
android.media.Session2CommandGroup.addCommand(android.media.Session2Command)Builder
android.media.Session2CommandGroup.removeCommand(android.media.Session2Command)Builder
android.media.Session2CommandGroup.build)android.media.Session2CommandGroup
android.media.Session2CommandGroup.hasCommand(android.media.Session2Command)boolean
android.media.Session2CommandGroup.hasCommand(int)boolean
android.media.Session2CommandGroup.getCommands)java.util.Set
android.media.Session2CommandGroup.describeContents)int
android.media.Session2CommandGroup.writeToParcel(android.os.Parcel,int)void
android.media.Session2Token.writeToParcel(Parcel,int)void
android.media.Session2Token.describeContents)int
android.media.Session2Token.hashCode)int
android.media.Session2Token.equals(Object)boolean
android.media.Session2Token.toString)String
android.media.Session2Token.getUid)int
android.media.Session2Token.getPackageName)String
android.media.Session2Token.getServiceName)String
android.media.Session2Token.getType)int
android.media.Session2Token.getExtras)Bundle
android.media.SoundPool.setMaxStreams(int)android.media.SoundPool.Builder
android.media.SoundPool.setAudioAttributes(android.media.AudioAttributes)android.media.SoundPool.Builder
android.media.SoundPool.build)android.media.SoundPool
android.media.SoundPool.release)void
android.media.SoundPool.finalize)void
android.media.SoundPool.load(String,int)int
android.media.SoundPool.load(android.content.Context,int,int)int
android.media.SoundPool.load(android.content.res.AssetFileDescriptor,int)int
android.media.SoundPool.load(java.io.FileDescriptor,long,long,int)int
android.media.SoundPool.play(int,float,float,int,int,float)int
android.media.SoundPool.setVolume(int,float,float)void
android.media.SoundPool.setOnLoadCompleteListener(android.media.SoundPool.OnLoadCompleteListener)void
android.media.SubtitleData.getTrackIndex)int
android.media.SubtitleData.getStartTimeUs)long
android.media.SubtitleData.getDurationUs)long
android.media.SyncParams.allowDefaults)android.media.SyncParams
android.media.SyncParams.setAudioAdjustMode(int)android.media.SyncParams
android.media.SyncParams.getAudioAdjustMode)int
android.media.SyncParams.setSyncSource(int)android.media.SyncParams
android.media.SyncParams.getSyncSource)int
android.media.SyncParams.setTolerance(float)android.media.SyncParams
android.media.SyncParams.getTolerance)float
android.media.SyncParams.setFrameRate(float)android.media.SyncParams
android.media.SyncParams.getFrameRate)float
android.media.ThumbnailUtils.createAudioThumbnail(String,int)android.graphics.Bitmap
android.media.ThumbnailUtils.createAudioThumbnail(java.io.File,android.util.Size,android.os.CancellationSignal)android.graphics.Bitmap
android.media.ThumbnailUtils.createImageThumbnail(String,int)android.graphics.Bitmap
android.media.ThumbnailUtils.createImageThumbnail(java.io.File,android.util.Size,android.os.CancellationSignal)android.graphics.Bitmap
android.media.ThumbnailUtils.createVideoThumbnail(String,int)android.graphics.Bitmap
android.media.ThumbnailUtils.createVideoThumbnail(java.io.File,android.util.Size,android.os.CancellationSignal)android.graphics.Bitmap
android.media.ThumbnailUtils.extractThumbnail(android.graphics.Bitmap,int,int)android.graphics.Bitmap
android.media.ThumbnailUtils.extractThumbnail(android.graphics.Bitmap,int,int,int)android.graphics.Bitmap
android.media.TimedMetaData.getTimestamp)long
android.media.TimedText.getText)String
android.media.TimedText.getBounds)android.graphics.Rect
android.media.ToneGenerator.startTone(int)boolean
android.media.ToneGenerator.finalize)void
android.media.VolumeProvider.getVolumeControl)int
android.media.VolumeProvider.getMaxVolume)int
android.media.VolumeProvider.getCurrentVolume)int
android.media.VolumeProvider.setCurrentVolume(int)void
android.media.VolumeProvider.onSetVolumeTo(int)void
android.media.VolumeProvider.onAdjustVolume(int)void
android.media.VolumeShaper.toString)String
android.media.VolumeShaper.hashCode)int
android.media.VolumeShaper.equals(Object)boolean
android.media.VolumeShaper.describeContents)int
android.media.VolumeShaper.writeToParcel(android.os.Parcel,int)void
android.media.VolumeShaper.setInterpolatorType(int)Builder
android.media.VolumeShaper.setDuration(long)Builder
android.media.VolumeShaper.setCurve(float,float)Builder
android.media.VolumeShaper.reflectTimes)Builder
android.media.VolumeShaper.invertVolumes)Builder
android.media.VolumeShaper.scaleToEndVolume(float)Builder
android.media.VolumeShaper.scaleToStartVolume(float)Builder
android.media.VolumeShaper.build)Configuration
android.media.VolumeShaper.getMaximumCurvePoints)int
android.media.VolumeShaper.toString)String
android.media.VolumeShaper.hashCode)int
android.media.VolumeShaper.equals(Object)boolean
android.media.VolumeShaper.describeContents)int
android.media.VolumeShaper.writeToParcel(android.os.Parcel,int)void
android.media.VolumeShaper.getInterpolatorType)int
android.media.VolumeShaper.getDuration)long
android.media.VolumeShaper.apply(Operation)void
android.media.VolumeShaper.replace(Configuration,Operation,boolean)void
android.media.VolumeShaper.getVolume)float
android.media.VolumeShaper.close)void
android.media.VolumeShaper.finalize)void
android.media.audiofx.AcousticEchoCanceler.isAvailable)boolean
android.media.audiofx.AcousticEchoCanceler.create(int)android.media.audiofx.AcousticEchoCanceler
android.media.audiofx.AudioEffect.hashCode)int
android.media.audiofx.AudioEffect.equals(Object)boolean
android.media.audiofx.AudioEffect.release)void
android.media.audiofx.AudioEffect.finalize)void
android.media.audiofx.AudioEffect.getDescriptor)android.media.audiofx.AudioEffect.Descriptor
android.media.audiofx.AudioEffect.setEnabled(boolean)int
android.media.audiofx.AudioEffect.getId)int
android.media.audiofx.AudioEffect.getEnabled)boolean
android.media.audiofx.AudioEffect.hasControl)boolean
android.media.audiofx.AudioEffect.setEnableStatusListener(android.media.audiofx.AudioEffect.OnEnableStatusChangeListener)void
android.media.audiofx.AudioEffect.setControlStatusListener(android.media.audiofx.AudioEffect.OnControlStatusChangeListener)void
android.media.audiofx.AutomaticGainControl.isAvailable)boolean
android.media.audiofx.AutomaticGainControl.create(int)android.media.audiofx.AutomaticGainControl
android.media.audiofx.BassBoost.toString)String
android.media.audiofx.BassBoost.getStrengthSupported)boolean
android.media.audiofx.BassBoost.setStrength(short)void
android.media.audiofx.BassBoost.getRoundedStrength)short
android.media.audiofx.BassBoost.setParameterListener(android.media.audiofx.BassBoost.OnParameterChangeListener)void
android.media.audiofx.BassBoost.getProperties)android.media.audiofx.BassBoost.Settings
android.media.audiofx.BassBoost.setProperties(android.media.audiofx.BassBoost.Settings)void
android.media.audiofx.DynamicsProcessing.isEnabled)boolean
android.media.audiofx.DynamicsProcessing.setEnabled(boolean)void
android.media.audiofx.DynamicsProcessing.isInUse)boolean
android.media.audiofx.DynamicsProcessing.toString)String
android.media.audiofx.DynamicsProcessing.toString)String
android.media.audiofx.DynamicsProcessing.getAttackTime)float
android.media.audiofx.DynamicsProcessing.setAttackTime(float)void
android.media.audiofx.DynamicsProcessing.getReleaseTime)float
android.media.audiofx.DynamicsProcessing.setReleaseTime(float)void
android.media.audiofx.DynamicsProcessing.getRatio)float
android.media.audiofx.DynamicsProcessing.setRatio(float)void
android.media.audiofx.DynamicsProcessing.getThreshold)float
android.media.audiofx.DynamicsProcessing.setThreshold(float)void
android.media.audiofx.DynamicsProcessing.getKneeWidth)float
android.media.audiofx.DynamicsProcessing.setKneeWidth(float)void
android.media.audiofx.DynamicsProcessing.getNoiseGateThreshold)float
android.media.audiofx.DynamicsProcessing.setNoiseGateThreshold(float)void
android.media.audiofx.DynamicsProcessing.getExpanderRatio)float
android.media.audiofx.DynamicsProcessing.setExpanderRatio(float)void
android.media.audiofx.DynamicsProcessing.getPreGain)float
android.media.audiofx.DynamicsProcessing.setPreGain(float)void
android.media.audiofx.DynamicsProcessing.getPostGain)float
android.media.audiofx.DynamicsProcessing.setPostGain(float)void
android.media.audiofx.DynamicsProcessing.toString)String
android.media.audiofx.DynamicsProcessing.setBand(int,MbcBand)void
android.media.audiofx.DynamicsProcessing.getBand(int)MbcBand
android.media.audiofx.DynamicsProcessing.toString)String
android.media.audiofx.DynamicsProcessing.getLinkGroup)int
android.media.audiofx.DynamicsProcessing.setLinkGroup(int)void
android.media.audiofx.DynamicsProcessing.getAttackTime)float
android.media.audiofx.DynamicsProcessing.setAttackTime(float)void
android.media.audiofx.DynamicsProcessing.getReleaseTime)float
android.media.audiofx.DynamicsProcessing.setReleaseTime(float)void
android.media.audiofx.DynamicsProcessing.getRatio)float
android.media.audiofx.DynamicsProcessing.setRatio(float)void
android.media.audiofx.DynamicsProcessing.getThreshold)float
android.media.audiofx.DynamicsProcessing.setThreshold(float)void
android.media.audiofx.DynamicsProcessing.getPostGain)float
android.media.audiofx.DynamicsProcessing.setPostGain(float)void
android.media.audiofx.DynamicsProcessing.toString)String
android.media.audiofx.DynamicsProcessing.getGain)float
android.media.audiofx.DynamicsProcessing.setGain(float)void
android.media.audiofx.DynamicsProcessing.toString)String
android.media.audiofx.DynamicsProcessing.setBand(int,EqBand)void
android.media.audiofx.DynamicsProcessing.getBand(int)EqBand
android.media.audiofx.DynamicsProcessing.setPreferredFrameDuration(float)Builder
android.media.audiofx.DynamicsProcessing.setInputGainByChannelIndex(int,float)Builder
android.media.audiofx.DynamicsProcessing.setInputGainAllChannelsTo(float)Builder
android.media.audiofx.DynamicsProcessing.setChannelTo(int,Channel)Builder
android.media.audiofx.DynamicsProcessing.setAllChannelsTo(Channel)Builder
android.media.audiofx.DynamicsProcessing.setPreEqByChannelIndex(int,Eq)Builder
android.media.audiofx.DynamicsProcessing.setPreEqAllChannelsTo(Eq)Builder
android.media.audiofx.DynamicsProcessing.setMbcByChannelIndex(int,Mbc)Builder
android.media.audiofx.DynamicsProcessing.setMbcAllChannelsTo(Mbc)Builder
android.media.audiofx.DynamicsProcessing.setPostEqByChannelIndex(int,Eq)Builder
android.media.audiofx.DynamicsProcessing.setPostEqAllChannelsTo(Eq)Builder
android.media.audiofx.DynamicsProcessing.setLimiterByChannelIndex(int,Limiter)Builder
android.media.audiofx.DynamicsProcessing.setLimiterAllChannelsTo(Limiter)Builder
android.media.audiofx.DynamicsProcessing.build)Config
android.media.audiofx.DynamicsProcessing.toString)String
android.media.audiofx.DynamicsProcessing.getVariant)int
android.media.audiofx.DynamicsProcessing.getPreferredFrameDuration)float
android.media.audiofx.DynamicsProcessing.isPreEqInUse)boolean
android.media.audiofx.DynamicsProcessing.getPreEqBandCount)int
android.media.audiofx.DynamicsProcessing.isMbcInUse)boolean
android.media.audiofx.DynamicsProcessing.getMbcBandCount)int
android.media.audiofx.DynamicsProcessing.isPostEqInUse)boolean
android.media.audiofx.DynamicsProcessing.getPostEqBandCount)int
android.media.audiofx.DynamicsProcessing.isLimiterInUse)boolean
android.media.audiofx.DynamicsProcessing.getChannelByChannelIndex(int)Channel
android.media.audiofx.DynamicsProcessing.setChannelTo(int,Channel)void
android.media.audiofx.DynamicsProcessing.setAllChannelsTo(Channel)void
android.media.audiofx.DynamicsProcessing.getInputGainByChannelIndex(int)float
android.media.audiofx.DynamicsProcessing.setInputGainByChannelIndex(int,float)void
android.media.audiofx.DynamicsProcessing.setInputGainAllChannelsTo(float)void
android.media.audiofx.DynamicsProcessing.getPreEqByChannelIndex(int)Eq
android.media.audiofx.DynamicsProcessing.setPreEqByChannelIndex(int,Eq)void
android.media.audiofx.DynamicsProcessing.setPreEqAllChannelsTo(Eq)void
android.media.audiofx.DynamicsProcessing.getPreEqBandByChannelIndex(int,int)EqBand
android.media.audiofx.DynamicsProcessing.setPreEqBandByChannelIndex(int,int,EqBand)void
android.media.audiofx.DynamicsProcessing.setPreEqBandAllChannelsTo(int,EqBand)void
android.media.audiofx.DynamicsProcessing.getMbcByChannelIndex(int)Mbc
android.media.audiofx.DynamicsProcessing.setMbcByChannelIndex(int,Mbc)void
android.media.audiofx.DynamicsProcessing.setMbcAllChannelsTo(Mbc)void
android.media.audiofx.DynamicsProcessing.getMbcBandByChannelIndex(int,int)MbcBand
android.media.audiofx.DynamicsProcessing.setMbcBandByChannelIndex(int,int,MbcBand)void
android.media.audiofx.DynamicsProcessing.setMbcBandAllChannelsTo(int,MbcBand)void
android.media.audiofx.DynamicsProcessing.getPostEqByChannelIndex(int)Eq
android.media.audiofx.DynamicsProcessing.setPostEqByChannelIndex(int,Eq)void
android.media.audiofx.DynamicsProcessing.setPostEqAllChannelsTo(Eq)void
android.media.audiofx.DynamicsProcessing.getPostEqBandByChannelIndex(int,int)EqBand
android.media.audiofx.DynamicsProcessing.setPostEqBandByChannelIndex(int,int,EqBand)void
android.media.audiofx.DynamicsProcessing.setPostEqBandAllChannelsTo(int,EqBand)void
android.media.audiofx.DynamicsProcessing.getLimiterByChannelIndex(int)Limiter
android.media.audiofx.DynamicsProcessing.setLimiterByChannelIndex(int,Limiter)void
android.media.audiofx.DynamicsProcessing.setLimiterAllChannelsTo(Limiter)void
android.media.audiofx.DynamicsProcessing.toString)String
android.media.audiofx.DynamicsProcessing.getInputGain)float
android.media.audiofx.DynamicsProcessing.setInputGain(float)void
android.media.audiofx.DynamicsProcessing.getPreEq)Eq
android.media.audiofx.DynamicsProcessing.setPreEq(Eq)void
android.media.audiofx.DynamicsProcessing.getPreEqBand(int)EqBand
android.media.audiofx.DynamicsProcessing.setPreEqBand(int,EqBand)void
android.media.audiofx.DynamicsProcessing.getMbc)Mbc
android.media.audiofx.DynamicsProcessing.setMbc(Mbc)void
android.media.audiofx.DynamicsProcessing.getMbcBand(int)MbcBand
android.media.audiofx.DynamicsProcessing.setMbcBand(int,MbcBand)void
android.media.audiofx.DynamicsProcessing.getPostEq)Eq
android.media.audiofx.DynamicsProcessing.setPostEq(Eq)void
android.media.audiofx.DynamicsProcessing.getPostEqBand(int)EqBand
android.media.audiofx.DynamicsProcessing.setPostEqBand(int,EqBand)void
android.media.audiofx.DynamicsProcessing.getLimiter)Limiter
android.media.audiofx.DynamicsProcessing.setLimiter(Limiter)void
android.media.audiofx.DynamicsProcessing.getBandCount)int
android.media.audiofx.DynamicsProcessing.toString)String
android.media.audiofx.DynamicsProcessing.toString)String
android.media.audiofx.DynamicsProcessing.isEnabled)boolean
android.media.audiofx.DynamicsProcessing.setEnabled(boolean)void
android.media.audiofx.DynamicsProcessing.getCutoffFrequency)float
android.media.audiofx.DynamicsProcessing.setCutoffFrequency(float)void
android.media.audiofx.DynamicsProcessing.getConfig)Config
android.media.audiofx.DynamicsProcessing.getChannelByChannelIndex(int)Channel
android.media.audiofx.DynamicsProcessing.setChannelTo(int,Channel)void
android.media.audiofx.DynamicsProcessing.setAllChannelsTo(Channel)void
android.media.audiofx.DynamicsProcessing.getInputGainByChannelIndex(int)float
android.media.audiofx.DynamicsProcessing.setInputGainbyChannel(int,float)void
android.media.audiofx.DynamicsProcessing.setInputGainAllChannelsTo(float)void
android.media.audiofx.DynamicsProcessing.getPreEqByChannelIndex(int)Eq
android.media.audiofx.DynamicsProcessing.setPreEqByChannelIndex(int,Eq)void
android.media.audiofx.DynamicsProcessing.setPreEqAllChannelsTo(Eq)void
android.media.audiofx.DynamicsProcessing.getPreEqBandByChannelIndex(int,int)EqBand
android.media.audiofx.DynamicsProcessing.setPreEqBandByChannelIndex(int,int,EqBand)void
android.media.audiofx.DynamicsProcessing.setPreEqBandAllChannelsTo(int,EqBand)void
android.media.audiofx.DynamicsProcessing.getMbcByChannelIndex(int)Mbc
android.media.audiofx.DynamicsProcessing.setMbcByChannelIndex(int,Mbc)void
android.media.audiofx.DynamicsProcessing.setMbcAllChannelsTo(Mbc)void
android.media.audiofx.DynamicsProcessing.getMbcBandByChannelIndex(int,int)MbcBand
android.media.audiofx.DynamicsProcessing.setMbcBandByChannelIndex(int,int,MbcBand)void
android.media.audiofx.DynamicsProcessing.setMbcBandAllChannelsTo(int,MbcBand)void
android.media.audiofx.DynamicsProcessing.getPostEqByChannelIndex(int)Eq
android.media.audiofx.DynamicsProcessing.setPostEqByChannelIndex(int,Eq)void
android.media.audiofx.DynamicsProcessing.setPostEqAllChannelsTo(Eq)void
android.media.audiofx.DynamicsProcessing.getPostEqBandByChannelIndex(int,int)EqBand
android.media.audiofx.DynamicsProcessing.setPostEqBandByChannelIndex(int,int,EqBand)void
android.media.audiofx.DynamicsProcessing.setPostEqBandAllChannelsTo(int,EqBand)void
android.media.audiofx.DynamicsProcessing.getLimiterByChannelIndex(int)Limiter
android.media.audiofx.DynamicsProcessing.setLimiterByChannelIndex(int,Limiter)void
android.media.audiofx.DynamicsProcessing.setLimiterAllChannelsTo(Limiter)void
android.media.audiofx.DynamicsProcessing.getChannelCount)int
android.media.audiofx.EnvironmentalReverb.toString)String
android.media.audiofx.EnvironmentalReverb.setRoomLevel(short)void
android.media.audiofx.EnvironmentalReverb.getRoomLevel)short
android.media.audiofx.EnvironmentalReverb.setRoomHFLevel(short)void
android.media.audiofx.EnvironmentalReverb.getRoomHFLevel)short
android.media.audiofx.EnvironmentalReverb.setDecayTime(int)void
android.media.audiofx.EnvironmentalReverb.getDecayTime)int
android.media.audiofx.EnvironmentalReverb.setDecayHFRatio(short)void
android.media.audiofx.EnvironmentalReverb.getDecayHFRatio)short
android.media.audiofx.EnvironmentalReverb.setReflectionsLevel(short)void
android.media.audiofx.EnvironmentalReverb.getReflectionsLevel)short
android.media.audiofx.EnvironmentalReverb.setReflectionsDelay(int)void
android.media.audiofx.EnvironmentalReverb.getReflectionsDelay)int
android.media.audiofx.EnvironmentalReverb.setReverbLevel(short)void
android.media.audiofx.EnvironmentalReverb.getReverbLevel)short
android.media.audiofx.EnvironmentalReverb.setReverbDelay(int)void
android.media.audiofx.EnvironmentalReverb.getReverbDelay)int
android.media.audiofx.EnvironmentalReverb.setDiffusion(short)void
android.media.audiofx.EnvironmentalReverb.getDiffusion)short
android.media.audiofx.EnvironmentalReverb.setDensity(short)void
android.media.audiofx.EnvironmentalReverb.getDensity)short
android.media.audiofx.EnvironmentalReverb.setParameterListener(android.media.audiofx.EnvironmentalReverb.OnParameterChangeListener)void
android.media.audiofx.EnvironmentalReverb.getProperties)android.media.audiofx.EnvironmentalReverb.Settings
android.media.audiofx.EnvironmentalReverb.setProperties(android.media.audiofx.EnvironmentalReverb.Settings)void
android.media.audiofx.Equalizer.toString)String
android.media.audiofx.Equalizer.getNumberOfBands)short
android.media.audiofx.Equalizer.setBandLevel(short,short)void
android.media.audiofx.Equalizer.getBandLevel(short)short
android.media.audiofx.Equalizer.getCenterFreq(short)int
android.media.audiofx.Equalizer.getBand(int)short
android.media.audiofx.Equalizer.getCurrentPreset)short
android.media.audiofx.Equalizer.usePreset(short)void
android.media.audiofx.Equalizer.getNumberOfPresets)short
android.media.audiofx.Equalizer.getPresetName(short)String
android.media.audiofx.Equalizer.setParameterListener(android.media.audiofx.Equalizer.OnParameterChangeListener)void
android.media.audiofx.Equalizer.getProperties)android.media.audiofx.Equalizer.Settings
android.media.audiofx.Equalizer.setProperties(android.media.audiofx.Equalizer.Settings)void
android.media.audiofx.LoudnessEnhancer.setTargetGain(int)void
android.media.audiofx.LoudnessEnhancer.getTargetGain)float
android.media.audiofx.NoiseSuppressor.isAvailable)boolean
android.media.audiofx.NoiseSuppressor.create(int)android.media.audiofx.NoiseSuppressor
android.media.audiofx.PresetReverb.toString)String
android.media.audiofx.PresetReverb.setPreset(short)void
android.media.audiofx.PresetReverb.getPreset)short
android.media.audiofx.PresetReverb.setParameterListener(android.media.audiofx.PresetReverb.OnParameterChangeListener)void
android.media.audiofx.PresetReverb.getProperties)android.media.audiofx.PresetReverb.Settings
android.media.audiofx.PresetReverb.setProperties(android.media.audiofx.PresetReverb.Settings)void
android.media.audiofx.Virtualizer.toString)String
android.media.audiofx.Virtualizer.getStrengthSupported)boolean
android.media.audiofx.Virtualizer.setStrength(short)void
android.media.audiofx.Virtualizer.getRoundedStrength)short
android.media.audiofx.Virtualizer.canVirtualize(int,int)boolean
android.media.audiofx.Virtualizer.getSpeakerAngles(int,int,int)boolean
android.media.audiofx.Virtualizer.forceVirtualizationMode(int)boolean
android.media.audiofx.Virtualizer.getVirtualizationMode)int
android.media.audiofx.Virtualizer.setParameterListener(android.media.audiofx.Virtualizer.OnParameterChangeListener)void
android.media.audiofx.Virtualizer.getProperties)android.media.audiofx.Virtualizer.Settings
android.media.audiofx.Virtualizer.setProperties(android.media.audiofx.Virtualizer.Settings)void
android.media.audiofx.Visualizer.release)void
android.media.audiofx.Visualizer.finalize)void
android.media.audiofx.Visualizer.setEnabled(boolean)int
android.media.audiofx.Visualizer.getEnabled)boolean
android.media.audiofx.Visualizer.setCaptureSize(int)int
android.media.audiofx.Visualizer.getCaptureSize)int
android.media.audiofx.Visualizer.setScalingMode(int)int
android.media.audiofx.Visualizer.getScalingMode)int
android.media.audiofx.Visualizer.setMeasurementMode(int)int
android.media.audiofx.Visualizer.getMeasurementMode)int
android.media.audiofx.Visualizer.getSamplingRate)int
android.media.audiofx.Visualizer.getWaveForm(byte)int
android.media.audiofx.Visualizer.getFft(byte)int
android.media.audiofx.Visualizer.getMeasurementPeakRms(MeasurementPeakRms)int
android.media.audiofx.Visualizer.setDataCaptureListener(android.media.audiofx.Visualizer.OnDataCaptureListener,int,boolean,boolean)int
android.media.browse.MediaBrowser.onChildrenLoaded(String,java.util.List)void
android.media.browse.MediaBrowser.onChildrenLoaded(String,java.util.List,Bundle)void
android.media.browse.MediaBrowser.onError(String)void
android.media.browse.MediaBrowser.onError(String,Bundle)void
android.media.browse.MediaBrowser.describeContents)int
android.media.browse.MediaBrowser.writeToParcel(Parcel,int)void
android.media.browse.MediaBrowser.toString)String
android.media.browse.MediaBrowser.getFlags)int
android.media.browse.MediaBrowser.isBrowsable)boolean
android.media.browse.MediaBrowser.isPlayable)boolean
android.media.browse.MediaBrowser.getDescription)android.media.MediaDescription
android.media.browse.MediaBrowser.getMediaId)String
android.media.browse.MediaBrowser.onItemLoaded(android.media.browse.MediaBrowser.MediaItem)void
android.media.browse.MediaBrowser.onError(String)void
android.media.browse.MediaBrowser.onConnected)void
android.media.browse.MediaBrowser.onConnectionSuspended)void
android.media.browse.MediaBrowser.onConnectionFailed)void
android.media.browse.MediaBrowser.connect)void
android.media.browse.MediaBrowser.disconnect)void
android.media.browse.MediaBrowser.isConnected)boolean
android.media.browse.MediaBrowser.getServiceComponent)android.content.ComponentName
android.media.browse.MediaBrowser.getRoot)String
android.media.browse.MediaBrowser.getExtras)Bundle
android.media.browse.MediaBrowser.subscribe(String,SubscriptionCallback)void
android.media.browse.MediaBrowser.subscribe(String,Bundle,SubscriptionCallback)void
android.media.browse.MediaBrowser.unsubscribe(String)void
android.media.browse.MediaBrowser.unsubscribe(String,SubscriptionCallback)void
android.media.browse.MediaBrowser.getItem(String,ItemCallback)void
android.media.effect.Effect.setUpdateListener(android.media.effect.EffectUpdateListener)void
android.media.effect.EffectContext.createWithCurrentGlContext)android.media.effect.EffectContext
android.media.effect.EffectContext.getFactory)android.media.effect.EffectFactory
android.media.effect.EffectContext.release)void
android.media.effect.EffectFactory.createEffect(String)android.media.effect.Effect
android.media.effect.EffectFactory.isEffectSupported(String)boolean
android.media.midi.MidiDevice.close)void
android.media.midi.MidiDevice.finalize)void
android.media.midi.MidiDevice.getInfo)android.media.midi.MidiDeviceInfo
android.media.midi.MidiDevice.openInputPort(int)android.media.midi.MidiInputPort
android.media.midi.MidiDevice.openOutputPort(int)android.media.midi.MidiOutputPort
android.media.midi.MidiDevice.connectPorts(android.media.midi.MidiInputPort,int)android.media.midi.MidiDevice.MidiConnection
android.media.midi.MidiDevice.close)void
android.media.midi.MidiDevice.finalize)void
android.media.midi.MidiDevice.toString)String
android.media.midi.MidiDeviceInfo.getType)int
android.media.midi.MidiDeviceInfo.getPortNumber)int
android.media.midi.MidiDeviceInfo.getName)String
android.media.midi.MidiDeviceInfo.getType)int
android.media.midi.MidiDeviceInfo.getId)int
android.media.midi.MidiDeviceInfo.getInputPortCount)int
android.media.midi.MidiDeviceInfo.getOutputPortCount)int
android.media.midi.MidiDeviceInfo.getProperties)Bundle
android.media.midi.MidiDeviceInfo.isPrivate)boolean
android.media.midi.MidiDeviceInfo.equals(Object)boolean
android.media.midi.MidiDeviceInfo.hashCode)int
android.media.midi.MidiDeviceInfo.toString)String
android.media.midi.MidiDeviceInfo.describeContents)int
android.media.midi.MidiDeviceInfo.writeToParcel(Parcel,int)void
android.media.midi.MidiDeviceService.onCreate)void
android.media.midi.MidiDeviceService.getDeviceInfo)android.media.midi.MidiDeviceInfo
android.media.midi.MidiDeviceService.onDeviceStatusChanged(android.media.midi.MidiDeviceStatus)void
android.media.midi.MidiDeviceService.onClose)void
android.media.midi.MidiDeviceService.onBind(android.content.Intent)android.os.IBinder
android.media.midi.MidiDeviceStatus.getDeviceInfo)android.media.midi.MidiDeviceInfo
android.media.midi.MidiDeviceStatus.isInputPortOpen(int)boolean
android.media.midi.MidiDeviceStatus.getOutputPortOpenCount(int)int
android.media.midi.MidiDeviceStatus.toString)String
android.media.midi.MidiDeviceStatus.describeContents)int
android.media.midi.MidiDeviceStatus.writeToParcel(android.os.Parcel,int)void
android.media.midi.MidiInputPort.getPortNumber)int
android.media.midi.MidiInputPort.onSend(byte,int,int,long)void
android.media.midi.MidiInputPort.onFlush)void
android.media.midi.MidiInputPort.close)void
android.media.midi.MidiInputPort.finalize)void
android.media.midi.MidiManager.onDeviceAdded(android.media.midi.MidiDeviceInfo)void
android.media.midi.MidiManager.onDeviceRemoved(android.media.midi.MidiDeviceInfo)void
android.media.midi.MidiManager.onDeviceStatusChanged(android.media.midi.MidiDeviceStatus)void
android.media.midi.MidiManager.registerDeviceCallback(android.media.midi.MidiManager.DeviceCallback,android.os.Handler)void
android.media.midi.MidiManager.unregisterDeviceCallback(android.media.midi.MidiManager.DeviceCallback)void
android.media.midi.MidiManager.openDevice(android.media.midi.MidiDeviceInfo,android.media.midi.MidiManager.OnDeviceOpenedListener,android.os.Handler)void
android.media.midi.MidiManager.openBluetoothDevice(android.bluetooth.BluetoothDevice,android.media.midi.MidiManager.OnDeviceOpenedListener,android.os.Handler)void
android.media.midi.MidiOutputPort.getPortNumber)int
android.media.midi.MidiOutputPort.onConnect(android.media.midi.MidiReceiver)void
android.media.midi.MidiOutputPort.onDisconnect(android.media.midi.MidiReceiver)void
android.media.midi.MidiOutputPort.close)void
android.media.midi.MidiOutputPort.finalize)void
android.media.midi.MidiReceiver.onSend(byte,int,int,long)void
android.media.midi.MidiReceiver.flush)void
android.media.midi.MidiReceiver.onFlush)void
android.media.midi.MidiReceiver.getMaxMessageSize)int
android.media.midi.MidiReceiver.send(byte,int,int)void
android.media.midi.MidiReceiver.send(byte,int,int,long)void
android.media.midi.MidiSender.connect(android.media.midi.MidiReceiver)void
android.media.midi.MidiSender.disconnect(android.media.midi.MidiReceiver)void
android.media.projection.MediaProjection.onStop)void
android.media.projection.MediaProjection.registerCallback(Callback,android.os.Handler)void
android.media.projection.MediaProjection.unregisterCallback(Callback)void
android.media.projection.MediaProjection.stop)void
android.media.projection.MediaProjectionManager.createScreenCaptureIntent)android.content.Intent
android.media.projection.MediaProjectionManager.getMediaProjection(int,android.content.Intent)android.media.projection.MediaProjection
android.media.session.MediaController.prepare)void
android.media.session.MediaController.prepareFromMediaId(String,Bundle)void
android.media.session.MediaController.prepareFromSearch(String,Bundle)void
android.media.session.MediaController.prepareFromUri(android.net.Uri,Bundle)void
android.media.session.MediaController.play)void
android.media.session.MediaController.playFromMediaId(String,Bundle)void
android.media.session.MediaController.playFromSearch(String,Bundle)void
android.media.session.MediaController.playFromUri(android.net.Uri,Bundle)void
android.media.session.MediaController.skipToQueueItem(long)void
android.media.session.MediaController.pause)void
android.media.session.MediaController.stop)void
android.media.session.MediaController.seekTo(long)void
android.media.session.MediaController.fastForward)void
android.media.session.MediaController.skipToNext)void
android.media.session.MediaController.rewind)void
android.media.session.MediaController.skipToPrevious)void
android.media.session.MediaController.setRating(Rating)void
android.media.session.MediaController.setPlaybackSpeed(float)void
android.media.session.MediaController.sendCustomAction(PlaybackState.CustomAction,Bundle)void
android.media.session.MediaController.sendCustomAction(String,Bundle)void
android.media.session.MediaController.getPlaybackType)int
android.media.session.MediaController.getVolumeControl)int
android.media.session.MediaController.getMaxVolume)int
android.media.session.MediaController.getCurrentVolume)int
android.media.session.MediaController.getAudioAttributes)AudioAttributes
android.media.session.MediaController.toString)String
android.media.session.MediaController.describeContents)int
android.media.session.MediaController.writeToParcel(Parcel,int)void
android.media.session.MediaController.onSessionDestroyed)void
android.media.session.MediaController.onSessionEvent(String,Bundle)void
android.media.session.MediaController.onPlaybackStateChanged(android.media.session.PlaybackState)void
android.media.session.MediaController.onMetadataChanged(MediaMetadata)void
android.media.session.MediaController.onQueueChanged(java.util.List)void
android.media.session.MediaController.onQueueTitleChanged(CharSequence)void
android.media.session.MediaController.onExtrasChanged(Bundle)void
android.media.session.MediaController.onAudioInfoChanged(PlaybackInfo)void
android.media.session.MediaController.getTransportControls)android.media.session.MediaController.TransportControls
android.media.session.MediaController.dispatchMediaButtonEvent(android.view.KeyEvent)boolean
android.media.session.MediaController.getPlaybackState)android.media.session.PlaybackState
android.media.session.MediaController.getMetadata)MediaMetadata
android.media.session.MediaController.getQueue)java.util.List
android.media.session.MediaController.getQueueTitle)CharSequence
android.media.session.MediaController.getExtras)Bundle
android.media.session.MediaController.getRatingType)int
android.media.session.MediaController.getFlags)long
android.media.session.MediaController.getPlaybackInfo)PlaybackInfo
android.media.session.MediaController.getSessionActivity)android.app.PendingIntent
android.media.session.MediaController.setVolumeTo(int,int)void
android.media.session.MediaController.adjustVolume(int,int)void
android.media.session.MediaController.registerCallback(Callback)void
android.media.session.MediaController.registerCallback(Callback,Handler)void
android.media.session.MediaController.unregisterCallback(Callback)void
android.media.session.MediaController.sendCommand(String,Bundle,ResultReceiver)void
android.media.session.MediaController.getPackageName)String
android.media.session.MediaController.getSessionInfo)Bundle
android.media.session.MediaSession.describeContents)int
android.media.session.MediaSession.writeToParcel(Parcel,int)void
android.media.session.MediaSession.hashCode)int
android.media.session.MediaSession.equals(Object)boolean
android.media.session.MediaSession.getDescription)MediaDescription
android.media.session.MediaSession.getQueueId)long
android.media.session.MediaSession.writeToParcel(Parcel,int)void
android.media.session.MediaSession.describeContents)int
android.media.session.MediaSession.toString)String
android.media.session.MediaSession.equals(Object)boolean
android.media.session.MediaSession.onCommand(String,Bundle,ResultReceiver)void
android.media.session.MediaSession.onMediaButtonEvent(android.content.Intent)boolean
android.media.session.MediaSession.onPrepare)void
android.media.session.MediaSession.onPrepareFromMediaId(String,Bundle)void
android.media.session.MediaSession.onPrepareFromSearch(String,Bundle)void
android.media.session.MediaSession.onPrepareFromUri(android.net.Uri,Bundle)void
android.media.session.MediaSession.onPlay)void
android.media.session.MediaSession.onPlayFromSearch(String,Bundle)void
android.media.session.MediaSession.onPlayFromMediaId(String,Bundle)void
android.media.session.MediaSession.onPlayFromUri(android.net.Uri,Bundle)void
android.media.session.MediaSession.onSkipToQueueItem(long)void
android.media.session.MediaSession.onPause)void
android.media.session.MediaSession.onSkipToNext)void
android.media.session.MediaSession.onSkipToPrevious)void
android.media.session.MediaSession.onFastForward)void
android.media.session.MediaSession.onRewind)void
android.media.session.MediaSession.onStop)void
android.media.session.MediaSession.onSeekTo(long)void
android.media.session.MediaSession.onSetRating(Rating)void
android.media.session.MediaSession.onSetPlaybackSpeed(float)void
android.media.session.MediaSession.onCustomAction(String,Bundle)void
android.media.session.MediaSession.setCallback(Callback)void
android.media.session.MediaSession.setCallback(Callback,Handler)void
android.media.session.MediaSession.setSessionActivity(android.app.PendingIntent)void
android.media.session.MediaSession.setMediaButtonReceiver(android.app.PendingIntent)void
android.media.session.MediaSession.setFlags(int)void
android.media.session.MediaSession.setPlaybackToLocal(AudioAttributes)void
android.media.session.MediaSession.setPlaybackToRemote(VolumeProvider)void
android.media.session.MediaSession.setActive(boolean)void
android.media.session.MediaSession.isActive)boolean
android.media.session.MediaSession.sendSessionEvent(String,Bundle)void
android.media.session.MediaSession.release)void
android.media.session.MediaSession.getSessionToken)Token
android.media.session.MediaSession.getController)android.media.session.MediaController
android.media.session.MediaSession.setPlaybackState(android.media.session.PlaybackState)void
android.media.session.MediaSession.setMetadata(MediaMetadata)void
android.media.session.MediaSession.setQueue(java.util.List)void
android.media.session.MediaSession.setQueueTitle(CharSequence)void
android.media.session.MediaSession.setRatingType(int)void
android.media.session.MediaSession.setExtras(Bundle)void
android.media.session.MediaSessionManager.getPackageName)String
android.media.session.MediaSessionManager.getPid)int
android.media.session.MediaSessionManager.getUid)int
android.media.session.MediaSessionManager.equals(Object)boolean
android.media.session.MediaSessionManager.hashCode)int
android.media.session.MediaSessionManager.notifySession2Created(android.media.Session2Token)void
android.media.session.MediaSessionManager.getActiveSessions(android.content.ComponentName)java.util.List
android.media.session.MediaSessionManager.getSession2Tokens)java.util.List
android.media.session.MediaSessionManager.addOnActiveSessionsChangedListener(android.media.session.MediaSessionManager.OnActiveSessionsChangedListener,android.content.ComponentName)void
android.media.session.MediaSessionManager.addOnActiveSessionsChangedListener(android.media.session.MediaSessionManager.OnActiveSessionsChangedListener,android.content.ComponentName,android.os.Handler)void
android.media.session.MediaSessionManager.removeOnActiveSessionsChangedListener(android.media.session.MediaSessionManager.OnActiveSessionsChangedListener)void
android.media.session.MediaSessionManager.addOnSession2TokensChangedListener(android.media.session.MediaSessionManager.OnSession2TokensChangedListener)void
android.media.session.MediaSessionManager.addOnSession2TokensChangedListener(android.media.session.MediaSessionManager.OnSession2TokensChangedListener,android.os.Handler)void
android.media.session.MediaSessionManager.removeOnSession2TokensChangedListener(android.media.session.MediaSessionManager.OnSession2TokensChangedListener)void
android.media.session.MediaSessionManager.isTrustedForMediaControl(RemoteUserInfo)boolean
android.media.session.PlaybackState.setExtras(Bundle)Builder
android.media.session.PlaybackState.build)CustomAction
android.media.session.PlaybackState.writeToParcel(Parcel,int)void
android.media.session.PlaybackState.describeContents)int
android.media.session.PlaybackState.getAction)String
android.media.session.PlaybackState.getName)CharSequence
android.media.session.PlaybackState.getIcon)int
android.media.session.PlaybackState.getExtras)Bundle
android.media.session.PlaybackState.toString)String
android.media.session.PlaybackState.setState(int,long,float,long)Builder
android.media.session.PlaybackState.setState(int,long,float)Builder
android.media.session.PlaybackState.setActions(long)Builder
android.media.session.PlaybackState.addCustomAction(String,String,int)Builder
android.media.session.PlaybackState.addCustomAction(CustomAction)Builder
android.media.session.PlaybackState.setBufferedPosition(long)Builder
android.media.session.PlaybackState.setActiveQueueItemId(long)Builder
android.media.session.PlaybackState.setErrorMessage(CharSequence)Builder
android.media.session.PlaybackState.setExtras(Bundle)Builder
android.media.session.PlaybackState.build)android.media.session.PlaybackState
android.media.session.PlaybackState.toString)String
android.media.session.PlaybackState.describeContents)int
android.media.session.PlaybackState.writeToParcel(Parcel,int)void
android.media.session.PlaybackState.getState)int
android.media.session.PlaybackState.getPosition)long
android.media.session.PlaybackState.getBufferedPosition)long
android.media.session.PlaybackState.getPlaybackSpeed)float
android.media.session.PlaybackState.getActions)long
android.media.session.PlaybackState.getCustomActions)java.util.List
android.media.session.PlaybackState.getErrorMessage)CharSequence
android.media.session.PlaybackState.getLastPositionUpdateTime)long
android.media.session.PlaybackState.getActiveQueueItemId)long
android.media.session.PlaybackState.getExtras)Bundle
android.media.tv.TvContentRating.unflattenFromString(String)android.media.tv.TvContentRating
android.media.tv.TvContentRating.getDomain)String
android.media.tv.TvContentRating.getRatingSystem)String
android.media.tv.TvContentRating.getMainRating)String
android.media.tv.TvContentRating.getSubRatings)java.util.List
android.media.tv.TvContentRating.flattenToString)String
android.media.tv.TvContentRating.contains(android.media.tv.TvContentRating)boolean
android.media.tv.TvContentRating.equals(Object)boolean
android.media.tv.TvContentRating.hashCode)int
android.media.tv.TvContract.isCanonical(String)boolean
android.media.tv.TvContract.getVideoResolution(String)String
android.media.tv.TvContract.buildInputId(android.content.ComponentName)String
android.media.tv.TvContract.buildChannelUri(long)android.net.Uri
android.media.tv.TvContract.buildChannelUriForPassthroughInput(String)android.net.Uri
android.media.tv.TvContract.buildChannelLogoUri(long)android.net.Uri
android.media.tv.TvContract.buildChannelLogoUri(android.net.Uri)android.net.Uri
android.media.tv.TvContract.buildChannelsUriForInput(String)android.net.Uri
android.media.tv.TvContract.buildProgramUri(long)android.net.Uri
android.media.tv.TvContract.buildProgramsUriForChannel(long)android.net.Uri
android.media.tv.TvContract.buildProgramsUriForChannel(android.net.Uri)android.net.Uri
android.media.tv.TvContract.buildProgramsUriForChannel(long,long,long)android.net.Uri
android.media.tv.TvContract.buildProgramsUriForChannel(android.net.Uri,long,long)android.net.Uri
android.media.tv.TvContract.buildRecordedProgramUri(long)android.net.Uri
android.media.tv.TvContract.buildPreviewProgramUri(long)android.net.Uri
android.media.tv.TvContract.buildPreviewProgramsUriForChannel(long)android.net.Uri
android.media.tv.TvContract.buildPreviewProgramsUriForChannel(android.net.Uri)android.net.Uri
android.media.tv.TvContract.buildWatchNextProgramUri(long)android.net.Uri
android.media.tv.TvContract.isChannelUri(android.net.Uri)boolean
android.media.tv.TvContract.isChannelUriForTunerInput(android.net.Uri)boolean
android.media.tv.TvContract.isChannelUriForPassthroughInput(android.net.Uri)boolean
android.media.tv.TvContract.isProgramUri(android.net.Uri)boolean
android.media.tv.TvContract.isRecordedProgramUri(android.net.Uri)boolean
android.media.tv.TvContract.requestChannelBrowsable(android.content.Context,long)void
android.media.tv.TvInputInfo.setTunerCount(int)Builder
android.media.tv.TvInputInfo.setCanRecord(boolean)Builder
android.media.tv.TvInputInfo.setExtras(Bundle)Builder
android.media.tv.TvInputInfo.build)android.media.tv.TvInputInfo
android.media.tv.TvInputInfo.getId)String
android.media.tv.TvInputInfo.getParentId)String
android.media.tv.TvInputInfo.getServiceInfo)android.content.pm.ServiceInfo
android.media.tv.TvInputInfo.createSetupIntent)Intent
android.media.tv.TvInputInfo.createSettingsIntent)Intent
android.media.tv.TvInputInfo.getType)int
android.media.tv.TvInputInfo.getTunerCount)int
android.media.tv.TvInputInfo.canRecord)boolean
android.media.tv.TvInputInfo.getExtras)Bundle
android.media.tv.TvInputInfo.isPassthroughInput)boolean
android.media.tv.TvInputInfo.isHidden(Context)boolean
android.media.tv.TvInputInfo.loadLabel(Context)CharSequence
android.media.tv.TvInputInfo.loadCustomLabel(Context)CharSequence
android.media.tv.TvInputInfo.loadIcon(Context)android.graphics.drawable.Drawable
android.media.tv.TvInputInfo.describeContents)int
android.media.tv.TvInputInfo.hashCode)int
android.media.tv.TvInputInfo.equals(Object)boolean
android.media.tv.TvInputInfo.toString)String
android.media.tv.TvInputInfo.writeToParcel(Parcel,int)void
android.media.tv.TvInputManager.onInputStateChanged(String,int)void
android.media.tv.TvInputManager.onInputAdded(String)void
android.media.tv.TvInputManager.onInputRemoved(String)void
android.media.tv.TvInputManager.onInputUpdated(String)void
android.media.tv.TvInputManager.onTvInputInfoUpdated(android.media.tv.TvInputInfo)void
android.media.tv.TvInputManager.getTvInputList)java.util.List
android.media.tv.TvInputManager.getTvInputInfo(String)android.media.tv.TvInputInfo
android.media.tv.TvInputManager.updateTvInputInfo(android.media.tv.TvInputInfo)void
android.media.tv.TvInputManager.getInputState(String)int
android.media.tv.TvInputManager.registerCallback(TvInputCallback,android.os.Handler)void
android.media.tv.TvInputManager.unregisterCallback(TvInputCallback)void
android.media.tv.TvInputManager.isParentalControlsEnabled)boolean
android.media.tv.TvInputManager.isRatingBlocked(android.media.tv.TvContentRating)boolean
android.media.tv.TvInputManager.getBlockedRatings)java.util.List
android.media.tv.TvInputService.setOverlayViewEnabled(boolean)void
android.media.tv.TvInputService.notifyChannelRetuned(android.net.Uri)void
android.media.tv.TvInputService.notifyTracksChanged(java.util.List)void
android.media.tv.TvInputService.notifyTrackSelected(int,String)void
android.media.tv.TvInputService.notifyVideoAvailable)void
android.media.tv.TvInputService.notifyVideoUnavailable(int)void
android.media.tv.TvInputService.notifyContentAllowed)void
android.media.tv.TvInputService.notifyContentBlocked(android.media.tv.TvContentRating)void
android.media.tv.TvInputService.notifyTimeShiftStatusChanged(int)void
android.media.tv.TvInputService.layoutSurface(int,int,int,int)void
android.media.tv.TvInputService.onSurfaceChanged(int,int,int)void
android.media.tv.TvInputService.onOverlayViewSizeChanged(int,int)void
android.media.tv.TvInputService.onTune(android.net.Uri,android.os.Bundle)boolean
android.media.tv.TvInputService.onUnblockContent(android.media.tv.TvContentRating)void
android.media.tv.TvInputService.onSelectTrack(int,String)boolean
android.media.tv.TvInputService.onAppPrivateCommand(String,android.os.Bundle)void
android.media.tv.TvInputService.onCreateOverlayView)View
android.media.tv.TvInputService.onTimeShiftPlay(android.net.Uri)void
android.media.tv.TvInputService.onTimeShiftPause)void
android.media.tv.TvInputService.onTimeShiftResume)void
android.media.tv.TvInputService.onTimeShiftSeekTo(long)void
android.media.tv.TvInputService.onTimeShiftSetPlaybackParams(android.media.PlaybackParams)void
android.media.tv.TvInputService.onTimeShiftGetStartPosition)long
android.media.tv.TvInputService.onTimeShiftGetCurrentPosition)long
android.media.tv.TvInputService.onKeyDown(int,KeyEvent)boolean
android.media.tv.TvInputService.onKeyLongPress(int,KeyEvent)boolean
android.media.tv.TvInputService.onKeyMultiple(int,int,KeyEvent)boolean
android.media.tv.TvInputService.onKeyUp(int,KeyEvent)boolean
android.media.tv.TvInputService.onTouchEvent(MotionEvent)boolean
android.media.tv.TvInputService.onTrackballEvent(MotionEvent)boolean
android.media.tv.TvInputService.onGenericMotionEvent(MotionEvent)boolean
android.media.tv.TvInputService.notifyTuned(android.net.Uri)void
android.media.tv.TvInputService.notifyRecordingStopped(android.net.Uri)void
android.media.tv.TvInputService.notifyError(int)void
android.media.tv.TvInputService.onTune(android.net.Uri,android.os.Bundle)void
android.media.tv.TvInputService.onAppPrivateCommand(String,android.os.Bundle)void
android.media.tv.TvInputService.onSetSurface(Surface)boolean
android.media.tv.TvInputService.onHardwareVideoAvailable)void
android.media.tv.TvInputService.onHardwareVideoUnavailable(int)void
android.media.tv.TvInputService.onBind(android.content.Intent)android.os.IBinder
android.media.tv.TvInputService.onCreateRecordingSession(String)RecordingSession
android.media.tv.TvRecordingClient.onConnectionFailed(String)void
android.media.tv.TvRecordingClient.onDisconnected(String)void
android.media.tv.TvRecordingClient.onTuned(android.net.Uri)void
android.media.tv.TvRecordingClient.onRecordingStopped(android.net.Uri)void
android.media.tv.TvRecordingClient.onError(int)void
android.media.tv.TvRecordingClient.tune(String,android.net.Uri)void
android.media.tv.TvRecordingClient.tune(String,android.net.Uri,android.os.Bundle)void
android.media.tv.TvRecordingClient.release)void
android.media.tv.TvRecordingClient.startRecording(android.net.Uri)void
android.media.tv.TvRecordingClient.stopRecording)void
android.media.tv.TvRecordingClient.sendAppPrivateCommand(String,android.os.Bundle)void
android.media.tv.TvTrackInfo.setLanguage(String)Builder
android.media.tv.TvTrackInfo.setDescription(CharSequence)Builder
android.media.tv.TvTrackInfo.setAudioChannelCount(int)Builder
android.media.tv.TvTrackInfo.setAudioSampleRate(int)Builder
android.media.tv.TvTrackInfo.setVideoWidth(int)Builder
android.media.tv.TvTrackInfo.setVideoHeight(int)Builder
android.media.tv.TvTrackInfo.setVideoFrameRate(float)Builder
android.media.tv.TvTrackInfo.setVideoPixelAspectRatio(float)Builder
android.media.tv.TvTrackInfo.setVideoActiveFormatDescription(byte)Builder
android.media.tv.TvTrackInfo.setExtra(Bundle)Builder
android.media.tv.TvTrackInfo.build)android.media.tv.TvTrackInfo
android.media.tv.TvTrackInfo.getType)int
android.media.tv.TvTrackInfo.getId)String
android.media.tv.TvTrackInfo.getLanguage)String
android.media.tv.TvTrackInfo.getDescription)CharSequence
android.media.tv.TvTrackInfo.getAudioChannelCount)int
android.media.tv.TvTrackInfo.getAudioSampleRate)int
android.media.tv.TvTrackInfo.getVideoWidth)int
android.media.tv.TvTrackInfo.getVideoHeight)int
android.media.tv.TvTrackInfo.getVideoFrameRate)float
android.media.tv.TvTrackInfo.getVideoPixelAspectRatio)float
android.media.tv.TvTrackInfo.getVideoActiveFormatDescription)byte
android.media.tv.TvTrackInfo.getExtra)Bundle
android.media.tv.TvTrackInfo.describeContents)int
android.media.tv.TvTrackInfo.writeToParcel(Parcel,int)void
android.media.tv.TvTrackInfo.equals(Object)boolean
android.media.tv.TvTrackInfo.hashCode)int
android.media.tv.TvView.onConnectionFailed(String)void
android.media.tv.TvView.onDisconnected(String)void
android.media.tv.TvView.onChannelRetuned(String,android.net.Uri)void
android.media.tv.TvView.onTracksChanged(String,java.util.List)void
android.media.tv.TvView.onTrackSelected(String,int,String)void
android.media.tv.TvView.onVideoSizeChanged(String,int,int)void
android.media.tv.TvView.onVideoAvailable(String)void
android.media.tv.TvView.onVideoUnavailable(String,int)void
android.media.tv.TvView.onContentAllowed(String)void
android.media.tv.TvView.onContentBlocked(String,android.media.tv.TvContentRating)void
android.media.tv.TvView.onTimeShiftStatusChanged(String,int)void
android.media.tv.TvView.onTimeShiftStartPositionChanged(String,long)void
android.media.tv.TvView.onTimeShiftCurrentPositionChanged(String,long)void
android.media.tv.TvView.setCallback(TvInputCallback)void
android.media.tv.TvView.setZOrderMediaOverlay(boolean)void
android.media.tv.TvView.setZOrderOnTop(boolean)void
android.media.tv.TvView.setStreamVolume(float)void
android.media.tv.TvView.tune(String,android.net.Uri)void
android.media.tv.TvView.tune(String,android.net.Uri,android.os.Bundle)void
android.media.tv.TvView.reset)void
android.media.tv.TvView.setCaptionEnabled(boolean)void
android.media.tv.TvView.selectTrack(int,String)void
android.media.tv.TvView.getTracks(int)java.util.List
android.media.tv.TvView.getSelectedTrack(int)String
android.media.tv.TvView.timeShiftPlay(String,android.net.Uri)void
android.media.tv.TvView.timeShiftPause)void
android.media.tv.TvView.timeShiftResume)void
android.media.tv.TvView.timeShiftSeekTo(long)void
android.media.tv.TvView.timeShiftSetPlaybackParams(android.media.PlaybackParams)void
android.media.tv.TvView.setTimeShiftPositionCallback(TimeShiftPositionCallback)void
android.media.tv.TvView.sendAppPrivateCommand(String,android.os.Bundle)void
android.media.tv.TvView.dispatchUnhandledInputEvent(InputEvent)boolean
android.media.tv.TvView.onUnhandledInputEvent(InputEvent)boolean
android.media.tv.TvView.setOnUnhandledInputEventListener(android.media.tv.TvView.OnUnhandledInputEventListener)void
android.media.tv.TvView.dispatchKeyEvent(KeyEvent)boolean
android.media.tv.TvView.dispatchTouchEvent(MotionEvent)boolean
android.media.tv.TvView.dispatchTrackballEvent(MotionEvent)boolean
android.media.tv.TvView.dispatchGenericMotionEvent(MotionEvent)boolean
android.media.tv.TvView.dispatchWindowFocusChanged(boolean)void
android.media.tv.TvView.onAttachedToWindow)void
android.media.tv.TvView.onDetachedFromWindow)void
android.media.tv.TvView.onLayout(boolean,int,int,int,int)void
android.media.tv.TvView.onMeasure(int,int)void
android.media.tv.TvView.gatherTransparentRegion(android.graphics.Region)boolean
android.media.tv.TvView.draw(android.graphics.Canvas)void
android.media.tv.TvView.dispatchDraw(android.graphics.Canvas)void
android.media.tv.TvView.onVisibilityChanged(View,int)void
android.mtp.MtpConstants.isAbstractObject(int)boolean
android.mtp.MtpDevice.open(android.hardware.usb.UsbDeviceConnection)boolean
android.mtp.MtpDevice.close)void
android.mtp.MtpDevice.finalize)void
android.mtp.MtpDevice.getDeviceName)String
android.mtp.MtpDevice.getDeviceId)int
android.mtp.MtpDevice.toString)String
android.mtp.MtpDevice.getDeviceInfo)android.mtp.MtpDeviceInfo
android.mtp.MtpDevice.getPartialObject(int,long,long,byte)long
android.mtp.MtpDevice.getPartialObject64(int,long,long,byte)long
android.mtp.MtpDevice.getStorageInfo(int)android.mtp.MtpStorageInfo
android.mtp.MtpDevice.getObjectInfo(int)android.mtp.MtpObjectInfo
android.mtp.MtpDevice.deleteObject(int)boolean
android.mtp.MtpDevice.getParent(int)long
android.mtp.MtpDevice.getStorageId(int)long
android.mtp.MtpDevice.importFile(int,String)boolean
android.mtp.MtpDevice.importFile(int,android.os.ParcelFileDescriptor)boolean
android.mtp.MtpDevice.sendObject(int,long,android.os.ParcelFileDescriptor)boolean
android.mtp.MtpDevice.sendObjectInfo(android.mtp.MtpObjectInfo)android.mtp.MtpObjectInfo
android.mtp.MtpDevice.readEvent(android.os.CancellationSignal)android.mtp.MtpEvent
android.mtp.MtpDeviceInfo.getManufacturer)String
android.mtp.MtpDeviceInfo.getModel)String
android.mtp.MtpDeviceInfo.getVersion)String
android.mtp.MtpDeviceInfo.getSerialNumber)String
android.mtp.MtpDeviceInfo.isOperationSupported(int)boolean
android.mtp.MtpDeviceInfo.isEventSupported(int)boolean
android.mtp.MtpEvent.getEventCode)int
android.mtp.MtpEvent.getParameter1)int
android.mtp.MtpEvent.getParameter2)int
android.mtp.MtpEvent.getParameter3)int
android.mtp.MtpEvent.getObjectHandle)int
android.mtp.MtpEvent.getStorageId)int
android.mtp.MtpEvent.getDevicePropCode)int
android.mtp.MtpEvent.getTransactionId)int
android.mtp.MtpEvent.getObjectPropCode)int
android.mtp.MtpEvent.getObjectFormatCode)int
android.mtp.MtpObjectInfo.setObjectHandle(int)android.mtp.MtpObjectInfo.Builder
android.mtp.MtpObjectInfo.setAssociationDesc(int)android.mtp.MtpObjectInfo.Builder
android.mtp.MtpObjectInfo.setAssociationType(int)android.mtp.MtpObjectInfo.Builder
android.mtp.MtpObjectInfo.setCompressedSize(long)android.mtp.MtpObjectInfo.Builder
android.mtp.MtpObjectInfo.setDateCreated(long)android.mtp.MtpObjectInfo.Builder
android.mtp.MtpObjectInfo.setDateModified(long)android.mtp.MtpObjectInfo.Builder
android.mtp.MtpObjectInfo.setFormat(int)android.mtp.MtpObjectInfo.Builder
android.mtp.MtpObjectInfo.setImagePixDepth(long)android.mtp.MtpObjectInfo.Builder
android.mtp.MtpObjectInfo.setImagePixHeight(long)android.mtp.MtpObjectInfo.Builder
android.mtp.MtpObjectInfo.setImagePixWidth(long)android.mtp.MtpObjectInfo.Builder
android.mtp.MtpObjectInfo.setKeywords(String)android.mtp.MtpObjectInfo.Builder
android.mtp.MtpObjectInfo.setName(String)android.mtp.MtpObjectInfo.Builder
android.mtp.MtpObjectInfo.setParent(int)android.mtp.MtpObjectInfo.Builder
android.mtp.MtpObjectInfo.setProtectionStatus(int)android.mtp.MtpObjectInfo.Builder
android.mtp.MtpObjectInfo.setSequenceNumber(long)android.mtp.MtpObjectInfo.Builder
android.mtp.MtpObjectInfo.setStorageId(int)android.mtp.MtpObjectInfo.Builder
android.mtp.MtpObjectInfo.setThumbCompressedSize(long)android.mtp.MtpObjectInfo.Builder
android.mtp.MtpObjectInfo.setThumbFormat(int)android.mtp.MtpObjectInfo.Builder
android.mtp.MtpObjectInfo.setThumbPixHeight(long)android.mtp.MtpObjectInfo.Builder
android.mtp.MtpObjectInfo.setThumbPixWidth(long)android.mtp.MtpObjectInfo.Builder
android.mtp.MtpObjectInfo.build)android.mtp.MtpObjectInfo
android.mtp.MtpObjectInfo.getObjectHandle)int
android.mtp.MtpObjectInfo.getStorageId)int
android.mtp.MtpObjectInfo.getFormat)int
android.mtp.MtpObjectInfo.getProtectionStatus)int
android.mtp.MtpObjectInfo.getCompressedSize)int
android.mtp.MtpObjectInfo.getCompressedSizeLong)long
android.mtp.MtpObjectInfo.getThumbFormat)int
android.mtp.MtpObjectInfo.getThumbCompressedSize)int
android.mtp.MtpObjectInfo.getThumbCompressedSizeLong)long
android.mtp.MtpObjectInfo.getThumbPixWidth)int
android.mtp.MtpObjectInfo.getThumbPixWidthLong)long
android.mtp.MtpObjectInfo.getThumbPixHeight)int
android.mtp.MtpObjectInfo.getThumbPixHeightLong)long
android.mtp.MtpObjectInfo.getImagePixWidth)int
android.mtp.MtpObjectInfo.getImagePixWidthLong)long
android.mtp.MtpObjectInfo.getImagePixHeight)int
android.mtp.MtpObjectInfo.getImagePixHeightLong)long
android.mtp.MtpObjectInfo.getImagePixDepth)int
android.mtp.MtpObjectInfo.getImagePixDepthLong)long
android.mtp.MtpObjectInfo.getParent)int
android.mtp.MtpObjectInfo.getAssociationType)int
android.mtp.MtpObjectInfo.getAssociationDesc)int
android.mtp.MtpObjectInfo.getSequenceNumber)int
android.mtp.MtpObjectInfo.getSequenceNumberLong)long
android.mtp.MtpObjectInfo.getName)String
android.mtp.MtpObjectInfo.getDateCreated)long
android.mtp.MtpObjectInfo.getDateModified)long
android.mtp.MtpObjectInfo.getKeywords)String
android.mtp.MtpStorageInfo.getStorageId)int
android.mtp.MtpStorageInfo.getMaxCapacity)long
android.mtp.MtpStorageInfo.getFreeSpace)long
android.mtp.MtpStorageInfo.getDescription)String
android.mtp.MtpStorageInfo.getVolumeIdentifier)String
android.net.CaptivePortal.describeContents)int
android.net.CaptivePortal.writeToParcel(Parcel,int)void
android.net.CaptivePortal.reportCaptivePortalDismissed)void
android.net.CaptivePortal.ignoreNetwork)void
android.net.ConnectivityManager.onAvailable(android.net.Network)void
android.net.ConnectivityManager.onLosing(android.net.Network,int)void
android.net.ConnectivityManager.onLost(android.net.Network)void
android.net.ConnectivityManager.onUnavailable)void
android.net.ConnectivityManager.onCapabilitiesChanged(android.net.Network,android.net.NetworkCapabilities)void
android.net.ConnectivityManager.onLinkPropertiesChanged(android.net.Network,android.net.LinkProperties)void
android.net.ConnectivityManager.onBlockedStatusChanged(android.net.Network,boolean)void
android.net.ConnectivityManager.isNetworkTypeValid(int)boolean
android.net.ConnectivityManager.setNetworkPreference(int)void
android.net.ConnectivityManager.getNetworkPreference)int
android.net.ConnectivityManager.getActiveNetworkInfo)android.net.NetworkInfo
android.net.ConnectivityManager.getActiveNetwork)android.net.Network
android.net.ConnectivityManager.getNetworkInfo(int)android.net.NetworkInfo
android.net.ConnectivityManager.getNetworkInfo(android.net.Network)android.net.NetworkInfo
android.net.ConnectivityManager.getLinkProperties(android.net.Network)android.net.LinkProperties
android.net.ConnectivityManager.getNetworkCapabilities(android.net.Network)android.net.NetworkCapabilities
android.net.ConnectivityManager.createSocketKeepalive(android.net.Network,IpSecManager.UdpEncapsulationSocket,java.net.InetAddress,java.net.InetAddress,java.util.concurrent.Executor,SocketKeepalive.Callback)android.net.SocketKeepalive
android.net.ConnectivityManager.getBackgroundDataSetting)boolean
android.net.ConnectivityManager.addDefaultNetworkActiveListener(android.net.ConnectivityManager.OnNetworkActiveListener)void
android.net.ConnectivityManager.removeDefaultNetworkActiveListener(android.net.ConnectivityManager.OnNetworkActiveListener)void
android.net.ConnectivityManager.isDefaultNetworkActive)boolean
android.net.ConnectivityManager.reportBadNetwork(android.net.Network)void
android.net.ConnectivityManager.reportNetworkConnectivity(android.net.Network,boolean)void
android.net.ConnectivityManager.getDefaultProxy)android.net.ProxyInfo
android.net.ConnectivityManager.isActiveNetworkMetered)boolean
android.net.ConnectivityManager.requestNetwork(android.net.NetworkRequest,android.net.ConnectivityManager.NetworkCallback)void
android.net.ConnectivityManager.requestNetwork(android.net.NetworkRequest,android.net.ConnectivityManager.NetworkCallback,android.os.Handler)void
android.net.ConnectivityManager.requestNetwork(android.net.NetworkRequest,android.net.ConnectivityManager.NetworkCallback,int)void
android.net.ConnectivityManager.requestNetwork(android.net.NetworkRequest,android.net.ConnectivityManager.NetworkCallback,android.os.Handler,int)void
android.net.ConnectivityManager.requestNetwork(android.net.NetworkRequest,android.app.PendingIntent)void
android.net.ConnectivityManager.releaseNetworkRequest(android.app.PendingIntent)void
android.net.ConnectivityManager.registerNetworkCallback(android.net.NetworkRequest,android.net.ConnectivityManager.NetworkCallback)void
android.net.ConnectivityManager.registerNetworkCallback(android.net.NetworkRequest,android.net.ConnectivityManager.NetworkCallback,android.os.Handler)void
android.net.ConnectivityManager.registerNetworkCallback(android.net.NetworkRequest,android.app.PendingIntent)void
android.net.ConnectivityManager.registerDefaultNetworkCallback(android.net.ConnectivityManager.NetworkCallback)void
android.net.ConnectivityManager.registerDefaultNetworkCallback(android.net.ConnectivityManager.NetworkCallback,android.os.Handler)void
android.net.ConnectivityManager.requestBandwidthUpdate(android.net.Network)boolean
android.net.ConnectivityManager.unregisterNetworkCallback(android.net.ConnectivityManager.NetworkCallback)void
android.net.ConnectivityManager.unregisterNetworkCallback(android.app.PendingIntent)void
android.net.ConnectivityManager.getMultipathPreference(android.net.Network)int
android.net.ConnectivityManager.bindProcessToNetwork(android.net.Network)boolean
android.net.ConnectivityManager.setProcessDefaultNetwork(android.net.Network)boolean
android.net.ConnectivityManager.getBoundNetworkForProcess)android.net.Network
android.net.ConnectivityManager.getProcessDefaultNetwork)android.net.Network
android.net.ConnectivityManager.getRestrictBackgroundStatus)int
android.net.ConnectivityManager.getConnectionOwnerUid(int,java.net.InetSocketAddress,java.net.InetSocketAddress)int
android.net.Credentials.getPid)int
android.net.Credentials.getUid)int
android.net.Credentials.getGid)int
android.net.DhcpInfo.toString)String
android.net.DhcpInfo.describeContents)int
android.net.DhcpInfo.writeToParcel(android.os.Parcel,int)void
android.net.DnsResolver.getInstance)android.net.DnsResolver
android.net.DnsResolver.rawQuery(android.net.Network,byte,int,java.util.concurrent.Executor,android.os.CancellationSignal,android.net.DnsResolver.Callback)void
android.net.DnsResolver.query(android.net.Network,String,int,java.util.concurrent.Executor,android.os.CancellationSignal,android.net.DnsResolver.Callback)void
android.net.DnsResolver.query(android.net.Network,String,int,int,java.util.concurrent.Executor,android.os.CancellationSignal,android.net.DnsResolver.Callback)void
android.net.InetAddresses.isNumericAddress(String)boolean
android.net.InetAddresses.parseNumericAddress(String)java.net.InetAddress
android.net.IpPrefix.equals(Object)boolean
android.net.IpPrefix.hashCode)int
android.net.IpPrefix.getAddress)java.net.InetAddress
android.net.IpPrefix.getPrefixLength)int
android.net.IpPrefix.contains(java.net.InetAddress)boolean
android.net.IpPrefix.toString)String
android.net.IpPrefix.describeContents)int
android.net.IpPrefix.writeToParcel(android.os.Parcel,int)void
android.net.IpSecAlgorithm.getName)String
android.net.IpSecAlgorithm.getTruncationLengthBits)int
android.net.IpSecAlgorithm.describeContents)int
android.net.IpSecAlgorithm.writeToParcel(android.os.Parcel,int)void
android.net.IpSecAlgorithm.toString)String
android.net.IpSecManager.getFileDescriptor)java.io.FileDescriptor
android.net.IpSecManager.getPort)int
android.net.IpSecManager.close)void
android.net.IpSecManager.finalize)void
android.net.IpSecManager.toString)String
android.net.IpSecManager.getSpi)int
android.net.IpSecManager.getSpi)int
android.net.IpSecManager.close)void
android.net.IpSecManager.finalize)void
android.net.IpSecManager.toString)String
android.net.IpSecManager.allocateSecurityParameterIndex(InetAddress)SecurityParameterIndex
android.net.IpSecManager.allocateSecurityParameterIndex(InetAddress,int)SecurityParameterIndex
android.net.IpSecManager.applyTransportModeTransform(Socket,int,android.net.IpSecTransform)void
android.net.IpSecManager.applyTransportModeTransform(DatagramSocket,int,android.net.IpSecTransform)void
android.net.IpSecManager.applyTransportModeTransform(java.io.FileDescriptor,int,android.net.IpSecTransform)void
android.net.IpSecManager.removeTransportModeTransforms(Socket)void
android.net.IpSecManager.removeTransportModeTransforms(DatagramSocket)void
android.net.IpSecManager.removeTransportModeTransforms(java.io.FileDescriptor)void
android.net.IpSecManager.openUdpEncapsulationSocket(int)UdpEncapsulationSocket
android.net.IpSecManager.openUdpEncapsulationSocket)UdpEncapsulationSocket
android.net.IpSecTransform.setEncryption(android.net.IpSecAlgorithm)android.net.IpSecTransform.Builder
android.net.IpSecTransform.setAuthentication(android.net.IpSecAlgorithm)android.net.IpSecTransform.Builder
android.net.IpSecTransform.setAuthenticatedEncryption(android.net.IpSecAlgorithm)android.net.IpSecTransform.Builder
android.net.IpSecTransform.setIpv4Encapsulation(IpSecManager.UdpEncapsulationSocket,int)android.net.IpSecTransform.Builder
android.net.IpSecTransform.buildTransportModeTransform(java.net.InetAddress,IpSecManager.SecurityParameterIndex)android.net.IpSecTransform
android.net.IpSecTransform.close)void
android.net.IpSecTransform.finalize)void
android.net.IpSecTransform.toString)String
android.net.LinkAddress.toString)String
android.net.LinkAddress.equals(Object)boolean
android.net.LinkAddress.hashCode)int
android.net.LinkAddress.getAddress)java.net.InetAddress
android.net.LinkAddress.getPrefixLength)int
android.net.LinkAddress.getFlags)int
android.net.LinkAddress.getScope)int
android.net.LinkAddress.describeContents)int
android.net.LinkAddress.writeToParcel(android.os.Parcel,int)void
android.net.LinkProperties.setInterfaceName(String)void
android.net.LinkProperties.getInterfaceName)String
android.net.LinkProperties.getLinkAddresses)java.util.List
android.net.LinkProperties.setLinkAddresses(java.util.Collection)void
android.net.LinkProperties.setDnsServers(java.util.Collection)void
android.net.LinkProperties.getDnsServers)java.util.List
android.net.LinkProperties.isPrivateDnsActive)boolean
android.net.LinkProperties.getPrivateDnsServerName)String
android.net.LinkProperties.setDomains(String)void
android.net.LinkProperties.getDomains)String
android.net.LinkProperties.setMtu(int)void
android.net.LinkProperties.getMtu)int
android.net.LinkProperties.addRoute(android.net.RouteInfo)boolean
android.net.LinkProperties.getRoutes)java.util.List
android.net.LinkProperties.setHttpProxy(android.net.ProxyInfo)void
android.net.LinkProperties.getHttpProxy)android.net.ProxyInfo
android.net.LinkProperties.clear)void
android.net.LinkProperties.describeContents)int
android.net.LinkProperties.toString)String
android.net.LinkProperties.equals(Object)boolean
android.net.LinkProperties.hashCode)int
android.net.LinkProperties.writeToParcel(android.os.Parcel,int)void
android.net.LocalServerSocket.getLocalSocketAddress)android.net.LocalSocketAddress
android.net.LocalServerSocket.accept)android.net.LocalSocket
android.net.LocalServerSocket.getFileDescriptor)FileDescriptor
android.net.LocalServerSocket.close)void
android.net.LocalSocket.toString)String
android.net.LocalSocket.connect(android.net.LocalSocketAddress)void
android.net.LocalSocket.bind(android.net.LocalSocketAddress)void
android.net.LocalSocket.getLocalSocketAddress)android.net.LocalSocketAddress
android.net.LocalSocket.getInputStream)InputStream
android.net.LocalSocket.getOutputStream)OutputStream
android.net.LocalSocket.close)void
android.net.LocalSocket.shutdownInput)void
android.net.LocalSocket.shutdownOutput)void
android.net.LocalSocket.setReceiveBufferSize(int)void
android.net.LocalSocket.getReceiveBufferSize)int
android.net.LocalSocket.setSoTimeout(int)void
android.net.LocalSocket.getSoTimeout)int
android.net.LocalSocket.setSendBufferSize(int)void
android.net.LocalSocket.getSendBufferSize)int
android.net.LocalSocket.getRemoteSocketAddress)android.net.LocalSocketAddress
android.net.LocalSocket.isClosed)boolean
android.net.LocalSocket.isOutputShutdown)boolean
android.net.LocalSocket.isInputShutdown)boolean
android.net.LocalSocket.connect(android.net.LocalSocketAddress,int)void
android.net.LocalSocket.setFileDescriptorsForSend(FileDescriptor)void
android.net.LocalSocket.getPeerCredentials)android.net.Credentials
android.net.LocalSocket.getFileDescriptor)FileDescriptor
android.net.LocalSocketAddress.valueOf(String)Namespace
android.net.LocalSocketAddress.getName)String
android.net.LocalSocketAddress.getNamespace)Namespace
android.net.MacAddress.getAddressType)int
android.net.MacAddress.isLocallyAssigned)boolean
android.net.MacAddress.toString)String
android.net.MacAddress.toOuiString)String
android.net.MacAddress.hashCode)int
android.net.MacAddress.equals(Object)boolean
android.net.MacAddress.writeToParcel(android.os.Parcel,int)void
android.net.MacAddress.describeContents)int
android.net.MacAddress.fromString(String)android.net.MacAddress
android.net.MacAddress.fromBytes(byte)android.net.MacAddress
android.net.MailTo.isMailTo(String)boolean
android.net.MailTo.parse(String)android.net.MailTo
android.net.MailTo.getTo)String
android.net.MailTo.getCc)String
android.net.MailTo.getSubject)String
android.net.MailTo.getBody)String
android.net.MailTo.getHeaders)java.util.Map
android.net.MailTo.toString)String
android.net.Network.getByName(String)InetAddress
android.net.Network.getSocketFactory)javax.net.SocketFactory
android.net.Network.openConnection(URL)URLConnection
android.net.Network.openConnection(URL,android.net.Proxy)URLConnection
android.net.Network.bindSocket(DatagramSocket)void
android.net.Network.bindSocket(Socket)void
android.net.Network.bindSocket(java.io.FileDescriptor)void
android.net.Network.fromNetworkHandle(long)android.net.Network
android.net.Network.getNetworkHandle)long
android.net.Network.describeContents)int
android.net.Network.writeToParcel(android.os.Parcel,int)void
android.net.Network.equals(Object)boolean
android.net.Network.hashCode)int
android.net.Network.toString)String
android.net.NetworkCapabilities.hasCapability(int)boolean
android.net.NetworkCapabilities.hasTransport(int)boolean
android.net.NetworkCapabilities.getLinkUpstreamBandwidthKbps)int
android.net.NetworkCapabilities.getLinkDownstreamBandwidthKbps)int
android.net.NetworkCapabilities.getTransportInfo)android.net.TransportInfo
android.net.NetworkCapabilities.getSignalStrength)int
android.net.NetworkCapabilities.equals(Object)boolean
android.net.NetworkCapabilities.hashCode)int
android.net.NetworkCapabilities.describeContents)int
android.net.NetworkCapabilities.writeToParcel(android.os.Parcel,int)void
android.net.NetworkCapabilities.toString)String
android.net.NetworkInfo.valueOf(String)State
android.net.NetworkInfo.valueOf(String)DetailedState
android.net.NetworkInfo.getType)int
android.net.NetworkInfo.getSubtype)int
android.net.NetworkInfo.getTypeName)String
android.net.NetworkInfo.getSubtypeName)String
android.net.NetworkInfo.isConnectedOrConnecting)boolean
android.net.NetworkInfo.isConnected)boolean
android.net.NetworkInfo.isAvailable)boolean
android.net.NetworkInfo.isFailover)boolean
android.net.NetworkInfo.isRoaming)boolean
android.net.NetworkInfo.getState)State
android.net.NetworkInfo.getDetailedState)DetailedState
android.net.NetworkInfo.getReason)String
android.net.NetworkInfo.getExtraInfo)String
android.net.NetworkInfo.toString)String
android.net.NetworkInfo.describeContents)int
android.net.NetworkInfo.writeToParcel(android.os.Parcel,int)void
android.net.NetworkRequest.build)android.net.NetworkRequest
android.net.NetworkRequest.addCapability(int)android.net.NetworkRequest.Builder
android.net.NetworkRequest.removeCapability(int)android.net.NetworkRequest.Builder
android.net.NetworkRequest.addTransportType(int)android.net.NetworkRequest.Builder
android.net.NetworkRequest.removeTransportType(int)android.net.NetworkRequest.Builder
android.net.NetworkRequest.setNetworkSpecifier(String)android.net.NetworkRequest.Builder
android.net.NetworkRequest.setNetworkSpecifier(android.net.NetworkSpecifier)android.net.NetworkRequest.Builder
android.net.NetworkRequest.describeContents)int
android.net.NetworkRequest.writeToParcel(android.os.Parcel,int)void
android.net.NetworkRequest.hasCapability(int)boolean
android.net.NetworkRequest.hasTransport(int)boolean
android.net.NetworkRequest.toString)String
android.net.NetworkRequest.equals(Object)boolean
android.net.NetworkRequest.hashCode)int
android.net.Proxy.getHost(android.content.Context)String
android.net.Proxy.getPort(android.content.Context)int
android.net.Proxy.getDefaultHost)String
android.net.Proxy.getDefaultPort)int
android.net.ProxyInfo.buildDirectProxy(String,int)android.net.ProxyInfo
android.net.ProxyInfo.buildDirectProxy(String,int,java.util.List)android.net.ProxyInfo
android.net.ProxyInfo.buildPacProxy(android.net.Uri)android.net.ProxyInfo
android.net.ProxyInfo.getPacFileUrl)android.net.Uri
android.net.ProxyInfo.getHost)String
android.net.ProxyInfo.getPort)int
android.net.ProxyInfo.toString)String
android.net.ProxyInfo.equals(Object)boolean
android.net.ProxyInfo.describeContents)int
android.net.ProxyInfo.hashCode)int
android.net.ProxyInfo.writeToParcel(android.os.Parcel,int)void
android.net.RouteInfo.getDestination)android.net.IpPrefix
android.net.RouteInfo.getGateway)java.net.InetAddress
android.net.RouteInfo.getInterface)String
android.net.RouteInfo.isDefaultRoute)boolean
android.net.RouteInfo.hasGateway)boolean
android.net.RouteInfo.matches(java.net.InetAddress)boolean
android.net.RouteInfo.toString)String
android.net.RouteInfo.equals(Object)boolean
android.net.RouteInfo.hashCode)int
android.net.RouteInfo.describeContents)int
android.net.RouteInfo.writeToParcel(android.os.Parcel,int)void
android.net.SocketKeepalive.onStarted)void
android.net.SocketKeepalive.onStopped)void
android.net.SocketKeepalive.onError(int)void
android.net.SocketKeepalive.onDataReceived)void
android.net.SocketKeepalive.start(int)void
android.net.SocketKeepalive.stop)void
android.net.SocketKeepalive.close)void
android.net.SSLCertificateSocketFactory.getDefault(int)javax.net.SocketFactory
android.net.SSLCertificateSocketFactory.getDefault(int,android.net.SSLSessionCache)SSLSocketFactory
android.net.SSLCertificateSocketFactory.getInsecure(int,android.net.SSLSessionCache)SSLSocketFactory
android.net.SSLCertificateSocketFactory.setTrustManagers(TrustManager)void
android.net.SSLCertificateSocketFactory.setNpnProtocols(byte)void
android.net.SSLCertificateSocketFactory.setKeyManagers(KeyManager)void
android.net.SSLCertificateSocketFactory.setUseSessionTickets(java.net.Socket,boolean)void
android.net.SSLCertificateSocketFactory.setHostname(java.net.Socket,String)void
android.net.SSLCertificateSocketFactory.createSocket(java.net.Socket,String,int,boolean)java.net.Socket
android.net.SSLCertificateSocketFactory.createSocket)java.net.Socket
android.net.SSLCertificateSocketFactory.createSocket(java.net.InetAddress,int,java.net.InetAddress,int)java.net.Socket
android.net.SSLCertificateSocketFactory.createSocket(java.net.InetAddress,int)java.net.Socket
android.net.SSLCertificateSocketFactory.createSocket(String,int,java.net.InetAddress,int)java.net.Socket
android.net.SSLCertificateSocketFactory.createSocket(String,int)java.net.Socket
android.net.TrafficStats.setThreadStatsTag(int)void
android.net.TrafficStats.getAndSetThreadStatsTag(int)int
android.net.TrafficStats.getThreadStatsTag)int
android.net.TrafficStats.clearThreadStatsTag)void
android.net.TrafficStats.setThreadStatsUid(int)void
android.net.TrafficStats.getThreadStatsUid)int
android.net.TrafficStats.clearThreadStatsUid)void
android.net.TrafficStats.tagSocket(Socket)void
android.net.TrafficStats.untagSocket(Socket)void
android.net.TrafficStats.tagDatagramSocket(DatagramSocket)void
android.net.TrafficStats.untagDatagramSocket(DatagramSocket)void
android.net.TrafficStats.tagFileDescriptor(java.io.FileDescriptor)void
android.net.TrafficStats.untagFileDescriptor(java.io.FileDescriptor)void
android.net.TrafficStats.incrementOperationCount(int)void
android.net.TrafficStats.incrementOperationCount(int,int)void
android.net.TrafficStats.getMobileTxPackets)long
android.net.TrafficStats.getMobileRxPackets)long
android.net.TrafficStats.getMobileTxBytes)long
android.net.TrafficStats.getMobileRxBytes)long
android.net.TrafficStats.getTotalTxPackets)long
android.net.TrafficStats.getTotalRxPackets)long
android.net.TrafficStats.getTotalTxBytes)long
android.net.TrafficStats.getTotalRxBytes)long
android.net.TrafficStats.getUidTxBytes(int)long
android.net.TrafficStats.getUidRxBytes(int)long
android.net.TrafficStats.getUidTxPackets(int)long
android.net.TrafficStats.getUidRxPackets(int)long
android.net.TrafficStats.getUidTcpTxBytes(int)long
android.net.TrafficStats.getUidTcpRxBytes(int)long
android.net.TrafficStats.getUidUdpTxBytes(int)long
android.net.TrafficStats.getUidUdpRxBytes(int)long
android.net.TrafficStats.getUidTcpTxSegments(int)long
android.net.TrafficStats.getUidTcpRxSegments(int)long
android.net.TrafficStats.getUidUdpTxPackets(int)long
android.net.TrafficStats.getUidUdpRxPackets(int)long
android.net.Uri.scheme(String)Builder
android.net.Uri.opaquePart(String)Builder
android.net.Uri.encodedOpaquePart(String)Builder
android.net.Uri.authority(String)Builder
android.net.Uri.encodedAuthority(String)Builder
android.net.Uri.path(String)Builder
android.net.Uri.encodedPath(String)Builder
android.net.Uri.appendPath(String)Builder
android.net.Uri.appendEncodedPath(String)Builder
android.net.Uri.query(String)Builder
android.net.Uri.encodedQuery(String)Builder
android.net.Uri.fragment(String)Builder
android.net.Uri.encodedFragment(String)Builder
android.net.Uri.appendQueryParameter(String,String)Builder
android.net.Uri.clearQuery)Builder
android.net.Uri.build)android.net.Uri
android.net.Uri.toString)String
android.net.Uri.isOpaque)boolean
android.net.Uri.isAbsolute)boolean
android.net.Uri.equals(Object)boolean
android.net.Uri.hashCode)int
android.net.Uri.compareTo(android.net.Uri)int
android.net.Uri.parse(String)android.net.Uri
android.net.Uri.fromFile(java.io.File)android.net.Uri
android.net.Uri.fromParts(String,String,String)android.net.Uri
android.net.Uri.getQueryParameterNames)java.util.Set
android.net.Uri.getQueryParameters(String)java.util.List
android.net.Uri.getQueryParameter(String)String
android.net.Uri.getBooleanQueryParameter(String,boolean)boolean
android.net.Uri.normalizeScheme)android.net.Uri
android.net.Uri.writeToParcel(android.os.Parcel,android.net.Uri)void
android.net.Uri.encode(String)String
android.net.Uri.encode(String,String)String
android.net.Uri.decode(String)String
android.net.Uri.withAppendedPath(android.net.Uri,String)android.net.Uri
android.net.UrlQuerySanitizer.sanitize(String)String
android.net.UrlQuerySanitizer.getUnregisteredParameterValueSanitizer)android.net.UrlQuerySanitizer.ValueSanitizer
android.net.UrlQuerySanitizer.setUnregisteredParameterValueSanitizer(android.net.UrlQuerySanitizer.ValueSanitizer)void
android.net.UrlQuerySanitizer.getAllIllegal)android.net.UrlQuerySanitizer.ValueSanitizer
android.net.UrlQuerySanitizer.getAllButNulLegal)android.net.UrlQuerySanitizer.ValueSanitizer
android.net.UrlQuerySanitizer.getAllButWhitespaceLegal)android.net.UrlQuerySanitizer.ValueSanitizer
android.net.UrlQuerySanitizer.getUrlLegal)android.net.UrlQuerySanitizer.ValueSanitizer
android.net.UrlQuerySanitizer.getUrlAndSpaceLegal)android.net.UrlQuerySanitizer.ValueSanitizer
android.net.UrlQuerySanitizer.getAmpLegal)android.net.UrlQuerySanitizer.ValueSanitizer
android.net.UrlQuerySanitizer.getAmpAndSpaceLegal)android.net.UrlQuerySanitizer.ValueSanitizer
android.net.UrlQuerySanitizer.getSpaceLegal)android.net.UrlQuerySanitizer.ValueSanitizer
android.net.UrlQuerySanitizer.getAllButNulAndAngleBracketsLegal)android.net.UrlQuerySanitizer.ValueSanitizer
android.net.UrlQuerySanitizer.parseUrl(String)void
android.net.UrlQuerySanitizer.parseQuery(String)void
android.net.UrlQuerySanitizer.getParameterSet)java.util.Set
android.net.UrlQuerySanitizer.getParameterList)java.util.List
android.net.UrlQuerySanitizer.hasParameter(String)boolean
android.net.UrlQuerySanitizer.getValue(String)String
android.net.UrlQuerySanitizer.registerParameter(String,android.net.UrlQuerySanitizer.ValueSanitizer)void
android.net.UrlQuerySanitizer.registerParameters(String,android.net.UrlQuerySanitizer.ValueSanitizer)void
android.net.UrlQuerySanitizer.setAllowUnregisteredParamaters(boolean)void
android.net.UrlQuerySanitizer.getAllowUnregisteredParamaters)boolean
android.net.UrlQuerySanitizer.setPreferFirstRepeatedParameter(boolean)void
android.net.UrlQuerySanitizer.getPreferFirstRepeatedParameter)boolean
android.net.UrlQuerySanitizer.parseEntry(String,String)void
android.net.UrlQuerySanitizer.addSanitizedEntry(String,String)void
android.net.UrlQuerySanitizer.getValueSanitizer(String)android.net.UrlQuerySanitizer.ValueSanitizer
android.net.UrlQuerySanitizer.getEffectiveValueSanitizer(String)android.net.UrlQuerySanitizer.ValueSanitizer
android.net.UrlQuerySanitizer.unescape(String)String
android.net.UrlQuerySanitizer.isHexDigit(char)boolean
android.net.UrlQuerySanitizer.decodeHexDigit(char)int
android.net.UrlQuerySanitizer.clear)void
android.net.VpnService.setSession(String)android.net.VpnService.Builder
android.net.VpnService.setConfigureIntent(android.app.PendingIntent)android.net.VpnService.Builder
android.net.VpnService.setMtu(int)android.net.VpnService.Builder
android.net.VpnService.setHttpProxy(android.net.ProxyInfo)android.net.VpnService.Builder
android.net.VpnService.addAddress(InetAddress,int)android.net.VpnService.Builder
android.net.VpnService.addAddress(String,int)android.net.VpnService.Builder
android.net.VpnService.addRoute(InetAddress,int)android.net.VpnService.Builder
android.net.VpnService.addRoute(String,int)android.net.VpnService.Builder
android.net.VpnService.addDnsServer(InetAddress)android.net.VpnService.Builder
android.net.VpnService.addDnsServer(String)android.net.VpnService.Builder
android.net.VpnService.addSearchDomain(String)android.net.VpnService.Builder
android.net.VpnService.allowFamily(int)android.net.VpnService.Builder
android.net.VpnService.addAllowedApplication(String)android.net.VpnService.Builder
android.net.VpnService.addDisallowedApplication(String)android.net.VpnService.Builder
android.net.VpnService.allowBypass)android.net.VpnService.Builder
android.net.VpnService.setBlocking(boolean)android.net.VpnService.Builder
android.net.VpnService.setUnderlyingNetworks(android.net.Network)android.net.VpnService.Builder
android.net.VpnService.setMetered(boolean)android.net.VpnService.Builder
android.net.VpnService.establish)android.os.ParcelFileDescriptor
android.net.VpnService.prepare(android.content.Context)android.content.Intent
android.net.VpnService.protect(int)boolean
android.net.VpnService.protect(Socket)boolean
android.net.VpnService.protect(DatagramSocket)boolean
android.net.VpnService.setUnderlyingNetworks(android.net.Network)boolean
android.net.VpnService.isAlwaysOn)boolean
android.net.VpnService.isLockdownEnabled)boolean
android.net.VpnService.onBind(android.content.Intent)android.os.IBinder
android.net.VpnService.onRevoke)void
android.net.http.HttpResponseCache.getInstalled)android.net.http.HttpResponseCache
android.net.http.HttpResponseCache.get(URI,String,java.util.Map)CacheResponse
android.net.http.HttpResponseCache.put(URI,URLConnection)CacheRequest
android.net.http.HttpResponseCache.size)long
android.net.http.HttpResponseCache.maxSize)long
android.net.http.HttpResponseCache.flush)void
android.net.http.HttpResponseCache.getNetworkCount)int
android.net.http.HttpResponseCache.getHitCount)int
android.net.http.HttpResponseCache.getRequestCount)int
android.net.http.HttpResponseCache.close)void
android.net.http.HttpResponseCache.delete)void
android.net.http.SslCertificate.getDName)String
android.net.http.SslCertificate.getCName)String
android.net.http.SslCertificate.getOName)String
android.net.http.SslCertificate.getUName)String
android.net.http.SslCertificate.saveState(android.net.http.SslCertificate)android.os.Bundle
android.net.http.SslCertificate.restoreState(android.os.Bundle)android.net.http.SslCertificate
android.net.http.SslCertificate.getValidNotBeforeDate)java.util.Date
android.net.http.SslCertificate.getValidNotBefore)String
android.net.http.SslCertificate.getValidNotAfterDate)java.util.Date
android.net.http.SslCertificate.getValidNotAfter)String
android.net.http.SslCertificate.getIssuedTo)android.net.http.SslCertificate.DName
android.net.http.SslCertificate.getIssuedBy)android.net.http.SslCertificate.DName
android.net.http.SslCertificate.getX509Certificate)java.security.cert.X509Certificate
android.net.http.SslCertificate.toString)String
android.net.http.SslError.getCertificate)android.net.http.SslCertificate
android.net.http.SslError.getUrl)String
android.net.http.SslError.addError(int)boolean
android.net.http.SslError.hasError(int)boolean
android.net.http.SslError.getPrimaryError)int
android.net.http.SslError.toString)String
android.net.http.X509TrustManagerExtensions.checkServerTrusted(java.security.cert.X509Certificate,String,String)java.util.List
android.net.http.X509TrustManagerExtensions.isUserAddedCertificate(java.security.cert.X509Certificate)boolean
android.net.http.X509TrustManagerExtensions.isSameTrustConfiguration(String,String)boolean
android.net.nsd.NsdManager.registerService(android.net.nsd.NsdServiceInfo,int,android.net.nsd.NsdManager.RegistrationListener)void
android.net.nsd.NsdManager.unregisterService(android.net.nsd.NsdManager.RegistrationListener)void
android.net.nsd.NsdManager.discoverServices(String,int,android.net.nsd.NsdManager.DiscoveryListener)void
android.net.nsd.NsdManager.stopServiceDiscovery(android.net.nsd.NsdManager.DiscoveryListener)void
android.net.nsd.NsdManager.resolveService(android.net.nsd.NsdServiceInfo,android.net.nsd.NsdManager.ResolveListener)void
android.net.nsd.NsdServiceInfo.getServiceName)String
android.net.nsd.NsdServiceInfo.setServiceName(String)void
android.net.nsd.NsdServiceInfo.getServiceType)String
android.net.nsd.NsdServiceInfo.setServiceType(String)void
android.net.nsd.NsdServiceInfo.getHost)java.net.InetAddress
android.net.nsd.NsdServiceInfo.setHost(java.net.InetAddress)void
android.net.nsd.NsdServiceInfo.getPort)int
android.net.nsd.NsdServiceInfo.setPort(int)void
android.net.nsd.NsdServiceInfo.setAttribute(String,String)void
android.net.nsd.NsdServiceInfo.removeAttribute(String)void
android.net.nsd.NsdServiceInfo.getAttributes)java.util.Map
android.net.nsd.NsdServiceInfo.toString)String
android.net.nsd.NsdServiceInfo.describeContents)int
android.net.nsd.NsdServiceInfo.writeToParcel(android.os.Parcel,int)void
android.net.rtp.AudioCodec.getCodec(int,String,String)android.net.rtp.AudioCodec
android.net.rtp.AudioGroup.getMode)int
android.net.rtp.AudioGroup.setMode(int)void
android.net.rtp.AudioGroup.sendDtmf(int)void
android.net.rtp.AudioGroup.clear)void
android.net.rtp.AudioGroup.finalize)void
android.net.rtp.AudioStream.isBusy)boolean
android.net.rtp.AudioStream.getGroup)android.net.rtp.AudioGroup
android.net.rtp.AudioStream.join(android.net.rtp.AudioGroup)void
android.net.rtp.AudioStream.getCodec)android.net.rtp.AudioCodec
android.net.rtp.AudioStream.setCodec(android.net.rtp.AudioCodec)void
android.net.rtp.AudioStream.getDtmfType)int
android.net.rtp.AudioStream.setDtmfType(int)void
android.net.rtp.RtpStream.getLocalAddress)java.net.InetAddress
android.net.rtp.RtpStream.getLocalPort)int
android.net.rtp.RtpStream.getRemoteAddress)java.net.InetAddress
android.net.rtp.RtpStream.getRemotePort)int
android.net.rtp.RtpStream.isBusy)boolean
android.net.rtp.RtpStream.getMode)int
android.net.rtp.RtpStream.setMode(int)void
android.net.rtp.RtpStream.associate(java.net.InetAddress,int)void
android.net.rtp.RtpStream.release)void
android.net.rtp.RtpStream.finalize)void
android.net.sip.SipAudioCall.onReadyToCall(android.net.sip.SipAudioCall)void
android.net.sip.SipAudioCall.onCalling(android.net.sip.SipAudioCall)void
android.net.sip.SipAudioCall.onRinging(android.net.sip.SipAudioCall,android.net.sip.SipProfile)void
android.net.sip.SipAudioCall.onRingingBack(android.net.sip.SipAudioCall)void
android.net.sip.SipAudioCall.onCallEstablished(android.net.sip.SipAudioCall)void
android.net.sip.SipAudioCall.onCallEnded(android.net.sip.SipAudioCall)void
android.net.sip.SipAudioCall.onCallBusy(android.net.sip.SipAudioCall)void
android.net.sip.SipAudioCall.onCallHeld(android.net.sip.SipAudioCall)void
android.net.sip.SipAudioCall.onError(android.net.sip.SipAudioCall,int,String)void
android.net.sip.SipAudioCall.onChanged(android.net.sip.SipAudioCall)void
android.net.sip.SipAudioCall.setListener(android.net.sip.SipAudioCall.Listener)void
android.net.sip.SipAudioCall.setListener(android.net.sip.SipAudioCall.Listener,boolean)void
android.net.sip.SipAudioCall.isInCall)boolean
android.net.sip.SipAudioCall.isOnHold)boolean
android.net.sip.SipAudioCall.close)void
android.net.sip.SipAudioCall.getLocalProfile)android.net.sip.SipProfile
android.net.sip.SipAudioCall.getPeerProfile)android.net.sip.SipProfile
android.net.sip.SipAudioCall.getState)int
android.net.sip.SipAudioCall.attachCall(android.net.sip.SipSession,String)void
android.net.sip.SipAudioCall.makeCall(android.net.sip.SipProfile,android.net.sip.SipSession,int)void
android.net.sip.SipAudioCall.endCall)void
android.net.sip.SipAudioCall.holdCall(int)void
android.net.sip.SipAudioCall.answerCall(int)void
android.net.sip.SipAudioCall.continueCall(int)void
android.net.sip.SipAudioCall.toggleMute)void
android.net.sip.SipAudioCall.isMuted)boolean
android.net.sip.SipAudioCall.setSpeakerMode(boolean)void
android.net.sip.SipAudioCall.sendDtmf(int)void
android.net.sip.SipAudioCall.sendDtmf(int,android.os.Message)void
android.net.sip.SipAudioCall.startAudio)void
android.net.sip.SipErrorCode.toString(int)String
android.net.sip.SipManager.newInstance(android.content.Context)android.net.sip.SipManager
android.net.sip.SipManager.isApiSupported(android.content.Context)boolean
android.net.sip.SipManager.isVoipSupported(android.content.Context)boolean
android.net.sip.SipManager.isSipWifiOnly(android.content.Context)boolean
android.net.sip.SipManager.open(android.net.sip.SipProfile)void
android.net.sip.SipManager.open(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.SipRegistrationListener)void
android.net.sip.SipManager.setRegistrationListener(String,android.net.sip.SipRegistrationListener)void
android.net.sip.SipManager.close(String)void
android.net.sip.SipManager.isOpened(String)boolean
android.net.sip.SipManager.isRegistered(String)boolean
android.net.sip.SipManager.makeAudioCall(android.net.sip.SipProfile,android.net.sip.SipProfile,SipAudioCall.Listener,int)android.net.sip.SipAudioCall
android.net.sip.SipManager.makeAudioCall(String,String,SipAudioCall.Listener,int)android.net.sip.SipAudioCall
android.net.sip.SipManager.takeAudioCall(android.content.Intent,SipAudioCall.Listener)android.net.sip.SipAudioCall
android.net.sip.SipManager.isIncomingCallIntent(android.content.Intent)boolean
android.net.sip.SipManager.getCallId(android.content.Intent)String
android.net.sip.SipManager.getOfferSessionDescription(android.content.Intent)String
android.net.sip.SipManager.register(android.net.sip.SipProfile,int,android.net.sip.SipRegistrationListener)void
android.net.sip.SipManager.unregister(android.net.sip.SipProfile,android.net.sip.SipRegistrationListener)void
android.net.sip.SipManager.getSessionFor(android.content.Intent)android.net.sip.SipSession
android.net.sip.SipManager.createSipSession(android.net.sip.SipProfile,SipSession.Listener)android.net.sip.SipSession
android.net.sip.SipProfile.setAuthUserName(String)android.net.sip.SipProfile.Builder
android.net.sip.SipProfile.setProfileName(String)android.net.sip.SipProfile.Builder
android.net.sip.SipProfile.setPassword(String)android.net.sip.SipProfile.Builder
android.net.sip.SipProfile.setPort(int)android.net.sip.SipProfile.Builder
android.net.sip.SipProfile.setProtocol(String)android.net.sip.SipProfile.Builder
android.net.sip.SipProfile.setOutboundProxy(String)android.net.sip.SipProfile.Builder
android.net.sip.SipProfile.setDisplayName(String)android.net.sip.SipProfile.Builder
android.net.sip.SipProfile.setSendKeepAlive(boolean)android.net.sip.SipProfile.Builder
android.net.sip.SipProfile.setAutoRegistration(boolean)android.net.sip.SipProfile.Builder
android.net.sip.SipProfile.build)android.net.sip.SipProfile
android.net.sip.SipProfile.writeToParcel(android.os.Parcel,int)void
android.net.sip.SipProfile.describeContents)int
android.net.sip.SipProfile.getUriString)String
android.net.sip.SipProfile.getDisplayName)String
android.net.sip.SipProfile.getUserName)String
android.net.sip.SipProfile.getAuthUserName)String
android.net.sip.SipProfile.getPassword)String
android.net.sip.SipProfile.getSipDomain)String
android.net.sip.SipProfile.getPort)int
android.net.sip.SipProfile.getProtocol)String
android.net.sip.SipProfile.getProxyAddress)String
android.net.sip.SipProfile.getProfileName)String
android.net.sip.SipProfile.getSendKeepAlive)boolean
android.net.sip.SipProfile.getAutoRegistration)boolean
android.net.sip.SipSession.toString(int)String
android.net.sip.SipSession.onCalling(android.net.sip.SipSession)void
android.net.sip.SipSession.onRinging(android.net.sip.SipSession,android.net.sip.SipProfile,String)void
android.net.sip.SipSession.onRingingBack(android.net.sip.SipSession)void
android.net.sip.SipSession.onCallEstablished(android.net.sip.SipSession,String)void
android.net.sip.SipSession.onCallEnded(android.net.sip.SipSession)void
android.net.sip.SipSession.onCallBusy(android.net.sip.SipSession)void
android.net.sip.SipSession.onError(android.net.sip.SipSession,int,String)void
android.net.sip.SipSession.onCallChangeFailed(android.net.sip.SipSession,int,String)void
android.net.sip.SipSession.onRegistering(android.net.sip.SipSession)void
android.net.sip.SipSession.onRegistrationDone(android.net.sip.SipSession,int)void
android.net.sip.SipSession.onRegistrationFailed(android.net.sip.SipSession,int,String)void
android.net.sip.SipSession.onRegistrationTimeout(android.net.sip.SipSession)void
android.net.sip.SipSession.getLocalIp)String
android.net.sip.SipSession.getLocalProfile)android.net.sip.SipProfile
android.net.sip.SipSession.getPeerProfile)android.net.sip.SipProfile
android.net.sip.SipSession.getState)int
android.net.sip.SipSession.isInCall)boolean
android.net.sip.SipSession.getCallId)String
android.net.sip.SipSession.setListener(android.net.sip.SipSession.Listener)void
android.net.sip.SipSession.register(int)void
android.net.sip.SipSession.unregister)void
android.net.sip.SipSession.makeCall(android.net.sip.SipProfile,String,int)void
android.net.sip.SipSession.answerCall(String,int)void
android.net.sip.SipSession.endCall)void
android.net.sip.SipSession.changeCall(String,int)void
android.net.ssl.SSLEngines.isSupportedEngine(javax.net.ssl.SSLEngine)boolean
android.net.ssl.SSLEngines.setUseSessionTickets(javax.net.ssl.SSLEngine,boolean)void
android.net.ssl.SSLSockets.isSupportedSocket(javax.net.ssl.SSLSocket)boolean
android.net.ssl.SSLSockets.setUseSessionTickets(javax.net.ssl.SSLSocket,boolean)void
android.net.wifi.ScanResult.is80211mcResponder)boolean
android.net.wifi.ScanResult.isPasspointNetwork)boolean
android.net.wifi.ScanResult.toString)String
android.net.wifi.ScanResult.describeContents)int
android.net.wifi.ScanResult.writeToParcel(android.os.Parcel,int)void
android.net.wifi.SupplicantState.valueOf(String)android.net.wifi.SupplicantState
android.net.wifi.SupplicantState.isValidState(android.net.wifi.SupplicantState)boolean
android.net.wifi.SupplicantState.describeContents)int
android.net.wifi.SupplicantState.writeToParcel(android.os.Parcel,int)void
android.net.wifi.WifiConfiguration.getRandomizedMacAddress)android.net.MacAddress
android.net.wifi.WifiConfiguration.isPasspoint)boolean
android.net.wifi.WifiConfiguration.toString)String
android.net.wifi.WifiConfiguration.getHttpProxy)android.net.ProxyInfo
android.net.wifi.WifiConfiguration.setHttpProxy(android.net.ProxyInfo)void
android.net.wifi.WifiConfiguration.describeContents)int
android.net.wifi.WifiConfiguration.writeToParcel(android.os.Parcel,int)void
android.net.wifi.WifiEnterpriseConfig.describeContents)int
android.net.wifi.WifiEnterpriseConfig.writeToParcel(android.os.Parcel,int)void
android.net.wifi.WifiEnterpriseConfig.setEapMethod(int)void
android.net.wifi.WifiEnterpriseConfig.getEapMethod)int
android.net.wifi.WifiEnterpriseConfig.setPhase2Method(int)void
android.net.wifi.WifiEnterpriseConfig.getPhase2Method)int
android.net.wifi.WifiEnterpriseConfig.setIdentity(String)void
android.net.wifi.WifiEnterpriseConfig.getIdentity)String
android.net.wifi.WifiEnterpriseConfig.setAnonymousIdentity(String)void
android.net.wifi.WifiEnterpriseConfig.getAnonymousIdentity)String
android.net.wifi.WifiEnterpriseConfig.setPassword(String)void
android.net.wifi.WifiEnterpriseConfig.getPassword)String
android.net.wifi.WifiEnterpriseConfig.setCaCertificate(java.security.cert.X509Certificate)void
android.net.wifi.WifiEnterpriseConfig.getCaCertificate)java.security.cert.X509Certificate
android.net.wifi.WifiEnterpriseConfig.setCaCertificates(java.security.cert.X509Certificate)void
android.net.wifi.WifiEnterpriseConfig.setClientKeyEntry(java.security.PrivateKey,java.security.cert.X509Certificate)void
android.net.wifi.WifiEnterpriseConfig.setClientKeyEntryWithCertificateChain(java.security.PrivateKey,java.security.cert.X509Certificate)void
android.net.wifi.WifiEnterpriseConfig.getClientCertificate)java.security.cert.X509Certificate
android.net.wifi.WifiEnterpriseConfig.setSubjectMatch(String)void
android.net.wifi.WifiEnterpriseConfig.getSubjectMatch)String
android.net.wifi.WifiEnterpriseConfig.setAltSubjectMatch(String)void
android.net.wifi.WifiEnterpriseConfig.getAltSubjectMatch)String
android.net.wifi.WifiEnterpriseConfig.setDomainSuffixMatch(String)void
android.net.wifi.WifiEnterpriseConfig.getDomainSuffixMatch)String
android.net.wifi.WifiEnterpriseConfig.setRealm(String)void
android.net.wifi.WifiEnterpriseConfig.getRealm)String
android.net.wifi.WifiEnterpriseConfig.setPlmn(String)void
android.net.wifi.WifiEnterpriseConfig.getPlmn)String
android.net.wifi.WifiEnterpriseConfig.toString)String
android.net.wifi.WifiInfo.getSSID)String
android.net.wifi.WifiInfo.getBSSID)String
android.net.wifi.WifiInfo.getRssi)int
android.net.wifi.WifiInfo.getLinkSpeed)int
android.net.wifi.WifiInfo.getTxLinkSpeedMbps)int
android.net.wifi.WifiInfo.getRxLinkSpeedMbps)int
android.net.wifi.WifiInfo.getFrequency)int
android.net.wifi.WifiInfo.getMacAddress)String
android.net.wifi.WifiInfo.getPasspointFqdn)String
android.net.wifi.WifiInfo.getPasspointProviderFriendlyName)String
android.net.wifi.WifiInfo.getNetworkId)int
android.net.wifi.WifiInfo.getSupplicantState)android.net.wifi.SupplicantState
android.net.wifi.WifiInfo.getIpAddress)int
android.net.wifi.WifiInfo.getHiddenSSID)boolean
android.net.wifi.WifiInfo.toString)String
android.net.wifi.WifiInfo.describeContents)int
android.net.wifi.WifiInfo.writeToParcel(android.os.Parcel,int)void
android.net.wifi.WifiManager.acquire)void
android.net.wifi.WifiManager.release)void
android.net.wifi.WifiManager.setReferenceCounted(boolean)void
android.net.wifi.WifiManager.isHeld)boolean
android.net.wifi.WifiManager.setWorkSource(android.os.WorkSource)void
android.net.wifi.WifiManager.toString)String
android.net.wifi.WifiManager.finalize)void
android.net.wifi.WifiManager.acquire)void
android.net.wifi.WifiManager.release)void
android.net.wifi.WifiManager.setReferenceCounted(boolean)void
android.net.wifi.WifiManager.isHeld)boolean
android.net.wifi.WifiManager.toString)String
android.net.wifi.WifiManager.finalize)void
android.net.wifi.WifiManager.getWifiConfiguration)android.net.wifi.WifiConfiguration
android.net.wifi.WifiManager.close)void
android.net.wifi.WifiManager.finalize)void
android.net.wifi.WifiManager.onStarted(android.net.wifi.WifiManager.LocalOnlyHotspotReservation)void
android.net.wifi.WifiManager.onStopped)void
android.net.wifi.WifiManager.onFailed(int)void
android.net.wifi.WifiManager.getConfiguredNetworks)java.util.List
android.net.wifi.WifiManager.addNetwork(android.net.wifi.WifiConfiguration)int
android.net.wifi.WifiManager.updateNetwork(android.net.wifi.WifiConfiguration)int
android.net.wifi.WifiManager.addNetworkSuggestions(java.util.List)int
android.net.wifi.WifiManager.removeNetworkSuggestions(java.util.List)int
android.net.wifi.WifiManager.getMaxNumberOfNetworkSuggestionsPerApp)int
android.net.wifi.WifiManager.addOrUpdatePasspointConfiguration(android.net.wifi.hotspot2.PasspointConfiguration)void
android.net.wifi.WifiManager.removePasspointConfiguration(String)void
android.net.wifi.WifiManager.getPasspointConfigurations)java.util.List
android.net.wifi.WifiManager.removeNetwork(int)boolean
android.net.wifi.WifiManager.enableNetwork(int,boolean)boolean
android.net.wifi.WifiManager.disableNetwork(int)boolean
android.net.wifi.WifiManager.disconnect)boolean
android.net.wifi.WifiManager.reconnect)boolean
android.net.wifi.WifiManager.reassociate)boolean
android.net.wifi.WifiManager.pingSupplicant)boolean
android.net.wifi.WifiManager.is5GHzBandSupported)boolean
android.net.wifi.WifiManager.isP2pSupported)boolean
android.net.wifi.WifiManager.isDeviceToApRttSupported)boolean
android.net.wifi.WifiManager.isPreferredNetworkOffloadSupported)boolean
android.net.wifi.WifiManager.isTdlsSupported)boolean
android.net.wifi.WifiManager.isEnhancedPowerReportingSupported)boolean
android.net.wifi.WifiManager.startScan)boolean
android.net.wifi.WifiManager.getConnectionInfo)android.net.wifi.WifiInfo
android.net.wifi.WifiManager.getScanResults)java.util.List
android.net.wifi.WifiManager.isScanAlwaysAvailable)boolean
android.net.wifi.WifiManager.saveConfiguration)boolean
android.net.wifi.WifiManager.getDhcpInfo)android.net.DhcpInfo
android.net.wifi.WifiManager.setWifiEnabled(boolean)boolean
android.net.wifi.WifiManager.getWifiState)int
android.net.wifi.WifiManager.isWifiEnabled)boolean
android.net.wifi.WifiManager.calculateSignalLevel(int,int)int
android.net.wifi.WifiManager.compareSignalLevel(int,int)int
android.net.wifi.WifiManager.startLocalOnlyHotspot(android.net.wifi.WifiManager.LocalOnlyHotspotCallback,android.os.Handler)void
android.net.wifi.WifiManager.setTdlsEnabled(java.net.InetAddress,boolean)void
android.net.wifi.WifiManager.setTdlsEnabledWithMacAddress(String,boolean)void
android.net.wifi.WifiManager.startWps(android.net.wifi.WpsInfo,WpsCallback)void
android.net.wifi.WifiManager.cancelWps(WpsCallback)void
android.net.wifi.WifiManager.createWifiLock(int,String)android.net.wifi.WifiManager.WifiLock
android.net.wifi.WifiManager.createWifiLock(String)android.net.wifi.WifiManager.WifiLock
android.net.wifi.WifiManager.createMulticastLock(String)android.net.wifi.WifiManager.MulticastLock
android.net.wifi.WifiManager.finalize)void
android.net.wifi.WifiManager.isWpa3SaeSupported)boolean
android.net.wifi.WifiManager.isWpa3SuiteBSupported)boolean
android.net.wifi.WifiManager.isEnhancedOpenSupported)boolean
android.net.wifi.WifiManager.isEasyConnectSupported)boolean
android.net.wifi.WifiNetworkSpecifier.setSsidPattern(PatternMatcher)Builder
android.net.wifi.WifiNetworkSpecifier.setSsid(String)Builder
android.net.wifi.WifiNetworkSpecifier.setBssidPattern(android.net.MacAddress,android.net.MacAddress)Builder
android.net.wifi.WifiNetworkSpecifier.setBssid(android.net.MacAddress)Builder
android.net.wifi.WifiNetworkSpecifier.setIsEnhancedOpen(boolean)Builder
android.net.wifi.WifiNetworkSpecifier.setWpa2Passphrase(String)Builder
android.net.wifi.WifiNetworkSpecifier.setWpa3Passphrase(String)Builder
android.net.wifi.WifiNetworkSpecifier.setWpa2EnterpriseConfig(android.net.wifi.WifiEnterpriseConfig)Builder
android.net.wifi.WifiNetworkSpecifier.setWpa3EnterpriseConfig(android.net.wifi.WifiEnterpriseConfig)Builder
android.net.wifi.WifiNetworkSpecifier.setIsHiddenSsid(boolean)Builder
android.net.wifi.WifiNetworkSpecifier.build)android.net.wifi.WifiNetworkSpecifier
android.net.wifi.WifiNetworkSpecifier.describeContents)int
android.net.wifi.WifiNetworkSpecifier.writeToParcel(Parcel,int)void
android.net.wifi.WifiNetworkSpecifier.hashCode)int
android.net.wifi.WifiNetworkSpecifier.equals(Object)boolean
android.net.wifi.WifiNetworkSpecifier.toString)String
android.net.wifi.WifiNetworkSuggestion.setSsid(String)Builder
android.net.wifi.WifiNetworkSuggestion.setBssid(android.net.MacAddress)Builder
android.net.wifi.WifiNetworkSuggestion.setIsEnhancedOpen(boolean)Builder
android.net.wifi.WifiNetworkSuggestion.setWpa2Passphrase(String)Builder
android.net.wifi.WifiNetworkSuggestion.setWpa3Passphrase(String)Builder
android.net.wifi.WifiNetworkSuggestion.setWpa2EnterpriseConfig(android.net.wifi.WifiEnterpriseConfig)Builder
android.net.wifi.WifiNetworkSuggestion.setWpa3EnterpriseConfig(android.net.wifi.WifiEnterpriseConfig)Builder
android.net.wifi.WifiNetworkSuggestion.setIsHiddenSsid(boolean)Builder
android.net.wifi.WifiNetworkSuggestion.setIsAppInteractionRequired(boolean)Builder
android.net.wifi.WifiNetworkSuggestion.setIsUserInteractionRequired(boolean)Builder
android.net.wifi.WifiNetworkSuggestion.setPriority(int)Builder
android.net.wifi.WifiNetworkSuggestion.setIsMetered(boolean)Builder
android.net.wifi.WifiNetworkSuggestion.build)android.net.wifi.WifiNetworkSuggestion
android.net.wifi.WifiNetworkSuggestion.describeContents)int
android.net.wifi.WifiNetworkSuggestion.writeToParcel(android.os.Parcel,int)void
android.net.wifi.WifiNetworkSuggestion.hashCode)int
android.net.wifi.WifiNetworkSuggestion.equals(Object)boolean
android.net.wifi.WifiNetworkSuggestion.toString)String
android.net.wifi.WpsInfo.toString)String
android.net.wifi.WpsInfo.describeContents)int
android.net.wifi.WpsInfo.writeToParcel(android.os.Parcel,int)void
android.net.wifi.aware.AttachCallback.onAttached(android.net.wifi.aware.WifiAwareSession)void
android.net.wifi.aware.AttachCallback.onAttachFailed)void
android.net.wifi.aware.Characteristics.getMaxServiceNameLength)int
android.net.wifi.aware.Characteristics.getMaxServiceSpecificInfoLength)int
android.net.wifi.aware.Characteristics.getMaxMatchFilterLength)int
android.net.wifi.aware.Characteristics.writeToParcel(Parcel,int)void
android.net.wifi.aware.Characteristics.describeContents)int
android.net.wifi.aware.DiscoverySession.close)void
android.net.wifi.aware.DiscoverySession.finalize)void
android.net.wifi.aware.DiscoverySession.sendMessage(android.net.wifi.aware.PeerHandle,int,byte)void
android.net.wifi.aware.DiscoverySession.createNetworkSpecifierOpen(android.net.wifi.aware.PeerHandle)android.net.NetworkSpecifier
android.net.wifi.aware.DiscoverySession.createNetworkSpecifierPassphrase(android.net.wifi.aware.PeerHandle,String)android.net.NetworkSpecifier
android.net.wifi.aware.DiscoverySessionCallback.onPublishStarted(android.net.wifi.aware.PublishDiscoverySession)void
android.net.wifi.aware.DiscoverySessionCallback.onSubscribeStarted(android.net.wifi.aware.SubscribeDiscoverySession)void
android.net.wifi.aware.DiscoverySessionCallback.onSessionConfigUpdated)void
android.net.wifi.aware.DiscoverySessionCallback.onSessionConfigFailed)void
android.net.wifi.aware.DiscoverySessionCallback.onSessionTerminated)void
android.net.wifi.aware.DiscoverySessionCallback.onServiceDiscovered(android.net.wifi.aware.PeerHandle,byte,java.util.List)void
android.net.wifi.aware.DiscoverySessionCallback.onServiceDiscoveredWithinRange(android.net.wifi.aware.PeerHandle,byte,java.util.List,int)void
android.net.wifi.aware.DiscoverySessionCallback.onMessageSendSucceeded(int)void
android.net.wifi.aware.DiscoverySessionCallback.onMessageSendFailed(int)void
android.net.wifi.aware.DiscoverySessionCallback.onMessageReceived(android.net.wifi.aware.PeerHandle,byte)void
android.net.wifi.aware.IdentityChangedListener.onIdentityChanged(byte)void
android.net.wifi.aware.ParcelablePeerHandle.describeContents)int
android.net.wifi.aware.ParcelablePeerHandle.writeToParcel(android.os.Parcel,int)void
android.net.wifi.aware.PeerHandle.equals(Object)boolean
android.net.wifi.aware.PeerHandle.hashCode)int
android.net.wifi.aware.PublishConfig.setServiceName(String)Builder
android.net.wifi.aware.PublishConfig.setServiceSpecificInfo(byte)Builder
android.net.wifi.aware.PublishConfig.setMatchFilter(java.util.List)Builder
android.net.wifi.aware.PublishConfig.setPublishType(int)Builder
android.net.wifi.aware.PublishConfig.setTtlSec(int)Builder
android.net.wifi.aware.PublishConfig.setTerminateNotificationEnabled(boolean)Builder
android.net.wifi.aware.PublishConfig.setRangingEnabled(boolean)Builder
android.net.wifi.aware.PublishConfig.build)android.net.wifi.aware.PublishConfig
android.net.wifi.aware.PublishConfig.toString)String
android.net.wifi.aware.PublishConfig.describeContents)int
android.net.wifi.aware.PublishConfig.writeToParcel(android.os.Parcel,int)void
android.net.wifi.aware.PublishConfig.equals(Object)boolean
android.net.wifi.aware.PublishConfig.hashCode)int
android.net.wifi.aware.PublishDiscoverySession.updatePublish(android.net.wifi.aware.PublishConfig)void
android.net.wifi.aware.SubscribeConfig.setServiceName(String)Builder
android.net.wifi.aware.SubscribeConfig.setServiceSpecificInfo(byte)Builder
android.net.wifi.aware.SubscribeConfig.setMatchFilter(java.util.List)Builder
android.net.wifi.aware.SubscribeConfig.setSubscribeType(int)Builder
android.net.wifi.aware.SubscribeConfig.setTtlSec(int)Builder
android.net.wifi.aware.SubscribeConfig.setTerminateNotificationEnabled(boolean)Builder
android.net.wifi.aware.SubscribeConfig.setMinDistanceMm(int)Builder
android.net.wifi.aware.SubscribeConfig.setMaxDistanceMm(int)Builder
android.net.wifi.aware.SubscribeConfig.build)android.net.wifi.aware.SubscribeConfig
android.net.wifi.aware.SubscribeConfig.toString)String
android.net.wifi.aware.SubscribeConfig.describeContents)int
android.net.wifi.aware.SubscribeConfig.writeToParcel(android.os.Parcel,int)void
android.net.wifi.aware.SubscribeConfig.equals(Object)boolean
android.net.wifi.aware.SubscribeConfig.hashCode)int
android.net.wifi.aware.SubscribeDiscoverySession.updateSubscribe(android.net.wifi.aware.SubscribeConfig)void
android.net.wifi.aware.WifiAwareManager.isAvailable)boolean
android.net.wifi.aware.WifiAwareManager.getCharacteristics)android.net.wifi.aware.Characteristics
android.net.wifi.aware.WifiAwareManager.attach(android.net.wifi.aware.AttachCallback,android.os.Handler)void
android.net.wifi.aware.WifiAwareManager.attach(android.net.wifi.aware.AttachCallback,android.net.wifi.aware.IdentityChangedListener,android.os.Handler)void
android.net.wifi.aware.WifiAwareNetworkInfo.getPeerIpv6Addr)java.net.Inet6Address
android.net.wifi.aware.WifiAwareNetworkInfo.getPort)int
android.net.wifi.aware.WifiAwareNetworkInfo.getTransportProtocol)int
android.net.wifi.aware.WifiAwareNetworkInfo.describeContents)int
android.net.wifi.aware.WifiAwareNetworkInfo.writeToParcel(android.os.Parcel,int)void
android.net.wifi.aware.WifiAwareNetworkInfo.toString)String
android.net.wifi.aware.WifiAwareNetworkInfo.equals(Object)boolean
android.net.wifi.aware.WifiAwareNetworkInfo.hashCode)int
android.net.wifi.aware.WifiAwareNetworkSpecifier.setPskPassphrase(String)Builder
android.net.wifi.aware.WifiAwareNetworkSpecifier.setPort(int)Builder
android.net.wifi.aware.WifiAwareNetworkSpecifier.setTransportProtocol(int)Builder
android.net.wifi.aware.WifiAwareNetworkSpecifier.build)android.net.wifi.aware.WifiAwareNetworkSpecifier
android.net.wifi.aware.WifiAwareNetworkSpecifier.describeContents)int
android.net.wifi.aware.WifiAwareNetworkSpecifier.writeToParcel(android.os.Parcel,int)void
android.net.wifi.aware.WifiAwareNetworkSpecifier.hashCode)int
android.net.wifi.aware.WifiAwareNetworkSpecifier.equals(Object)boolean
android.net.wifi.aware.WifiAwareNetworkSpecifier.toString)String
android.net.wifi.aware.WifiAwareSession.close)void
android.net.wifi.aware.WifiAwareSession.finalize)void
android.net.wifi.aware.WifiAwareSession.publish(android.net.wifi.aware.PublishConfig,android.net.wifi.aware.DiscoverySessionCallback,android.os.Handler)void
android.net.wifi.aware.WifiAwareSession.subscribe(android.net.wifi.aware.SubscribeConfig,android.net.wifi.aware.DiscoverySessionCallback,android.os.Handler)void
android.net.wifi.aware.WifiAwareSession.createNetworkSpecifierOpen(int,byte)android.net.NetworkSpecifier
android.net.wifi.aware.WifiAwareSession.createNetworkSpecifierPassphrase(int,byte,String)android.net.NetworkSpecifier
android.net.wifi.hotspot2.ConfigParser.parsePasspointConfig(String,byte)android.net.wifi.hotspot2.PasspointConfiguration
android.net.wifi.hotspot2.PasspointConfiguration.setHomeSp(android.net.wifi.hotspot2.pps.HomeSp)void
android.net.wifi.hotspot2.PasspointConfiguration.getHomeSp)android.net.wifi.hotspot2.pps.HomeSp
android.net.wifi.hotspot2.PasspointConfiguration.setCredential(android.net.wifi.hotspot2.pps.Credential)void
android.net.wifi.hotspot2.PasspointConfiguration.getCredential)android.net.wifi.hotspot2.pps.Credential
android.net.wifi.hotspot2.PasspointConfiguration.describeContents)int
android.net.wifi.hotspot2.PasspointConfiguration.writeToParcel(android.os.Parcel,int)void
android.net.wifi.hotspot2.PasspointConfiguration.equals(Object)boolean
android.net.wifi.hotspot2.PasspointConfiguration.hashCode)int
android.net.wifi.hotspot2.PasspointConfiguration.toString)String
android.net.wifi.hotspot2.omadm.PpsMoParser.parseMoText(String)android.net.wifi.hotspot2.PasspointConfiguration
android.net.wifi.hotspot2.pps.Credential.setUsername(String)void
android.net.wifi.hotspot2.pps.Credential.getUsername)String
android.net.wifi.hotspot2.pps.Credential.setPassword(String)void
android.net.wifi.hotspot2.pps.Credential.getPassword)String
android.net.wifi.hotspot2.pps.Credential.setEapType(int)void
android.net.wifi.hotspot2.pps.Credential.getEapType)int
android.net.wifi.hotspot2.pps.Credential.setNonEapInnerMethod(String)void
android.net.wifi.hotspot2.pps.Credential.getNonEapInnerMethod)String
android.net.wifi.hotspot2.pps.Credential.describeContents)int
android.net.wifi.hotspot2.pps.Credential.writeToParcel(android.os.Parcel,int)void
android.net.wifi.hotspot2.pps.Credential.equals(Object)boolean
android.net.wifi.hotspot2.pps.Credential.hashCode)int
android.net.wifi.hotspot2.pps.Credential.toString)String
android.net.wifi.hotspot2.pps.Credential.setImsi(String)void
android.net.wifi.hotspot2.pps.Credential.getImsi)String
android.net.wifi.hotspot2.pps.Credential.setEapType(int)void
android.net.wifi.hotspot2.pps.Credential.getEapType)int
android.net.wifi.hotspot2.pps.Credential.describeContents)int
android.net.wifi.hotspot2.pps.Credential.equals(Object)boolean
android.net.wifi.hotspot2.pps.Credential.hashCode)int
android.net.wifi.hotspot2.pps.Credential.toString)String
android.net.wifi.hotspot2.pps.Credential.writeToParcel(android.os.Parcel,int)void
android.net.wifi.hotspot2.pps.Credential.setCertType(String)void
android.net.wifi.hotspot2.pps.Credential.getCertType)String
android.net.wifi.hotspot2.pps.Credential.setCertSha256Fingerprint(byte)void
android.net.wifi.hotspot2.pps.Credential.describeContents)int
android.net.wifi.hotspot2.pps.Credential.writeToParcel(android.os.Parcel,int)void
android.net.wifi.hotspot2.pps.Credential.equals(Object)boolean
android.net.wifi.hotspot2.pps.Credential.hashCode)int
android.net.wifi.hotspot2.pps.Credential.toString)String
android.net.wifi.hotspot2.pps.Credential.setRealm(String)void
android.net.wifi.hotspot2.pps.Credential.getRealm)String
android.net.wifi.hotspot2.pps.Credential.setUserCredential(UserCredential)void
android.net.wifi.hotspot2.pps.Credential.getUserCredential)UserCredential
android.net.wifi.hotspot2.pps.Credential.setCertCredential(CertificateCredential)void
android.net.wifi.hotspot2.pps.Credential.getCertCredential)CertificateCredential
android.net.wifi.hotspot2.pps.Credential.setSimCredential(SimCredential)void
android.net.wifi.hotspot2.pps.Credential.getSimCredential)SimCredential
android.net.wifi.hotspot2.pps.Credential.setCaCertificate(java.security.cert.X509Certificate)void
android.net.wifi.hotspot2.pps.Credential.getCaCertificate)java.security.cert.X509Certificate
android.net.wifi.hotspot2.pps.Credential.setClientCertificateChain(java.security.cert.X509Certificate)void
android.net.wifi.hotspot2.pps.Credential.setClientPrivateKey(java.security.PrivateKey)void
android.net.wifi.hotspot2.pps.Credential.getClientPrivateKey)java.security.PrivateKey
android.net.wifi.hotspot2.pps.Credential.describeContents)int
android.net.wifi.hotspot2.pps.Credential.writeToParcel(android.os.Parcel,int)void
android.net.wifi.hotspot2.pps.Credential.equals(Object)boolean
android.net.wifi.hotspot2.pps.Credential.hashCode)int
android.net.wifi.hotspot2.pps.Credential.toString)String
android.net.wifi.hotspot2.pps.HomeSp.setFqdn(String)void
android.net.wifi.hotspot2.pps.HomeSp.getFqdn)String
android.net.wifi.hotspot2.pps.HomeSp.setFriendlyName(String)void
android.net.wifi.hotspot2.pps.HomeSp.getFriendlyName)String
android.net.wifi.hotspot2.pps.HomeSp.setRoamingConsortiumOis(long)void
android.net.wifi.hotspot2.pps.HomeSp.describeContents)int
android.net.wifi.hotspot2.pps.HomeSp.writeToParcel(android.os.Parcel,int)void
android.net.wifi.hotspot2.pps.HomeSp.equals(Object)boolean
android.net.wifi.hotspot2.pps.HomeSp.hashCode)int
android.net.wifi.hotspot2.pps.HomeSp.toString)String
android.net.wifi.p2p.WifiP2pConfig.setDeviceAddress(android.net.MacAddress)Builder
android.net.wifi.p2p.WifiP2pConfig.setNetworkName(String)Builder
android.net.wifi.p2p.WifiP2pConfig.setPassphrase(String)Builder
android.net.wifi.p2p.WifiP2pConfig.setGroupOperatingBand(int)Builder
android.net.wifi.p2p.WifiP2pConfig.setGroupOperatingFrequency(int)Builder
android.net.wifi.p2p.WifiP2pConfig.enablePersistentMode(boolean)Builder
android.net.wifi.p2p.WifiP2pConfig.build)android.net.wifi.p2p.WifiP2pConfig
android.net.wifi.p2p.WifiP2pConfig.toString)String
android.net.wifi.p2p.WifiP2pConfig.describeContents)int
android.net.wifi.p2p.WifiP2pConfig.writeToParcel(android.os.Parcel,int)void
android.net.wifi.p2p.WifiP2pDevice.wpsPbcSupported)boolean
android.net.wifi.p2p.WifiP2pDevice.wpsKeypadSupported)boolean
android.net.wifi.p2p.WifiP2pDevice.wpsDisplaySupported)boolean
android.net.wifi.p2p.WifiP2pDevice.isServiceDiscoveryCapable)boolean
android.net.wifi.p2p.WifiP2pDevice.isGroupOwner)boolean
android.net.wifi.p2p.WifiP2pDevice.equals(Object)boolean
android.net.wifi.p2p.WifiP2pDevice.hashCode)int
android.net.wifi.p2p.WifiP2pDevice.toString)String
android.net.wifi.p2p.WifiP2pDevice.describeContents)int
android.net.wifi.p2p.WifiP2pDevice.writeToParcel(android.os.Parcel,int)void
android.net.wifi.p2p.WifiP2pDeviceList.get(String)android.net.wifi.p2p.WifiP2pDevice
android.net.wifi.p2p.WifiP2pDeviceList.getDeviceList)java.util.Collection
android.net.wifi.p2p.WifiP2pDeviceList.toString)String
android.net.wifi.p2p.WifiP2pDeviceList.describeContents)int
android.net.wifi.p2p.WifiP2pDeviceList.writeToParcel(android.os.Parcel,int)void
android.net.wifi.p2p.WifiP2pGroup.getNetworkName)String
android.net.wifi.p2p.WifiP2pGroup.isGroupOwner)boolean
android.net.wifi.p2p.WifiP2pGroup.getOwner)android.net.wifi.p2p.WifiP2pDevice
android.net.wifi.p2p.WifiP2pGroup.getClientList)java.util.Collection
android.net.wifi.p2p.WifiP2pGroup.getPassphrase)String
android.net.wifi.p2p.WifiP2pGroup.getInterface)String
android.net.wifi.p2p.WifiP2pGroup.getFrequency)int
android.net.wifi.p2p.WifiP2pGroup.toString)String
android.net.wifi.p2p.WifiP2pGroup.describeContents)int
android.net.wifi.p2p.WifiP2pGroup.writeToParcel(android.os.Parcel,int)void
android.net.wifi.p2p.WifiP2pInfo.toString)String
android.net.wifi.p2p.WifiP2pInfo.describeContents)int
android.net.wifi.p2p.WifiP2pInfo.writeToParcel(android.os.Parcel,int)void
android.net.wifi.p2p.WifiP2pManager.close)void
android.net.wifi.p2p.WifiP2pManager.finalize)void
android.net.wifi.p2p.WifiP2pManager.initialize(android.content.Context,android.os.Looper,android.net.wifi.p2p.WifiP2pManager.ChannelListener)android.net.wifi.p2p.WifiP2pManager.Channel
android.net.wifi.p2p.WifiP2pManager.discoverPeers(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)void
android.net.wifi.p2p.WifiP2pManager.stopPeerDiscovery(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)void
android.net.wifi.p2p.WifiP2pManager.connect(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pConfig,android.net.wifi.p2p.WifiP2pManager.ActionListener)void
android.net.wifi.p2p.WifiP2pManager.cancelConnect(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)void
android.net.wifi.p2p.WifiP2pManager.createGroup(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)void
android.net.wifi.p2p.WifiP2pManager.createGroup(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pConfig,android.net.wifi.p2p.WifiP2pManager.ActionListener)void
android.net.wifi.p2p.WifiP2pManager.removeGroup(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)void
android.net.wifi.p2p.WifiP2pManager.addLocalService(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.nsd.WifiP2pServiceInfo,android.net.wifi.p2p.WifiP2pManager.ActionListener)void
android.net.wifi.p2p.WifiP2pManager.removeLocalService(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.nsd.WifiP2pServiceInfo,android.net.wifi.p2p.WifiP2pManager.ActionListener)void
android.net.wifi.p2p.WifiP2pManager.clearLocalServices(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)void
android.net.wifi.p2p.WifiP2pManager.setServiceResponseListener(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ServiceResponseListener)void
android.net.wifi.p2p.WifiP2pManager.setDnsSdResponseListeners(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.DnsSdServiceResponseListener,android.net.wifi.p2p.WifiP2pManager.DnsSdTxtRecordListener)void
android.net.wifi.p2p.WifiP2pManager.setUpnpServiceResponseListener(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.UpnpServiceResponseListener)void
android.net.wifi.p2p.WifiP2pManager.discoverServices(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)void
android.net.wifi.p2p.WifiP2pManager.addServiceRequest(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.nsd.WifiP2pServiceRequest,android.net.wifi.p2p.WifiP2pManager.ActionListener)void
android.net.wifi.p2p.WifiP2pManager.removeServiceRequest(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.nsd.WifiP2pServiceRequest,android.net.wifi.p2p.WifiP2pManager.ActionListener)void
android.net.wifi.p2p.WifiP2pManager.clearServiceRequests(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)void
android.net.wifi.p2p.WifiP2pManager.requestPeers(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.PeerListListener)void
android.net.wifi.p2p.WifiP2pManager.requestConnectionInfo(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ConnectionInfoListener)void
android.net.wifi.p2p.WifiP2pManager.requestGroupInfo(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.GroupInfoListener)void
android.net.wifi.p2p.WifiP2pManager.requestP2pState(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.P2pStateListener)void
android.net.wifi.p2p.WifiP2pManager.requestDiscoveryState(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.DiscoveryStateListener)void
android.net.wifi.p2p.WifiP2pManager.requestNetworkInfo(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.NetworkInfoListener)void
android.net.wifi.p2p.WifiP2pManager.requestDeviceInfo(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.DeviceInfoListener)void
android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo.newInstance(String,String,java.util.Map)android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo
android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest.newInstance)android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest
android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest.newInstance(String)android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest
android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest.newInstance(String,String)android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest
android.net.wifi.p2p.nsd.WifiP2pServiceInfo.equals(Object)boolean
android.net.wifi.p2p.nsd.WifiP2pServiceInfo.hashCode)int
android.net.wifi.p2p.nsd.WifiP2pServiceInfo.describeContents)int
android.net.wifi.p2p.nsd.WifiP2pServiceInfo.writeToParcel(android.os.Parcel,int)void
android.net.wifi.p2p.nsd.WifiP2pServiceRequest.newInstance(int,String)android.net.wifi.p2p.nsd.WifiP2pServiceRequest
android.net.wifi.p2p.nsd.WifiP2pServiceRequest.newInstance(int)android.net.wifi.p2p.nsd.WifiP2pServiceRequest
android.net.wifi.p2p.nsd.WifiP2pServiceRequest.equals(Object)boolean
android.net.wifi.p2p.nsd.WifiP2pServiceRequest.hashCode)int
android.net.wifi.p2p.nsd.WifiP2pServiceRequest.describeContents)int
android.net.wifi.p2p.nsd.WifiP2pServiceRequest.writeToParcel(android.os.Parcel,int)void
android.net.wifi.p2p.nsd.WifiP2pUpnpServiceInfo.newInstance(String,String,java.util.List)android.net.wifi.p2p.nsd.WifiP2pUpnpServiceInfo
android.net.wifi.p2p.nsd.WifiP2pUpnpServiceRequest.newInstance)android.net.wifi.p2p.nsd.WifiP2pUpnpServiceRequest
android.net.wifi.p2p.nsd.WifiP2pUpnpServiceRequest.newInstance(String)android.net.wifi.p2p.nsd.WifiP2pUpnpServiceRequest
android.net.wifi.rtt.RangingRequest.addAccessPoint(android.net.wifi.ScanResult)Builder
android.net.wifi.rtt.RangingRequest.addAccessPoints(java.util.List)Builder
android.net.wifi.rtt.RangingRequest.addWifiAwarePeer(android.net.MacAddress)Builder
android.net.wifi.rtt.RangingRequest.addWifiAwarePeer(android.net.wifi.aware.PeerHandle)Builder
android.net.wifi.rtt.RangingRequest.build)android.net.wifi.rtt.RangingRequest
android.net.wifi.rtt.RangingRequest.getMaxPeers)int
android.net.wifi.rtt.RangingRequest.describeContents)int
android.net.wifi.rtt.RangingRequest.writeToParcel(android.os.Parcel,int)void
android.net.wifi.rtt.RangingRequest.toString)String
android.net.wifi.rtt.RangingRequest.equals(Object)boolean
android.net.wifi.rtt.RangingRequest.hashCode)int
android.net.wifi.rtt.RangingResult.getStatus)int
android.net.wifi.rtt.RangingResult.getMacAddress)android.net.MacAddress
android.net.wifi.rtt.RangingResult.getPeerHandle)android.net.wifi.aware.PeerHandle
android.net.wifi.rtt.RangingResult.getDistanceMm)int
android.net.wifi.rtt.RangingResult.getDistanceStdDevMm)int
android.net.wifi.rtt.RangingResult.getRssi)int
android.net.wifi.rtt.RangingResult.getNumAttemptedMeasurements)int
android.net.wifi.rtt.RangingResult.getNumSuccessfulMeasurements)int
android.net.wifi.rtt.RangingResult.getUnverifiedResponderLocation)android.net.wifi.rtt.ResponderLocation
android.net.wifi.rtt.RangingResult.getRangingTimestampMillis)long
android.net.wifi.rtt.RangingResult.describeContents)int
android.net.wifi.rtt.RangingResult.writeToParcel(android.os.Parcel,int)void
android.net.wifi.rtt.RangingResult.toString)String
android.net.wifi.rtt.RangingResult.equals(Object)boolean
android.net.wifi.rtt.RangingResult.hashCode)int
android.net.wifi.rtt.ResponderLocation.describeContents)int
android.net.wifi.rtt.ResponderLocation.writeToParcel(android.os.Parcel,int)void
android.net.wifi.rtt.ResponderLocation.equals(Object)boolean
android.net.wifi.rtt.ResponderLocation.hashCode)int
android.net.wifi.rtt.ResponderLocation.isLciSubelementValid)boolean
android.net.wifi.rtt.ResponderLocation.getLatitudeUncertainty)double
android.net.wifi.rtt.ResponderLocation.getLatitude)double
android.net.wifi.rtt.ResponderLocation.getLongitudeUncertainty)double
android.net.wifi.rtt.ResponderLocation.getLongitude)double
android.net.wifi.rtt.ResponderLocation.getAltitudeType)int
android.net.wifi.rtt.ResponderLocation.getAltitudeUncertainty)double
android.net.wifi.rtt.ResponderLocation.getAltitude)double
android.net.wifi.rtt.ResponderLocation.getDatum)int
android.net.wifi.rtt.ResponderLocation.getRegisteredLocationAgreementIndication)boolean
android.net.wifi.rtt.ResponderLocation.getLciVersion)int
android.net.wifi.rtt.ResponderLocation.toLocation)android.location.Location
android.net.wifi.rtt.ResponderLocation.isZaxisSubelementValid)boolean
android.net.wifi.rtt.ResponderLocation.getExpectedToMove)int
android.net.wifi.rtt.ResponderLocation.getFloorNumber)double
android.net.wifi.rtt.ResponderLocation.getHeightAboveFloorMeters)double
android.net.wifi.rtt.ResponderLocation.getHeightAboveFloorUncertaintyMeters)double
android.net.wifi.rtt.ResponderLocation.getColocatedBssids)java.util.List
android.net.wifi.rtt.ResponderLocation.toCivicLocationAddress)android.location.Address
android.net.wifi.rtt.ResponderLocation.toCivicLocationSparseArray)android.util.SparseArray
android.net.wifi.rtt.ResponderLocation.getMapImageMimeType)String
android.net.wifi.rtt.ResponderLocation.getMapImageUri)android.net.Uri
android.net.wifi.rtt.WifiRttManager.isAvailable)boolean
android.net.wifi.rtt.WifiRttManager.startRanging(android.net.wifi.rtt.RangingRequest,java.util.concurrent.Executor,android.net.wifi.rtt.RangingResultCallback)void
android.nfc.NdefMessage.NdefMessage(android.nfc.NdefRecord,android.nfc.NdefRecord)transient
android.nfc.NdefMessage.getByteArrayLength)int
android.nfc.NdefMessage.describeContents)int
android.nfc.NdefMessage.writeToParcel(android.os.Parcel,int)void
android.nfc.NdefMessage.hashCode)int
android.nfc.NdefMessage.equals(Object)boolean
android.nfc.NdefMessage.toString)String
android.nfc.NdefRecord.createApplicationRecord(String)android.nfc.NdefRecord
android.nfc.NdefRecord.createUri(android.net.Uri)android.nfc.NdefRecord
android.nfc.NdefRecord.createUri(String)android.nfc.NdefRecord
android.nfc.NdefRecord.createMime(String,byte)android.nfc.NdefRecord
android.nfc.NdefRecord.createExternal(String,String,byte)android.nfc.NdefRecord
android.nfc.NdefRecord.createTextRecord(String,String)android.nfc.NdefRecord
android.nfc.NdefRecord.getTnf)short
android.nfc.NdefRecord.toMimeType)String
android.nfc.NdefRecord.toUri)android.net.Uri
android.nfc.NdefRecord.describeContents)int
android.nfc.NdefRecord.writeToParcel(android.os.Parcel,int)void
android.nfc.NdefRecord.hashCode)int
android.nfc.NdefRecord.equals(Object)boolean
android.nfc.NdefRecord.toString)String
android.nfc.NfcAdapter.getDefaultAdapter(android.content.Context)android.nfc.NfcAdapter
android.nfc.NfcAdapter.isEnabled)boolean
android.nfc.NfcAdapter.setBeamPushUris(android.net.Uri,android.app.Activity)void
android.nfc.NfcAdapter.setBeamPushUrisCallback(android.nfc.NfcAdapter.CreateBeamUrisCallback,android.app.Activity)void
android.nfc.NfcAdapter.enableForegroundDispatch(android.app.Activity,android.app.PendingIntent,android.content.IntentFilter,String)void
android.nfc.NfcAdapter.disableForegroundDispatch(android.app.Activity)void
android.nfc.NfcAdapter.enableReaderMode(android.app.Activity,android.nfc.NfcAdapter.ReaderCallback,int,android.os.Bundle)void
android.nfc.NfcAdapter.disableReaderMode(android.app.Activity)void
android.nfc.NfcAdapter.invokeBeam(android.app.Activity)boolean
android.nfc.NfcAdapter.enableForegroundNdefPush(android.app.Activity,android.nfc.NdefMessage)void
android.nfc.NfcAdapter.disableForegroundNdefPush(android.app.Activity)void
android.nfc.NfcAdapter.isSecureNfcSupported)boolean
android.nfc.NfcAdapter.isSecureNfcEnabled)boolean
android.nfc.NfcAdapter.isNdefPushEnabled)boolean
android.nfc.NfcAdapter.ignore(android.nfc.Tag,int,android.nfc.NfcAdapter.OnTagRemovedListener,android.os.Handler)boolean
android.nfc.NfcManager.getDefaultAdapter)android.nfc.NfcAdapter
android.nfc.Tag.toString)String
android.nfc.Tag.describeContents)int
android.nfc.Tag.writeToParcel(android.os.Parcel,int)void
android.nfc.cardemulation.CardEmulation.isDefaultServiceForCategory(android.content.ComponentName,String)boolean
android.nfc.cardemulation.CardEmulation.isDefaultServiceForAid(android.content.ComponentName,String)boolean
android.nfc.cardemulation.CardEmulation.categoryAllowsForegroundPreference(String)boolean
android.nfc.cardemulation.CardEmulation.getSelectionModeForCategory(String)int
android.nfc.cardemulation.CardEmulation.registerAidsForService(android.content.ComponentName,String,java.util.List)boolean
android.nfc.cardemulation.CardEmulation.unsetOffHostForService(android.content.ComponentName)boolean
android.nfc.cardemulation.CardEmulation.setOffHostForService(android.content.ComponentName,String)boolean
android.nfc.cardemulation.CardEmulation.getAidsForService(android.content.ComponentName,String)java.util.List
android.nfc.cardemulation.CardEmulation.removeAidsForService(android.content.ComponentName,String)boolean
android.nfc.cardemulation.CardEmulation.setPreferredService(android.app.Activity,android.content.ComponentName)boolean
android.nfc.cardemulation.CardEmulation.unsetPreferredService(android.app.Activity)boolean
android.nfc.cardemulation.CardEmulation.supportsAidPrefixRegistration)boolean
android.nfc.cardemulation.HostApduService.onBind(android.content.Intent)android.os.IBinder
android.nfc.cardemulation.HostApduService.sendResponseApdu(byte)void
android.nfc.cardemulation.HostApduService.notifyUnhandled)void
android.nfc.cardemulation.HostNfcFService.onBind(android.content.Intent)android.os.IBinder
android.nfc.cardemulation.HostNfcFService.sendResponsePacket(byte)void
android.nfc.cardemulation.NfcFCardEmulation.getSystemCodeForService(android.content.ComponentName)String
android.nfc.cardemulation.NfcFCardEmulation.registerSystemCodeForService(android.content.ComponentName,String)boolean
android.nfc.cardemulation.NfcFCardEmulation.unregisterSystemCodeForService(android.content.ComponentName)boolean
android.nfc.cardemulation.NfcFCardEmulation.getNfcid2ForService(android.content.ComponentName)String
android.nfc.cardemulation.NfcFCardEmulation.setNfcid2ForService(android.content.ComponentName,String)boolean
android.nfc.cardemulation.NfcFCardEmulation.enableService(android.app.Activity,android.content.ComponentName)boolean
android.nfc.cardemulation.NfcFCardEmulation.disableService(android.app.Activity)boolean
android.nfc.tech.IsoDep.get(android.nfc.Tag)android.nfc.tech.IsoDep
android.nfc.tech.IsoDep.setTimeout(int)void
android.nfc.tech.IsoDep.getTimeout)int
android.nfc.tech.IsoDep.getMaxTransceiveLength)int
android.nfc.tech.IsoDep.isExtendedLengthApduSupported)boolean
android.nfc.tech.IsoDep.isConnected)boolean
android.nfc.tech.IsoDep.getTag)android.nfc.Tag
android.nfc.tech.IsoDep.close)void
android.nfc.tech.IsoDep.connect)void
android.nfc.tech.MifareClassic.get(android.nfc.Tag)android.nfc.tech.MifareClassic
android.nfc.tech.MifareClassic.getType)int
android.nfc.tech.MifareClassic.getSize)int
android.nfc.tech.MifareClassic.getSectorCount)int
android.nfc.tech.MifareClassic.getBlockCount)int
android.nfc.tech.MifareClassic.getBlockCountInSector(int)int
android.nfc.tech.MifareClassic.blockToSector(int)int
android.nfc.tech.MifareClassic.sectorToBlock(int)int
android.nfc.tech.MifareClassic.authenticateSectorWithKeyA(int,byte)boolean
android.nfc.tech.MifareClassic.authenticateSectorWithKeyB(int,byte)boolean
android.nfc.tech.MifareClassic.writeBlock(int,byte)void
android.nfc.tech.MifareClassic.increment(int,int)void
android.nfc.tech.MifareClassic.decrement(int,int)void
android.nfc.tech.MifareClassic.transfer(int)void
android.nfc.tech.MifareClassic.restore(int)void
android.nfc.tech.MifareClassic.getMaxTransceiveLength)int
android.nfc.tech.MifareClassic.setTimeout(int)void
android.nfc.tech.MifareClassic.getTimeout)int
android.nfc.tech.MifareClassic.isConnected)boolean
android.nfc.tech.MifareClassic.getTag)android.nfc.Tag
android.nfc.tech.MifareClassic.close)void
android.nfc.tech.MifareClassic.connect)void
android.nfc.tech.MifareUltralight.get(android.nfc.Tag)android.nfc.tech.MifareUltralight
android.nfc.tech.MifareUltralight.getType)int
android.nfc.tech.MifareUltralight.writePage(int,byte)void
android.nfc.tech.MifareUltralight.getMaxTransceiveLength)int
android.nfc.tech.MifareUltralight.setTimeout(int)void
android.nfc.tech.MifareUltralight.getTimeout)int
android.nfc.tech.MifareUltralight.isConnected)boolean
android.nfc.tech.MifareUltralight.getTag)android.nfc.Tag
android.nfc.tech.MifareUltralight.close)void
android.nfc.tech.MifareUltralight.connect)void
android.nfc.tech.Ndef.get(Tag)android.nfc.tech.Ndef
android.nfc.tech.Ndef.getCachedNdefMessage)NdefMessage
android.nfc.tech.Ndef.getType)String
android.nfc.tech.Ndef.getMaxSize)int
android.nfc.tech.Ndef.isWritable)boolean
android.nfc.tech.Ndef.getNdefMessage)NdefMessage
android.nfc.tech.Ndef.writeNdefMessage(NdefMessage)void
android.nfc.tech.Ndef.canMakeReadOnly)boolean
android.nfc.tech.Ndef.makeReadOnly)boolean
android.nfc.tech.Ndef.isConnected)boolean
android.nfc.tech.Ndef.getTag)Tag
android.nfc.tech.Ndef.close)void
android.nfc.tech.Ndef.connect)void
android.nfc.tech.NdefFormatable.get(Tag)android.nfc.tech.NdefFormatable
android.nfc.tech.NdefFormatable.format(NdefMessage)void
android.nfc.tech.NdefFormatable.formatReadOnly(NdefMessage)void
android.nfc.tech.NdefFormatable.isConnected)boolean
android.nfc.tech.NdefFormatable.getTag)Tag
android.nfc.tech.NdefFormatable.close)void
android.nfc.tech.NdefFormatable.connect)void
android.nfc.tech.NfcA.get(android.nfc.Tag)android.nfc.tech.NfcA
android.nfc.tech.NfcA.getSak)short
android.nfc.tech.NfcA.getMaxTransceiveLength)int
android.nfc.tech.NfcA.setTimeout(int)void
android.nfc.tech.NfcA.getTimeout)int
android.nfc.tech.NfcA.isConnected)boolean
android.nfc.tech.NfcA.getTag)android.nfc.Tag
android.nfc.tech.NfcA.close)void
android.nfc.tech.NfcA.connect)void
android.nfc.tech.NfcB.get(android.nfc.Tag)android.nfc.tech.NfcB
android.nfc.tech.NfcB.getMaxTransceiveLength)int
android.nfc.tech.NfcB.isConnected)boolean
android.nfc.tech.NfcB.getTag)android.nfc.Tag
android.nfc.tech.NfcB.close)void
android.nfc.tech.NfcB.connect)void
android.nfc.tech.NfcBarcode.get(android.nfc.Tag)android.nfc.tech.NfcBarcode
android.nfc.tech.NfcBarcode.getType)int
android.nfc.tech.NfcBarcode.isConnected)boolean
android.nfc.tech.NfcBarcode.getTag)android.nfc.Tag
android.nfc.tech.NfcBarcode.close)void
android.nfc.tech.NfcBarcode.connect)void
android.nfc.tech.NfcF.get(android.nfc.Tag)android.nfc.tech.NfcF
android.nfc.tech.NfcF.getMaxTransceiveLength)int
android.nfc.tech.NfcF.setTimeout(int)void
android.nfc.tech.NfcF.getTimeout)int
android.nfc.tech.NfcF.isConnected)boolean
android.nfc.tech.NfcF.getTag)android.nfc.Tag
android.nfc.tech.NfcF.close)void
android.nfc.tech.NfcF.connect)void
android.nfc.tech.NfcV.get(android.nfc.Tag)android.nfc.tech.NfcV
android.nfc.tech.NfcV.getResponseFlags)byte
android.nfc.tech.NfcV.getDsfId)byte
android.nfc.tech.NfcV.getMaxTransceiveLength)int
android.nfc.tech.NfcV.isConnected)boolean
android.nfc.tech.NfcV.getTag)android.nfc.Tag
android.nfc.tech.NfcV.close)void
android.nfc.tech.NfcV.connect)void
android.nfc.tech.TagTechnology.connect)void
android.nfc.tech.TagTechnology.close)void
android.opengl.EGL14.eglCreateWindowSurface(android.opengl.EGLDisplay,android.opengl.EGLConfig,Object,int,int)android.opengl.EGLSurface
android.opengl.EGLConfig.equals(Object)boolean
android.opengl.EGLContext.equals(Object)boolean
android.opengl.EGLDisplay.equals(Object)boolean
android.opengl.EGLImage.equals(Object)boolean
android.opengl.EGLObjectHandle.getHandle)int
android.opengl.EGLObjectHandle.getNativeHandle)long
android.opengl.EGLObjectHandle.hashCode)int
android.opengl.EGLSurface.equals(Object)boolean
android.opengl.EGLSync.equals(Object)boolean
android.opengl.ETC1Util.getWidth)int
android.opengl.ETC1Util.getHeight)int
android.opengl.ETC1Util.getData)java.nio.ByteBuffer
android.opengl.ETC1Util.loadTexture(int,int,int,int,int,InputStream)void
android.opengl.ETC1Util.loadTexture(int,int,int,int,int,android.opengl.ETC1Util.ETC1Texture)void
android.opengl.ETC1Util.isETC1Supported)boolean
android.opengl.ETC1Util.createTexture(InputStream)android.opengl.ETC1Util.ETC1Texture
android.opengl.ETC1Util.compressTexture(java.nio.Buffer,int,int,int,int)android.opengl.ETC1Util.ETC1Texture
android.opengl.ETC1Util.writeTexture(android.opengl.ETC1Util.ETC1Texture,OutputStream)void
android.opengl.GLDebugHelper.wrap(javax.microedition.khronos.opengles.GL,int,java.io.Writer)javax.microedition.khronos.opengles.GL
android.opengl.GLDebugHelper.wrap(javax.microedition.khronos.egl.EGL,int,java.io.Writer)javax.microedition.khronos.egl.EGL
android.opengl.GLES10.glColorPointer(int,int,int,Buffer)void
android.opengl.GLES10.glNormalPointer(int,int,Buffer)void
android.opengl.GLES10.glTexCoordPointer(int,int,int,Buffer)void
android.opengl.GLES10.glVertexPointer(int,int,int,Buffer)void
android.opengl.GLES11.glPointSizePointerOES(int,int,Buffer)void
android.opengl.GLES11Ext.glMatrixIndexPointerOES(int,int,int,Buffer)void
android.opengl.GLES11Ext.glWeightPointerOES(int,int,int,Buffer)void
android.opengl.GLES20.glVertexAttribPointer(int,int,int,boolean,int,Buffer)void
android.opengl.GLES30.glVertexAttribIPointer(int,int,int,int,Buffer)void
android.opengl.GLSurfaceView.finalize)void
android.opengl.GLSurfaceView.setGLWrapper(android.opengl.GLSurfaceView.GLWrapper)void
android.opengl.GLSurfaceView.setDebugFlags(int)void
android.opengl.GLSurfaceView.getDebugFlags)int
android.opengl.GLSurfaceView.setPreserveEGLContextOnPause(boolean)void
android.opengl.GLSurfaceView.getPreserveEGLContextOnPause)boolean
android.opengl.GLSurfaceView.setRenderer(android.opengl.GLSurfaceView.Renderer)void
android.opengl.GLSurfaceView.setEGLContextFactory(android.opengl.GLSurfaceView.EGLContextFactory)void
android.opengl.GLSurfaceView.setEGLWindowSurfaceFactory(android.opengl.GLSurfaceView.EGLWindowSurfaceFactory)void
android.opengl.GLSurfaceView.setEGLConfigChooser(android.opengl.GLSurfaceView.EGLConfigChooser)void
android.opengl.GLSurfaceView.setEGLConfigChooser(boolean)void
android.opengl.GLSurfaceView.setEGLConfigChooser(int,int,int,int,int,int)void
android.opengl.GLSurfaceView.setEGLContextClientVersion(int)void
android.opengl.GLSurfaceView.setRenderMode(int)void
android.opengl.GLSurfaceView.getRenderMode)int
android.opengl.GLSurfaceView.requestRender)void
android.opengl.GLSurfaceView.surfaceCreated(android.view.SurfaceHolder)void
android.opengl.GLSurfaceView.surfaceDestroyed(android.view.SurfaceHolder)void
android.opengl.GLSurfaceView.surfaceChanged(android.view.SurfaceHolder,int,int,int)void
android.opengl.GLSurfaceView.surfaceRedrawNeededAsync(android.view.SurfaceHolder,Runnable)void
android.opengl.GLSurfaceView.surfaceRedrawNeeded(android.view.SurfaceHolder)void
android.opengl.GLSurfaceView.onPause)void
android.opengl.GLSurfaceView.onResume)void
android.opengl.GLSurfaceView.queueEvent(Runnable)void
android.opengl.GLSurfaceView.onAttachedToWindow)void
android.opengl.GLSurfaceView.onDetachedFromWindow)void
android.opengl.GLU.gluErrorString(int)String
android.opengl.GLU.gluOrtho2D(javax.microedition.khronos.opengles.GL10,float,float,float,float)void
android.opengl.GLU.gluPerspective(javax.microedition.khronos.opengles.GL10,float,float,float,float)void
android.opengl.GLUtils.getInternalFormat(android.graphics.Bitmap)int
android.opengl.GLUtils.getType(android.graphics.Bitmap)int
android.opengl.GLUtils.texImage2D(int,int,int,android.graphics.Bitmap,int)void
android.opengl.GLUtils.texImage2D(int,int,int,android.graphics.Bitmap,int,int)void
android.opengl.GLUtils.texImage2D(int,int,android.graphics.Bitmap,int)void
android.opengl.GLUtils.texSubImage2D(int,int,int,int,android.graphics.Bitmap)void
android.opengl.GLUtils.texSubImage2D(int,int,int,int,android.graphics.Bitmap,int,int)void
android.opengl.GLUtils.getEGLErrorString(int)String
android.opengl.Matrix.transposeM(float,int,float,int)void
android.opengl.Matrix.invertM(float,int,float,int)boolean
android.opengl.Matrix.orthoM(float,int,float,float,float,float,float,float)void
android.opengl.Matrix.frustumM(float,int,float,float,float,float,float,float)void
android.opengl.Matrix.perspectiveM(float,int,float,float,float,float)void
android.opengl.Matrix.length(float,float,float)float
android.opengl.Matrix.setIdentityM(float,int)void
android.opengl.Matrix.scaleM(float,int,float,int,float,float,float)void
android.opengl.Matrix.scaleM(float,int,float,float,float)void
android.opengl.Matrix.translateM(float,int,float,int,float,float,float)void
android.opengl.Matrix.translateM(float,int,float,float,float)void
android.opengl.Matrix.rotateM(float,int,float,int,float,float,float,float)void
android.opengl.Matrix.rotateM(float,int,float,float,float,float)void
android.opengl.Matrix.setRotateM(float,int,float,float,float,float)void
android.opengl.Matrix.setRotateEulerM(float,int,float,float,float)void
android.os.AsyncTask.valueOf(String)Status
android.os.AsyncTask.getStatus)Status
android.os.AsyncTask.onPreExecute)void
android.os.AsyncTask.onPostExecute(Object)void
android.os.AsyncTask.onCancelled(Object)void
android.os.AsyncTask.onCancelled)void
android.os.AsyncTask.isCancelled)boolean
android.os.AsyncTask.cancel(boolean)boolean
android.os.AsyncTask.get)Object
android.os.AsyncTask.get(long,TimeUnit)Object
android.os.AsyncTask.execute(Runnable)void
android.os.BaseBundle.size)int
android.os.BaseBundle.isEmpty)boolean
android.os.BaseBundle.clear)void
android.os.BaseBundle.containsKey(String)boolean
android.os.BaseBundle.get(String)Object
android.os.BaseBundle.remove(String)void
android.os.BaseBundle.putAll(android.os.PersistableBundle)void
android.os.BaseBundle.keySet)java.util.Set
android.os.BaseBundle.putBoolean(String,boolean)void
android.os.BaseBundle.putInt(String,int)void
android.os.BaseBundle.putLong(String,long)void
android.os.BaseBundle.putDouble(String,double)void
android.os.BaseBundle.putString(String,String)void
android.os.BaseBundle.putBooleanArray(String,boolean)void
android.os.BaseBundle.putIntArray(String,int)void
android.os.BaseBundle.putLongArray(String,long)void
android.os.BaseBundle.putDoubleArray(String,double)void
android.os.BaseBundle.putStringArray(String,String)void
android.os.BaseBundle.getBoolean(String)boolean
android.os.BaseBundle.getBoolean(String,boolean)boolean
android.os.BaseBundle.getInt(String)int
android.os.BaseBundle.getInt(String,int)int
android.os.BaseBundle.getLong(String)long
android.os.BaseBundle.getLong(String,long)long
android.os.BaseBundle.getDouble(String)double
android.os.BaseBundle.getDouble(String,double)double
android.os.BaseBundle.getString(String)String
android.os.BaseBundle.getString(String,String)String
android.os.BatteryManager.isCharging)boolean
android.os.BatteryManager.getIntProperty(int)int
android.os.BatteryManager.getLongProperty(int)long
android.os.BatteryManager.computeChargeTimeRemaining)long
android.os.Binder.getCallingUidOrThrow)int
android.os.Binder.getCallingUserHandle)android.os.UserHandle
android.os.Binder.joinThreadPool)void
android.os.Binder.attachInterface(android.os.IInterface,String)void
android.os.Binder.getInterfaceDescriptor)String
android.os.Binder.pingBinder)boolean
android.os.Binder.isBinderAlive)boolean
android.os.Binder.queryLocalInterface(String)android.os.IInterface
android.os.Binder.onTransact(int,android.os.Parcel,android.os.Parcel,int)boolean
android.os.Binder.dump(java.io.FileDescriptor,String)void
android.os.Binder.dumpAsync(java.io.FileDescriptor,String)void
android.os.Binder.dump(java.io.FileDescriptor,java.io.PrintWriter,String)void
android.os.Binder.transact(int,android.os.Parcel,android.os.Parcel,int)boolean
android.os.Binder.linkToDeath(IBinder.DeathRecipient,int)void
android.os.Binder.unlinkToDeath(IBinder.DeathRecipient,int)boolean
android.os.Build.getName)String
android.os.Build.getFingerprint)String
android.os.Build.getBuildTimeMillis)long
android.os.Build.equals(Object)boolean
android.os.Build.hashCode)int
android.os.Build.getSerial)String
android.os.Build.getFingerprintedPartitions)java.util.List
android.os.Build.getRadioVersion)String
android.os.Bundle.setClassLoader(ClassLoader)void
android.os.Bundle.getClassLoader)ClassLoader
android.os.Bundle.clone)Object
android.os.Bundle.deepCopy)android.os.Bundle
android.os.Bundle.clear)void
android.os.Bundle.remove(String)void
android.os.Bundle.putAll(android.os.Bundle)void
android.os.Bundle.hasFileDescriptors)boolean
android.os.Bundle.putByte(String,byte)void
android.os.Bundle.putChar(String,char)void
android.os.Bundle.putShort(String,short)void
android.os.Bundle.putFloat(String,float)void
android.os.Bundle.putCharSequence(String,CharSequence)void
android.os.Bundle.putParcelable(String,android.os.Parcelable)void
android.os.Bundle.putSize(String,Size)void
android.os.Bundle.putSizeF(String,SizeF)void
android.os.Bundle.putParcelableArray(String,android.os.Parcelable)void
android.os.Bundle.putParcelableArrayList(String,java.util.ArrayList)void
android.os.Bundle.putSparseParcelableArray(String,SparseArray)void
android.os.Bundle.putIntegerArrayList(String,java.util.ArrayList)void
android.os.Bundle.putStringArrayList(String,java.util.ArrayList)void
android.os.Bundle.putCharSequenceArrayList(String,java.util.ArrayList)void
android.os.Bundle.putSerializable(String,java.io.Serializable)void
android.os.Bundle.putByteArray(String,byte)void
android.os.Bundle.putShortArray(String,short)void
android.os.Bundle.putCharArray(String,char)void
android.os.Bundle.putFloatArray(String,float)void
android.os.Bundle.putCharSequenceArray(String,CharSequence)void
android.os.Bundle.putBundle(String,android.os.Bundle)void
android.os.Bundle.putBinder(String,android.os.IBinder)void
android.os.Bundle.getByte(String)byte
android.os.Bundle.getByte(String,byte)Byte
android.os.Bundle.getChar(String)char
android.os.Bundle.getChar(String,char)char
android.os.Bundle.getShort(String)short
android.os.Bundle.getShort(String,short)short
android.os.Bundle.getFloat(String)float
android.os.Bundle.getFloat(String,float)float
android.os.Bundle.getCharSequence(String)CharSequence
android.os.Bundle.getCharSequence(String,CharSequence)CharSequence
android.os.Bundle.getSize(String)Size
android.os.Bundle.getSizeF(String)SizeF
android.os.Bundle.getBundle(String)android.os.Bundle
android.os.Bundle.getParcelable(String)android.os.Parcelable
android.os.Bundle.getParcelableArrayList(String)java.util.ArrayList
android.os.Bundle.getSparseParcelableArray(String)SparseArray
android.os.Bundle.getSerializable(String)java.io.Serializable
android.os.Bundle.getIntegerArrayList(String)java.util.ArrayList
android.os.Bundle.getStringArrayList(String)java.util.ArrayList
android.os.Bundle.getCharSequenceArrayList(String)java.util.ArrayList
android.os.Bundle.getBinder(String)android.os.IBinder
android.os.Bundle.describeContents)int
android.os.Bundle.writeToParcel(android.os.Parcel,int)void
android.os.Bundle.readFromParcel(android.os.Parcel)void
android.os.CancellationSignal.isCanceled)boolean
android.os.CancellationSignal.throwIfCanceled)void
android.os.CancellationSignal.cancel)void
android.os.CancellationSignal.setOnCancelListener(android.os.CancellationSignal.OnCancelListener)void
android.os.ConditionVariable.open)void
android.os.ConditionVariable.close)void
android.os.ConditionVariable.block)void
android.os.ConditionVariable.block(long)boolean
android.os.CpuUsageInfo.getActive)long
android.os.CpuUsageInfo.getTotal)long
android.os.CpuUsageInfo.describeContents)int
android.os.CpuUsageInfo.writeToParcel(android.os.Parcel,int)void
android.os.Debug.getTotalPss)int
android.os.Debug.getTotalSwappablePss)int
android.os.Debug.getTotalPrivateDirty)int
android.os.Debug.getTotalSharedDirty)int
android.os.Debug.getTotalPrivateClean)int
android.os.Debug.getTotalSharedClean)int
android.os.Debug.getMemoryStat(String)String
android.os.Debug.getMemoryStats)java.util.Map
android.os.Debug.describeContents)int
android.os.Debug.writeToParcel(android.os.Parcel,int)void
android.os.Debug.readFromParcel(android.os.Parcel)void
android.os.Debug.resetAndStart)boolean
android.os.Debug.collect)boolean
android.os.Debug.globalTotal)int
android.os.Debug.globalMethodInvocations)int
android.os.Debug.waitForDebugger)void
android.os.Debug.waitingForDebugger)boolean
android.os.Debug.isDebuggerConnected)boolean
android.os.Debug.changeDebugPort(int)void
android.os.Debug.startNativeTracing)void
android.os.Debug.stopNativeTracing)void
android.os.Debug.enableEmulatorTraceOutput)void
android.os.Debug.startMethodTracing)void
android.os.Debug.startMethodTracing(String)void
android.os.Debug.startMethodTracing(String,int)void
android.os.Debug.startMethodTracing(String,int,int)void
android.os.Debug.startMethodTracingSampling(String,int,int)void
android.os.Debug.stopMethodTracing)void
android.os.Debug.threadCpuTimeNanos)long
android.os.Debug.startAllocCounting)void
android.os.Debug.stopAllocCounting)void
android.os.Debug.getGlobalAllocCount)int
android.os.Debug.resetGlobalAllocCount)void
android.os.Debug.getGlobalAllocSize)int
android.os.Debug.resetGlobalAllocSize)void
android.os.Debug.getGlobalFreedCount)int
android.os.Debug.resetGlobalFreedCount)void
android.os.Debug.getGlobalFreedSize)int
android.os.Debug.resetGlobalFreedSize)void
android.os.Debug.getGlobalGcInvocationCount)int
android.os.Debug.resetGlobalGcInvocationCount)void
android.os.Debug.getGlobalClassInitCount)int
android.os.Debug.resetGlobalClassInitCount)void
android.os.Debug.getGlobalClassInitTime)int
android.os.Debug.resetGlobalClassInitTime)void
android.os.Debug.getGlobalExternalAllocCount)int
android.os.Debug.resetGlobalExternalAllocSize)void
android.os.Debug.resetGlobalExternalAllocCount)void
android.os.Debug.getGlobalExternalAllocSize)int
android.os.Debug.getGlobalExternalFreedCount)int
android.os.Debug.resetGlobalExternalFreedCount)void
android.os.Debug.getGlobalExternalFreedSize)int
android.os.Debug.resetGlobalExternalFreedSize)void
android.os.Debug.getThreadAllocCount)int
android.os.Debug.resetThreadAllocCount)void
android.os.Debug.getThreadAllocSize)int
android.os.Debug.resetThreadAllocSize)void
android.os.Debug.getThreadExternalAllocCount)int
android.os.Debug.resetThreadExternalAllocCount)void
android.os.Debug.getThreadExternalAllocSize)int
android.os.Debug.resetThreadExternalAllocSize)void
android.os.Debug.getThreadGcInvocationCount)int
android.os.Debug.resetThreadGcInvocationCount)void
android.os.Debug.resetAllCounts)void
android.os.Debug.getRuntimeStat(String)String
android.os.Debug.getRuntimeStats)java.util.Map
android.os.Debug.setAllocationLimit(int)int
android.os.Debug.setGlobalAllocationLimit(int)int
android.os.Debug.printLoadedClasses(int)void
android.os.Debug.getLoadedClassCount)int
android.os.Debug.dumpHprofData(String)void
android.os.Debug.dumpService(String,java.io.FileDescriptor,String)boolean
android.os.Debug.attachJvmtiAgent(String,String,ClassLoader)void
android.os.DropBoxManager.close)void
android.os.DropBoxManager.getTag)String
android.os.DropBoxManager.getTimeMillis)long
android.os.DropBoxManager.getFlags)int
android.os.DropBoxManager.getText(int)String
android.os.DropBoxManager.getInputStream)InputStream
android.os.DropBoxManager.describeContents)int
android.os.DropBoxManager.writeToParcel(android.os.Parcel,int)void
android.os.DropBoxManager.addText(String,String)void
android.os.DropBoxManager.addData(String,byte,int)void
android.os.DropBoxManager.addFile(String,File,int)void
android.os.DropBoxManager.isTagEnabled(String)boolean
android.os.DropBoxManager.getNextEntry(String,long)android.os.DropBoxManager.Entry
android.os.Environment.getRootDirectory)java.io.File
android.os.Environment.getDataDirectory)java.io.File
android.os.Environment.getExternalStorageDirectory)java.io.File
android.os.Environment.getExternalStoragePublicDirectory(String)java.io.File
android.os.Environment.getDownloadCacheDirectory)java.io.File
android.os.Environment.getExternalStorageState)String
android.os.Environment.getStorageState(java.io.File)String
android.os.Environment.getExternalStorageState(java.io.File)String
android.os.Environment.isExternalStorageRemovable)boolean
android.os.Environment.isExternalStorageRemovable(java.io.File)boolean
android.os.Environment.isExternalStorageEmulated)boolean
android.os.Environment.isExternalStorageEmulated(java.io.File)boolean
android.os.Environment.isExternalStorageLegacy)boolean
android.os.Environment.isExternalStorageLegacy(java.io.File)boolean
android.os.FileObserver.finalize)void
android.os.FileObserver.startWatching)void
android.os.FileObserver.stopWatching)void
android.os.FileUtils.copy(InputStream,OutputStream)long
android.os.FileUtils.copy(InputStream,OutputStream,android.os.CancellationSignal,java.util.concurrent.Executor,android.os.FileUtils.ProgressListener)long
android.os.FileUtils.copy(FileDescriptor,FileDescriptor)long
android.os.FileUtils.copy(FileDescriptor,FileDescriptor,android.os.CancellationSignal,java.util.concurrent.Executor,android.os.FileUtils.ProgressListener)long
android.os.FileUtils.closeQuietly(AutoCloseable)void
android.os.FileUtils.closeQuietly(FileDescriptor)void
android.os.Handler.handleMessage(android.os.Message)void
android.os.Handler.dispatchMessage(android.os.Message)void
android.os.Handler.createAsync(android.os.Looper)android.os.Handler
android.os.Handler.createAsync(android.os.Looper,android.os.Handler.Callback)android.os.Handler
android.os.Handler.getMessageName(android.os.Message)String
android.os.Handler.obtainMessage)android.os.Message
android.os.Handler.obtainMessage(int)android.os.Message
android.os.Handler.obtainMessage(int,Object)android.os.Message
android.os.Handler.obtainMessage(int,int,int)android.os.Message
android.os.Handler.obtainMessage(int,int,int,Object)android.os.Message
android.os.Handler.post(Runnable)boolean
android.os.Handler.postAtTime(Runnable,long)boolean
android.os.Handler.postAtTime(Runnable,Object,long)boolean
android.os.Handler.postDelayed(Runnable,long)boolean
android.os.Handler.postDelayed(Runnable,Object,long)boolean
android.os.Handler.postAtFrontOfQueue(Runnable)boolean
android.os.Handler.removeCallbacks(Runnable)void
android.os.Handler.removeCallbacks(Runnable,Object)void
android.os.Handler.sendMessage(android.os.Message)boolean
android.os.Handler.sendEmptyMessage(int)boolean
android.os.Handler.sendEmptyMessageDelayed(int,long)boolean
android.os.Handler.sendEmptyMessageAtTime(int,long)boolean
android.os.Handler.sendMessageDelayed(android.os.Message,long)boolean
android.os.Handler.sendMessageAtTime(android.os.Message,long)boolean
android.os.Handler.sendMessageAtFrontOfQueue(android.os.Message)boolean
android.os.Handler.removeMessages(int)void
android.os.Handler.removeMessages(int,Object)void
android.os.Handler.removeCallbacksAndMessages(Object)void
android.os.Handler.hasMessages(int)boolean
android.os.Handler.hasMessages(int,Object)boolean
android.os.Handler.hasCallbacks(Runnable)boolean
android.os.Handler.getLooper)android.os.Looper
android.os.Handler.dump(android.util.Printer,String)void
android.os.Handler.toString)String
android.os.HandlerThread.onLooperPrepared)void
android.os.HandlerThread.run)void
android.os.HandlerThread.getLooper)android.os.Looper
android.os.HandlerThread.quit)boolean
android.os.HandlerThread.quitSafely)boolean
android.os.HandlerThread.getThreadId)int
android.os.IBinder.getInterfaceDescriptor)String
android.os.IBinder.dump(java.io.FileDescriptor,String)void
android.os.IBinder.dumpAsync(java.io.FileDescriptor,String)void
android.os.IBinder.transact(int,android.os.Parcel,android.os.Parcel,int)boolean
android.os.IBinder.linkToDeath(android.os.IBinder.DeathRecipient,int)void
android.os.LocaleList.LocaleList(java.util.Locale)transient
android.os.LocaleList.get(int)java.util.Locale
android.os.LocaleList.isEmpty)boolean
android.os.LocaleList.size)int
android.os.LocaleList.indexOf(java.util.Locale)int
android.os.LocaleList.equals(Object)boolean
android.os.LocaleList.hashCode)int
android.os.LocaleList.toString)String
android.os.LocaleList.describeContents)int
android.os.LocaleList.writeToParcel(android.os.Parcel,int)void
android.os.LocaleList.toLanguageTags)String
android.os.LocaleList.getEmptyLocaleList)android.os.LocaleList
android.os.LocaleList.forLanguageTags(String)android.os.LocaleList
android.os.LocaleList.isPseudoLocale(android.icu.util.ULocale)boolean
android.os.LocaleList.getFirstMatch(String)java.util.Locale
android.os.LocaleList.getDefault)android.os.LocaleList
android.os.LocaleList.getAdjustedDefault)android.os.LocaleList
android.os.LocaleList.setDefault(android.os.LocaleList)void
android.os.Looper.prepare)void
android.os.Looper.prepareMainLooper)void
android.os.Looper.getMainLooper)android.os.Looper
android.os.Looper.loop)void
android.os.Looper.myLooper)android.os.Looper
android.os.Looper.myQueue)android.os.MessageQueue
android.os.Looper.isCurrentThread)boolean
android.os.Looper.setMessageLogging(android.util.Printer)void
android.os.Looper.quit)void
android.os.Looper.quitSafely)void
android.os.Looper.getThread)Thread
android.os.Looper.getQueue)android.os.MessageQueue
android.os.Looper.dump(android.util.Printer,String)void
android.os.Looper.toString)String
android.os.MemoryFile.close)void
android.os.MemoryFile.length)int
android.os.MemoryFile.isPurgingAllowed)boolean
android.os.MemoryFile.getInputStream)InputStream
android.os.MemoryFile.getOutputStream)OutputStream
android.os.MemoryFile.readBytes(byte,int,int,int)int
android.os.MemoryFile.writeBytes(byte,int,int,int)void
android.os.Message.obtain)android.os.Message
android.os.Message.obtain(android.os.Message)android.os.Message
android.os.Message.obtain(android.os.Handler)android.os.Message
android.os.Message.obtain(android.os.Handler,Runnable)android.os.Message
android.os.Message.obtain(android.os.Handler,int)android.os.Message
android.os.Message.obtain(android.os.Handler,int,Object)android.os.Message
android.os.Message.obtain(android.os.Handler,int,int,int)android.os.Message
android.os.Message.obtain(android.os.Handler,int,int,int,Object)android.os.Message
android.os.Message.recycle)void
android.os.Message.copyFrom(android.os.Message)void
android.os.Message.getWhen)long
android.os.Message.setTarget(android.os.Handler)void
android.os.Message.getTarget)android.os.Handler
android.os.Message.getCallback)Runnable
android.os.Message.getData)android.os.Bundle
android.os.Message.peekData)android.os.Bundle
android.os.Message.setData(android.os.Bundle)void
android.os.Message.sendToTarget)void
android.os.Message.isAsynchronous)boolean
android.os.Message.setAsynchronous(boolean)void
android.os.Message.toString)String
android.os.Message.describeContents)int
android.os.Message.writeToParcel(android.os.Parcel,int)void
android.os.MessageQueue.finalize)void
android.os.MessageQueue.isIdle)boolean
android.os.MessageQueue.addIdleHandler(android.os.MessageQueue.IdleHandler)void
android.os.MessageQueue.removeIdleHandler(android.os.MessageQueue.IdleHandler)void
android.os.MessageQueue.addOnFileDescriptorEventListener(java.io.FileDescriptor,int,android.os.MessageQueue.OnFileDescriptorEventListener)void
android.os.MessageQueue.removeOnFileDescriptorEventListener(java.io.FileDescriptor)void
android.os.Messenger.send(android.os.Message)void
android.os.Messenger.getBinder)android.os.IBinder
android.os.Messenger.equals(Object)boolean
android.os.Messenger.hashCode)int
android.os.Messenger.describeContents)int
android.os.Messenger.writeToParcel(android.os.Parcel,int)void
android.os.Messenger.writeMessengerOrNullToParcel(android.os.Messenger,android.os.Parcel)void
android.os.Messenger.readMessengerOrNullFromParcel(android.os.Parcel)android.os.Messenger
android.os.Parcel.obtain)android.os.Parcel
android.os.Parcel.recycle)void
android.os.Parcel.dataSize)int
android.os.Parcel.dataAvail)int
android.os.Parcel.dataPosition)int
android.os.Parcel.dataCapacity)int
android.os.Parcel.setDataSize(int)void
android.os.Parcel.setDataPosition(int)void
android.os.Parcel.setDataCapacity(int)void
android.os.Parcel.unmarshall(byte,int,int)void
android.os.Parcel.appendFrom(android.os.Parcel,int,int)void
android.os.Parcel.hasFileDescriptors)boolean
android.os.Parcel.writeInterfaceToken(String)void
android.os.Parcel.enforceInterface(String)void
android.os.Parcel.writeByteArray(byte)void
android.os.Parcel.writeByteArray(byte,int,int)void
android.os.Parcel.writeInt(int)void
android.os.Parcel.writeLong(long)void
android.os.Parcel.writeFloat(float)void
android.os.Parcel.writeDouble(double)void
android.os.Parcel.writeString(String)void
android.os.Parcel.writeBoolean(boolean)void
android.os.Parcel.writeStrongBinder(android.os.IBinder)void
android.os.Parcel.writeStrongInterface(android.os.IInterface)void
android.os.Parcel.writeFileDescriptor(java.io.FileDescriptor)void
android.os.Parcel.writeByte(byte)void
android.os.Parcel.writeMap(Map)void
android.os.Parcel.writeTypedArrayMap(ArrayMap,int)void
android.os.Parcel.writeBundle(android.os.Bundle)void
android.os.Parcel.writePersistableBundle(android.os.PersistableBundle)void
android.os.Parcel.writeSize(Size)void
android.os.Parcel.writeSizeF(SizeF)void
android.os.Parcel.writeList(List)void
android.os.Parcel.writeArray(Object)void
android.os.Parcel.writeSparseArray(SparseArray)void
android.os.Parcel.writeSparseBooleanArray(SparseBooleanArray)void
android.os.Parcel.writeBooleanArray(boolean)void
android.os.Parcel.readBooleanArray(boolean)void
android.os.Parcel.writeCharArray(char)void
android.os.Parcel.readCharArray(char)void
android.os.Parcel.writeIntArray(int)void
android.os.Parcel.readIntArray(int)void
android.os.Parcel.writeLongArray(long)void
android.os.Parcel.readLongArray(long)void
android.os.Parcel.writeFloatArray(float)void
android.os.Parcel.readFloatArray(float)void
android.os.Parcel.writeDoubleArray(double)void
android.os.Parcel.readDoubleArray(double)void
android.os.Parcel.writeStringArray(String)void
android.os.Parcel.readStringArray(String)void
android.os.Parcel.writeBinderArray(android.os.IBinder)void
android.os.Parcel.readBinderArray(android.os.IBinder)void
android.os.Parcel.writeTypedList(List)void
android.os.Parcel.writeTypedSparseArray(SparseArray,int)void
android.os.Parcel.writeStringList(List)void
android.os.Parcel.writeBinderList(List)void
android.os.Parcel.writeParcelableList(List,int)void
android.os.Parcel.writeTypedArray(android.os.Parcelable,int)void
android.os.Parcel.writeTypedObject(android.os.Parcelable,int)void
android.os.Parcel.writeValue(Object)void
android.os.Parcel.writeParcelable(android.os.Parcelable,int)void
android.os.Parcel.writeSerializable(java.io.Serializable)void
android.os.Parcel.writeException(Exception)void
android.os.Parcel.writeNoException)void
android.os.Parcel.readException)void
android.os.Parcel.readException(int,String)void
android.os.Parcel.readInt)int
android.os.Parcel.readLong)long
android.os.Parcel.readFloat)float
android.os.Parcel.readDouble)double
android.os.Parcel.readString)String
android.os.Parcel.readBoolean)boolean
android.os.Parcel.readStrongBinder)android.os.IBinder
android.os.Parcel.readFileDescriptor)android.os.ParcelFileDescriptor
android.os.Parcel.readByte)byte
android.os.Parcel.readMap(Map,ClassLoader)void
android.os.Parcel.readList(List,ClassLoader)void
android.os.Parcel.readHashMap(ClassLoader)HashMap
android.os.Parcel.readBundle)android.os.Bundle
android.os.Parcel.readBundle(ClassLoader)android.os.Bundle
android.os.Parcel.readPersistableBundle)android.os.PersistableBundle
android.os.Parcel.readPersistableBundle(ClassLoader)android.os.PersistableBundle
android.os.Parcel.readSize)Size
android.os.Parcel.readSizeF)SizeF
android.os.Parcel.readByteArray(byte)void
android.os.Parcel.readArrayList(ClassLoader)ArrayList
android.os.Parcel.readSparseArray(ClassLoader)SparseArray
android.os.Parcel.readSparseBooleanArray)SparseBooleanArray
android.os.Parcel.createTypedArrayList(Parcelable.Creator)ArrayList
android.os.Parcel.readTypedList(List,Parcelable.Creator)void
android.os.Parcel.createTypedSparseArray(Parcelable.Creator)SparseArray
android.os.Parcel.createTypedArrayMap(Parcelable.Creator)ArrayMap
android.os.Parcel.createStringArrayList)ArrayList
android.os.Parcel.createBinderArrayList)ArrayList
android.os.Parcel.readStringList(List)void
android.os.Parcel.readBinderList(List)void
android.os.Parcel.readParcelableList(List,ClassLoader)List
android.os.Parcel.readTypedArray(Object,Parcelable.Creator)void
android.os.Parcel.readTypedObject(Parcelable.Creator)Object
android.os.Parcel.writeParcelableArray(android.os.Parcelable,int)void
android.os.Parcel.readValue(ClassLoader)Object
android.os.Parcel.readParcelable(ClassLoader)android.os.Parcelable
android.os.Parcel.readSerializable)java.io.Serializable
android.os.Parcel.finalize)void
android.os.ParcelFileDescriptor.close)void
android.os.ParcelFileDescriptor.close)void
android.os.ParcelFileDescriptor.read)int
android.os.ParcelFileDescriptor.read(byte)int
android.os.ParcelFileDescriptor.read(byte,int,int)int
android.os.ParcelFileDescriptor.open(File,int)android.os.ParcelFileDescriptor
android.os.ParcelFileDescriptor.open(File,int,android.os.Handler,android.os.ParcelFileDescriptor.OnCloseListener)android.os.ParcelFileDescriptor
android.os.ParcelFileDescriptor.dup(FileDescriptor)android.os.ParcelFileDescriptor
android.os.ParcelFileDescriptor.dup)android.os.ParcelFileDescriptor
android.os.ParcelFileDescriptor.fromFd(int)android.os.ParcelFileDescriptor
android.os.ParcelFileDescriptor.adoptFd(int)android.os.ParcelFileDescriptor
android.os.ParcelFileDescriptor.fromSocket(java.net.Socket)android.os.ParcelFileDescriptor
android.os.ParcelFileDescriptor.fromDatagramSocket(java.net.DatagramSocket)android.os.ParcelFileDescriptor
android.os.ParcelFileDescriptor.parseMode(String)int
android.os.ParcelFileDescriptor.getFileDescriptor)FileDescriptor
android.os.ParcelFileDescriptor.getStatSize)long
android.os.ParcelFileDescriptor.getFd)int
android.os.ParcelFileDescriptor.detachFd)int
android.os.ParcelFileDescriptor.close)void
android.os.ParcelFileDescriptor.closeWithError(String)void
android.os.ParcelFileDescriptor.canDetectErrors)boolean
android.os.ParcelFileDescriptor.checkError)void
android.os.ParcelFileDescriptor.toString)String
android.os.ParcelFileDescriptor.finalize)void
android.os.ParcelFileDescriptor.describeContents)int
android.os.ParcelFileDescriptor.writeToParcel(android.os.Parcel,int)void
android.os.ParcelUuid.fromString(String)android.os.ParcelUuid
android.os.ParcelUuid.getUuid)java.util.UUID
android.os.ParcelUuid.toString)String
android.os.ParcelUuid.hashCode)int
android.os.ParcelUuid.equals(Object)boolean
android.os.ParcelUuid.describeContents)int
android.os.ParcelUuid.writeToParcel(android.os.Parcel,int)void
android.os.PatternMatcher.getPath)String
android.os.PatternMatcher.getType)int
android.os.PatternMatcher.match(String)boolean
android.os.PatternMatcher.toString)String
android.os.PatternMatcher.describeContents)int
android.os.PatternMatcher.writeToParcel(android.os.Parcel,int)void
android.os.PersistableBundle.clone)Object
android.os.PersistableBundle.deepCopy)android.os.PersistableBundle
android.os.PersistableBundle.putPersistableBundle(String,android.os.PersistableBundle)void
android.os.PersistableBundle.getPersistableBundle(String)android.os.PersistableBundle
android.os.PersistableBundle.describeContents)int
android.os.PersistableBundle.writeToParcel(android.os.Parcel,int)void
android.os.PowerManager.finalize)void
android.os.PowerManager.setReferenceCounted(boolean)void
android.os.PowerManager.acquire)void
android.os.PowerManager.acquire(long)void
android.os.PowerManager.release)void
android.os.PowerManager.release(int)void
android.os.PowerManager.isHeld)boolean
android.os.PowerManager.setWorkSource(android.os.WorkSource)void
android.os.PowerManager.toString)String
android.os.PowerManager.newWakeLock(int,String)android.os.PowerManager.WakeLock
android.os.PowerManager.isWakeLockLevelSupported(int)boolean
android.os.PowerManager.isScreenOn)boolean
android.os.PowerManager.isInteractive)boolean
android.os.PowerManager.reboot(String)void
android.os.PowerManager.isPowerSaveMode)boolean
android.os.PowerManager.getLocationPowerSaveMode)int
android.os.PowerManager.isDeviceIdleMode)boolean
android.os.PowerManager.isIgnoringBatteryOptimizations(String)boolean
android.os.PowerManager.isSustainedPerformanceModeSupported)boolean
android.os.PowerManager.getCurrentThermalStatus)int
android.os.PowerManager.addThermalStatusListener(android.os.PowerManager.OnThermalStatusChangedListener)void
android.os.PowerManager.addThermalStatusListener(java.util.concurrent.Executor,android.os.PowerManager.OnThermalStatusChangedListener)void
android.os.PowerManager.removeThermalStatusListener(android.os.PowerManager.OnThermalStatusChangedListener)void
android.os.Process.getStartElapsedRealtime)long
android.os.Process.getStartUptimeMillis)long
android.os.Process.is64Bit)boolean
android.os.Process.myPid)int
android.os.Process.myTid)int
android.os.Process.myUid)int
android.os.Process.myUserHandle)android.os.UserHandle
android.os.Process.isApplicationUid(int)boolean
android.os.Process.isIsolated)boolean
android.os.Process.supportsProcesses)boolean
android.os.Process.killProcess(int)void
android.os.ProxyFileDescriptorCallback.onGetSize)long
android.os.ProxyFileDescriptorCallback.onRead(long,int,byte)int
android.os.ProxyFileDescriptorCallback.onWrite(long,int,byte)int
android.os.ProxyFileDescriptorCallback.onFsync)void
android.os.RecoverySystem.verifyPackage(java.io.File,android.os.RecoverySystem.ProgressListener,java.io.File)void
android.os.RecoverySystem.installPackage(android.content.Context,java.io.File)void
android.os.RecoverySystem.rebootWipeUserData(android.content.Context)void
android.os.RecoverySystem.rebootWipeCache(android.content.Context)void
android.os.RemoteCallbackList.register(android.os.IInterface)boolean
android.os.RemoteCallbackList.register(android.os.IInterface,Object)boolean
android.os.RemoteCallbackList.unregister(android.os.IInterface)boolean
android.os.RemoteCallbackList.kill)void
android.os.RemoteCallbackList.onCallbackDied(android.os.IInterface)void
android.os.RemoteCallbackList.onCallbackDied(android.os.IInterface,Object)void
android.os.RemoteCallbackList.beginBroadcast)int
android.os.RemoteCallbackList.getBroadcastItem(int)android.os.IInterface
android.os.RemoteCallbackList.getBroadcastCookie(int)Object
android.os.RemoteCallbackList.finishBroadcast)void
android.os.RemoteCallbackList.getRegisteredCallbackCount)int
android.os.RemoteCallbackList.getRegisteredCallbackItem(int)android.os.IInterface
android.os.RemoteCallbackList.getRegisteredCallbackCookie(int)Object
android.os.ResultReceiver.send(int,android.os.Bundle)void
android.os.ResultReceiver.onReceiveResult(int,android.os.Bundle)void
android.os.ResultReceiver.describeContents)int
android.os.ResultReceiver.writeToParcel(android.os.Parcel,int)void
android.os.SharedMemory.create(String,int)android.os.SharedMemory
android.os.SharedMemory.setProtect(int)boolean
android.os.SharedMemory.getSize)int
android.os.SharedMemory.mapReadWrite)java.nio.ByteBuffer
android.os.SharedMemory.mapReadOnly)java.nio.ByteBuffer
android.os.SharedMemory.map(int,int,int)java.nio.ByteBuffer
android.os.SharedMemory.unmap(java.nio.ByteBuffer)void
android.os.SharedMemory.close)void
android.os.SharedMemory.describeContents)int
android.os.SharedMemory.writeToParcel(android.os.Parcel,int)void
android.os.StatFs.restat(String)void
android.os.StatFs.getBlockSize)int
android.os.StatFs.getBlockSizeLong)long
android.os.StatFs.getBlockCount)int
android.os.StatFs.getBlockCountLong)long
android.os.StatFs.getFreeBlocks)int
android.os.StatFs.getFreeBlocksLong)long
android.os.StatFs.getFreeBytes)long
android.os.StatFs.getAvailableBlocks)int
android.os.StatFs.getAvailableBlocksLong)long
android.os.StatFs.getAvailableBytes)long
android.os.StatFs.getTotalBytes)long
android.os.StrictMode.setClassInstanceLimit(Class,int)Builder
android.os.StrictMode.detectActivityLeaks)Builder
android.os.StrictMode.detectNonSdkApiUsage)Builder
android.os.StrictMode.permitNonSdkApiUsage)Builder
android.os.StrictMode.detectAll)Builder
android.os.StrictMode.detectLeakedSqlLiteObjects)Builder
android.os.StrictMode.detectLeakedClosableObjects)Builder
android.os.StrictMode.detectLeakedRegistrationObjects)Builder
android.os.StrictMode.detectFileUriExposure)Builder
android.os.StrictMode.detectCleartextNetwork)Builder
android.os.StrictMode.detectContentUriWithoutPermission)Builder
android.os.StrictMode.detectUntaggedSockets)Builder
android.os.StrictMode.detectImplicitDirectBoot)Builder
android.os.StrictMode.detectCredentialProtectedWhileLocked)Builder
android.os.StrictMode.penaltyDeath)Builder
android.os.StrictMode.penaltyDeathOnCleartextNetwork)Builder
android.os.StrictMode.penaltyDeathOnFileUriExposure)Builder
android.os.StrictMode.penaltyLog)Builder
android.os.StrictMode.penaltyDropBox)Builder
android.os.StrictMode.penaltyListener(java.util.concurrent.Executor,android.os.StrictMode.OnVmViolationListener)Builder
android.os.StrictMode.build)VmPolicy
android.os.StrictMode.toString)String
android.os.StrictMode.detectAll)Builder
android.os.StrictMode.permitAll)Builder
android.os.StrictMode.detectNetwork)Builder
android.os.StrictMode.permitNetwork)Builder
android.os.StrictMode.detectDiskReads)Builder
android.os.StrictMode.permitDiskReads)Builder
android.os.StrictMode.detectCustomSlowCalls)Builder
android.os.StrictMode.permitCustomSlowCalls)Builder
android.os.StrictMode.permitResourceMismatches)Builder
android.os.StrictMode.detectUnbufferedIo)Builder
android.os.StrictMode.permitUnbufferedIo)Builder
android.os.StrictMode.detectResourceMismatches)Builder
android.os.StrictMode.detectDiskWrites)Builder
android.os.StrictMode.permitDiskWrites)Builder
android.os.StrictMode.penaltyDialog)Builder
android.os.StrictMode.penaltyDeath)Builder
android.os.StrictMode.penaltyDeathOnNetwork)Builder
android.os.StrictMode.penaltyFlashScreen)Builder
android.os.StrictMode.penaltyLog)Builder
android.os.StrictMode.penaltyDropBox)Builder
android.os.StrictMode.penaltyListener(java.util.concurrent.Executor,android.os.StrictMode.OnThreadViolationListener)Builder
android.os.StrictMode.build)ThreadPolicy
android.os.StrictMode.toString)String
android.os.StrictMode.setThreadPolicy(ThreadPolicy)void
android.os.StrictMode.getThreadPolicy)ThreadPolicy
android.os.StrictMode.allowThreadDiskWrites)ThreadPolicy
android.os.StrictMode.allowThreadDiskReads)ThreadPolicy
android.os.StrictMode.setVmPolicy(VmPolicy)void
android.os.StrictMode.getVmPolicy)VmPolicy
android.os.StrictMode.enableDefaults)void
android.os.StrictMode.noteSlowCall(String)void
android.os.SystemClock.sleep(long)void
android.os.SystemClock.setCurrentTimeMillis(long)boolean
android.os.SystemClock.currentGnssTimeClock)java.time.Clock
android.os.TestLooperManager.getMessageQueue)android.os.MessageQueue
android.os.TestLooperManager.next)android.os.Message
android.os.TestLooperManager.release)void
android.os.TestLooperManager.execute(android.os.Message)void
android.os.TestLooperManager.recycle(android.os.Message)void
android.os.TestLooperManager.hasMessages(android.os.Handler,Object,int)boolean
android.os.TestLooperManager.hasMessages(android.os.Handler,Object,Runnable)boolean
android.os.TokenWatcher.acquire(android.os.IBinder,String)void
android.os.TokenWatcher.cleanup(android.os.IBinder,boolean)void
android.os.TokenWatcher.release(android.os.IBinder)void
android.os.TokenWatcher.isAcquired)boolean
android.os.TokenWatcher.dump)void
android.os.TokenWatcher.dump(java.io.PrintWriter)void
android.os.Trace.isEnabled)boolean
android.os.Trace.beginSection(String)void
android.os.Trace.endSection)void
android.os.Trace.beginAsyncSection(String,int)void
android.os.Trace.endAsyncSection(String,int)void
android.os.Trace.setCounter(String,long)void
android.os.UserHandle.getUserHandleForUid(int)android.os.UserHandle
android.os.UserHandle.toString)String
android.os.UserHandle.equals(Object)boolean
android.os.UserHandle.hashCode)int
android.os.UserHandle.describeContents)int
android.os.UserHandle.writeToParcel(android.os.Parcel,int)void
android.os.UserHandle.writeToParcel(android.os.UserHandle,android.os.Parcel)void
android.os.UserHandle.readFromParcel(android.os.Parcel)android.os.UserHandle
android.os.UserManager.getUserOperationResult)int
android.os.UserManager.supportsMultipleUsers)boolean
android.os.UserManager.getUserName)String
android.os.UserManager.isUserAGoat)boolean
android.os.UserManager.isSystemUser)boolean
android.os.UserManager.isDemoUser)boolean
android.os.UserManager.isUserRunning(android.os.UserHandle)boolean
android.os.UserManager.isUserRunningOrStopping(android.os.UserHandle)boolean
android.os.UserManager.isUserUnlocked)boolean
android.os.UserManager.isUserUnlocked(android.os.UserHandle)boolean
android.os.UserManager.getUserRestrictions)android.os.Bundle
android.os.UserManager.getUserRestrictions(android.os.UserHandle)android.os.Bundle
android.os.UserManager.setUserRestrictions(android.os.Bundle)void
android.os.UserManager.setUserRestrictions(android.os.Bundle,android.os.UserHandle)void
android.os.UserManager.setUserRestriction(String,boolean)void
android.os.UserManager.hasUserRestriction(String)boolean
android.os.UserManager.getSerialNumberForUser(android.os.UserHandle)long
android.os.UserManager.getUserForSerialNumber(long)android.os.UserHandle
android.os.UserManager.createUserCreationIntent(String,String,String,android.os.PersistableBundle)android.content.Intent
android.os.UserManager.getUserCount)int
android.os.UserManager.getUserProfiles)java.util.List
android.os.UserManager.requestQuietModeEnabled(boolean,android.os.UserHandle)boolean
android.os.UserManager.isQuietModeEnabled(android.os.UserHandle)boolean
android.os.UserManager.getApplicationRestrictions(String)android.os.Bundle
android.os.UserManager.setRestrictionsChallenge(String)boolean
android.os.UserManager.getUserCreationTime(android.os.UserHandle)long
android.os.VibrationEffect.createOneShot(long,int)android.os.VibrationEffect
android.os.VibrationEffect.createWaveform(long,int)android.os.VibrationEffect
android.os.VibrationEffect.createWaveform(long,int,int)android.os.VibrationEffect
android.os.VibrationEffect.createPredefined(int)android.os.VibrationEffect
android.os.VibrationEffect.describeContents)int
android.os.Vibrator.vibrate(long)void
android.os.Vibrator.vibrate(long,android.media.AudioAttributes)void
android.os.Vibrator.vibrate(long,int)void
android.os.Vibrator.vibrate(long,int,android.media.AudioAttributes)void
android.os.Vibrator.vibrate(android.os.VibrationEffect)void
android.os.Vibrator.vibrate(android.os.VibrationEffect,android.media.AudioAttributes)void
android.os.WorkSource.clear)void
android.os.WorkSource.equals(Object)boolean
android.os.WorkSource.hashCode)int
android.os.WorkSource.diff(android.os.WorkSource)boolean
android.os.WorkSource.set(android.os.WorkSource)void
android.os.WorkSource.add(android.os.WorkSource)boolean
android.os.WorkSource.remove(android.os.WorkSource)boolean
android.os.WorkSource.describeContents)int
android.os.WorkSource.writeToParcel(android.os.Parcel,int)void
android.os.WorkSource.toString)String
android.os.health.HealthStats.getDataType)String
android.os.health.HealthStats.hasTimer(int)boolean
android.os.health.HealthStats.getTimer(int)android.os.health.TimerStat
android.os.health.HealthStats.getTimerCount(int)int
android.os.health.HealthStats.getTimerTime(int)long
android.os.health.HealthStats.getTimerKeyCount)int
android.os.health.HealthStats.getTimerKeyAt(int)int
android.os.health.HealthStats.hasMeasurement(int)boolean
android.os.health.HealthStats.getMeasurement(int)long
android.os.health.HealthStats.getMeasurementKeyCount)int
android.os.health.HealthStats.getMeasurementKeyAt(int)int
android.os.health.HealthStats.hasStats(int)boolean
android.os.health.HealthStats.getStats(int)java.util.Map
android.os.health.HealthStats.getStatsKeyCount)int
android.os.health.HealthStats.getStatsKeyAt(int)int
android.os.health.HealthStats.hasTimers(int)boolean
android.os.health.HealthStats.getTimers(int)java.util.Map
android.os.health.HealthStats.getTimersKeyCount)int
android.os.health.HealthStats.getTimersKeyAt(int)int
android.os.health.HealthStats.hasMeasurements(int)boolean
android.os.health.HealthStats.getMeasurements(int)java.util.Map
android.os.health.HealthStats.getMeasurementsKeyCount)int
android.os.health.HealthStats.getMeasurementsKeyAt(int)int
android.os.health.SystemHealthManager.takeUidSnapshot(int)android.os.health.HealthStats
android.os.health.SystemHealthManager.takeMyUidSnapshot)android.os.health.HealthStats
android.os.health.TimerStat.describeContents)int
android.os.health.TimerStat.writeToParcel(android.os.Parcel,int)void
android.os.health.TimerStat.setCount(int)void
android.os.health.TimerStat.getCount)int
android.os.health.TimerStat.setTime(long)void
android.os.health.TimerStat.getTime)long
android.os.storage.OnObbStateChangeListener.onObbStateChange(String,int)void
android.os.storage.StorageManager.mountObb(String,String,android.os.storage.OnObbStateChangeListener)boolean
android.os.storage.StorageManager.unmountObb(String,boolean,android.os.storage.OnObbStateChangeListener)boolean
android.os.storage.StorageManager.isObbMounted(String)boolean
android.os.storage.StorageManager.getMountedObbPath(String)String
android.os.storage.StorageManager.getUuidForPath(File)java.util.UUID
android.os.storage.StorageManager.isAllocationSupported(FileDescriptor)boolean
android.os.storage.StorageManager.getStorageVolume(File)android.os.storage.StorageVolume
android.os.storage.StorageManager.getStorageVolume(android.net.Uri)android.os.storage.StorageVolume
android.os.storage.StorageManager.getStorageVolumes)java.util.List
android.os.storage.StorageManager.getPrimaryStorageVolume)android.os.storage.StorageVolume
android.os.storage.StorageManager.isEncrypted(File)boolean
android.os.storage.StorageManager.openProxyFileDescriptor(int,ProxyFileDescriptorCallback,Handler)ParcelFileDescriptor
android.os.storage.StorageManager.getCacheQuotaBytes(java.util.UUID)long
android.os.storage.StorageManager.getCacheSizeBytes(java.util.UUID)long
android.os.storage.StorageManager.getAllocatableBytes(java.util.UUID)long
android.os.storage.StorageManager.allocateBytes(java.util.UUID,long)void
android.os.storage.StorageManager.allocateBytes(FileDescriptor,long)void
android.os.storage.StorageManager.setCacheBehaviorGroup(File,boolean)void
android.os.storage.StorageManager.isCacheBehaviorGroup(File)boolean
android.os.storage.StorageManager.setCacheBehaviorTombstone(File,boolean)void
android.os.storage.StorageManager.isCacheBehaviorTombstone(File)boolean
android.os.storage.StorageVolume.getDescription(android.content.Context)String
android.os.storage.StorageVolume.isPrimary)boolean
android.os.storage.StorageVolume.isRemovable)boolean
android.os.storage.StorageVolume.isEmulated)boolean
android.os.storage.StorageVolume.getUuid)String
android.os.storage.StorageVolume.getState)String
android.os.storage.StorageVolume.createAccessIntent(String)android.content.Intent
android.os.storage.StorageVolume.createOpenDocumentTreeIntent)android.content.Intent
android.os.storage.StorageVolume.equals(Object)boolean
android.os.storage.StorageVolume.hashCode)int
android.os.storage.StorageVolume.toString)String
android.os.storage.StorageVolume.describeContents)int
android.os.storage.StorageVolume.writeToParcel(android.os.Parcel,int)void
android.os.strictmode.InstanceCountViolation.getNumberOfInstances)long
android.preference.CheckBoxPreference.onBindView(android.view.View)void
android.preference.DialogPreference.setDialogTitle(CharSequence)void
android.preference.DialogPreference.setDialogTitle(int)void
android.preference.DialogPreference.getDialogTitle)CharSequence
android.preference.DialogPreference.setDialogMessage(CharSequence)void
android.preference.DialogPreference.setDialogMessage(int)void
android.preference.DialogPreference.getDialogMessage)CharSequence
android.preference.DialogPreference.setDialogIcon(android.graphics.drawable.Drawable)void
android.preference.DialogPreference.setDialogIcon(int)void
android.preference.DialogPreference.getDialogIcon)android.graphics.drawable.Drawable
android.preference.DialogPreference.setPositiveButtonText(CharSequence)void
android.preference.DialogPreference.setPositiveButtonText(int)void
android.preference.DialogPreference.getPositiveButtonText)CharSequence
android.preference.DialogPreference.setNegativeButtonText(CharSequence)void
android.preference.DialogPreference.setNegativeButtonText(int)void
android.preference.DialogPreference.getNegativeButtonText)CharSequence
android.preference.DialogPreference.setDialogLayoutResource(int)void
android.preference.DialogPreference.getDialogLayoutResource)int
android.preference.DialogPreference.onPrepareDialogBuilder(android.app.AlertDialog.Builder)void
android.preference.DialogPreference.onClick)void
android.preference.DialogPreference.showDialog(android.os.Bundle)void
android.preference.DialogPreference.onCreateDialogView)android.view.View
android.preference.DialogPreference.onBindDialogView(android.view.View)void
android.preference.DialogPreference.onClick(android.content.DialogInterface,int)void
android.preference.DialogPreference.onDismiss(android.content.DialogInterface)void
android.preference.DialogPreference.onDialogClosed(boolean)void
android.preference.DialogPreference.getDialog)android.app.Dialog
android.preference.DialogPreference.onActivityDestroy)void
android.preference.DialogPreference.onSaveInstanceState)android.os.Parcelable
android.preference.DialogPreference.onRestoreInstanceState(android.os.Parcelable)void
android.preference.EditTextPreference.setText(String)void
android.preference.EditTextPreference.getText)String
android.preference.EditTextPreference.onBindDialogView(android.view.View)void
android.preference.EditTextPreference.onAddEditTextToDialogView(android.view.View,android.widget.EditText)void
android.preference.EditTextPreference.onDialogClosed(boolean)void
android.preference.EditTextPreference.onGetDefaultValue(android.content.res.TypedArray,int)Object
android.preference.EditTextPreference.onSetInitialValue(boolean,Object)void
android.preference.EditTextPreference.shouldDisableDependents)boolean
android.preference.EditTextPreference.getEditText)android.widget.EditText
android.preference.EditTextPreference.onSaveInstanceState)android.os.Parcelable
android.preference.EditTextPreference.onRestoreInstanceState(android.os.Parcelable)void
android.preference.ListPreference.setEntries(CharSequence)void
android.preference.ListPreference.setEntries(int)void
android.preference.ListPreference.setEntryValues(CharSequence)void
android.preference.ListPreference.setEntryValues(int)void
android.preference.ListPreference.setValue(String)void
android.preference.ListPreference.getSummary)CharSequence
android.preference.ListPreference.setSummary(CharSequence)void
android.preference.ListPreference.setValueIndex(int)void
android.preference.ListPreference.getValue)String
android.preference.ListPreference.getEntry)CharSequence
android.preference.ListPreference.findIndexOfValue(String)int
android.preference.ListPreference.onPrepareDialogBuilder(android.app.AlertDialog.Builder)void
android.preference.ListPreference.onDialogClosed(boolean)void
android.preference.ListPreference.onGetDefaultValue(android.content.res.TypedArray,int)Object
android.preference.ListPreference.onSetInitialValue(boolean,Object)void
android.preference.ListPreference.onSaveInstanceState)android.os.Parcelable
android.preference.ListPreference.onRestoreInstanceState(android.os.Parcelable)void
android.preference.MultiSelectListPreference.setEntries(CharSequence)void
android.preference.MultiSelectListPreference.setEntries(int)void
android.preference.MultiSelectListPreference.setEntryValues(CharSequence)void
android.preference.MultiSelectListPreference.setEntryValues(int)void
android.preference.MultiSelectListPreference.setValues(java.util.Set)void
android.preference.MultiSelectListPreference.getValues)java.util.Set
android.preference.MultiSelectListPreference.findIndexOfValue(String)int
android.preference.MultiSelectListPreference.onPrepareDialogBuilder(android.app.AlertDialog.Builder)void
android.preference.MultiSelectListPreference.onDialogClosed(boolean)void
android.preference.MultiSelectListPreference.onGetDefaultValue(android.content.res.TypedArray,int)Object
android.preference.MultiSelectListPreference.onSetInitialValue(boolean,Object)void
android.preference.MultiSelectListPreference.onSaveInstanceState)android.os.Parcelable
android.preference.Preference.onGetDefaultValue(android.content.res.TypedArray,int)Object
android.preference.Preference.setIntent(Intent)void
android.preference.Preference.getIntent)Intent
android.preference.Preference.setFragment(String)void
android.preference.Preference.getFragment)String
android.preference.Preference.setPreferenceDataStore(android.preference.PreferenceDataStore)void
android.preference.Preference.getPreferenceDataStore)android.preference.PreferenceDataStore
android.preference.Preference.getExtras)Bundle
android.preference.Preference.peekExtras)Bundle
android.preference.Preference.setLayoutResource(int)void
android.preference.Preference.getLayoutResource)int
android.preference.Preference.setWidgetLayoutResource(int)void
android.preference.Preference.getWidgetLayoutResource)int
android.preference.Preference.getView(View,ViewGroup)View
android.preference.Preference.onCreateView(ViewGroup)View
android.preference.Preference.onBindView(View)void
android.preference.Preference.setOrder(int)void
android.preference.Preference.getOrder)int
android.preference.Preference.setTitle(CharSequence)void
android.preference.Preference.setTitle(int)void
android.preference.Preference.getTitleRes)int
android.preference.Preference.getTitle)CharSequence
android.preference.Preference.setIcon(android.graphics.drawable.Drawable)void
android.preference.Preference.setIcon(int)void
android.preference.Preference.getIcon)android.graphics.drawable.Drawable
android.preference.Preference.getSummary)CharSequence
android.preference.Preference.setSummary(CharSequence)void
android.preference.Preference.setSummary(int)void
android.preference.Preference.setEnabled(boolean)void
android.preference.Preference.isEnabled)boolean
android.preference.Preference.setSelectable(boolean)void
android.preference.Preference.isSelectable)boolean
android.preference.Preference.setShouldDisableView(boolean)void
android.preference.Preference.getShouldDisableView)boolean
android.preference.Preference.setRecycleEnabled(boolean)void
android.preference.Preference.isRecycleEnabled)boolean
android.preference.Preference.setSingleLineTitle(boolean)void
android.preference.Preference.isSingleLineTitle)boolean
android.preference.Preference.setIconSpaceReserved(boolean)void
android.preference.Preference.isIconSpaceReserved)boolean
android.preference.Preference.onClick)void
android.preference.Preference.setKey(String)void
android.preference.Preference.getKey)String
android.preference.Preference.hasKey)boolean
android.preference.Preference.isPersistent)boolean
android.preference.Preference.shouldPersist)boolean
android.preference.Preference.setPersistent(boolean)void
android.preference.Preference.callChangeListener(Object)boolean
android.preference.Preference.setOnPreferenceChangeListener(android.preference.Preference.OnPreferenceChangeListener)void
android.preference.Preference.getOnPreferenceChangeListener)android.preference.Preference.OnPreferenceChangeListener
android.preference.Preference.setOnPreferenceClickListener(android.preference.Preference.OnPreferenceClickListener)void
android.preference.Preference.getOnPreferenceClickListener)android.preference.Preference.OnPreferenceClickListener
android.preference.Preference.getContext)Context
android.preference.Preference.getSharedPreferences)SharedPreferences
android.preference.Preference.shouldCommit)boolean
android.preference.Preference.compareTo(android.preference.Preference)int
android.preference.Preference.notifyChanged)void
android.preference.Preference.notifyHierarchyChanged)void
android.preference.Preference.getPreferenceManager)android.preference.PreferenceManager
android.preference.Preference.onAttachedToHierarchy(android.preference.PreferenceManager)void
android.preference.Preference.onAttachedToActivity)void
android.preference.Preference.findPreferenceInHierarchy(String)android.preference.Preference
android.preference.Preference.notifyDependencyChange(boolean)void
android.preference.Preference.onDependencyChanged(android.preference.Preference,boolean)void
android.preference.Preference.onParentChanged(android.preference.Preference,boolean)void
android.preference.Preference.shouldDisableDependents)boolean
android.preference.Preference.setDependency(String)void
android.preference.Preference.getDependency)String
android.preference.Preference.getParent)android.preference.PreferenceGroup
android.preference.Preference.onPrepareForRemoval)void
android.preference.Preference.setDefaultValue(Object)void
android.preference.Preference.onSetInitialValue(boolean,Object)void
android.preference.Preference.persistString(String)boolean
android.preference.Preference.getPersistedString(String)String
android.preference.Preference.persistStringSet(java.util.Set)boolean
android.preference.Preference.getPersistedStringSet(java.util.Set)java.util.Set
android.preference.Preference.persistInt(int)boolean
android.preference.Preference.getPersistedInt(int)int
android.preference.Preference.persistFloat(float)boolean
android.preference.Preference.getPersistedFloat(float)float
android.preference.Preference.persistLong(long)boolean
android.preference.Preference.getPersistedLong(long)long
android.preference.Preference.persistBoolean(boolean)boolean
android.preference.Preference.getPersistedBoolean(boolean)boolean
android.preference.Preference.toString)String
android.preference.Preference.saveHierarchyState(Bundle)void
android.preference.Preference.onSaveInstanceState)Parcelable
android.preference.Preference.restoreHierarchyState(Bundle)void
android.preference.Preference.onRestoreInstanceState(Parcelable)void
android.preference.PreferenceActivity.getTitle(android.content.res.Resources)CharSequence
android.preference.PreferenceActivity.getSummary(android.content.res.Resources)CharSequence
android.preference.PreferenceActivity.getBreadCrumbTitle(android.content.res.Resources)CharSequence
android.preference.PreferenceActivity.getBreadCrumbShortTitle(android.content.res.Resources)CharSequence
android.preference.PreferenceActivity.describeContents)int
android.preference.PreferenceActivity.writeToParcel(Parcel,int)void
android.preference.PreferenceActivity.readFromParcel(Parcel)void
android.preference.PreferenceActivity.onOptionsItemSelected(android.view.MenuItem)boolean
android.preference.PreferenceActivity.onCreate(Bundle)void
android.preference.PreferenceActivity.onBackPressed)void
android.preference.PreferenceActivity.hasHeaders)boolean
android.preference.PreferenceActivity.isMultiPane)boolean
android.preference.PreferenceActivity.onIsMultiPane)boolean
android.preference.PreferenceActivity.onIsHidingHeaders)boolean
android.preference.PreferenceActivity.onGetInitialHeader)Header
android.preference.PreferenceActivity.onGetNewHeader)Header
android.preference.PreferenceActivity.onBuildHeaders(java.util.List)void
android.preference.PreferenceActivity.invalidateHeaders)void
android.preference.PreferenceActivity.loadHeadersFromResource(int,java.util.List)void
android.preference.PreferenceActivity.isValidFragment(String)boolean
android.preference.PreferenceActivity.setListFooter(android.view.View)void
android.preference.PreferenceActivity.onStop)void
android.preference.PreferenceActivity.onDestroy)void
android.preference.PreferenceActivity.onSaveInstanceState(Bundle)void
android.preference.PreferenceActivity.onRestoreInstanceState(Bundle)void
android.preference.PreferenceActivity.onActivityResult(int,int,android.content.Intent)void
android.preference.PreferenceActivity.onContentChanged)void
android.preference.PreferenceActivity.onListItemClick(android.widget.ListView,android.view.View,int,long)void
android.preference.PreferenceActivity.onHeaderClick(Header,int)void
android.preference.PreferenceActivity.onBuildStartFragmentIntent(String,Bundle,int,int)android.content.Intent
android.preference.PreferenceActivity.startWithFragment(String,Bundle,android.app.Fragment,int)void
android.preference.PreferenceActivity.startWithFragment(String,Bundle,android.app.Fragment,int,int,int)void
android.preference.PreferenceActivity.showBreadCrumbs(CharSequence,CharSequence)void
android.preference.PreferenceActivity.setParentTitle(CharSequence,CharSequence,android.view.View.OnClickListener)void
android.preference.PreferenceActivity.switchToHeader(String,Bundle)void
android.preference.PreferenceActivity.switchToHeader(Header)void
android.preference.PreferenceActivity.startPreferenceFragment(android.app.Fragment,boolean)void
android.preference.PreferenceActivity.startPreferencePanel(String,Bundle,int,CharSequence,android.app.Fragment,int)void
android.preference.PreferenceActivity.finishPreferencePanel(android.app.Fragment,int,android.content.Intent)void
android.preference.PreferenceActivity.onPreferenceStartFragment(android.preference.PreferenceFragment,android.preference.Preference)boolean
android.preference.PreferenceActivity.getPreferenceManager)android.preference.PreferenceManager
android.preference.PreferenceActivity.setPreferenceScreen(android.preference.PreferenceScreen)void
android.preference.PreferenceActivity.getPreferenceScreen)android.preference.PreferenceScreen
android.preference.PreferenceActivity.addPreferencesFromIntent(android.content.Intent)void
android.preference.PreferenceActivity.addPreferencesFromResource(int)void
android.preference.PreferenceActivity.onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)boolean
android.preference.PreferenceActivity.findPreference(CharSequence)android.preference.Preference
android.preference.PreferenceActivity.onNewIntent(android.content.Intent)void
android.preference.PreferenceCategory.onPrepareAddPreference(android.preference.Preference)boolean
android.preference.PreferenceCategory.isEnabled)boolean
android.preference.PreferenceCategory.shouldDisableDependents)boolean
android.preference.PreferenceDataStore.putString(String,String)void
android.preference.PreferenceDataStore.putStringSet(String,java.util.Set)void
android.preference.PreferenceDataStore.putInt(String,int)void
android.preference.PreferenceDataStore.putLong(String,long)void
android.preference.PreferenceDataStore.putFloat(String,float)void
android.preference.PreferenceDataStore.putBoolean(String,boolean)void
android.preference.PreferenceDataStore.getString(String,String)String
android.preference.PreferenceDataStore.getStringSet(String,java.util.Set)java.util.Set
android.preference.PreferenceDataStore.getInt(String,int)int
android.preference.PreferenceDataStore.getLong(String,long)long
android.preference.PreferenceDataStore.getFloat(String,float)float
android.preference.PreferenceDataStore.getBoolean(String,boolean)boolean
android.preference.PreferenceFragment.onCreate(android.os.Bundle)void
android.preference.PreferenceFragment.onCreateView(LayoutInflater,ViewGroup,android.os.Bundle)View
android.preference.PreferenceFragment.onViewCreated(View,android.os.Bundle)void
android.preference.PreferenceFragment.onActivityCreated(android.os.Bundle)void
android.preference.PreferenceFragment.onStart)void
android.preference.PreferenceFragment.onStop)void
android.preference.PreferenceFragment.onDestroyView)void
android.preference.PreferenceFragment.onDestroy)void
android.preference.PreferenceFragment.onSaveInstanceState(android.os.Bundle)void
android.preference.PreferenceFragment.onActivityResult(int,int,android.content.Intent)void
android.preference.PreferenceFragment.getPreferenceManager)android.preference.PreferenceManager
android.preference.PreferenceFragment.setPreferenceScreen(android.preference.PreferenceScreen)void
android.preference.PreferenceFragment.getPreferenceScreen)android.preference.PreferenceScreen
android.preference.PreferenceFragment.addPreferencesFromIntent(android.content.Intent)void
android.preference.PreferenceFragment.addPreferencesFromResource(int)void
android.preference.PreferenceFragment.onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)boolean
android.preference.PreferenceFragment.findPreference(CharSequence)android.preference.Preference
android.preference.PreferenceGroup.setOrderingAsAdded(boolean)void
android.preference.PreferenceGroup.isOrderingAsAdded)boolean
android.preference.PreferenceGroup.addItemFromInflater(android.preference.Preference)void
android.preference.PreferenceGroup.getPreferenceCount)int
android.preference.PreferenceGroup.getPreference(int)android.preference.Preference
android.preference.PreferenceGroup.addPreference(android.preference.Preference)boolean
android.preference.PreferenceGroup.removePreference(android.preference.Preference)boolean
android.preference.PreferenceGroup.removeAll)void
android.preference.PreferenceGroup.onPrepareAddPreference(android.preference.Preference)boolean
android.preference.PreferenceGroup.findPreference(CharSequence)android.preference.Preference
android.preference.PreferenceGroup.isOnSameScreenAsChildren)boolean
android.preference.PreferenceGroup.onAttachedToActivity)void
android.preference.PreferenceGroup.onPrepareForRemoval)void
android.preference.PreferenceGroup.notifyDependencyChange(boolean)void
android.preference.PreferenceGroup.dispatchSaveInstanceState(android.os.Bundle)void
android.preference.PreferenceGroup.dispatchRestoreInstanceState(android.os.Bundle)void
android.preference.PreferenceManager.setPreferenceDataStore(android.preference.PreferenceDataStore)void
android.preference.PreferenceManager.getPreferenceDataStore)android.preference.PreferenceDataStore
android.preference.PreferenceManager.createPreferenceScreen(Context)android.preference.PreferenceScreen
android.preference.PreferenceManager.getSharedPreferencesName)String
android.preference.PreferenceManager.setSharedPreferencesName(String)void
android.preference.PreferenceManager.getSharedPreferencesMode)int
android.preference.PreferenceManager.setSharedPreferencesMode(int)void
android.preference.PreferenceManager.setStorageDefault)void
android.preference.PreferenceManager.setStorageDeviceProtected)void
android.preference.PreferenceManager.isStorageDefault)boolean
android.preference.PreferenceManager.isStorageDeviceProtected)boolean
android.preference.PreferenceManager.getSharedPreferences)SharedPreferences
android.preference.PreferenceManager.getDefaultSharedPreferences(Context)SharedPreferences
android.preference.PreferenceManager.getDefaultSharedPreferencesName(Context)String
android.preference.PreferenceManager.findPreference(CharSequence)android.preference.Preference
android.preference.PreferenceManager.setDefaultValues(Context,int,boolean)void
android.preference.PreferenceManager.setDefaultValues(Context,String,int,int,boolean)void
android.preference.PreferenceScreen.getRootAdapter)ListAdapter
android.preference.PreferenceScreen.onCreateRootAdapter)ListAdapter
android.preference.PreferenceScreen.bind(ListView)void
android.preference.PreferenceScreen.onClick)void
android.preference.PreferenceScreen.onDismiss(android.content.DialogInterface)void
android.preference.PreferenceScreen.getDialog)android.app.Dialog
android.preference.PreferenceScreen.onItemClick(AdapterView,android.view.View,int,long)void
android.preference.PreferenceScreen.isOnSameScreenAsChildren)boolean
android.preference.PreferenceScreen.onSaveInstanceState)android.os.Parcelable
android.preference.PreferenceScreen.onRestoreInstanceState(android.os.Parcelable)void
android.preference.RingtonePreference.getRingtoneType)int
android.preference.RingtonePreference.setRingtoneType(int)void
android.preference.RingtonePreference.getShowDefault)boolean
android.preference.RingtonePreference.setShowDefault(boolean)void
android.preference.RingtonePreference.getShowSilent)boolean
android.preference.RingtonePreference.setShowSilent(boolean)void
android.preference.RingtonePreference.onClick)void
android.preference.RingtonePreference.onPrepareRingtonePickerIntent(android.content.Intent)void
android.preference.RingtonePreference.onSaveRingtone(android.net.Uri)void
android.preference.RingtonePreference.onRestoreRingtone)android.net.Uri
android.preference.RingtonePreference.onGetDefaultValue(android.content.res.TypedArray,int)Object
android.preference.RingtonePreference.onSetInitialValue(boolean,Object)void
android.preference.RingtonePreference.onAttachedToHierarchy(android.preference.PreferenceManager)void
android.preference.RingtonePreference.onActivityResult(int,int,android.content.Intent)boolean
android.preference.SwitchPreference.onBindView(android.view.View)void
android.preference.SwitchPreference.setSwitchTextOn(CharSequence)void
android.preference.SwitchPreference.setSwitchTextOff(CharSequence)void
android.preference.SwitchPreference.setSwitchTextOn(int)void
android.preference.SwitchPreference.setSwitchTextOff(int)void
android.preference.SwitchPreference.getSwitchTextOn)CharSequence
android.preference.SwitchPreference.getSwitchTextOff)CharSequence
android.preference.TwoStatePreference.onClick)void
android.preference.TwoStatePreference.setChecked(boolean)void
android.preference.TwoStatePreference.isChecked)boolean
android.preference.TwoStatePreference.shouldDisableDependents)boolean
android.preference.TwoStatePreference.setSummaryOn(CharSequence)void
android.preference.TwoStatePreference.setSummaryOn(int)void
android.preference.TwoStatePreference.getSummaryOn)CharSequence
android.preference.TwoStatePreference.setSummaryOff(CharSequence)void
android.preference.TwoStatePreference.setSummaryOff(int)void
android.preference.TwoStatePreference.getSummaryOff)CharSequence
android.preference.TwoStatePreference.getDisableDependentsState)boolean
android.preference.TwoStatePreference.setDisableDependentsState(boolean)void
android.preference.TwoStatePreference.onGetDefaultValue(android.content.res.TypedArray,int)Object
android.preference.TwoStatePreference.onSetInitialValue(boolean,Object)void
android.preference.TwoStatePreference.onSaveInstanceState)android.os.Parcelable
android.preference.TwoStatePreference.onRestoreInstanceState(android.os.Parcelable)void
android.print.PageRange.getStart)int
android.print.PageRange.getEnd)int
android.print.PageRange.describeContents)int
android.print.PageRange.writeToParcel(android.os.Parcel,int)void
android.print.PageRange.hashCode)int
android.print.PageRange.equals(Object)boolean
android.print.PageRange.toString)String
android.print.PrintAttributes.getId)String
android.print.PrintAttributes.getLabel)String
android.print.PrintAttributes.getHorizontalDpi)int
android.print.PrintAttributes.getVerticalDpi)int
android.print.PrintAttributes.hashCode)int
android.print.PrintAttributes.equals(Object)boolean
android.print.PrintAttributes.toString)String
android.print.PrintAttributes.getId)String
android.print.PrintAttributes.getLabel(android.content.pm.PackageManager)String
android.print.PrintAttributes.getWidthMils)int
android.print.PrintAttributes.getHeightMils)int
android.print.PrintAttributes.isPortrait)boolean
android.print.PrintAttributes.asPortrait)MediaSize
android.print.PrintAttributes.asLandscape)MediaSize
android.print.PrintAttributes.hashCode)int
android.print.PrintAttributes.equals(Object)boolean
android.print.PrintAttributes.toString)String
android.print.PrintAttributes.getLeftMils)int
android.print.PrintAttributes.getTopMils)int
android.print.PrintAttributes.getRightMils)int
android.print.PrintAttributes.getBottomMils)int
android.print.PrintAttributes.hashCode)int
android.print.PrintAttributes.equals(Object)boolean
android.print.PrintAttributes.toString)String
android.print.PrintAttributes.setMediaSize(MediaSize)Builder
android.print.PrintAttributes.setResolution(Resolution)Builder
android.print.PrintAttributes.setMinMargins(Margins)Builder
android.print.PrintAttributes.setColorMode(int)Builder
android.print.PrintAttributes.setDuplexMode(int)Builder
android.print.PrintAttributes.build)android.print.PrintAttributes
android.print.PrintAttributes.getMediaSize)MediaSize
android.print.PrintAttributes.getResolution)Resolution
android.print.PrintAttributes.getMinMargins)Margins
android.print.PrintAttributes.getColorMode)int
android.print.PrintAttributes.getDuplexMode)int
android.print.PrintAttributes.writeToParcel(android.os.Parcel,int)void
android.print.PrintAttributes.describeContents)int
android.print.PrintAttributes.hashCode)int
android.print.PrintAttributes.equals(Object)boolean
android.print.PrintAttributes.toString)String
android.print.PrintDocumentAdapter.onWriteFinished(android.print.PageRange)void
android.print.PrintDocumentAdapter.onWriteFailed(CharSequence)void
android.print.PrintDocumentAdapter.onWriteCancelled)void
android.print.PrintDocumentAdapter.onLayoutFinished(android.print.PrintDocumentInfo,boolean)void
android.print.PrintDocumentAdapter.onLayoutFailed(CharSequence)void
android.print.PrintDocumentAdapter.onLayoutCancelled)void
android.print.PrintDocumentAdapter.onStart)void
android.print.PrintDocumentAdapter.onFinish)void
android.print.PrintDocumentInfo.setPageCount(int)Builder
android.print.PrintDocumentInfo.setContentType(int)Builder
android.print.PrintDocumentInfo.build)android.print.PrintDocumentInfo
android.print.PrintDocumentInfo.getName)String
android.print.PrintDocumentInfo.getPageCount)int
android.print.PrintDocumentInfo.getContentType)int
android.print.PrintDocumentInfo.getDataSize)long
android.print.PrintDocumentInfo.describeContents)int
android.print.PrintDocumentInfo.writeToParcel(android.os.Parcel,int)void
android.print.PrintDocumentInfo.hashCode)int
android.print.PrintDocumentInfo.equals(Object)boolean
android.print.PrintDocumentInfo.toString)String
android.print.PrinterCapabilitiesInfo.addMediaSize(PrintAttributes.MediaSize,boolean)Builder
android.print.PrinterCapabilitiesInfo.addResolution(PrintAttributes.Resolution,boolean)Builder
android.print.PrinterCapabilitiesInfo.setMinMargins(PrintAttributes.Margins)Builder
android.print.PrinterCapabilitiesInfo.setColorModes(int,int)Builder
android.print.PrinterCapabilitiesInfo.setDuplexModes(int,int)Builder
android.print.PrinterCapabilitiesInfo.build)android.print.PrinterCapabilitiesInfo
android.print.PrinterCapabilitiesInfo.getMediaSizes)java.util.List
android.print.PrinterCapabilitiesInfo.getResolutions)java.util.List
android.print.PrinterCapabilitiesInfo.getColorModes)int
android.print.PrinterCapabilitiesInfo.getDuplexModes)int
android.print.PrinterCapabilitiesInfo.getDefaults)android.print.PrintAttributes
android.print.PrinterCapabilitiesInfo.describeContents)int
android.print.PrinterCapabilitiesInfo.writeToParcel(android.os.Parcel,int)void
android.print.PrinterCapabilitiesInfo.hashCode)int
android.print.PrinterCapabilitiesInfo.equals(Object)boolean
android.print.PrinterCapabilitiesInfo.toString)String
android.print.PrinterId.getLocalId)String
android.print.PrinterId.describeContents)int
android.print.PrinterId.writeToParcel(android.os.Parcel,int)void
android.print.PrinterId.equals(Object)boolean
android.print.PrinterId.hashCode)int
android.print.PrinterId.toString)String
android.print.PrinterInfo.setStatus(int)Builder
android.print.PrinterInfo.setIconResourceId(int)Builder
android.print.PrinterInfo.setHasCustomPrinterIcon(boolean)Builder
android.print.PrinterInfo.setName(String)Builder
android.print.PrinterInfo.setDescription(String)Builder
android.print.PrinterInfo.setInfoIntent(android.app.PendingIntent)Builder
android.print.PrinterInfo.setCapabilities(android.print.PrinterCapabilitiesInfo)Builder
android.print.PrinterInfo.build)android.print.PrinterInfo
android.print.PrinterInfo.getId)android.print.PrinterId
android.print.PrinterInfo.getName)String
android.print.PrinterInfo.getStatus)int
android.print.PrinterInfo.getDescription)String
android.print.PrinterInfo.getCapabilities)android.print.PrinterCapabilitiesInfo
android.print.PrinterInfo.describeContents)int
android.print.PrinterInfo.writeToParcel(android.os.Parcel,int)void
android.print.PrinterInfo.hashCode)int
android.print.PrinterInfo.equals(Object)boolean
android.print.PrinterInfo.toString)String
android.print.PrintJob.getId)android.print.PrintJobId
android.print.PrintJob.getInfo)android.print.PrintJobInfo
android.print.PrintJob.cancel)void
android.print.PrintJob.restart)void
android.print.PrintJob.isQueued)boolean
android.print.PrintJob.isStarted)boolean
android.print.PrintJob.isBlocked)boolean
android.print.PrintJob.isCompleted)boolean
android.print.PrintJob.isFailed)boolean
android.print.PrintJob.isCancelled)boolean
android.print.PrintJob.equals(Object)boolean
android.print.PrintJob.hashCode)int
android.print.PrintJobId.hashCode)int
android.print.PrintJobId.equals(Object)boolean
android.print.PrintJobId.writeToParcel(android.os.Parcel,int)void
android.print.PrintJobId.describeContents)int
android.print.PrintJobInfo.setCopies(int)void
android.print.PrintJobInfo.setAttributes(android.print.PrintAttributes)void
android.print.PrintJobInfo.setPages(android.print.PageRange)void
android.print.PrintJobInfo.putAdvancedOption(String,String)void
android.print.PrintJobInfo.putAdvancedOption(String,int)void
android.print.PrintJobInfo.build)android.print.PrintJobInfo
android.print.PrintJobInfo.getId)android.print.PrintJobId
android.print.PrintJobInfo.getLabel)String
android.print.PrintJobInfo.getPrinterId)android.print.PrinterId
android.print.PrintJobInfo.getState)int
android.print.PrintJobInfo.getCreationTime)long
android.print.PrintJobInfo.getCopies)int
android.print.PrintJobInfo.getAttributes)android.print.PrintAttributes
android.print.PrintJobInfo.hasAdvancedOption(String)boolean
android.print.PrintJobInfo.getAdvancedStringOption(String)String
android.print.PrintJobInfo.getAdvancedIntOption(String)int
android.print.PrintJobInfo.describeContents)int
android.print.PrintJobInfo.writeToParcel(android.os.Parcel,int)void
android.print.PrintJobInfo.toString)String
android.print.PrintManager.getPrintJobs)java.util.List
android.print.PrintManager.print(String,android.print.PrintDocumentAdapter,android.print.PrintAttributes)android.print.PrintJob
android.print.pdf.PrintedPdfDocument.getPageWidth)int
android.print.pdf.PrintedPdfDocument.getPageHeight)int
android.print.pdf.PrintedPdfDocument.getPageContentRect)android.graphics.Rect
android.printservice.CustomPrinterIconCallback.onCustomPrinterIconLoaded(android.graphics.drawable.Icon)boolean
android.printservice.PrintDocument.getInfo)android.print.PrintDocumentInfo
android.printservice.PrintDocument.getData)android.os.ParcelFileDescriptor
android.printservice.PrinterDiscoverySession.getPrinters)java.util.List
android.printservice.PrinterDiscoverySession.addPrinters(java.util.List)void
android.printservice.PrinterDiscoverySession.removePrinters(java.util.List)void
android.printservice.PrinterDiscoverySession.onRequestCustomPrinterIcon(android.print.PrinterId,android.os.CancellationSignal,android.printservice.CustomPrinterIconCallback)void
android.printservice.PrinterDiscoverySession.getTrackedPrinters)java.util.List
android.printservice.PrinterDiscoverySession.isDestroyed)boolean
android.printservice.PrinterDiscoverySession.isPrinterDiscoveryStarted)boolean
android.printservice.PrintJob.getId)android.print.PrintJobId
android.printservice.PrintJob.getInfo)android.print.PrintJobInfo
android.printservice.PrintJob.getDocument)android.printservice.PrintDocument
android.printservice.PrintJob.isQueued)boolean
android.printservice.PrintJob.isStarted)boolean
android.printservice.PrintJob.isBlocked)boolean
android.printservice.PrintJob.isCompleted)boolean
android.printservice.PrintJob.isFailed)boolean
android.printservice.PrintJob.isCancelled)boolean
android.printservice.PrintJob.start)boolean
android.printservice.PrintJob.block(String)boolean
android.printservice.PrintJob.complete)boolean
android.printservice.PrintJob.fail(String)boolean
android.printservice.PrintJob.cancel)boolean
android.printservice.PrintJob.setProgress(float)void
android.printservice.PrintJob.setStatus(CharSequence)void
android.printservice.PrintJob.setStatus(int)void
android.printservice.PrintJob.setTag(String)boolean
android.printservice.PrintJob.getTag)String
android.printservice.PrintJob.getAdvancedStringOption(String)String
android.printservice.PrintJob.hasAdvancedOption(String)boolean
android.printservice.PrintJob.getAdvancedIntOption(String)int
android.printservice.PrintJob.equals(Object)boolean
android.printservice.PrintJob.hashCode)int
android.printservice.PrintService.attachBaseContext(android.content.Context)void
android.printservice.PrintService.onConnected)void
android.printservice.PrintService.onDisconnected)void
android.printservice.PrintService.getActivePrintJobs)java.util.List
android.printservice.PrintService.generatePrinterId(String)android.print.PrinterId
android.printservice.PrintService.onBind(android.content.Intent)android.os.IBinder
android.provider.BlockedNumberContract.isBlocked(android.content.Context,String)boolean
android.provider.BlockedNumberContract.unblock(android.content.Context,String)int
android.provider.BlockedNumberContract.canCurrentUserBlockNumbers(android.content.Context)boolean
android.provider.Browser.sendString(android.content.Context,String)void
android.provider.CalendarContract.query(ContentResolver,long,String)android.database.Cursor
android.provider.CalendarContract.query(ContentResolver,String,long,long)android.database.Cursor
android.provider.CalendarContract.query(ContentResolver,String,long,long,String)android.database.Cursor
android.provider.CalendarContract.newEntityIterator(android.database.Cursor,ContentResolver)EntityIterator
android.provider.CalendarContract.newEntityIterator(android.database.Cursor,ContentProviderClient)EntityIterator
android.provider.CalendarContract.query(ContentResolver,int,int,String)android.database.Cursor
android.provider.CalendarContract.newEntityIterator(android.database.Cursor)EntityIterator
android.provider.CalendarContract.query(ContentResolver,long,String)android.database.Cursor
android.provider.CallLog.getLastOutgoingCall(android.content.Context)String
android.provider.Contacts.getSetting(ContentResolver,String,String)String
android.provider.Contacts.setSetting(ContentResolver,String,String,String)void
android.provider.Contacts.getDisplayLabel(Context,int,CharSequence,CharSequence)CharSequence
android.provider.Contacts.getDisplayLabel(Context,int,CharSequence)CharSequence
android.provider.Contacts.markAsContacted(ContentResolver,long)void
android.provider.Contacts.addToMyContactsGroup(ContentResolver,long)android.net.Uri
android.provider.Contacts.addToGroup(ContentResolver,long,String)android.net.Uri
android.provider.Contacts.addToGroup(ContentResolver,long,long)android.net.Uri
android.provider.Contacts.createPersonInMyContactsGroup(ContentResolver,ContentValues)android.net.Uri
android.provider.Contacts.queryGroups(ContentResolver,long)android.database.Cursor
android.provider.Contacts.setPhotoData(ContentResolver,android.net.Uri,byte)void
android.provider.Contacts.openContactPhotoInputStream(ContentResolver,android.net.Uri)java.io.InputStream
android.provider.Contacts.loadContactPhoto(Context,android.net.Uri,int,android.graphics.BitmapFactory.Options)android.graphics.Bitmap
android.provider.Contacts.getDisplayLabel(Context,int,CharSequence)CharSequence
android.provider.Contacts.encodePredefinedImProtocol(int)String
android.provider.Contacts.encodeCustomImProtocol(String)String
android.provider.Contacts.decodeImProtocol(String)Object
android.provider.Contacts.getDisplayLabel(Context,int,int,CharSequence)CharSequence
android.provider.Contacts.addPostalLocation(Context,long,double,double)void
android.provider.ContactsContract.getWithUri(ContentProviderClient,android.accounts.Account)android.util.Pair
android.provider.ContactsContract.set(ContentProviderClient,android.accounts.Account,byte)void
android.provider.ContactsContract.newSetOperation(android.accounts.Account,byte)ContentProviderOperation
android.provider.ContactsContract.getPresenceIconResourceId(int)int
android.provider.ContactsContract.getPresencePrecedence(int)int
android.provider.ContactsContract.getContactLookupUri(ContentResolver,android.net.Uri)android.net.Uri
android.provider.ContactsContract.newEntityIterator(android.database.Cursor)EntityIterator
android.provider.ContactsContract.showQuickContact(Context,android.view.View,android.net.Uri,int,String)void
android.provider.ContactsContract.showQuickContact(Context,android.graphics.Rect,android.net.Uri,int,String)void
android.provider.ContactsContract.showQuickContact(Context,android.view.View,android.net.Uri,String,String)void
android.provider.ContactsContract.showQuickContact(Context,android.graphics.Rect,android.net.Uri,String,String)void
android.provider.ContactsContract.getWithUri(ContentProviderClient,android.accounts.Account)android.util.Pair
android.provider.ContactsContract.set(ContentProviderClient,android.accounts.Account,byte)void
android.provider.ContactsContract.newSetOperation(android.accounts.Account,byte)ContentProviderOperation
android.provider.ContactsContract.undemote(ContentResolver,long)void
android.provider.ContactsContract.pin(ContentResolver,long,int)void
android.provider.ContactsContract.newEntityIterator(android.database.Cursor)EntityIterator
android.provider.ContactsContract.isRemoteDirectoryId(long)boolean
android.provider.ContactsContract.isEnterpriseDirectoryId(long)boolean
android.provider.ContactsContract.notifyDirectoryChange(ContentResolver)void
android.provider.ContactsContract.getContactLookupUri(ContentResolver,android.net.Uri)android.net.Uri
android.provider.ContactsContract.setContactId(long)Builder
android.provider.ContactsContract.addNameParameter(String)Builder
android.provider.ContactsContract.setLimit(int)Builder
android.provider.ContactsContract.build)android.net.Uri
android.provider.ContactsContract.getLookupUri(ContentResolver,android.net.Uri)android.net.Uri
android.provider.ContactsContract.getLookupUri(long,String)android.net.Uri
android.provider.ContactsContract.lookupContact(ContentResolver,android.net.Uri)android.net.Uri
android.provider.ContactsContract.markAsContacted(ContentResolver,long)void
android.provider.ContactsContract.isEnterpriseContactId(long)boolean
android.provider.ContactsContract.openContactPhotoInputStream(ContentResolver,android.net.Uri,boolean)java.io.InputStream
android.provider.ContactsContract.openContactPhotoInputStream(ContentResolver,android.net.Uri)java.io.InputStream
android.provider.ContactsContract.getTypeLabelResource(int)int
android.provider.ContactsContract.getTypeLabel(android.content.res.Resources,int,CharSequence)CharSequence
android.provider.ContactsContract.getTypeLabelResource(int)int
android.provider.ContactsContract.getTypeLabel(android.content.res.Resources,int,CharSequence)CharSequence
android.provider.ContactsContract.getTypeLabelResource(int)int
android.provider.ContactsContract.getTypeLabel(android.content.res.Resources,int,CharSequence)CharSequence
android.provider.ContactsContract.getTypeLabelResource(int)int
android.provider.ContactsContract.getTypeLabel(android.content.res.Resources,int,CharSequence)CharSequence
android.provider.ContactsContract.getTypeLabelResource(int)int
android.provider.ContactsContract.getTypeLabel(android.content.res.Resources,int,CharSequence)CharSequence
android.provider.ContactsContract.getTypeLabelResource(int)int
android.provider.ContactsContract.getTypeLabel(android.content.res.Resources,int,CharSequence)CharSequence
android.provider.ContactsContract.getProtocolLabelResource(int)int
android.provider.ContactsContract.getProtocolLabel(android.content.res.Resources,int,CharSequence)CharSequence
android.provider.ContactsContract.getTypeResource(Integer)int
android.provider.ContactsContract.getTypeLabel(android.content.res.Resources,int,CharSequence)CharSequence
android.provider.ContactsContract.getTypeLabelResource(int)int
android.provider.ContactsContract.getTypeLabel(android.content.res.Resources,int,CharSequence)CharSequence
android.provider.ContactsContract.isProfileId(long)boolean
android.provider.DocumentsContract.getRootId)String
android.provider.DocumentsContract.getPath)java.util.List
android.provider.DocumentsContract.equals(Object)boolean
android.provider.DocumentsContract.hashCode)int
android.provider.DocumentsContract.toString)String
android.provider.DocumentsContract.writeToParcel(Parcel,int)void
android.provider.DocumentsContract.describeContents)int
android.provider.DocumentsContract.buildRootsUri(String)android.net.Uri
android.provider.DocumentsContract.buildRootUri(String,String)android.net.Uri
android.provider.DocumentsContract.buildRecentDocumentsUri(String,String)android.net.Uri
android.provider.DocumentsContract.buildTreeDocumentUri(String,String)android.net.Uri
android.provider.DocumentsContract.buildDocumentUri(String,String)android.net.Uri
android.provider.DocumentsContract.buildDocumentUriUsingTree(android.net.Uri,String)android.net.Uri
android.provider.DocumentsContract.buildChildDocumentsUri(String,String)android.net.Uri
android.provider.DocumentsContract.buildChildDocumentsUriUsingTree(android.net.Uri,String)android.net.Uri
android.provider.DocumentsContract.buildSearchDocumentsUri(String,String,String)android.net.Uri
android.provider.DocumentsContract.isDocumentUri(Context,android.net.Uri)boolean
android.provider.DocumentsContract.isRootsUri(Context,android.net.Uri)boolean
android.provider.DocumentsContract.isRootUri(Context,android.net.Uri)boolean
android.provider.DocumentsContract.isTreeUri(android.net.Uri)boolean
android.provider.DocumentsContract.getRootId(android.net.Uri)String
android.provider.DocumentsContract.getDocumentId(android.net.Uri)String
android.provider.DocumentsContract.getTreeDocumentId(android.net.Uri)String
android.provider.DocumentsContract.getSearchDocumentsQuery(android.net.Uri)String
android.provider.DocumentsContract.getDocumentThumbnail(ContentResolver,android.net.Uri,android.graphics.Point,CancellationSignal)android.graphics.Bitmap
android.provider.DocumentsContract.createDocument(ContentResolver,android.net.Uri,String,String)android.net.Uri
android.provider.DocumentsContract.isChildDocument(ContentResolver,android.net.Uri,android.net.Uri)boolean
android.provider.DocumentsContract.renameDocument(ContentResolver,android.net.Uri,String)android.net.Uri
android.provider.DocumentsContract.deleteDocument(ContentResolver,android.net.Uri)boolean
android.provider.DocumentsContract.copyDocument(ContentResolver,android.net.Uri,android.net.Uri)android.net.Uri
android.provider.DocumentsContract.moveDocument(ContentResolver,android.net.Uri,android.net.Uri,android.net.Uri)android.net.Uri
android.provider.DocumentsContract.removeDocument(ContentResolver,android.net.Uri,android.net.Uri)boolean
android.provider.DocumentsContract.ejectRoot(ContentResolver,android.net.Uri)void
android.provider.DocumentsContract.getDocumentMetadata(ContentResolver,android.net.Uri)Bundle
android.provider.DocumentsContract.findDocumentPath(ContentResolver,android.net.Uri)Path
android.provider.DocumentsContract.createWebLinkIntent(ContentResolver,android.net.Uri,Bundle)IntentSender
android.provider.DocumentsProvider.attachInfo(Context,android.content.pm.ProviderInfo)void
android.provider.DocumentsProvider.isChildDocument(String,String)boolean
android.provider.DocumentsProvider.createDocument(String,String,String)String
android.provider.DocumentsProvider.renameDocument(String,String)String
android.provider.DocumentsProvider.deleteDocument(String)void
android.provider.DocumentsProvider.copyDocument(String,String)String
android.provider.DocumentsProvider.moveDocument(String,String,String)String
android.provider.DocumentsProvider.removeDocument(String,String)void
android.provider.DocumentsProvider.createWebLinkIntent(String,Bundle)IntentSender
android.provider.DocumentsProvider.queryRoots(String)android.database.Cursor
android.provider.DocumentsProvider.queryRecentDocuments(String,String)android.database.Cursor
android.provider.DocumentsProvider.queryRecentDocuments(String,String,Bundle,CancellationSignal)android.database.Cursor
android.provider.DocumentsProvider.queryDocument(String,String)android.database.Cursor
android.provider.DocumentsProvider.queryChildDocuments(String,String,String)android.database.Cursor
android.provider.DocumentsProvider.queryChildDocuments(String,String,Bundle)android.database.Cursor
android.provider.DocumentsProvider.querySearchDocuments(String,String,String)android.database.Cursor
android.provider.DocumentsProvider.querySearchDocuments(String,String,Bundle)android.database.Cursor
android.provider.DocumentsProvider.ejectRoot(String)void
android.provider.DocumentsProvider.getDocumentMetadata(String)Bundle
android.provider.DocumentsProvider.getDocumentType(String)String
android.provider.DocumentsProvider.openDocument(String,String,CancellationSignal)ParcelFileDescriptor
android.provider.DocumentsProvider.openDocumentThumbnail(String,android.graphics.Point,CancellationSignal)android.content.res.AssetFileDescriptor
android.provider.DocumentsProvider.openTypedDocument(String,String,Bundle,CancellationSignal)android.content.res.AssetFileDescriptor
android.provider.DocumentsProvider.query(android.net.Uri,String,String,String,String)android.database.Cursor
android.provider.DocumentsProvider.query(android.net.Uri,String,String,String,String,CancellationSignal)android.database.Cursor
android.provider.DocumentsProvider.query(android.net.Uri,String,Bundle,CancellationSignal)android.database.Cursor
android.provider.DocumentsProvider.getType(android.net.Uri)String
android.provider.DocumentsProvider.canonicalize(android.net.Uri)android.net.Uri
android.provider.DocumentsProvider.insert(android.net.Uri,ContentValues)android.net.Uri
android.provider.DocumentsProvider.delete(android.net.Uri,String,String)int
android.provider.DocumentsProvider.update(android.net.Uri,ContentValues,String,String)int
android.provider.DocumentsProvider.call(String,String,Bundle)Bundle
android.provider.DocumentsProvider.revokeDocumentPermission(String)void
android.provider.DocumentsProvider.openFile(android.net.Uri,String)ParcelFileDescriptor
android.provider.DocumentsProvider.openFile(android.net.Uri,String,CancellationSignal)ParcelFileDescriptor
android.provider.DocumentsProvider.openAssetFile(android.net.Uri,String)android.content.res.AssetFileDescriptor
android.provider.DocumentsProvider.openAssetFile(android.net.Uri,String,CancellationSignal)android.content.res.AssetFileDescriptor
android.provider.DocumentsProvider.openTypedAssetFile(android.net.Uri,String,Bundle)android.content.res.AssetFileDescriptor
android.provider.DocumentsProvider.openTypedAssetFile(android.net.Uri,String,Bundle,CancellationSignal)android.content.res.AssetFileDescriptor
android.provider.FontRequest.getProviderAuthority)String
android.provider.FontRequest.getProviderPackage)String
android.provider.FontRequest.getQuery)String
android.provider.FontRequest.getCertificates)java.util.List
android.provider.FontRequest.toString)String
android.provider.FontsContract.onTypefaceRetrieved(android.graphics.Typeface)void
android.provider.FontsContract.onTypefaceRequestFailed(int)void
android.provider.FontsContract.getUri)android.net.Uri
android.provider.FontsContract.getTtcIndex)int
android.provider.FontsContract.getWeight)int
android.provider.FontsContract.isItalic)boolean
android.provider.FontsContract.getResultCode)int
android.provider.FontsContract.getStatusCode)int
android.provider.FontsContract.requestFonts(android.content.Context,android.provider.FontRequest,android.os.Handler,android.os.CancellationSignal,android.provider.FontsContract.FontRequestCallback)void
android.provider.FontsContract.fetchFonts(android.content.Context,android.os.CancellationSignal,android.provider.FontRequest)android.provider.FontsContract.FontFamilyResult
android.provider.FontsContract.buildTypeface(android.content.Context,android.os.CancellationSignal,android.provider.FontsContract.FontInfo)android.graphics.Typeface
android.provider.MediaStore.cancelThumbnailRequest(android.content.ContentResolver,long)void
android.provider.MediaStore.getThumbnail(android.content.ContentResolver,long,int,android.graphics.BitmapFactory.Options)android.graphics.Bitmap
android.provider.MediaStore.cancelThumbnailRequest(android.content.ContentResolver,long,long)void
android.provider.MediaStore.getThumbnail(android.content.ContentResolver,long,long,int,android.graphics.BitmapFactory.Options)android.graphics.Bitmap
android.provider.MediaStore.getContentUri(String)android.net.Uri
android.provider.MediaStore.getContentUri(String)android.net.Uri
android.provider.MediaStore.query(android.content.ContentResolver,android.net.Uri,String)android.database.Cursor
android.provider.MediaStore.query(android.content.ContentResolver,android.net.Uri,String)android.database.Cursor
android.provider.MediaStore.queryMiniThumbnails(android.content.ContentResolver,android.net.Uri,int,String)android.database.Cursor
android.provider.MediaStore.queryMiniThumbnail(android.content.ContentResolver,long,int,String)android.database.Cursor
android.provider.MediaStore.cancelThumbnailRequest(android.content.ContentResolver,long)void
android.provider.MediaStore.getThumbnail(android.content.ContentResolver,long,int,android.graphics.BitmapFactory.Options)android.graphics.Bitmap
android.provider.MediaStore.cancelThumbnailRequest(android.content.ContentResolver,long,long)void
android.provider.MediaStore.getThumbnail(android.content.ContentResolver,long,long,int,android.graphics.BitmapFactory.Options)android.graphics.Bitmap
android.provider.MediaStore.getContentUri(String)android.net.Uri
android.provider.MediaStore.query(android.content.ContentResolver,android.net.Uri,String)android.database.Cursor
android.provider.MediaStore.query(android.content.ContentResolver,android.net.Uri,String,String,String)android.database.Cursor
android.provider.MediaStore.query(android.content.ContentResolver,android.net.Uri,String,String,String,String)android.database.Cursor
android.provider.MediaStore.getBitmap(android.content.ContentResolver,android.net.Uri)android.graphics.Bitmap
android.provider.MediaStore.insertImage(android.content.ContentResolver,String,String,String)String
android.provider.MediaStore.insertImage(android.content.ContentResolver,android.graphics.Bitmap,String,String)String
android.provider.MediaStore.getContentUri(String)android.net.Uri
android.provider.MediaStore.getContentUri(String)android.net.Uri
android.provider.MediaStore.getContentUri(String,long)android.net.Uri
android.provider.MediaStore.getContentUri(String)android.net.Uri
android.provider.MediaStore.getContentUri(String,long)android.net.Uri
android.provider.MediaStore.moveItem(android.content.ContentResolver,long,int,int)boolean
android.provider.MediaStore.getContentUri(String)android.net.Uri
android.provider.MediaStore.getContentUri(String)android.net.Uri
android.provider.MediaStore.getContentUriForPath(String)android.net.Uri
android.provider.MediaStore.getContentUri(String,long)android.net.Uri
android.provider.MediaStore.getContentUri(String)android.net.Uri
android.provider.MediaStore.getContentUriForAudioId(String,int)android.net.Uri
android.provider.MediaStore.getContentUri(String,long)android.net.Uri
android.provider.MediaStore.getContentUri(String)android.net.Uri
android.provider.MediaStore.getContentUri(String)android.net.Uri
android.provider.MediaStore.keyFor(String)String
android.provider.MediaStore.setIncludePending(android.net.Uri)android.net.Uri
android.provider.MediaStore.setRequireOriginal(android.net.Uri)android.net.Uri
android.provider.MediaStore.getExternalVolumeNames(android.content.Context)java.util.Set
android.provider.MediaStore.getVolumeName(android.net.Uri)String
android.provider.MediaStore.getMediaScannerUri)android.net.Uri
android.provider.MediaStore.getVersion(android.content.Context)String
android.provider.MediaStore.getVersion(android.content.Context,String)String
android.provider.MediaStore.getDocumentUri(android.content.Context,android.net.Uri)android.net.Uri
android.provider.MediaStore.getMediaUri(android.content.Context,android.net.Uri)android.net.Uri
android.provider.SearchRecentSuggestions.saveRecentQuery(String,String)void
android.provider.SearchRecentSuggestions.clearHistory)void
android.provider.SearchRecentSuggestions.truncateHistory(android.content.ContentResolver,int)void
android.provider.Settings.getString(android.content.ContentResolver,String)String
android.provider.Settings.putString(android.content.ContentResolver,String,String)boolean
android.provider.Settings.getUriFor(String)android.net.Uri
android.provider.Settings.getInt(android.content.ContentResolver,String,int)int
android.provider.Settings.getInt(android.content.ContentResolver,String)int
android.provider.Settings.putInt(android.content.ContentResolver,String,int)boolean
android.provider.Settings.getLong(android.content.ContentResolver,String,long)long
android.provider.Settings.getLong(android.content.ContentResolver,String)long
android.provider.Settings.putLong(android.content.ContentResolver,String,long)boolean
android.provider.Settings.getFloat(android.content.ContentResolver,String,float)float
android.provider.Settings.getFloat(android.content.ContentResolver,String)float
android.provider.Settings.putFloat(android.content.ContentResolver,String,float)boolean
android.provider.Settings.getConfiguration(android.content.ContentResolver,android.content.res.Configuration)void
android.provider.Settings.putConfiguration(android.content.ContentResolver,android.content.res.Configuration)boolean
android.provider.Settings.getShowGTalkServiceStatus(android.content.ContentResolver)boolean
android.provider.Settings.setShowGTalkServiceStatus(android.content.ContentResolver,boolean)void
android.provider.Settings.canWrite(android.content.Context)boolean
android.provider.Settings.getString(android.content.ContentResolver,String)String
android.provider.Settings.putString(android.content.ContentResolver,String,String)boolean
android.provider.Settings.getUriFor(String)android.net.Uri
android.provider.Settings.getInt(android.content.ContentResolver,String,int)int
android.provider.Settings.getInt(android.content.ContentResolver,String)int
android.provider.Settings.putInt(android.content.ContentResolver,String,int)boolean
android.provider.Settings.getLong(android.content.ContentResolver,String,long)long
android.provider.Settings.getLong(android.content.ContentResolver,String)long
android.provider.Settings.putLong(android.content.ContentResolver,String,long)boolean
android.provider.Settings.getFloat(android.content.ContentResolver,String,float)float
android.provider.Settings.getFloat(android.content.ContentResolver,String)float
android.provider.Settings.putFloat(android.content.ContentResolver,String,float)boolean
android.provider.Settings.isLocationProviderEnabled(android.content.ContentResolver,String)boolean
android.provider.Settings.setLocationProviderEnabled(android.content.ContentResolver,String,boolean)void
android.provider.Settings.putString(android.content.ContentResolver,android.net.Uri,String,String)boolean
android.provider.Settings.getUriFor(android.net.Uri,String)android.net.Uri
android.provider.Settings.getString(android.content.ContentResolver,String)String
android.provider.Settings.putString(android.content.ContentResolver,String,String)boolean
android.provider.Settings.getUriFor(String)android.net.Uri
android.provider.Settings.getInt(android.content.ContentResolver,String,int)int
android.provider.Settings.getInt(android.content.ContentResolver,String)int
android.provider.Settings.putInt(android.content.ContentResolver,String,int)boolean
android.provider.Settings.getLong(android.content.ContentResolver,String,long)long
android.provider.Settings.getLong(android.content.ContentResolver,String)long
android.provider.Settings.putLong(android.content.ContentResolver,String,long)boolean
android.provider.Settings.getFloat(android.content.ContentResolver,String,float)float
android.provider.Settings.getFloat(android.content.ContentResolver,String)float
android.provider.Settings.putFloat(android.content.ContentResolver,String,float)boolean
android.provider.Settings.canDrawOverlays(android.content.Context)boolean
android.provider.SyncStateContract.set(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account,byte)void
android.provider.SyncStateContract.insert(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account,byte)android.net.Uri
android.provider.SyncStateContract.update(android.content.ContentProviderClient,android.net.Uri,byte)void
android.provider.SyncStateContract.getWithUri(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account)android.util.Pair
android.provider.SyncStateContract.newSetOperation(android.net.Uri,android.accounts.Account,byte)android.content.ContentProviderOperation
android.provider.SyncStateContract.newUpdateOperation(android.net.Uri,byte)android.content.ContentProviderOperation
android.provider.Telephony.getOrCreateThreadId(android.content.Context,String)long
android.provider.Telephony.getOrCreateThreadId(android.content.Context,java.util.Set)long
android.provider.Telephony.getDefaultSmsPackage(android.content.Context)String
android.provider.Telephony.getUriForSubscriptionIdAndField(int,String)android.net.Uri
android.provider.Telephony.getUriForSubscriptionId(int)android.net.Uri
android.provider.Telephony.getUriForSubscriptionId(int)android.net.Uri
android.provider.Telephony.getSpecificCarrierIdUriForSubscriptionId(int)android.net.Uri
android.provider.UserDictionary.addWord(android.content.Context,String,int,int)void
android.provider.UserDictionary.addWord(android.content.Context,String,int,String,java.util.Locale)void
android.provider.VoicemailContract.buildSourceUri(String)android.net.Uri
android.provider.VoicemailContract.buildSourceUri(String)android.net.Uri
android.renderscript.Allocation.valueOf(String)MipmapControl
android.renderscript.Allocation.getElement)android.renderscript.Element
android.renderscript.Allocation.getUsage)int
android.renderscript.Allocation.setAutoPadding(boolean)void
android.renderscript.Allocation.getBytesSize)int
android.renderscript.Allocation.finalize)void
android.renderscript.Allocation.getType)android.renderscript.Type
android.renderscript.Allocation.syncAll(int)void
android.renderscript.Allocation.ioSend)void
android.renderscript.Allocation.ioReceive)void
android.renderscript.Allocation.copyFrom(android.renderscript.BaseObj)void
android.renderscript.Allocation.copyFromUnchecked(Object)void
android.renderscript.Allocation.copyFromUnchecked(int)void
android.renderscript.Allocation.copyFromUnchecked(short)void
android.renderscript.Allocation.copyFromUnchecked(byte)void
android.renderscript.Allocation.copyFromUnchecked(float)void
android.renderscript.Allocation.copyFrom(Object)void
android.renderscript.Allocation.copyFrom(int)void
android.renderscript.Allocation.copyFrom(short)void
android.renderscript.Allocation.copyFrom(byte)void
android.renderscript.Allocation.copyFrom(float)void
android.renderscript.Allocation.copyFrom(android.graphics.Bitmap)void
android.renderscript.Allocation.copyFrom(android.renderscript.Allocation)void
android.renderscript.Allocation.setFromFieldPacker(int,android.renderscript.FieldPacker)void
android.renderscript.Allocation.setFromFieldPacker(int,int,android.renderscript.FieldPacker)void
android.renderscript.Allocation.setFromFieldPacker(int,int,int,int,android.renderscript.FieldPacker)void
android.renderscript.Allocation.generateMipmaps)void
android.renderscript.Allocation.copy1DRangeFromUnchecked(int,int,Object)void
android.renderscript.Allocation.copy1DRangeFromUnchecked(int,int,int)void
android.renderscript.Allocation.copy1DRangeFromUnchecked(int,int,short)void
android.renderscript.Allocation.copy1DRangeFromUnchecked(int,int,byte)void
android.renderscript.Allocation.copy1DRangeFromUnchecked(int,int,float)void
android.renderscript.Allocation.copy1DRangeFrom(int,int,Object)void
android.renderscript.Allocation.copy1DRangeFrom(int,int,int)void
android.renderscript.Allocation.copy1DRangeFrom(int,int,short)void
android.renderscript.Allocation.copy1DRangeFrom(int,int,byte)void
android.renderscript.Allocation.copy1DRangeFrom(int,int,float)void
android.renderscript.Allocation.copy1DRangeFrom(int,int,android.renderscript.Allocation,int)void
android.renderscript.Allocation.copy2DRangeFrom(int,int,int,int,Object)void
android.renderscript.Allocation.copy2DRangeFrom(int,int,int,int,byte)void
android.renderscript.Allocation.copy2DRangeFrom(int,int,int,int,short)void
android.renderscript.Allocation.copy2DRangeFrom(int,int,int,int,int)void
android.renderscript.Allocation.copy2DRangeFrom(int,int,int,int,float)void
android.renderscript.Allocation.copy2DRangeFrom(int,int,int,int,android.renderscript.Allocation,int,int)void
android.renderscript.Allocation.copy2DRangeFrom(int,int,android.graphics.Bitmap)void
android.renderscript.Allocation.copy3DRangeFrom(int,int,int,int,int,int,Object)void
android.renderscript.Allocation.copyTo(android.graphics.Bitmap)void
android.renderscript.Allocation.copyTo(Object)void
android.renderscript.Allocation.copyTo(byte)void
android.renderscript.Allocation.copyTo(short)void
android.renderscript.Allocation.copyTo(int)void
android.renderscript.Allocation.copyTo(float)void
android.renderscript.Allocation.copy1DRangeToUnchecked(int,int,Object)void
android.renderscript.Allocation.copy1DRangeToUnchecked(int,int,int)void
android.renderscript.Allocation.copy1DRangeToUnchecked(int,int,short)void
android.renderscript.Allocation.copy1DRangeToUnchecked(int,int,byte)void
android.renderscript.Allocation.copy1DRangeToUnchecked(int,int,float)void
android.renderscript.Allocation.copy1DRangeTo(int,int,Object)void
android.renderscript.Allocation.copy1DRangeTo(int,int,int)void
android.renderscript.Allocation.copy1DRangeTo(int,int,short)void
android.renderscript.Allocation.copy1DRangeTo(int,int,byte)void
android.renderscript.Allocation.copy1DRangeTo(int,int,float)void
android.renderscript.Allocation.copy2DRangeTo(int,int,int,int,Object)void
android.renderscript.Allocation.copy2DRangeTo(int,int,int,int,byte)void
android.renderscript.Allocation.copy2DRangeTo(int,int,int,int,short)void
android.renderscript.Allocation.copy2DRangeTo(int,int,int,int,int)void
android.renderscript.Allocation.copy2DRangeTo(int,int,int,int,float)void
android.renderscript.Allocation.copy3DRangeTo(int,int,int,int,int,int,Object)void
android.renderscript.Allocation.createTyped(android.renderscript.RenderScript,android.renderscript.Type,MipmapControl,int)android.renderscript.Allocation
android.renderscript.Allocation.createTyped(android.renderscript.RenderScript,android.renderscript.Type,int)android.renderscript.Allocation
android.renderscript.Allocation.createTyped(android.renderscript.RenderScript,android.renderscript.Type)android.renderscript.Allocation
android.renderscript.Allocation.createSized(android.renderscript.RenderScript,android.renderscript.Element,int,int)android.renderscript.Allocation
android.renderscript.Allocation.createSized(android.renderscript.RenderScript,android.renderscript.Element,int)android.renderscript.Allocation
android.renderscript.Allocation.createFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap,MipmapControl,int)android.renderscript.Allocation
android.renderscript.Allocation.getByteBuffer)java.nio.ByteBuffer
android.renderscript.Allocation.getStride)long
android.renderscript.Allocation.getTimeStamp)long
android.renderscript.Allocation.getSurface)android.view.Surface
android.renderscript.Allocation.setSurface(android.view.Surface)void
android.renderscript.Allocation.createFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap)android.renderscript.Allocation
android.renderscript.Allocation.createCubemapFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap,MipmapControl,int)android.renderscript.Allocation
android.renderscript.Allocation.createCubemapFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap)android.renderscript.Allocation
android.renderscript.Allocation.createCubemapFromCubeFaces(android.renderscript.RenderScript,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap)android.renderscript.Allocation
android.renderscript.Allocation.createFromBitmapResource(android.renderscript.RenderScript,android.content.res.Resources,int,MipmapControl,int)android.renderscript.Allocation
android.renderscript.Allocation.createFromBitmapResource(android.renderscript.RenderScript,android.content.res.Resources,int)android.renderscript.Allocation
android.renderscript.Allocation.createFromString(android.renderscript.RenderScript,String,int)android.renderscript.Allocation
android.renderscript.Allocation.setOnBufferAvailableListener(android.renderscript.Allocation.OnBufferAvailableListener)void
android.renderscript.Allocation.destroy)void
android.renderscript.AllocationAdapter.setLOD(int)void
android.renderscript.AllocationAdapter.setFace(Type.CubemapFace)void
android.renderscript.AllocationAdapter.setX(int)void
android.renderscript.AllocationAdapter.setY(int)void
android.renderscript.AllocationAdapter.setZ(int)void
android.renderscript.AllocationAdapter.create1D(android.renderscript.RenderScript,android.renderscript.Allocation)android.renderscript.AllocationAdapter
android.renderscript.AllocationAdapter.create2D(android.renderscript.RenderScript,android.renderscript.Allocation)android.renderscript.AllocationAdapter
android.renderscript.AllocationAdapter.createTyped(android.renderscript.RenderScript,android.renderscript.Allocation,android.renderscript.Type)android.renderscript.AllocationAdapter
android.renderscript.BaseObj.setName(String)void
android.renderscript.BaseObj.getName)String
android.renderscript.BaseObj.finalize)void
android.renderscript.BaseObj.destroy)void
android.renderscript.BaseObj.hashCode)int
android.renderscript.BaseObj.equals(Object)boolean
android.renderscript.Element.valueOf(String)DataType
android.renderscript.Element.valueOf(String)DataKind
android.renderscript.Element.add(android.renderscript.Element,String,int)android.renderscript.Element.Builder
android.renderscript.Element.add(android.renderscript.Element,String)android.renderscript.Element.Builder
android.renderscript.Element.create)android.renderscript.Element
android.renderscript.Element.getBytesSize)int
android.renderscript.Element.getVectorSize)int
android.renderscript.Element.isComplex)boolean
android.renderscript.Element.getSubElementCount)int
android.renderscript.Element.getSubElement(int)android.renderscript.Element
android.renderscript.Element.getSubElementName(int)String
android.renderscript.Element.getSubElementArraySize(int)int
android.renderscript.Element.getSubElementOffsetBytes(int)int
android.renderscript.Element.getDataType)DataType
android.renderscript.Element.getDataKind)DataKind
android.renderscript.Element.BOOLEAN(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.U8(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.I8(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.U16(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.I16(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.U32(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.I32(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.U64(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.I64(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.F16(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.F32(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.F64(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.ELEMENT(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.TYPE(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.ALLOCATION(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.SAMPLER(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.SCRIPT(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.MESH(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.PROGRAM_FRAGMENT(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.PROGRAM_VERTEX(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.PROGRAM_RASTER(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.PROGRAM_STORE(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.FONT(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.A_8(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.RGB_565(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.RGB_888(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.RGBA_5551(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.RGBA_4444(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.RGBA_8888(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.F16_2(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.F16_3(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.F16_4(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.F32_2(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.F32_3(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.F32_4(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.F64_2(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.F64_3(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.F64_4(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.U8_2(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.U8_3(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.U8_4(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.I8_2(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.I8_3(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.I8_4(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.U16_2(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.U16_3(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.U16_4(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.I16_2(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.I16_3(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.I16_4(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.U32_2(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.U32_3(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.U32_4(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.I32_2(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.I32_3(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.I32_4(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.U64_2(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.U64_3(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.U64_4(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.I64_2(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.I64_3(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.I64_4(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.YUV(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.MATRIX_4X4(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.MATRIX4X4(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.MATRIX_3X3(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.MATRIX_2X2(android.renderscript.RenderScript)android.renderscript.Element
android.renderscript.Element.createVector(android.renderscript.RenderScript,DataType,int)android.renderscript.Element
android.renderscript.Element.createPixel(android.renderscript.RenderScript,DataType,DataKind)android.renderscript.Element
android.renderscript.Element.isCompatible(android.renderscript.Element)boolean
android.renderscript.FieldPacker.align(int)void
android.renderscript.FieldPacker.subalign(int)void
android.renderscript.FieldPacker.reset)void
android.renderscript.FieldPacker.reset(int)void
android.renderscript.FieldPacker.skip(int)void
android.renderscript.FieldPacker.addI8(byte)void
android.renderscript.FieldPacker.subI8)byte
android.renderscript.FieldPacker.addI16(short)void
android.renderscript.FieldPacker.subI16)short
android.renderscript.FieldPacker.addI32(int)void
android.renderscript.FieldPacker.subI32)int
android.renderscript.FieldPacker.addI64(long)void
android.renderscript.FieldPacker.subI64)long
android.renderscript.FieldPacker.addU8(short)void
android.renderscript.FieldPacker.addU16(int)void
android.renderscript.FieldPacker.addU32(long)void
android.renderscript.FieldPacker.addU64(long)void
android.renderscript.FieldPacker.addF32(float)void
android.renderscript.FieldPacker.subF32)float
android.renderscript.FieldPacker.addF64(double)void
android.renderscript.FieldPacker.subF64)double
android.renderscript.FieldPacker.addObj(android.renderscript.BaseObj)void
android.renderscript.FieldPacker.addF32(android.renderscript.Float2)void
android.renderscript.FieldPacker.addF32(android.renderscript.Float3)void
android.renderscript.FieldPacker.addF32(android.renderscript.Float4)void
android.renderscript.FieldPacker.addF64(android.renderscript.Double2)void
android.renderscript.FieldPacker.addF64(android.renderscript.Double3)void
android.renderscript.FieldPacker.addF64(android.renderscript.Double4)void
android.renderscript.FieldPacker.addI8(android.renderscript.Byte2)void
android.renderscript.FieldPacker.addI8(android.renderscript.Byte3)void
android.renderscript.FieldPacker.addI8(android.renderscript.Byte4)void
android.renderscript.FieldPacker.addU8(android.renderscript.Short2)void
android.renderscript.FieldPacker.addU8(android.renderscript.Short3)void
android.renderscript.FieldPacker.addU8(android.renderscript.Short4)void
android.renderscript.FieldPacker.addI16(android.renderscript.Short2)void
android.renderscript.FieldPacker.addI16(android.renderscript.Short3)void
android.renderscript.FieldPacker.addI16(android.renderscript.Short4)void
android.renderscript.FieldPacker.addU16(android.renderscript.Int2)void
android.renderscript.FieldPacker.addU16(android.renderscript.Int3)void
android.renderscript.FieldPacker.addU16(android.renderscript.Int4)void
android.renderscript.FieldPacker.addI32(android.renderscript.Int2)void
android.renderscript.FieldPacker.addI32(android.renderscript.Int3)void
android.renderscript.FieldPacker.addI32(android.renderscript.Int4)void
android.renderscript.FieldPacker.addU32(android.renderscript.Long2)void
android.renderscript.FieldPacker.addU32(android.renderscript.Long3)void
android.renderscript.FieldPacker.addU32(android.renderscript.Long4)void
android.renderscript.FieldPacker.addI64(android.renderscript.Long2)void
android.renderscript.FieldPacker.addI64(android.renderscript.Long3)void
android.renderscript.FieldPacker.addI64(android.renderscript.Long4)void
android.renderscript.FieldPacker.addU64(android.renderscript.Long2)void
android.renderscript.FieldPacker.addU64(android.renderscript.Long3)void
android.renderscript.FieldPacker.addU64(android.renderscript.Long4)void
android.renderscript.FieldPacker.subFloat2)android.renderscript.Float2
android.renderscript.FieldPacker.subFloat3)android.renderscript.Float3
android.renderscript.FieldPacker.subFloat4)android.renderscript.Float4
android.renderscript.FieldPacker.subDouble2)android.renderscript.Double2
android.renderscript.FieldPacker.subDouble3)android.renderscript.Double3
android.renderscript.FieldPacker.subDouble4)android.renderscript.Double4
android.renderscript.FieldPacker.subByte2)android.renderscript.Byte2
android.renderscript.FieldPacker.subByte3)android.renderscript.Byte3
android.renderscript.FieldPacker.subByte4)android.renderscript.Byte4
android.renderscript.FieldPacker.subShort2)android.renderscript.Short2
android.renderscript.FieldPacker.subShort3)android.renderscript.Short3
android.renderscript.FieldPacker.subShort4)android.renderscript.Short4
android.renderscript.FieldPacker.subInt2)android.renderscript.Int2
android.renderscript.FieldPacker.subInt3)android.renderscript.Int3
android.renderscript.FieldPacker.subInt4)android.renderscript.Int4
android.renderscript.FieldPacker.subLong2)android.renderscript.Long2
android.renderscript.FieldPacker.subLong3)android.renderscript.Long3
android.renderscript.FieldPacker.subLong4)android.renderscript.Long4
android.renderscript.FieldPacker.addMatrix(android.renderscript.Matrix4f)void
android.renderscript.FieldPacker.subMatrix4f)android.renderscript.Matrix4f
android.renderscript.FieldPacker.addMatrix(android.renderscript.Matrix3f)void
android.renderscript.FieldPacker.subMatrix3f)android.renderscript.Matrix3f
android.renderscript.FieldPacker.addMatrix(android.renderscript.Matrix2f)void
android.renderscript.FieldPacker.subMatrix2f)android.renderscript.Matrix2f
android.renderscript.FieldPacker.addBoolean(boolean)void
android.renderscript.FieldPacker.subBoolean)boolean
android.renderscript.Matrix2f.get(int,int)float
android.renderscript.Matrix2f.set(int,int,float)void
android.renderscript.Matrix2f.loadIdentity)void
android.renderscript.Matrix2f.load(android.renderscript.Matrix2f)void
android.renderscript.Matrix2f.loadRotate(float)void
android.renderscript.Matrix2f.loadScale(float,float)void
android.renderscript.Matrix2f.loadMultiply(android.renderscript.Matrix2f,android.renderscript.Matrix2f)void
android.renderscript.Matrix2f.multiply(android.renderscript.Matrix2f)void
android.renderscript.Matrix2f.rotate(float)void
android.renderscript.Matrix2f.scale(float,float)void
android.renderscript.Matrix2f.transpose)void
android.renderscript.Matrix3f.get(int,int)float
android.renderscript.Matrix3f.set(int,int,float)void
android.renderscript.Matrix3f.loadIdentity)void
android.renderscript.Matrix3f.load(android.renderscript.Matrix3f)void
android.renderscript.Matrix3f.loadRotate(float,float,float,float)void
android.renderscript.Matrix3f.loadRotate(float)void
android.renderscript.Matrix3f.loadScale(float,float)void
android.renderscript.Matrix3f.loadScale(float,float,float)void
android.renderscript.Matrix3f.loadTranslate(float,float)void
android.renderscript.Matrix3f.loadMultiply(android.renderscript.Matrix3f,android.renderscript.Matrix3f)void
android.renderscript.Matrix3f.multiply(android.renderscript.Matrix3f)void
android.renderscript.Matrix3f.rotate(float,float,float,float)void
android.renderscript.Matrix3f.rotate(float)void
android.renderscript.Matrix3f.scale(float,float)void
android.renderscript.Matrix3f.scale(float,float,float)void
android.renderscript.Matrix3f.translate(float,float)void
android.renderscript.Matrix3f.transpose)void
android.renderscript.Matrix4f.get(int,int)float
android.renderscript.Matrix4f.set(int,int,float)void
android.renderscript.Matrix4f.loadIdentity)void
android.renderscript.Matrix4f.load(android.renderscript.Matrix4f)void
android.renderscript.Matrix4f.loadRotate(float,float,float,float)void
android.renderscript.Matrix4f.loadScale(float,float,float)void
android.renderscript.Matrix4f.loadTranslate(float,float,float)void
android.renderscript.Matrix4f.loadMultiply(android.renderscript.Matrix4f,android.renderscript.Matrix4f)void
android.renderscript.Matrix4f.loadOrtho(float,float,float,float,float,float)void
android.renderscript.Matrix4f.loadOrthoWindow(int,int)void
android.renderscript.Matrix4f.loadFrustum(float,float,float,float,float,float)void
android.renderscript.Matrix4f.loadPerspective(float,float,float,float)void
android.renderscript.Matrix4f.loadProjectionNormalized(int,int)void
android.renderscript.Matrix4f.multiply(android.renderscript.Matrix4f)void
android.renderscript.Matrix4f.rotate(float,float,float,float)void
android.renderscript.Matrix4f.scale(float,float,float)void
android.renderscript.Matrix4f.translate(float,float,float)void
android.renderscript.Matrix4f.inverse)boolean
android.renderscript.Matrix4f.inverseTranspose)boolean
android.renderscript.Matrix4f.transpose)void
android.renderscript.RenderScript.run)void
android.renderscript.RenderScript.run)void
android.renderscript.RenderScript.valueOf(String)Priority
android.renderscript.RenderScript.valueOf(String)ContextType
android.renderscript.RenderScript.getMinorVersion)long
android.renderscript.RenderScript.setMessageHandler(android.renderscript.RenderScript.RSMessageHandler)void
android.renderscript.RenderScript.getMessageHandler)android.renderscript.RenderScript.RSMessageHandler
android.renderscript.RenderScript.sendMessage(int,int)void
android.renderscript.RenderScript.setErrorHandler(android.renderscript.RenderScript.RSErrorHandler)void
android.renderscript.RenderScript.getErrorHandler)android.renderscript.RenderScript.RSErrorHandler
android.renderscript.RenderScript.setPriority(Priority)void
android.renderscript.RenderScript.getApplicationContext)android.content.Context
android.renderscript.RenderScript.create(android.content.Context)android.renderscript.RenderScript
android.renderscript.RenderScript.create(android.content.Context,ContextType)android.renderscript.RenderScript
android.renderscript.RenderScript.create(android.content.Context,ContextType,int)android.renderscript.RenderScript
android.renderscript.RenderScript.releaseAllContexts)void
android.renderscript.RenderScript.createMultiContext(android.content.Context,ContextType,int,int)android.renderscript.RenderScript
android.renderscript.RenderScript.contextDump)void
android.renderscript.RenderScript.finish)void
android.renderscript.RenderScript.finalize)void
android.renderscript.RenderScript.destroy)void
android.renderscript.Sampler.valueOf(String)Value
android.renderscript.Sampler.setMinification(Value)void
android.renderscript.Sampler.setMagnification(Value)void
android.renderscript.Sampler.setWrapS(Value)void
android.renderscript.Sampler.setWrapT(Value)void
android.renderscript.Sampler.setAnisotropy(float)void
android.renderscript.Sampler.create)android.renderscript.Sampler
android.renderscript.Sampler.getMinification)Value
android.renderscript.Sampler.getMagnification)Value
android.renderscript.Sampler.getWrapS)Value
android.renderscript.Sampler.getWrapT)Value
android.renderscript.Sampler.getAnisotropy)float
android.renderscript.Sampler.CLAMP_NEAREST(android.renderscript.RenderScript)android.renderscript.Sampler
android.renderscript.Sampler.CLAMP_LINEAR(android.renderscript.RenderScript)android.renderscript.Sampler
android.renderscript.Sampler.CLAMP_LINEAR_MIP_LINEAR(android.renderscript.RenderScript)android.renderscript.Sampler
android.renderscript.Sampler.WRAP_NEAREST(android.renderscript.RenderScript)android.renderscript.Sampler
android.renderscript.Sampler.WRAP_LINEAR(android.renderscript.RenderScript)android.renderscript.Sampler
android.renderscript.Sampler.WRAP_LINEAR_MIP_LINEAR(android.renderscript.RenderScript)android.renderscript.Sampler
android.renderscript.Sampler.MIRRORED_REPEAT_NEAREST(android.renderscript.RenderScript)android.renderscript.Sampler
android.renderscript.Sampler.MIRRORED_REPEAT_LINEAR(android.renderscript.RenderScript)android.renderscript.Sampler
android.renderscript.Sampler.MIRRORED_REPEAT_LINEAR_MIP_LINEAR(android.renderscript.RenderScript)android.renderscript.Sampler
android.renderscript.Script.setX(int,int)LaunchOptions
android.renderscript.Script.setY(int,int)LaunchOptions
android.renderscript.Script.setZ(int,int)LaunchOptions
android.renderscript.Script.getXStart)int
android.renderscript.Script.getXEnd)int
android.renderscript.Script.getYStart)int
android.renderscript.Script.getYEnd)int
android.renderscript.Script.getZStart)int
android.renderscript.Script.getZEnd)int
android.renderscript.Script.init(android.renderscript.RenderScript,int)void
android.renderscript.Script.init(android.renderscript.RenderScript,int,int)void
android.renderscript.Script.getElement)android.renderscript.Element
android.renderscript.Script.getType)android.renderscript.Type
android.renderscript.Script.getAllocation)android.renderscript.Allocation
android.renderscript.Script.updateAllocation)void
android.renderscript.Script.createKernelID(int,int,android.renderscript.Element,android.renderscript.Element)KernelID
android.renderscript.Script.createInvokeID(int)InvokeID
android.renderscript.Script.createFieldID(int,android.renderscript.Element)FieldID
android.renderscript.Script.invoke(int)void
android.renderscript.Script.invoke(int,android.renderscript.FieldPacker)void
android.renderscript.Script.forEach(int,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.FieldPacker)void
android.renderscript.Script.forEach(int,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.FieldPacker,LaunchOptions)void
android.renderscript.Script.forEach(int,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.FieldPacker)void
android.renderscript.Script.forEach(int,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.FieldPacker,LaunchOptions)void
android.renderscript.Script.reduce(int,android.renderscript.Allocation,android.renderscript.Allocation,LaunchOptions)void
android.renderscript.Script.bindAllocation(android.renderscript.Allocation,int)void
android.renderscript.Script.setVar(int,float)void
android.renderscript.Script.getVarF(int)float
android.renderscript.Script.setVar(int,double)void
android.renderscript.Script.getVarD(int)double
android.renderscript.Script.setVar(int,int)void
android.renderscript.Script.getVarI(int)int
android.renderscript.Script.setVar(int,long)void
android.renderscript.Script.getVarJ(int)long
android.renderscript.Script.setVar(int,boolean)void
android.renderscript.Script.getVarB(int)boolean
android.renderscript.Script.setVar(int,android.renderscript.BaseObj)void
android.renderscript.Script.setVar(int,android.renderscript.FieldPacker)void
android.renderscript.Script.setVar(int,android.renderscript.FieldPacker,android.renderscript.Element,int)void
android.renderscript.Script.getVarV(int,android.renderscript.FieldPacker)void
android.renderscript.Script.setTimeZone(String)void
android.renderscript.ScriptGroup.destroy)void
android.renderscript.ScriptGroup.finalize)void
android.renderscript.ScriptGroup.getReturn)Future
android.renderscript.ScriptGroup.getGlobal(Script.FieldID)Future
android.renderscript.ScriptGroup.addInput)Input
android.renderscript.ScriptGroup.addKernel(Script.KernelID)Builder
android.renderscript.ScriptGroup.addConnection(android.renderscript.Type,Script.KernelID,Script.FieldID)Builder
android.renderscript.ScriptGroup.addConnection(android.renderscript.Type,Script.KernelID,Script.KernelID)Builder
android.renderscript.ScriptGroup.create)android.renderscript.ScriptGroup
android.renderscript.ScriptGroup.setInput(Script.KernelID,android.renderscript.Allocation)void
android.renderscript.ScriptGroup.setOutput(Script.KernelID,android.renderscript.Allocation)void
android.renderscript.ScriptGroup.execute)void
android.renderscript.ScriptGroup.destroy)void
android.renderscript.ScriptIntrinsic3DLUT.create(android.renderscript.RenderScript,android.renderscript.Element)android.renderscript.ScriptIntrinsic3DLUT
android.renderscript.ScriptIntrinsic3DLUT.setLUT(android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsic3DLUT.forEach(android.renderscript.Allocation,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsic3DLUT.forEach(android.renderscript.Allocation,android.renderscript.Allocation,Script.LaunchOptions)void
android.renderscript.ScriptIntrinsicBLAS.create(android.renderscript.RenderScript)android.renderscript.ScriptIntrinsicBLAS
android.renderscript.ScriptIntrinsicBLAS.DGEMV(int,double,android.renderscript.Allocation,android.renderscript.Allocation,int,double,android.renderscript.Allocation,int)void
android.renderscript.ScriptIntrinsicBLAS.STRMV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)void
android.renderscript.ScriptIntrinsicBLAS.DTRMV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)void
android.renderscript.ScriptIntrinsicBLAS.CTRMV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)void
android.renderscript.ScriptIntrinsicBLAS.ZTRMV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)void
android.renderscript.ScriptIntrinsicBLAS.STBMV(int,int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)void
android.renderscript.ScriptIntrinsicBLAS.DTBMV(int,int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)void
android.renderscript.ScriptIntrinsicBLAS.CTBMV(int,int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)void
android.renderscript.ScriptIntrinsicBLAS.ZTBMV(int,int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)void
android.renderscript.ScriptIntrinsicBLAS.STPMV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)void
android.renderscript.ScriptIntrinsicBLAS.DTPMV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)void
android.renderscript.ScriptIntrinsicBLAS.CTPMV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)void
android.renderscript.ScriptIntrinsicBLAS.ZTPMV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)void
android.renderscript.ScriptIntrinsicBLAS.STRSV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)void
android.renderscript.ScriptIntrinsicBLAS.DTRSV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)void
android.renderscript.ScriptIntrinsicBLAS.CTRSV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)void
android.renderscript.ScriptIntrinsicBLAS.ZTRSV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)void
android.renderscript.ScriptIntrinsicBLAS.STBSV(int,int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)void
android.renderscript.ScriptIntrinsicBLAS.DTBSV(int,int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)void
android.renderscript.ScriptIntrinsicBLAS.CTBSV(int,int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)void
android.renderscript.ScriptIntrinsicBLAS.ZTBSV(int,int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)void
android.renderscript.ScriptIntrinsicBLAS.STPSV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)void
android.renderscript.ScriptIntrinsicBLAS.DTPSV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)void
android.renderscript.ScriptIntrinsicBLAS.CTPSV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)void
android.renderscript.ScriptIntrinsicBLAS.ZTPSV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)void
android.renderscript.ScriptIntrinsicBLAS.SGER(float,android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.SSYR(int,float,android.renderscript.Allocation,int,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.SSPR(int,float,android.renderscript.Allocation,int,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.SSYR2(int,float,android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.SSPR2(int,float,android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.DSYMV(int,double,android.renderscript.Allocation,android.renderscript.Allocation,int,double,android.renderscript.Allocation,int)void
android.renderscript.ScriptIntrinsicBLAS.DSPMV(int,double,android.renderscript.Allocation,android.renderscript.Allocation,int,double,android.renderscript.Allocation,int)void
android.renderscript.ScriptIntrinsicBLAS.DGER(double,android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.DSYR(int,double,android.renderscript.Allocation,int,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.DSPR(int,double,android.renderscript.Allocation,int,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.CGERU(android.renderscript.Float2,android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.CGERC(android.renderscript.Float2,android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.CHER(int,float,android.renderscript.Allocation,int,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.CHPR(int,float,android.renderscript.Allocation,int,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.CHER2(int,android.renderscript.Float2,android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.CHPR2(int,android.renderscript.Float2,android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.ZGERU(android.renderscript.Double2,android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.ZGERC(android.renderscript.Double2,android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.ZHER(int,double,android.renderscript.Allocation,int,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.ZHPR(int,double,android.renderscript.Allocation,int,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.ZHER2(int,android.renderscript.Double2,android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.ZHPR2(int,android.renderscript.Double2,android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.SGEMM(int,int,float,android.renderscript.Allocation,android.renderscript.Allocation,float,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.DGEMM(int,int,double,android.renderscript.Allocation,android.renderscript.Allocation,double,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.CGEMM(int,int,android.renderscript.Float2,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Float2,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.ZGEMM(int,int,android.renderscript.Double2,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Double2,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.SSYMM(int,int,float,android.renderscript.Allocation,android.renderscript.Allocation,float,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.DSYMM(int,int,double,android.renderscript.Allocation,android.renderscript.Allocation,double,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.CSYMM(int,int,android.renderscript.Float2,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Float2,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.ZSYMM(int,int,android.renderscript.Double2,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Double2,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.SSYRK(int,int,float,android.renderscript.Allocation,float,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.CSYRK(int,int,android.renderscript.Float2,android.renderscript.Allocation,android.renderscript.Float2,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.ZSYRK(int,int,android.renderscript.Double2,android.renderscript.Allocation,android.renderscript.Double2,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.SSYR2K(int,int,float,android.renderscript.Allocation,android.renderscript.Allocation,float,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.DSYR2K(int,int,double,android.renderscript.Allocation,android.renderscript.Allocation,double,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.CSYR2K(int,int,android.renderscript.Float2,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Float2,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.ZSYR2K(int,int,android.renderscript.Double2,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Double2,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.STRMM(int,int,int,int,float,android.renderscript.Allocation,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.CTRMM(int,int,int,int,android.renderscript.Float2,android.renderscript.Allocation,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.ZTRMM(int,int,int,int,android.renderscript.Double2,android.renderscript.Allocation,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.STRSM(int,int,int,int,float,android.renderscript.Allocation,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.CTRSM(int,int,int,int,android.renderscript.Float2,android.renderscript.Allocation,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.ZTRSM(int,int,int,int,android.renderscript.Double2,android.renderscript.Allocation,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.CHEMM(int,int,android.renderscript.Float2,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Float2,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.ZHEMM(int,int,android.renderscript.Double2,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Double2,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.CHERK(int,int,float,android.renderscript.Allocation,float,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.CHER2K(int,int,android.renderscript.Float2,android.renderscript.Allocation,android.renderscript.Allocation,float,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBLAS.BNNM(android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation,int,int)void
android.renderscript.ScriptIntrinsicBlend.create(android.renderscript.RenderScript,android.renderscript.Element)android.renderscript.ScriptIntrinsicBlend
android.renderscript.ScriptIntrinsicBlend.forEachClear(android.renderscript.Allocation,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBlend.forEachClear(android.renderscript.Allocation,android.renderscript.Allocation,Script.LaunchOptions)void
android.renderscript.ScriptIntrinsicBlend.forEachSrc(android.renderscript.Allocation,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBlend.forEachSrc(android.renderscript.Allocation,android.renderscript.Allocation,Script.LaunchOptions)void
android.renderscript.ScriptIntrinsicBlend.forEachDst(android.renderscript.Allocation,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBlend.forEachDst(android.renderscript.Allocation,android.renderscript.Allocation,Script.LaunchOptions)void
android.renderscript.ScriptIntrinsicBlend.forEachSrcOver(android.renderscript.Allocation,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBlend.forEachSrcOver(android.renderscript.Allocation,android.renderscript.Allocation,Script.LaunchOptions)void
android.renderscript.ScriptIntrinsicBlend.forEachDstOver(android.renderscript.Allocation,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBlend.forEachDstOver(android.renderscript.Allocation,android.renderscript.Allocation,Script.LaunchOptions)void
android.renderscript.ScriptIntrinsicBlend.forEachSrcIn(android.renderscript.Allocation,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBlend.forEachSrcIn(android.renderscript.Allocation,android.renderscript.Allocation,Script.LaunchOptions)void
android.renderscript.ScriptIntrinsicBlend.forEachDstIn(android.renderscript.Allocation,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBlend.forEachDstIn(android.renderscript.Allocation,android.renderscript.Allocation,Script.LaunchOptions)void
android.renderscript.ScriptIntrinsicBlend.forEachSrcOut(android.renderscript.Allocation,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBlend.forEachSrcOut(android.renderscript.Allocation,android.renderscript.Allocation,Script.LaunchOptions)void
android.renderscript.ScriptIntrinsicBlend.forEachDstOut(android.renderscript.Allocation,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBlend.forEachDstOut(android.renderscript.Allocation,android.renderscript.Allocation,Script.LaunchOptions)void
android.renderscript.ScriptIntrinsicBlend.forEachSrcAtop(android.renderscript.Allocation,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBlend.forEachSrcAtop(android.renderscript.Allocation,android.renderscript.Allocation,Script.LaunchOptions)void
android.renderscript.ScriptIntrinsicBlend.forEachDstAtop(android.renderscript.Allocation,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBlend.forEachDstAtop(android.renderscript.Allocation,android.renderscript.Allocation,Script.LaunchOptions)void
android.renderscript.ScriptIntrinsicBlend.forEachXor(android.renderscript.Allocation,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBlend.forEachXor(android.renderscript.Allocation,android.renderscript.Allocation,Script.LaunchOptions)void
android.renderscript.ScriptIntrinsicBlend.forEachMultiply(android.renderscript.Allocation,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBlend.forEachMultiply(android.renderscript.Allocation,android.renderscript.Allocation,Script.LaunchOptions)void
android.renderscript.ScriptIntrinsicBlend.forEachAdd(android.renderscript.Allocation,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBlend.forEachAdd(android.renderscript.Allocation,android.renderscript.Allocation,Script.LaunchOptions)void
android.renderscript.ScriptIntrinsicBlend.forEachSubtract(android.renderscript.Allocation,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBlend.forEachSubtract(android.renderscript.Allocation,android.renderscript.Allocation,Script.LaunchOptions)void
android.renderscript.ScriptIntrinsicBlur.create(android.renderscript.RenderScript,android.renderscript.Element)android.renderscript.ScriptIntrinsicBlur
android.renderscript.ScriptIntrinsicBlur.setInput(android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBlur.setRadius(float)void
android.renderscript.ScriptIntrinsicBlur.forEach(android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicBlur.forEach(android.renderscript.Allocation,Script.LaunchOptions)void
android.renderscript.ScriptIntrinsicColorMatrix.create(android.renderscript.RenderScript,android.renderscript.Element)android.renderscript.ScriptIntrinsicColorMatrix
android.renderscript.ScriptIntrinsicColorMatrix.create(android.renderscript.RenderScript)android.renderscript.ScriptIntrinsicColorMatrix
android.renderscript.ScriptIntrinsicColorMatrix.setColorMatrix(android.renderscript.Matrix4f)void
android.renderscript.ScriptIntrinsicColorMatrix.setColorMatrix(android.renderscript.Matrix3f)void
android.renderscript.ScriptIntrinsicColorMatrix.setAdd(android.renderscript.Float4)void
android.renderscript.ScriptIntrinsicColorMatrix.setAdd(float,float,float,float)void
android.renderscript.ScriptIntrinsicColorMatrix.setGreyscale)void
android.renderscript.ScriptIntrinsicColorMatrix.setYUVtoRGB)void
android.renderscript.ScriptIntrinsicColorMatrix.setRGBtoYUV)void
android.renderscript.ScriptIntrinsicColorMatrix.forEach(android.renderscript.Allocation,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicColorMatrix.forEach(android.renderscript.Allocation,android.renderscript.Allocation,Script.LaunchOptions)void
android.renderscript.ScriptIntrinsicConvolve3x3.create(android.renderscript.RenderScript,android.renderscript.Element)android.renderscript.ScriptIntrinsicConvolve3x3
android.renderscript.ScriptIntrinsicConvolve3x3.setInput(android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicConvolve3x3.setCoefficients(float)void
android.renderscript.ScriptIntrinsicConvolve3x3.forEach(android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicConvolve3x3.forEach(android.renderscript.Allocation,Script.LaunchOptions)void
android.renderscript.ScriptIntrinsicConvolve5x5.create(android.renderscript.RenderScript,android.renderscript.Element)android.renderscript.ScriptIntrinsicConvolve5x5
android.renderscript.ScriptIntrinsicConvolve5x5.setInput(android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicConvolve5x5.setCoefficients(float)void
android.renderscript.ScriptIntrinsicConvolve5x5.forEach(android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicConvolve5x5.forEach(android.renderscript.Allocation,Script.LaunchOptions)void
android.renderscript.ScriptIntrinsicHistogram.create(android.renderscript.RenderScript,android.renderscript.Element)android.renderscript.ScriptIntrinsicHistogram
android.renderscript.ScriptIntrinsicHistogram.forEach(android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicHistogram.forEach(android.renderscript.Allocation,Script.LaunchOptions)void
android.renderscript.ScriptIntrinsicHistogram.setDotCoefficients(float,float,float,float)void
android.renderscript.ScriptIntrinsicHistogram.setOutput(android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicHistogram.forEach_Dot(android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicHistogram.forEach_Dot(android.renderscript.Allocation,Script.LaunchOptions)void
android.renderscript.ScriptIntrinsicLUT.create(android.renderscript.RenderScript,android.renderscript.Element)android.renderscript.ScriptIntrinsicLUT
android.renderscript.ScriptIntrinsicLUT.destroy)void
android.renderscript.ScriptIntrinsicLUT.setRed(int,int)void
android.renderscript.ScriptIntrinsicLUT.setGreen(int,int)void
android.renderscript.ScriptIntrinsicLUT.setBlue(int,int)void
android.renderscript.ScriptIntrinsicLUT.setAlpha(int,int)void
android.renderscript.ScriptIntrinsicLUT.forEach(android.renderscript.Allocation,android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicLUT.forEach(android.renderscript.Allocation,android.renderscript.Allocation,Script.LaunchOptions)void
android.renderscript.ScriptIntrinsicResize.create(android.renderscript.RenderScript)android.renderscript.ScriptIntrinsicResize
android.renderscript.ScriptIntrinsicResize.setInput(android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicResize.forEach_bicubic(android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicResize.forEach_bicubic(android.renderscript.Allocation,Script.LaunchOptions)void
android.renderscript.ScriptIntrinsicYuvToRGB.create(android.renderscript.RenderScript,android.renderscript.Element)android.renderscript.ScriptIntrinsicYuvToRGB
android.renderscript.ScriptIntrinsicYuvToRGB.setInput(android.renderscript.Allocation)void
android.renderscript.ScriptIntrinsicYuvToRGB.forEach(android.renderscript.Allocation)void
android.renderscript.Type.valueOf(String)CubemapFace
android.renderscript.Type.setX(int)android.renderscript.Type.Builder
android.renderscript.Type.setY(int)android.renderscript.Type.Builder
android.renderscript.Type.setZ(int)android.renderscript.Type.Builder
android.renderscript.Type.setMipmaps(boolean)android.renderscript.Type.Builder
android.renderscript.Type.setFaces(boolean)android.renderscript.Type.Builder
android.renderscript.Type.setYuvFormat(int)android.renderscript.Type.Builder
android.renderscript.Type.create)android.renderscript.Type
android.renderscript.Type.getElement)android.renderscript.Element
android.renderscript.Type.getX)int
android.renderscript.Type.getY)int
android.renderscript.Type.getZ)int
android.renderscript.Type.getYuv)int
android.renderscript.Type.hasMipmaps)boolean
android.renderscript.Type.hasFaces)boolean
android.renderscript.Type.getCount)int
android.renderscript.Type.createX(android.renderscript.RenderScript,android.renderscript.Element,int)android.renderscript.Type
android.renderscript.Type.createXY(android.renderscript.RenderScript,android.renderscript.Element,int,int)android.renderscript.Type
android.renderscript.Type.createXYZ(android.renderscript.RenderScript,android.renderscript.Element,int,int,int)android.renderscript.Type
android.sax.Element.getChild(String)android.sax.Element
android.sax.Element.getChild(String,String)android.sax.Element
android.sax.Element.requireChild(String)android.sax.Element
android.sax.Element.requireChild(String,String)android.sax.Element
android.sax.Element.setElementListener(android.sax.ElementListener)void
android.sax.Element.setTextElementListener(android.sax.TextElementListener)void
android.sax.Element.setStartElementListener(android.sax.StartElementListener)void
android.sax.Element.setEndElementListener(android.sax.EndElementListener)void
android.sax.Element.setEndTextElementListener(android.sax.EndTextElementListener)void
android.sax.Element.toString)String
android.sax.RootElement.getContentHandler)org.xml.sax.ContentHandler
android.se.omapi.Channel.close)void
android.se.omapi.Channel.isOpen)boolean
android.se.omapi.Channel.isBasicChannel)boolean
android.se.omapi.Channel.getSession)android.se.omapi.Session
android.se.omapi.Channel.selectNext)boolean
android.se.omapi.Reader.getName)String
android.se.omapi.Reader.openSession)android.se.omapi.Session
android.se.omapi.Reader.isSecureElementPresent)boolean
android.se.omapi.Reader.getSEService)android.se.omapi.SEService
android.se.omapi.Reader.closeSessions)void
android.se.omapi.SEService.isConnected)boolean
android.se.omapi.SEService.shutdown)void
android.se.omapi.SEService.getVersion)String
android.se.omapi.Session.getReader)android.se.omapi.Reader
android.se.omapi.Session.close)void
android.se.omapi.Session.isClosed)boolean
android.se.omapi.Session.closeChannels)void
android.se.omapi.Session.openBasicChannel(byte,byte)android.se.omapi.Channel
android.se.omapi.Session.openBasicChannel(byte)android.se.omapi.Channel
android.se.omapi.Session.openLogicalChannel(byte,byte)android.se.omapi.Channel
android.se.omapi.Session.openLogicalChannel(byte)android.se.omapi.Channel
android.security.AttestedKeyPair.getKeyPair)java.security.KeyPair
android.security.AttestedKeyPair.getAttestationRecord)java.util.List
android.security.ConfirmationCallback.onConfirmed(byte)void
android.security.ConfirmationCallback.onDismissed)void
android.security.ConfirmationCallback.onCanceled)void
android.security.ConfirmationCallback.onError(Throwable)void
android.security.ConfirmationPrompt.setPromptText(CharSequence)Builder
android.security.ConfirmationPrompt.setExtraData(byte)Builder
android.security.ConfirmationPrompt.build)android.security.ConfirmationPrompt
android.security.ConfirmationPrompt.presentPrompt(java.util.concurrent.Executor,android.security.ConfirmationCallback)void
android.security.ConfirmationPrompt.cancelPrompt)void
android.security.ConfirmationPrompt.isSupported(android.content.Context)boolean
android.security.KeyChain.createInstallIntent)android.content.Intent
android.security.KeyChain.choosePrivateKeyAlias(android.app.Activity,android.security.KeyChainAliasCallback,String,java.security.Principal,String,int,String)void
android.security.KeyChain.choosePrivateKeyAlias(android.app.Activity,android.security.KeyChainAliasCallback,String,java.security.Principal,android.net.Uri,String)void
android.security.KeyChain.getPrivateKey(android.content.Context,String)java.security.PrivateKey
android.security.KeyChain.isKeyAlgorithmSupported(String)boolean
android.security.KeyChain.isBoundKeyAlgorithm(String)boolean
android.security.KeyPairGeneratorSpec.setAlias(String)Builder
android.security.KeyPairGeneratorSpec.setKeyType(String)Builder
android.security.KeyPairGeneratorSpec.setKeySize(int)Builder
android.security.KeyPairGeneratorSpec.setAlgorithmParameterSpec(java.security.spec.AlgorithmParameterSpec)Builder
android.security.KeyPairGeneratorSpec.setSubject(javax.security.auth.x500.X500Principal)Builder
android.security.KeyPairGeneratorSpec.setSerialNumber(java.math.BigInteger)Builder
android.security.KeyPairGeneratorSpec.setStartDate(java.util.Date)Builder
android.security.KeyPairGeneratorSpec.setEndDate(java.util.Date)Builder
android.security.KeyPairGeneratorSpec.setEncryptionRequired)Builder
android.security.KeyPairGeneratorSpec.build)android.security.KeyPairGeneratorSpec
android.security.KeyPairGeneratorSpec.getContext)android.content.Context
android.security.KeyPairGeneratorSpec.getKeystoreAlias)String
android.security.KeyPairGeneratorSpec.getKeyType)String
android.security.KeyPairGeneratorSpec.getKeySize)int
android.security.KeyPairGeneratorSpec.getAlgorithmParameterSpec)java.security.spec.AlgorithmParameterSpec
android.security.KeyPairGeneratorSpec.getSubjectDN)javax.security.auth.x500.X500Principal
android.security.KeyPairGeneratorSpec.getSerialNumber)java.math.BigInteger
android.security.KeyPairGeneratorSpec.getStartDate)java.util.Date
android.security.KeyPairGeneratorSpec.getEndDate)java.util.Date
android.security.KeyPairGeneratorSpec.isEncryptionRequired)boolean
android.security.KeyStoreParameter.setEncryptionRequired(boolean)Builder
android.security.KeyStoreParameter.build)android.security.KeyStoreParameter
android.security.KeyStoreParameter.isEncryptionRequired)boolean
android.security.NetworkSecurityPolicy.getInstance)android.security.NetworkSecurityPolicy
android.security.NetworkSecurityPolicy.isCleartextTrafficPermitted)boolean
android.security.NetworkSecurityPolicy.isCleartextTrafficPermitted(String)boolean
android.security.keystore.KeyGenParameterSpec.setKeySize(int)Builder
android.security.keystore.KeyGenParameterSpec.setAlgorithmParameterSpec(java.security.spec.AlgorithmParameterSpec)Builder
android.security.keystore.KeyGenParameterSpec.setCertificateSubject(javax.security.auth.x500.X500Principal)Builder
android.security.keystore.KeyGenParameterSpec.setCertificateSerialNumber(java.math.BigInteger)Builder
android.security.keystore.KeyGenParameterSpec.setCertificateNotBefore(java.util.Date)Builder
android.security.keystore.KeyGenParameterSpec.setCertificateNotAfter(java.util.Date)Builder
android.security.keystore.KeyGenParameterSpec.setKeyValidityStart(java.util.Date)Builder
android.security.keystore.KeyGenParameterSpec.setKeyValidityEnd(java.util.Date)Builder
android.security.keystore.KeyGenParameterSpec.setKeyValidityForOriginationEnd(java.util.Date)Builder
android.security.keystore.KeyGenParameterSpec.setKeyValidityForConsumptionEnd(java.util.Date)Builder
android.security.keystore.KeyGenParameterSpec.setRandomizedEncryptionRequired(boolean)Builder
android.security.keystore.KeyGenParameterSpec.setUserAuthenticationRequired(boolean)Builder
android.security.keystore.KeyGenParameterSpec.setUserConfirmationRequired(boolean)Builder
android.security.keystore.KeyGenParameterSpec.setUserAuthenticationValidityDurationSeconds(int)Builder
android.security.keystore.KeyGenParameterSpec.setUserPresenceRequired(boolean)Builder
android.security.keystore.KeyGenParameterSpec.setAttestationChallenge(byte)Builder
android.security.keystore.KeyGenParameterSpec.setUserAuthenticationValidWhileOnBody(boolean)Builder
android.security.keystore.KeyGenParameterSpec.setInvalidatedByBiometricEnrollment(boolean)Builder
android.security.keystore.KeyGenParameterSpec.setIsStrongBoxBacked(boolean)Builder
android.security.keystore.KeyGenParameterSpec.setUnlockedDeviceRequired(boolean)Builder
android.security.keystore.KeyGenParameterSpec.build)android.security.keystore.KeyGenParameterSpec
android.security.keystore.KeyGenParameterSpec.getKeystoreAlias)String
android.security.keystore.KeyGenParameterSpec.getKeySize)int
android.security.keystore.KeyGenParameterSpec.getAlgorithmParameterSpec)java.security.spec.AlgorithmParameterSpec
android.security.keystore.KeyGenParameterSpec.getCertificateSubject)javax.security.auth.x500.X500Principal
android.security.keystore.KeyGenParameterSpec.getCertificateSerialNumber)java.math.BigInteger
android.security.keystore.KeyGenParameterSpec.getCertificateNotBefore)java.util.Date
android.security.keystore.KeyGenParameterSpec.getCertificateNotAfter)java.util.Date
android.security.keystore.KeyGenParameterSpec.getKeyValidityStart)java.util.Date
android.security.keystore.KeyGenParameterSpec.getKeyValidityForConsumptionEnd)java.util.Date
android.security.keystore.KeyGenParameterSpec.getKeyValidityForOriginationEnd)java.util.Date
android.security.keystore.KeyGenParameterSpec.getPurposes)int
android.security.keystore.KeyGenParameterSpec.isDigestsSpecified)boolean
android.security.keystore.KeyGenParameterSpec.isRandomizedEncryptionRequired)boolean
android.security.keystore.KeyGenParameterSpec.isUserAuthenticationRequired)boolean
android.security.keystore.KeyGenParameterSpec.isUserConfirmationRequired)boolean
android.security.keystore.KeyGenParameterSpec.getUserAuthenticationValidityDurationSeconds)int
android.security.keystore.KeyGenParameterSpec.isUserPresenceRequired)boolean
android.security.keystore.KeyGenParameterSpec.isUserAuthenticationValidWhileOnBody)boolean
android.security.keystore.KeyGenParameterSpec.isInvalidatedByBiometricEnrollment)boolean
android.security.keystore.KeyGenParameterSpec.isStrongBoxBacked)boolean
android.security.keystore.KeyGenParameterSpec.isUnlockedDeviceRequired)boolean
android.security.keystore.KeyInfo.getKeystoreAlias)String
android.security.keystore.KeyInfo.isInsideSecureHardware)boolean
android.security.keystore.KeyInfo.getOrigin)int
android.security.keystore.KeyInfo.getKeySize)int
android.security.keystore.KeyInfo.getKeyValidityStart)java.util.Date
android.security.keystore.KeyInfo.getKeyValidityForConsumptionEnd)java.util.Date
android.security.keystore.KeyInfo.getKeyValidityForOriginationEnd)java.util.Date
android.security.keystore.KeyInfo.getPurposes)int
android.security.keystore.KeyInfo.isUserAuthenticationRequired)boolean
android.security.keystore.KeyInfo.isUserConfirmationRequired)boolean
android.security.keystore.KeyInfo.getUserAuthenticationValidityDurationSeconds)int
android.security.keystore.KeyInfo.isUserAuthenticationRequirementEnforcedBySecureHardware)boolean
android.security.keystore.KeyInfo.isUserAuthenticationValidWhileOnBody)boolean
android.security.keystore.KeyInfo.isInvalidatedByBiometricEnrollment)boolean
android.security.keystore.KeyInfo.isTrustedUserPresenceRequired)boolean
android.security.keystore.KeyProtection.setKeyValidityStart(java.util.Date)Builder
android.security.keystore.KeyProtection.setKeyValidityEnd(java.util.Date)Builder
android.security.keystore.KeyProtection.setKeyValidityForOriginationEnd(java.util.Date)Builder
android.security.keystore.KeyProtection.setKeyValidityForConsumptionEnd(java.util.Date)Builder
android.security.keystore.KeyProtection.setRandomizedEncryptionRequired(boolean)Builder
android.security.keystore.KeyProtection.setUserAuthenticationRequired(boolean)Builder
android.security.keystore.KeyProtection.setUserConfirmationRequired(boolean)Builder
android.security.keystore.KeyProtection.setUserAuthenticationValidityDurationSeconds(int)Builder
android.security.keystore.KeyProtection.setUserPresenceRequired(boolean)Builder
android.security.keystore.KeyProtection.setUserAuthenticationValidWhileOnBody(boolean)Builder
android.security.keystore.KeyProtection.setInvalidatedByBiometricEnrollment(boolean)Builder
android.security.keystore.KeyProtection.setUnlockedDeviceRequired(boolean)Builder
android.security.keystore.KeyProtection.build)android.security.keystore.KeyProtection
android.security.keystore.KeyProtection.getKeyValidityStart)java.util.Date
android.security.keystore.KeyProtection.getKeyValidityForConsumptionEnd)java.util.Date
android.security.keystore.KeyProtection.getKeyValidityForOriginationEnd)java.util.Date
android.security.keystore.KeyProtection.getPurposes)int
android.security.keystore.KeyProtection.isDigestsSpecified)boolean
android.security.keystore.KeyProtection.isRandomizedEncryptionRequired)boolean
android.security.keystore.KeyProtection.isUserAuthenticationRequired)boolean
android.security.keystore.KeyProtection.isUserConfirmationRequired)boolean
android.security.keystore.KeyProtection.getUserAuthenticationValidityDurationSeconds)int
android.security.keystore.KeyProtection.isUserPresenceRequired)boolean
android.security.keystore.KeyProtection.isUserAuthenticationValidWhileOnBody)boolean
android.security.keystore.KeyProtection.isInvalidatedByBiometricEnrollment)boolean
android.security.keystore.KeyProtection.isUnlockedDeviceRequired)boolean
android.security.keystore.WrappedKeyEntry.getWrappingKeyAlias)String
android.security.keystore.WrappedKeyEntry.getTransformation)String
android.security.keystore.WrappedKeyEntry.getAlgorithmParameterSpec)java.security.spec.AlgorithmParameterSpec
android.service.autofill.AutofillService.onCreate)void
android.service.autofill.AutofillService.onBind(android.content.Intent)android.os.IBinder
android.service.autofill.AutofillService.onConnected)void
android.service.autofill.AutofillService.onDisconnected)void
android.service.autofill.AutofillService.getFillEventHistory)android.service.autofill.FillEventHistory
android.service.autofill.BatchUpdates.updateTemplate(android.widget.RemoteViews)android.service.autofill.BatchUpdates.Builder
android.service.autofill.BatchUpdates.transformChild(int,android.service.autofill.Transformation)android.service.autofill.BatchUpdates.Builder
android.service.autofill.BatchUpdates.build)android.service.autofill.BatchUpdates
android.service.autofill.BatchUpdates.toString)String
android.service.autofill.BatchUpdates.describeContents)int
android.service.autofill.BatchUpdates.writeToParcel(android.os.Parcel,int)void
android.service.autofill.CharSequenceTransformation.addField(android.view.autofill.AutofillId,java.util.regex.Pattern,String)android.service.autofill.CharSequenceTransformation.Builder
android.service.autofill.CharSequenceTransformation.build)android.service.autofill.CharSequenceTransformation
android.service.autofill.CharSequenceTransformation.toString)String
android.service.autofill.CharSequenceTransformation.describeContents)int
android.service.autofill.CharSequenceTransformation.writeToParcel(android.os.Parcel,int)void
android.service.autofill.CustomDescription.addChild(int,android.service.autofill.Transformation)android.service.autofill.CustomDescription.Builder
android.service.autofill.CustomDescription.batchUpdate(android.service.autofill.Validator,android.service.autofill.BatchUpdates)android.service.autofill.CustomDescription.Builder
android.service.autofill.CustomDescription.addOnClickAction(int,android.service.autofill.OnClickAction)android.service.autofill.CustomDescription.Builder
android.service.autofill.CustomDescription.build)android.service.autofill.CustomDescription
android.service.autofill.CustomDescription.toString)String
android.service.autofill.CustomDescription.describeContents)int
android.service.autofill.CustomDescription.writeToParcel(android.os.Parcel,int)void
android.service.autofill.Dataset.setAuthentication(android.content.IntentSender)Builder
android.service.autofill.Dataset.setId(String)Builder
android.service.autofill.Dataset.setValue(android.view.autofill.AutofillId,android.view.autofill.AutofillValue)Builder
android.service.autofill.Dataset.setValue(android.view.autofill.AutofillId,android.view.autofill.AutofillValue,android.widget.RemoteViews)Builder
android.service.autofill.Dataset.setValue(android.view.autofill.AutofillId,android.view.autofill.AutofillValue,java.util.regex.Pattern)Builder
android.service.autofill.Dataset.setValue(android.view.autofill.AutofillId,android.view.autofill.AutofillValue,java.util.regex.Pattern,android.widget.RemoteViews)Builder
android.service.autofill.Dataset.build)android.service.autofill.Dataset
android.service.autofill.Dataset.toString)String
android.service.autofill.Dataset.describeContents)int
android.service.autofill.Dataset.writeToParcel(android.os.Parcel,int)void
android.service.autofill.DateTransformation.toString)String
android.service.autofill.DateTransformation.describeContents)int
android.service.autofill.DateTransformation.writeToParcel(android.os.Parcel,int)void
android.service.autofill.DateValueSanitizer.toString)String
android.service.autofill.DateValueSanitizer.describeContents)int
android.service.autofill.DateValueSanitizer.writeToParcel(android.os.Parcel,int)void
android.service.autofill.FieldClassification.getCategoryId)String
android.service.autofill.FieldClassification.getScore)float
android.service.autofill.FieldClassification.toString)String
android.service.autofill.FieldClassification.getMatches)java.util.List
android.service.autofill.FieldClassification.toString)String
android.service.autofill.FillCallback.onSuccess(android.service.autofill.FillResponse)void
android.service.autofill.FillCallback.onFailure(CharSequence)void
android.service.autofill.FillContext.getRequestId)int
android.service.autofill.FillContext.getStructure)android.app.assist.AssistStructure
android.service.autofill.FillContext.getFocusedId)android.view.autofill.AutofillId
android.service.autofill.FillContext.toString)String
android.service.autofill.FillContext.describeContents)int
android.service.autofill.FillContext.writeToParcel(android.os.Parcel,int)void
android.service.autofill.FillEventHistory.getType)int
android.service.autofill.FillEventHistory.getDatasetId)String
android.service.autofill.FillEventHistory.getClientState)Bundle
android.service.autofill.FillEventHistory.getSelectedDatasetIds)Set
android.service.autofill.FillEventHistory.getIgnoredDatasetIds)Set
android.service.autofill.FillEventHistory.getChangedFields)Map
android.service.autofill.FillEventHistory.getFieldsClassification)Map
android.service.autofill.FillEventHistory.getManuallyEnteredField)Map
android.service.autofill.FillEventHistory.toString)String
android.service.autofill.FillEventHistory.getClientState)Bundle
android.service.autofill.FillEventHistory.getEvents)List
android.service.autofill.FillEventHistory.toString)String
android.service.autofill.FillEventHistory.describeContents)int
android.service.autofill.FillEventHistory.writeToParcel(Parcel,int)void
android.service.autofill.FillRequest.getId)int
android.service.autofill.FillRequest.getFlags)int
android.service.autofill.FillRequest.getFillContexts)java.util.List
android.service.autofill.FillRequest.toString)String
android.service.autofill.FillRequest.getClientState)Bundle
android.service.autofill.FillRequest.describeContents)int
android.service.autofill.FillRequest.writeToParcel(Parcel,int)void
android.service.autofill.FillResponse.setAuthentication(android.view.autofill.AutofillId,android.content.IntentSender,android.widget.RemoteViews)Builder
android.service.autofill.FillResponse.addDataset(android.service.autofill.Dataset)Builder
android.service.autofill.FillResponse.setSaveInfo(android.service.autofill.SaveInfo)Builder
android.service.autofill.FillResponse.setClientState(Bundle)Builder
android.service.autofill.FillResponse.setFlags(int)Builder
android.service.autofill.FillResponse.disableAutofill(long)Builder
android.service.autofill.FillResponse.setHeader(android.widget.RemoteViews)Builder
android.service.autofill.FillResponse.setFooter(android.widget.RemoteViews)Builder
android.service.autofill.FillResponse.setUserData(android.service.autofill.UserData)Builder
android.service.autofill.FillResponse.build)android.service.autofill.FillResponse
android.service.autofill.FillResponse.toString)String
android.service.autofill.FillResponse.describeContents)int
android.service.autofill.FillResponse.writeToParcel(Parcel,int)void
android.service.autofill.ImageTransformation.addOption(java.util.regex.Pattern,int)android.service.autofill.ImageTransformation.Builder
android.service.autofill.ImageTransformation.addOption(java.util.regex.Pattern,int,CharSequence)android.service.autofill.ImageTransformation.Builder
android.service.autofill.ImageTransformation.build)android.service.autofill.ImageTransformation
android.service.autofill.ImageTransformation.toString)String
android.service.autofill.ImageTransformation.describeContents)int
android.service.autofill.ImageTransformation.writeToParcel(android.os.Parcel,int)void
android.service.autofill.LuhnChecksumValidator.LuhnChecksumValidator(android.view.autofill.AutofillId)transient
android.service.autofill.LuhnChecksumValidator.toString)String
android.service.autofill.LuhnChecksumValidator.describeContents)int
android.service.autofill.LuhnChecksumValidator.writeToParcel(android.os.Parcel,int)void
android.service.autofill.RegexValidator.toString)String
android.service.autofill.RegexValidator.describeContents)int
android.service.autofill.RegexValidator.writeToParcel(android.os.Parcel,int)void
android.service.autofill.SaveCallback.onSuccess)void
android.service.autofill.SaveCallback.onSuccess(android.content.IntentSender)void
android.service.autofill.SaveCallback.onFailure(CharSequence)void
android.service.autofill.SaveInfo.setFlags(int)Builder
android.service.autofill.SaveInfo.setOptionalIds(android.view.autofill.AutofillId)Builder
android.service.autofill.SaveInfo.setDescription(CharSequence)Builder
android.service.autofill.SaveInfo.setCustomDescription(android.service.autofill.CustomDescription)Builder
android.service.autofill.SaveInfo.setNegativeAction(int,android.content.IntentSender)Builder
android.service.autofill.SaveInfo.setValidator(android.service.autofill.Validator)Builder
android.service.autofill.SaveInfo.setTriggerId(android.view.autofill.AutofillId)Builder
android.service.autofill.SaveInfo.build)android.service.autofill.SaveInfo
android.service.autofill.SaveInfo.toString)String
android.service.autofill.SaveInfo.describeContents)int
android.service.autofill.SaveInfo.writeToParcel(android.os.Parcel,int)void
android.service.autofill.SaveRequest.getFillContexts)java.util.List
android.service.autofill.SaveRequest.getClientState)Bundle
android.service.autofill.SaveRequest.getDatasetIds)java.util.List
android.service.autofill.SaveRequest.describeContents)int
android.service.autofill.SaveRequest.writeToParcel(Parcel,int)void
android.service.autofill.TextValueSanitizer.toString)String
android.service.autofill.TextValueSanitizer.describeContents)int
android.service.autofill.TextValueSanitizer.writeToParcel(android.os.Parcel,int)void
android.service.autofill.UserData.setFieldClassificationAlgorithm(String,Bundle)Builder
android.service.autofill.UserData.setFieldClassificationAlgorithmForCategory(String,String,Bundle)Builder
android.service.autofill.UserData.add(String,String)Builder
android.service.autofill.UserData.build)android.service.autofill.UserData
android.service.autofill.UserData.getFieldClassificationAlgorithm)String
android.service.autofill.UserData.getFieldClassificationAlgorithmForCategory(String)String
android.service.autofill.UserData.getId)String
android.service.autofill.UserData.toString)String
android.service.autofill.UserData.describeContents)int
android.service.autofill.UserData.writeToParcel(Parcel,int)void
android.service.autofill.UserData.getMaxUserDataSize)int
android.service.autofill.UserData.getMaxFieldClassificationIdsSize)int
android.service.autofill.UserData.getMaxCategoryCount)int
android.service.autofill.UserData.getMinValueLength)int
android.service.autofill.UserData.getMaxValueLength)int
android.service.autofill.Validators.not(android.service.autofill.Validator)android.service.autofill.Validator
android.service.autofill.VisibilitySetterAction.setVisibility(int,int)Builder
android.service.autofill.VisibilitySetterAction.build)android.service.autofill.VisibilitySetterAction
android.service.autofill.VisibilitySetterAction.toString)String
android.service.autofill.VisibilitySetterAction.describeContents)int
android.service.autofill.VisibilitySetterAction.writeToParcel(android.os.Parcel,int)void
android.service.carrier.CarrierIdentifier.getMcc)String
android.service.carrier.CarrierIdentifier.getMnc)String
android.service.carrier.CarrierIdentifier.getSpn)String
android.service.carrier.CarrierIdentifier.getImsi)String
android.service.carrier.CarrierIdentifier.getGid1)String
android.service.carrier.CarrierIdentifier.getGid2)String
android.service.carrier.CarrierIdentifier.getCarrierId)int
android.service.carrier.CarrierIdentifier.getSpecificCarrierId)int
android.service.carrier.CarrierIdentifier.equals(Object)boolean
android.service.carrier.CarrierIdentifier.hashCode)int
android.service.carrier.CarrierIdentifier.describeContents)int
android.service.carrier.CarrierIdentifier.writeToParcel(android.os.Parcel,int)void
android.service.carrier.CarrierIdentifier.toString)String
android.service.carrier.CarrierMessagingClientService.onBind(android.content.Intent)android.os.IBinder
android.service.carrier.CarrierMessagingService.getMessageRef)int
android.service.carrier.CarrierMessagingService.getSendStatus)int
android.service.carrier.CarrierMessagingService.getSendStatus)int
android.service.carrier.CarrierMessagingService.getSendStatus)int
android.service.carrier.CarrierMessagingService.onReceiveResult(Object)void
android.service.carrier.CarrierMessagingService.onFilterSms(android.service.carrier.MessagePdu,String,int,int,android.service.carrier.CarrierMessagingService.ResultCallback)void
android.service.carrier.CarrierMessagingService.onReceiveTextSms(android.service.carrier.MessagePdu,String,int,int,android.service.carrier.CarrierMessagingService.ResultCallback)void
android.service.carrier.CarrierMessagingService.onSendTextSms(String,int,String,android.service.carrier.CarrierMessagingService.ResultCallback)void
android.service.carrier.CarrierMessagingService.onSendTextSms(String,int,String,int,android.service.carrier.CarrierMessagingService.ResultCallback)void
android.service.carrier.CarrierMessagingService.onSendDataSms(byte,int,String,int,android.service.carrier.CarrierMessagingService.ResultCallback)void
android.service.carrier.CarrierMessagingService.onSendDataSms(byte,int,String,int,int,android.service.carrier.CarrierMessagingService.ResultCallback)void
android.service.carrier.CarrierMessagingService.onSendMultipartTextSms(java.util.List,int,String,android.service.carrier.CarrierMessagingService.ResultCallback)void
android.service.carrier.CarrierMessagingService.onSendMultipartTextSms(java.util.List,int,String,int,android.service.carrier.CarrierMessagingService.ResultCallback)void
android.service.carrier.CarrierMessagingService.onSendMms(android.net.Uri,int,android.net.Uri,android.service.carrier.CarrierMessagingService.ResultCallback)void
android.service.carrier.CarrierMessagingService.onDownloadMms(android.net.Uri,int,android.net.Uri,android.service.carrier.CarrierMessagingService.ResultCallback)void
android.service.carrier.CarrierMessagingService.onBind(android.content.Intent)android.os.IBinder
android.service.carrier.CarrierService.notifyCarrierNetworkChange(boolean)void
android.service.carrier.CarrierService.onBind(android.content.Intent)android.os.IBinder
android.service.carrier.MessagePdu.getPdus)java.util.List
android.service.carrier.MessagePdu.describeContents)int
android.service.carrier.MessagePdu.writeToParcel(android.os.Parcel,int)void
android.service.chooser.ChooserTarget.getTitle)CharSequence
android.service.chooser.ChooserTarget.getIcon)android.graphics.drawable.Icon
android.service.chooser.ChooserTarget.getScore)float
android.service.chooser.ChooserTarget.getComponentName)android.content.ComponentName
android.service.chooser.ChooserTarget.getIntentExtras)Bundle
android.service.chooser.ChooserTarget.toString)String
android.service.chooser.ChooserTarget.describeContents)int
android.service.chooser.ChooserTarget.writeToParcel(Parcel,int)void
android.service.chooser.ChooserTargetService.onBind(Intent)android.os.IBinder
android.service.dreams.DreamService.dispatchKeyEvent(KeyEvent)boolean
android.service.dreams.DreamService.dispatchKeyShortcutEvent(KeyEvent)boolean
android.service.dreams.DreamService.dispatchTouchEvent(MotionEvent)boolean
android.service.dreams.DreamService.dispatchTrackballEvent(MotionEvent)boolean
android.service.dreams.DreamService.dispatchGenericMotionEvent(MotionEvent)boolean
android.service.dreams.DreamService.dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)boolean
android.service.dreams.DreamService.onCreatePanelView(int)View
android.service.dreams.DreamService.onCreatePanelMenu(int,Menu)boolean
android.service.dreams.DreamService.onPreparePanel(int,View,Menu)boolean
android.service.dreams.DreamService.onMenuOpened(int,Menu)boolean
android.service.dreams.DreamService.onMenuItemSelected(int,MenuItem)boolean
android.service.dreams.DreamService.onWindowAttributesChanged(android.view.WindowManager.LayoutParams)void
android.service.dreams.DreamService.onContentChanged)void
android.service.dreams.DreamService.onWindowFocusChanged(boolean)void
android.service.dreams.DreamService.onAttachedToWindow)void
android.service.dreams.DreamService.onDetachedFromWindow)void
android.service.dreams.DreamService.onPanelClosed(int,Menu)void
android.service.dreams.DreamService.onSearchRequested(SearchEvent)boolean
android.service.dreams.DreamService.onSearchRequested)boolean
android.service.dreams.DreamService.onWindowStartingActionMode(android.view.ActionMode.Callback)ActionMode
android.service.dreams.DreamService.onWindowStartingActionMode(android.view.ActionMode.Callback,int)ActionMode
android.service.dreams.DreamService.onActionModeStarted(ActionMode)void
android.service.dreams.DreamService.onActionModeFinished(ActionMode)void
android.service.dreams.DreamService.getWindowManager)WindowManager
android.service.dreams.DreamService.getWindow)Window
android.service.dreams.DreamService.setContentView(int)void
android.service.dreams.DreamService.setContentView(View)void
android.service.dreams.DreamService.setContentView(View,android.view.ViewGroup.LayoutParams)void
android.service.dreams.DreamService.addContentView(View,android.view.ViewGroup.LayoutParams)void
android.service.dreams.DreamService.findViewById(int)View
android.service.dreams.DreamService.requireViewById(int)View
android.service.dreams.DreamService.setInteractive(boolean)void
android.service.dreams.DreamService.isInteractive)boolean
android.service.dreams.DreamService.setFullscreen(boolean)void
android.service.dreams.DreamService.isFullscreen)boolean
android.service.dreams.DreamService.setScreenBright(boolean)void
android.service.dreams.DreamService.isScreenBright)boolean
android.service.dreams.DreamService.onCreate)void
android.service.dreams.DreamService.onDreamingStarted)void
android.service.dreams.DreamService.onDreamingStopped)void
android.service.dreams.DreamService.onWakeUp)void
android.service.dreams.DreamService.onBind(android.content.Intent)android.os.IBinder
android.service.dreams.DreamService.finish)void
android.service.dreams.DreamService.wakeUp)void
android.service.dreams.DreamService.onDestroy)void
android.service.dreams.DreamService.dump(java.io.FileDescriptor,java.io.PrintWriter,String)void
android.service.media.CameraPrewarmService.onBind(android.content.Intent)android.os.IBinder
android.service.media.CameraPrewarmService.onUnbind(android.content.Intent)boolean
android.service.media.MediaBrowserService.sendResult(Object)void
android.service.media.MediaBrowserService.detach)void
android.service.media.MediaBrowserService.getRootId)String
android.service.media.MediaBrowserService.getExtras)android.os.Bundle
android.service.media.MediaBrowserService.onCreate)void
android.service.media.MediaBrowserService.onBind(android.content.Intent)android.os.IBinder
android.service.media.MediaBrowserService.dump(java.io.FileDescriptor,java.io.PrintWriter,String)void
android.service.media.MediaBrowserService.onLoadChildren(String,android.service.media.MediaBrowserService.Result,android.os.Bundle)void
android.service.media.MediaBrowserService.onLoadItem(String,android.service.media.MediaBrowserService.Result)void
android.service.media.MediaBrowserService.setSessionToken(android.media.session.MediaSession.Token)void
android.service.media.MediaBrowserService.getBrowserRootHints)android.os.Bundle
android.service.media.MediaBrowserService.notifyChildrenChanged(String)void
android.service.media.MediaBrowserService.notifyChildrenChanged(String,android.os.Bundle)void
android.service.notification.Condition.writeToParcel(android.os.Parcel,int)void
android.service.notification.Condition.toString)String
android.service.notification.Condition.stateToString(int)String
android.service.notification.Condition.relevanceToString(int)String
android.service.notification.Condition.equals(Object)boolean
android.service.notification.Condition.hashCode)int
android.service.notification.Condition.describeContents)int
android.service.notification.Condition.copy)android.service.notification.Condition
android.service.notification.Condition.isValidId(android.net.Uri,String)boolean
android.service.notification.ConditionProviderService.onRequestConditions(int)void
android.service.notification.ConditionProviderService.requestRebind(android.content.ComponentName)void
android.service.notification.ConditionProviderService.requestUnbind)void
android.service.notification.ConditionProviderService.notifyCondition(android.service.notification.Condition)void
android.service.notification.ConditionProviderService.onBind(android.content.Intent)android.os.IBinder
android.service.notification.NotificationListenerService.equals(Object)boolean
android.service.notification.NotificationListenerService.describeContents)int
android.service.notification.NotificationListenerService.writeToParcel(Parcel,int)void
android.service.notification.NotificationListenerService.getRanking(String,android.service.notification.NotificationListenerService.Ranking)boolean
android.service.notification.NotificationListenerService.getKey)String
android.service.notification.NotificationListenerService.getRank)int
android.service.notification.NotificationListenerService.isAmbient)boolean
android.service.notification.NotificationListenerService.getSuppressedVisualEffects)int
android.service.notification.NotificationListenerService.matchesInterruptionFilter)boolean
android.service.notification.NotificationListenerService.getImportance)int
android.service.notification.NotificationListenerService.getImportanceExplanation)CharSequence
android.service.notification.NotificationListenerService.getOverrideGroupKey)String
android.service.notification.NotificationListenerService.getChannel)NotificationChannel
android.service.notification.NotificationListenerService.getUserSentiment)int
android.service.notification.NotificationListenerService.getSmartActions)java.util.List
android.service.notification.NotificationListenerService.getSmartReplies)java.util.List
android.service.notification.NotificationListenerService.canShowBadge)boolean
android.service.notification.NotificationListenerService.isSuspended)boolean
android.service.notification.NotificationListenerService.getLastAudiblyAlertedMillis)long
android.service.notification.NotificationListenerService.canBubble)boolean
android.service.notification.NotificationListenerService.equals(Object)boolean
android.service.notification.NotificationListenerService.attachBaseContext(Context)void
android.service.notification.NotificationListenerService.onNotificationPosted(android.service.notification.StatusBarNotification)void
android.service.notification.NotificationListenerService.onNotificationPosted(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService.RankingMap)void
android.service.notification.NotificationListenerService.onNotificationRemoved(android.service.notification.StatusBarNotification)void
android.service.notification.NotificationListenerService.onNotificationRemoved(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService.RankingMap)void
android.service.notification.NotificationListenerService.onNotificationRemoved(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService.RankingMap,int)void
android.service.notification.NotificationListenerService.onListenerConnected)void
android.service.notification.NotificationListenerService.onListenerDisconnected)void
android.service.notification.NotificationListenerService.onNotificationRankingUpdate(android.service.notification.NotificationListenerService.RankingMap)void
android.service.notification.NotificationListenerService.onListenerHintsChanged(int)void
android.service.notification.NotificationListenerService.onSilentStatusBarIconsVisibilityChanged(boolean)void
android.service.notification.NotificationListenerService.onNotificationChannelModified(String,UserHandle,NotificationChannel,int)void
android.service.notification.NotificationListenerService.onNotificationChannelGroupModified(String,UserHandle,NotificationChannelGroup,int)void
android.service.notification.NotificationListenerService.onInterruptionFilterChanged(int)void
android.service.notification.NotificationListenerService.cancelNotification(String,String,int)void
android.service.notification.NotificationListenerService.cancelNotification(String)void
android.service.notification.NotificationListenerService.cancelAllNotifications)void
android.service.notification.NotificationListenerService.cancelNotifications(String)void
android.service.notification.NotificationListenerService.snoozeNotification(String,long)void
android.service.notification.NotificationListenerService.setNotificationsShown(String)void
android.service.notification.NotificationListenerService.updateNotificationChannel(String,UserHandle,NotificationChannel)void
android.service.notification.NotificationListenerService.getNotificationChannels(String,UserHandle)java.util.List
android.service.notification.NotificationListenerService.getNotificationChannelGroups(String,UserHandle)java.util.List
android.service.notification.NotificationListenerService.getCurrentListenerHints)int
android.service.notification.NotificationListenerService.getCurrentInterruptionFilter)int
android.service.notification.NotificationListenerService.clearRequestedListenerHints)void
android.service.notification.NotificationListenerService.requestListenerHints(int)void
android.service.notification.NotificationListenerService.requestInterruptionFilter(int)void
android.service.notification.NotificationListenerService.getCurrentRanking)android.service.notification.NotificationListenerService.RankingMap
android.service.notification.NotificationListenerService.onBind(Intent)IBinder
android.service.notification.NotificationListenerService.onDestroy)void
android.service.notification.NotificationListenerService.requestRebind(ComponentName)void
android.service.notification.NotificationListenerService.requestUnbind)void
android.service.notification.StatusBarNotification.isGroup)boolean
android.service.notification.StatusBarNotification.writeToParcel(Parcel,int)void
android.service.notification.StatusBarNotification.describeContents)int
android.service.notification.StatusBarNotification.clone)android.service.notification.StatusBarNotification
android.service.notification.StatusBarNotification.toString)String
android.service.notification.StatusBarNotification.isOngoing)boolean
android.service.notification.StatusBarNotification.isClearable)boolean
android.service.notification.StatusBarNotification.getUserId)int
android.service.notification.StatusBarNotification.getPackageName)String
android.service.notification.StatusBarNotification.getId)int
android.service.notification.StatusBarNotification.getTag)String
android.service.notification.StatusBarNotification.getUid)int
android.service.notification.StatusBarNotification.getOpPkg)String
android.service.notification.StatusBarNotification.getNotification)android.app.Notification
android.service.notification.StatusBarNotification.getUser)UserHandle
android.service.notification.StatusBarNotification.getPostTime)long
android.service.notification.StatusBarNotification.getKey)String
android.service.notification.StatusBarNotification.getGroupKey)String
android.service.notification.StatusBarNotification.setOverrideGroupKey(String)void
android.service.notification.StatusBarNotification.getOverrideGroupKey)String
android.service.notification.ZenPolicy.build)android.service.notification.ZenPolicy
android.service.notification.ZenPolicy.allowAllSounds)Builder
android.service.notification.ZenPolicy.disallowAllSounds)Builder
android.service.notification.ZenPolicy.showAllVisualEffects)Builder
android.service.notification.ZenPolicy.hideAllVisualEffects)Builder
android.service.notification.ZenPolicy.allowReminders(boolean)Builder
android.service.notification.ZenPolicy.allowEvents(boolean)Builder
android.service.notification.ZenPolicy.allowMessages(int)Builder
android.service.notification.ZenPolicy.allowCalls(int)Builder
android.service.notification.ZenPolicy.allowRepeatCallers(boolean)Builder
android.service.notification.ZenPolicy.allowAlarms(boolean)Builder
android.service.notification.ZenPolicy.allowMedia(boolean)Builder
android.service.notification.ZenPolicy.allowSystem(boolean)Builder
android.service.notification.ZenPolicy.showFullScreenIntent(boolean)Builder
android.service.notification.ZenPolicy.showLights(boolean)Builder
android.service.notification.ZenPolicy.showPeeking(boolean)Builder
android.service.notification.ZenPolicy.showStatusBarIcons(boolean)Builder
android.service.notification.ZenPolicy.showBadges(boolean)Builder
android.service.notification.ZenPolicy.showInAmbientDisplay(boolean)Builder
android.service.notification.ZenPolicy.showInNotificationList(boolean)Builder
android.service.notification.ZenPolicy.getPriorityMessageSenders)int
android.service.notification.ZenPolicy.getPriorityCallSenders)int
android.service.notification.ZenPolicy.getPriorityCategoryReminders)int
android.service.notification.ZenPolicy.getPriorityCategoryEvents)int
android.service.notification.ZenPolicy.getPriorityCategoryMessages)int
android.service.notification.ZenPolicy.getPriorityCategoryCalls)int
android.service.notification.ZenPolicy.getPriorityCategoryRepeatCallers)int
android.service.notification.ZenPolicy.getPriorityCategoryAlarms)int
android.service.notification.ZenPolicy.getPriorityCategoryMedia)int
android.service.notification.ZenPolicy.getPriorityCategorySystem)int
android.service.notification.ZenPolicy.getVisualEffectFullScreenIntent)int
android.service.notification.ZenPolicy.getVisualEffectLights)int
android.service.notification.ZenPolicy.getVisualEffectPeek)int
android.service.notification.ZenPolicy.getVisualEffectStatusBar)int
android.service.notification.ZenPolicy.getVisualEffectBadge)int
android.service.notification.ZenPolicy.getVisualEffectAmbient)int
android.service.notification.ZenPolicy.getVisualEffectNotificationList)int
android.service.notification.ZenPolicy.describeContents)int
android.service.notification.ZenPolicy.writeToParcel(android.os.Parcel,int)void
android.service.notification.ZenPolicy.toString)String
android.service.notification.ZenPolicy.equals(Object)boolean
android.service.notification.ZenPolicy.hashCode)int
android.service.quicksettings.Tile.getState)int
android.service.quicksettings.Tile.setState(int)void
android.service.quicksettings.Tile.getIcon)android.graphics.drawable.Icon
android.service.quicksettings.Tile.setIcon(android.graphics.drawable.Icon)void
android.service.quicksettings.Tile.getLabel)CharSequence
android.service.quicksettings.Tile.setLabel(CharSequence)void
android.service.quicksettings.Tile.getSubtitle)CharSequence
android.service.quicksettings.Tile.setSubtitle(CharSequence)void
android.service.quicksettings.Tile.getContentDescription)CharSequence
android.service.quicksettings.Tile.setContentDescription(CharSequence)void
android.service.quicksettings.Tile.describeContents)int
android.service.quicksettings.Tile.updateTile)void
android.service.quicksettings.Tile.writeToParcel(android.os.Parcel,int)void
android.service.quicksettings.TileService.onDestroy)void
android.service.quicksettings.TileService.onTileAdded)void
android.service.quicksettings.TileService.onTileRemoved)void
android.service.quicksettings.TileService.onStartListening)void
android.service.quicksettings.TileService.onStopListening)void
android.service.quicksettings.TileService.onClick)void
android.service.quicksettings.TileService.showDialog(android.app.Dialog)void
android.service.quicksettings.TileService.unlockAndRun(Runnable)void
android.service.quicksettings.TileService.isSecure)boolean
android.service.quicksettings.TileService.isLocked)boolean
android.service.quicksettings.TileService.startActivityAndCollapse(Intent)void
android.service.quicksettings.TileService.getQsTile)android.service.quicksettings.Tile
android.service.quicksettings.TileService.onBind(Intent)android.os.IBinder
android.service.quicksettings.TileService.requestListeningState(Context,ComponentName)void
android.service.restrictions.RestrictionsReceiver.onReceive(Context,Intent)void
android.service.textservice.SpellCheckerService.onCancel)void
android.service.textservice.SpellCheckerService.onClose)void
android.service.textservice.SpellCheckerService.getLocale)String
android.service.textservice.SpellCheckerService.getBundle)android.os.Bundle
android.service.textservice.SpellCheckerService.onBind(android.content.Intent)android.os.IBinder
android.service.voice.AlwaysOnHotwordDetector.getCaptureAudioFormat)android.media.AudioFormat
android.service.voice.AlwaysOnHotwordDetector.getSupportedRecognitionModes)int
android.service.voice.AlwaysOnHotwordDetector.startRecognition(int)boolean
android.service.voice.AlwaysOnHotwordDetector.stopRecognition)boolean
android.service.voice.AlwaysOnHotwordDetector.createEnrollIntent)android.content.Intent
android.service.voice.AlwaysOnHotwordDetector.createUnEnrollIntent)android.content.Intent
android.service.voice.AlwaysOnHotwordDetector.createReEnrollIntent)android.content.Intent
android.service.voice.VoiceInteractionService.onLaunchVoiceAssistFromKeyguard)void
android.service.voice.VoiceInteractionService.isActiveService(Context,ComponentName)boolean
android.service.voice.VoiceInteractionService.setDisabledShowContext(int)void
android.service.voice.VoiceInteractionService.getDisabledShowContext)int
android.service.voice.VoiceInteractionService.showSession(android.os.Bundle,int)void
android.service.voice.VoiceInteractionService.onGetSupportedVoiceActions(java.util.Set)java.util.Set
android.service.voice.VoiceInteractionService.onBind(Intent)android.os.IBinder
android.service.voice.VoiceInteractionService.onReady)void
android.service.voice.VoiceInteractionService.onShutdown)void
android.service.voice.VoiceInteractionService.createAlwaysOnHotwordDetector(String,java.util.Locale,AlwaysOnHotwordDetector.Callback)android.service.voice.AlwaysOnHotwordDetector
android.service.voice.VoiceInteractionService.setUiHints(android.os.Bundle)void
android.service.voice.VoiceInteractionService.dump(java.io.FileDescriptor,java.io.PrintWriter,String)void
android.service.voice.VoiceInteractionSession.getCallingUid)int
android.service.voice.VoiceInteractionSession.getCallingPackage)String
android.service.voice.VoiceInteractionSession.getExtras)Bundle
android.service.voice.VoiceInteractionSession.isActive)boolean
android.service.voice.VoiceInteractionSession.cancel)void
android.service.voice.VoiceInteractionSession.toString)String
android.service.voice.VoiceInteractionSession.getPrompt)CharSequence
android.service.voice.VoiceInteractionSession.sendIntermediatePickOptionResult(android.app.VoiceInteractor.PickOptionRequest.Option,Bundle)void
android.service.voice.VoiceInteractionSession.sendPickOptionResult(android.app.VoiceInteractor.PickOptionRequest.Option,Bundle)void
android.service.voice.VoiceInteractionSession.getPrompt)CharSequence
android.service.voice.VoiceInteractionSession.sendConfirmationResult(boolean,Bundle)void
android.service.voice.VoiceInteractionSession.getMessage)CharSequence
android.service.voice.VoiceInteractionSession.sendCompleteResult(Bundle)void
android.service.voice.VoiceInteractionSession.getCommand)String
android.service.voice.VoiceInteractionSession.sendIntermediateResult(Bundle)void
android.service.voice.VoiceInteractionSession.sendResult(Bundle)void
android.service.voice.VoiceInteractionSession.isFocused)boolean
android.service.voice.VoiceInteractionSession.getIndex)int
android.service.voice.VoiceInteractionSession.getCount)int
android.service.voice.VoiceInteractionSession.getActivityId)android.service.voice.VoiceInteractionSession.ActivityId
android.service.voice.VoiceInteractionSession.getAssistData)Bundle
android.service.voice.VoiceInteractionSession.getAssistStructure)android.app.assist.AssistStructure
android.service.voice.VoiceInteractionSession.getAssistContent)android.app.assist.AssistContent
android.service.voice.VoiceInteractionSession.equals(Object)boolean
android.service.voice.VoiceInteractionSession.hashCode)int
android.service.voice.VoiceInteractionSession.getMessage)CharSequence
android.service.voice.VoiceInteractionSession.sendAbortResult(Bundle)void
android.service.voice.VoiceInteractionSession.getContext)Context
android.service.voice.VoiceInteractionSession.setDisabledShowContext(int)void
android.service.voice.VoiceInteractionSession.getDisabledShowContext)int
android.service.voice.VoiceInteractionSession.getUserDisabledShowContext)int
android.service.voice.VoiceInteractionSession.show(Bundle,int)void
android.service.voice.VoiceInteractionSession.hide)void
android.service.voice.VoiceInteractionSession.setUiEnabled(boolean)void
android.service.voice.VoiceInteractionSession.setTheme(int)void
android.service.voice.VoiceInteractionSession.startVoiceActivity(Intent)void
android.service.voice.VoiceInteractionSession.startAssistantActivity(Intent)void
android.service.voice.VoiceInteractionSession.requestDirectActions(android.service.voice.VoiceInteractionSession.ActivityId,CancellationSignal,java.util.concurrent.Executor,java.util.function.Consumer)void
android.service.voice.VoiceInteractionSession.onDirectActionsInvalidated(android.service.voice.VoiceInteractionSession.ActivityId)void
android.service.voice.VoiceInteractionSession.performDirectAction(DirectAction,Bundle,CancellationSignal,java.util.concurrent.Executor,java.util.function.Consumer)void
android.service.voice.VoiceInteractionSession.setKeepAwake(boolean)void
android.service.voice.VoiceInteractionSession.closeSystemDialogs)void
android.service.voice.VoiceInteractionSession.getLayoutInflater)LayoutInflater
android.service.voice.VoiceInteractionSession.getWindow)Dialog
android.service.voice.VoiceInteractionSession.finish)void
android.service.voice.VoiceInteractionSession.onCreate)void
android.service.voice.VoiceInteractionSession.onPrepareShow(Bundle,int)void
android.service.voice.VoiceInteractionSession.onShow(Bundle,int)void
android.service.voice.VoiceInteractionSession.onHide)void
android.service.voice.VoiceInteractionSession.onDestroy)void
android.service.voice.VoiceInteractionSession.onCreateContentView)View
android.service.voice.VoiceInteractionSession.setContentView(View)void
android.service.voice.VoiceInteractionSession.onAssistStructureFailure(Throwable)void
android.service.voice.VoiceInteractionSession.onHandleAssist(Bundle,android.app.assist.AssistStructure,android.app.assist.AssistContent)void
android.service.voice.VoiceInteractionSession.onHandleAssist(AssistState)void
android.service.voice.VoiceInteractionSession.onHandleAssistSecondary(Bundle,android.app.assist.AssistStructure,android.app.assist.AssistContent,int,int)void
android.service.voice.VoiceInteractionSession.onHandleScreenshot(Bitmap)void
android.service.voice.VoiceInteractionSession.onKeyDown(int,KeyEvent)boolean
android.service.voice.VoiceInteractionSession.onKeyLongPress(int,KeyEvent)boolean
android.service.voice.VoiceInteractionSession.onKeyUp(int,KeyEvent)boolean
android.service.voice.VoiceInteractionSession.onKeyMultiple(int,int,KeyEvent)boolean
android.service.voice.VoiceInteractionSession.onBackPressed)void
android.service.voice.VoiceInteractionSession.onCloseSystemDialogs)void
android.service.voice.VoiceInteractionSession.onLockscreenShown)void
android.service.voice.VoiceInteractionSession.onConfigurationChanged(android.content.res.Configuration)void
android.service.voice.VoiceInteractionSession.onLowMemory)void
android.service.voice.VoiceInteractionSession.onTrimMemory(int)void
android.service.voice.VoiceInteractionSession.onComputeInsets(Insets)void
android.service.voice.VoiceInteractionSession.onTaskStarted(Intent,int)void
android.service.voice.VoiceInteractionSession.onTaskFinished(Intent,int)void
android.service.voice.VoiceInteractionSession.onRequestConfirmation(ConfirmationRequest)void
android.service.voice.VoiceInteractionSession.onRequestPickOption(PickOptionRequest)void
android.service.voice.VoiceInteractionSession.onRequestCompleteVoice(CompleteVoiceRequest)void
android.service.voice.VoiceInteractionSession.onRequestAbortVoice(AbortVoiceRequest)void
android.service.voice.VoiceInteractionSession.onRequestCommand(CommandRequest)void
android.service.voice.VoiceInteractionSession.onCancelRequest(android.service.voice.VoiceInteractionSession.Request)void
android.service.voice.VoiceInteractionSession.dump(String,java.io.FileDescriptor,java.io.PrintWriter,String)void
android.service.voice.VoiceInteractionSessionService.onCreate)void
android.service.voice.VoiceInteractionSessionService.onBind(android.content.Intent)android.os.IBinder
android.service.voice.VoiceInteractionSessionService.onConfigurationChanged(android.content.res.Configuration)void
android.service.voice.VoiceInteractionSessionService.onLowMemory)void
android.service.voice.VoiceInteractionSessionService.onTrimMemory(int)void
android.service.voice.VoiceInteractionSessionService.dump(java.io.FileDescriptor,java.io.PrintWriter,String)void
android.service.vr.VrListenerService.onBind(Intent)android.os.IBinder
android.service.vr.VrListenerService.onCurrentVrActivityChanged(ComponentName)void
android.service.vr.VrListenerService.isVrModePackageEnabled(Context,ComponentName)boolean
android.service.wallpaper.WallpaperService.getSurfaceHolder)SurfaceHolder
android.service.wallpaper.WallpaperService.getDesiredMinimumWidth)int
android.service.wallpaper.WallpaperService.getDesiredMinimumHeight)int
android.service.wallpaper.WallpaperService.isVisible)boolean
android.service.wallpaper.WallpaperService.isPreview)boolean
android.service.wallpaper.WallpaperService.setTouchEventsEnabled(boolean)void
android.service.wallpaper.WallpaperService.setOffsetNotificationsEnabled(boolean)void
android.service.wallpaper.WallpaperService.onCreate(SurfaceHolder)void
android.service.wallpaper.WallpaperService.onDestroy)void
android.service.wallpaper.WallpaperService.onVisibilityChanged(boolean)void
android.service.wallpaper.WallpaperService.onApplyWindowInsets(WindowInsets)void
android.service.wallpaper.WallpaperService.onTouchEvent(MotionEvent)void
android.service.wallpaper.WallpaperService.onOffsetsChanged(float,float,float,float,int,int)void
android.service.wallpaper.WallpaperService.onCommand(String,int,int,int,android.os.Bundle,boolean)android.os.Bundle
android.service.wallpaper.WallpaperService.onDesiredSizeChanged(int,int)void
android.service.wallpaper.WallpaperService.onSurfaceChanged(SurfaceHolder,int,int,int)void
android.service.wallpaper.WallpaperService.onSurfaceRedrawNeeded(SurfaceHolder)void
android.service.wallpaper.WallpaperService.onSurfaceCreated(SurfaceHolder)void
android.service.wallpaper.WallpaperService.onSurfaceDestroyed(SurfaceHolder)void
android.service.wallpaper.WallpaperService.notifyColorsChanged)void
android.service.wallpaper.WallpaperService.onComputeColors)android.app.WallpaperColors
android.service.wallpaper.WallpaperService.dump(String,java.io.FileDescriptor,java.io.PrintWriter,String)void
android.service.wallpaper.WallpaperService.getDisplayContext)android.content.Context
android.service.wallpaper.WallpaperService.onCreate)void
android.service.wallpaper.WallpaperService.onDestroy)void
android.service.wallpaper.WallpaperService.onBind(android.content.Intent)android.os.IBinder
android.service.wallpaper.WallpaperService.dump(java.io.FileDescriptor,java.io.PrintWriter,String)void
android.speech.RecognitionService.beginningOfSpeech)void
android.speech.RecognitionService.bufferReceived(byte)void
android.speech.RecognitionService.endOfSpeech)void
android.speech.RecognitionService.error(int)void
android.speech.RecognitionService.partialResults(Bundle)void
android.speech.RecognitionService.readyForSpeech(Bundle)void
android.speech.RecognitionService.results(Bundle)void
android.speech.RecognitionService.rmsChanged(float)void
android.speech.RecognitionService.getCallingUid)int
android.speech.RecognitionService.onBind(android.content.Intent)IBinder
android.speech.RecognitionService.onDestroy)void
android.speech.RecognizerIntent.getVoiceDetailsIntent(android.content.Context)android.content.Intent
android.speech.SpeechRecognizer.isRecognitionAvailable(Context)boolean
android.speech.SpeechRecognizer.createSpeechRecognizer(Context)android.speech.SpeechRecognizer
android.speech.SpeechRecognizer.createSpeechRecognizer(Context,ComponentName)android.speech.SpeechRecognizer
android.speech.SpeechRecognizer.setRecognitionListener(android.speech.RecognitionListener)void
android.speech.SpeechRecognizer.startListening(Intent)void
android.speech.SpeechRecognizer.stopListening)void
android.speech.SpeechRecognizer.cancel)void
android.speech.SpeechRecognizer.destroy)void
android.speech.tts.SynthesisCallback.rangeStart(int,int,int)void
android.speech.tts.SynthesisRequest.getText)String
android.speech.tts.SynthesisRequest.getCharSequenceText)CharSequence
android.speech.tts.SynthesisRequest.getVoiceName)String
android.speech.tts.SynthesisRequest.getLanguage)String
android.speech.tts.SynthesisRequest.getCountry)String
android.speech.tts.SynthesisRequest.getVariant)String
android.speech.tts.SynthesisRequest.getSpeechRate)int
android.speech.tts.SynthesisRequest.getPitch)int
android.speech.tts.SynthesisRequest.getParams)android.os.Bundle
android.speech.tts.SynthesisRequest.getCallerUid)int
android.speech.tts.TextToSpeech.toString)String
android.speech.tts.TextToSpeech.shutdown)void
android.speech.tts.TextToSpeech.addSpeech(String,String,int)int
android.speech.tts.TextToSpeech.addSpeech(CharSequence,String,int)int
android.speech.tts.TextToSpeech.addSpeech(String,String)int
android.speech.tts.TextToSpeech.addSpeech(CharSequence,java.io.File)int
android.speech.tts.TextToSpeech.addEarcon(String,String,int)int
android.speech.tts.TextToSpeech.addEarcon(String,String)int
android.speech.tts.TextToSpeech.addEarcon(String,java.io.File)int
android.speech.tts.TextToSpeech.speak(CharSequence,int,android.os.Bundle,String)int
android.speech.tts.TextToSpeech.speak(String,int,HashMap)int
android.speech.tts.TextToSpeech.playEarcon(String,int,android.os.Bundle,String)int
android.speech.tts.TextToSpeech.playEarcon(String,int,HashMap)int
android.speech.tts.TextToSpeech.playSilentUtterance(long,int,String)int
android.speech.tts.TextToSpeech.playSilence(long,int,HashMap)int
android.speech.tts.TextToSpeech.getFeatures(Locale)Set
android.speech.tts.TextToSpeech.isSpeaking)boolean
android.speech.tts.TextToSpeech.stop)int
android.speech.tts.TextToSpeech.setSpeechRate(float)int
android.speech.tts.TextToSpeech.setPitch(float)int
android.speech.tts.TextToSpeech.setAudioAttributes(android.media.AudioAttributes)int
android.speech.tts.TextToSpeech.getDefaultLanguage)Locale
android.speech.tts.TextToSpeech.setLanguage(Locale)int
android.speech.tts.TextToSpeech.getLanguage)Locale
android.speech.tts.TextToSpeech.getAvailableLanguages)Set
android.speech.tts.TextToSpeech.getVoices)Set
android.speech.tts.TextToSpeech.setVoice(android.speech.tts.Voice)int
android.speech.tts.TextToSpeech.getVoice)android.speech.tts.Voice
android.speech.tts.TextToSpeech.getDefaultVoice)android.speech.tts.Voice
android.speech.tts.TextToSpeech.isLanguageAvailable(Locale)int
android.speech.tts.TextToSpeech.synthesizeToFile(CharSequence,android.os.Bundle,java.io.File,String)int
android.speech.tts.TextToSpeech.synthesizeToFile(String,HashMap,String)int
android.speech.tts.TextToSpeech.setOnUtteranceCompletedListener(android.speech.tts.TextToSpeech.OnUtteranceCompletedListener)int
android.speech.tts.TextToSpeech.setOnUtteranceProgressListener(android.speech.tts.UtteranceProgressListener)int
android.speech.tts.TextToSpeech.setEngineByPackageName(String)int
android.speech.tts.TextToSpeech.getDefaultEngine)String
android.speech.tts.TextToSpeech.areDefaultsEnforced)boolean
android.speech.tts.TextToSpeech.getEngines)List
android.speech.tts.TextToSpeech.getMaxSpeechInputLength)int
android.speech.tts.TextToSpeechService.onCreate)void
android.speech.tts.TextToSpeechService.onDestroy)void
android.speech.tts.TextToSpeechService.onGetFeaturesForLanguage(String,String,String)java.util.Set
android.speech.tts.TextToSpeechService.onGetVoices)java.util.List
android.speech.tts.TextToSpeechService.onGetDefaultVoiceNameFor(String,String,String)String
android.speech.tts.TextToSpeechService.onLoadVoice(String)int
android.speech.tts.TextToSpeechService.onIsValidVoiceName(String)int
android.speech.tts.TextToSpeechService.onBind(android.content.Intent)android.os.IBinder
android.speech.tts.UtteranceProgressListener.onError(String,int)void
android.speech.tts.UtteranceProgressListener.onStop(String,boolean)void
android.speech.tts.UtteranceProgressListener.onBeginSynthesis(String,int,int,int)void
android.speech.tts.UtteranceProgressListener.onAudioAvailable(String,byte)void
android.speech.tts.UtteranceProgressListener.onRangeStart(String,int,int,int)void
android.speech.tts.Voice.writeToParcel(android.os.Parcel,int)void
android.speech.tts.Voice.describeContents)int
android.speech.tts.Voice.getLocale)java.util.Locale
android.speech.tts.Voice.getQuality)int
android.speech.tts.Voice.getLatency)int
android.speech.tts.Voice.isNetworkConnectionRequired)boolean
android.speech.tts.Voice.getName)String
android.speech.tts.Voice.getFeatures)java.util.Set
android.speech.tts.Voice.toString)String
android.speech.tts.Voice.hashCode)int
android.speech.tts.Voice.equals(Object)boolean
android.system.ErrnoException.getMessage)String
android.system.Os.accept(java.io.FileDescriptor,InetSocketAddress)java.io.FileDescriptor
android.system.Os.access(String,int)boolean
android.system.Os.bind(java.io.FileDescriptor,InetAddress,int)void
android.system.Os.bind(java.io.FileDescriptor,SocketAddress)void
android.system.Os.chmod(String,int)void
android.system.Os.chown(String,int,int)void
android.system.Os.close(java.io.FileDescriptor)void
android.system.Os.connect(java.io.FileDescriptor,InetAddress,int)void
android.system.Os.connect(java.io.FileDescriptor,SocketAddress)void
android.system.Os.dup(java.io.FileDescriptor)java.io.FileDescriptor
android.system.Os.dup2(java.io.FileDescriptor,int)java.io.FileDescriptor
android.system.Os.execv(String,String)void
android.system.Os.execve(String,String,String)void
android.system.Os.fchmod(java.io.FileDescriptor,int)void
android.system.Os.fchown(java.io.FileDescriptor,int,int)void
android.system.Os.fdatasync(java.io.FileDescriptor)void
android.system.Os.fstat(java.io.FileDescriptor)android.system.StructStat
android.system.Os.fstatvfs(java.io.FileDescriptor)android.system.StructStatVfs
android.system.Os.fsync(java.io.FileDescriptor)void
android.system.Os.ftruncate(java.io.FileDescriptor,long)void
android.system.Os.gai_strerror(int)String
android.system.Os.getegid)int
android.system.Os.geteuid)int
android.system.Os.getgid)int
android.system.Os.getenv(String)String
android.system.Os.getpeername(java.io.FileDescriptor)SocketAddress
android.system.Os.getpid)int
android.system.Os.getppid)int
android.system.Os.getsockname(java.io.FileDescriptor)SocketAddress
android.system.Os.getsockoptTimeval(java.io.FileDescriptor,int,int)android.system.StructTimeval
android.system.Os.gettid)int
android.system.Os.getuid)int
android.system.Os.if_indextoname(int)String
android.system.Os.if_nametoindex(String)int
android.system.Os.inet_pton(int,String)InetAddress
android.system.Os.isatty(java.io.FileDescriptor)boolean
android.system.Os.kill(int,int)void
android.system.Os.lchown(String,int,int)void
android.system.Os.link(String,String)void
android.system.Os.listen(java.io.FileDescriptor,int)void
android.system.Os.lseek(java.io.FileDescriptor,long,int)long
android.system.Os.lstat(String)android.system.StructStat
android.system.Os.mincore(long,long,byte)void
android.system.Os.mkdir(String,int)void
android.system.Os.mkfifo(String,int)void
android.system.Os.mlock(long,long)void
android.system.Os.mmap(long,long,int,int,java.io.FileDescriptor,long)long
android.system.Os.msync(long,long,int)void
android.system.Os.munlock(long,long)void
android.system.Os.munmap(long,long)void
android.system.Os.open(String,int,int)java.io.FileDescriptor
android.system.Os.poll(android.system.StructPollfd,int)int
android.system.Os.posix_fallocate(java.io.FileDescriptor,long,long)void
android.system.Os.prctl(int,long,long,long,long)int
android.system.Os.pread(java.io.FileDescriptor,java.nio.ByteBuffer,long)int
android.system.Os.pread(java.io.FileDescriptor,byte,int,int,long)int
android.system.Os.pwrite(java.io.FileDescriptor,java.nio.ByteBuffer,long)int
android.system.Os.pwrite(java.io.FileDescriptor,byte,int,int,long)int
android.system.Os.read(java.io.FileDescriptor,java.nio.ByteBuffer)int
android.system.Os.read(java.io.FileDescriptor,byte,int,int)int
android.system.Os.readlink(String)String
android.system.Os.readv(java.io.FileDescriptor,Object,int,int)int
android.system.Os.recvfrom(java.io.FileDescriptor,java.nio.ByteBuffer,int,InetSocketAddress)int
android.system.Os.recvfrom(java.io.FileDescriptor,byte,int,int,int,InetSocketAddress)int
android.system.Os.remove(String)void
android.system.Os.removexattr(String,String)void
android.system.Os.rename(String,String)void
android.system.Os.sendfile(java.io.FileDescriptor,java.io.FileDescriptor,android.system.Int64Ref,long)long
android.system.Os.sendto(java.io.FileDescriptor,java.nio.ByteBuffer,int,InetAddress,int)int
android.system.Os.sendto(java.io.FileDescriptor,byte,int,int,int,InetAddress,int)int
android.system.Os.sendto(java.io.FileDescriptor,byte,int,int,int,SocketAddress)int
android.system.Os.setegid(int)void
android.system.Os.setenv(String,String,boolean)void
android.system.Os.seteuid(int)void
android.system.Os.setgid(int)void
android.system.Os.setsid)int
android.system.Os.setsockoptInt(java.io.FileDescriptor,int,int,int)void
android.system.Os.setsockoptTimeval(java.io.FileDescriptor,int,int,android.system.StructTimeval)void
android.system.Os.setuid(int)void
android.system.Os.setxattr(String,String,byte,int)void
android.system.Os.shutdown(java.io.FileDescriptor,int)void
android.system.Os.socket(int,int,int)java.io.FileDescriptor
android.system.Os.socketpair(int,int,int,java.io.FileDescriptor,java.io.FileDescriptor)void
android.system.Os.stat(String)android.system.StructStat
android.system.Os.statvfs(String)android.system.StructStatVfs
android.system.Os.strerror(int)String
android.system.Os.strsignal(int)String
android.system.Os.symlink(String,String)void
android.system.Os.sysconf(int)long
android.system.Os.tcdrain(java.io.FileDescriptor)void
android.system.Os.tcsendbreak(java.io.FileDescriptor,int)void
android.system.Os.umask(int)int
android.system.Os.uname)android.system.StructUtsname
android.system.Os.unsetenv(String)void
android.system.Os.write(java.io.FileDescriptor,java.nio.ByteBuffer)int
android.system.Os.write(java.io.FileDescriptor,byte,int,int)int
android.system.Os.writev(java.io.FileDescriptor,Object,int,int)int
android.system.OsConstants.S_ISBLK(int)boolean
android.system.OsConstants.S_ISCHR(int)boolean
android.system.OsConstants.S_ISDIR(int)boolean
android.system.OsConstants.S_ISFIFO(int)boolean
android.system.OsConstants.S_ISREG(int)boolean
android.system.OsConstants.S_ISLNK(int)boolean
android.system.OsConstants.S_ISSOCK(int)boolean
android.system.OsConstants.WEXITSTATUS(int)int
android.system.OsConstants.WCOREDUMP(int)boolean
android.system.OsConstants.WTERMSIG(int)int
android.system.OsConstants.WSTOPSIG(int)int
android.system.OsConstants.WIFEXITED(int)boolean
android.system.OsConstants.WIFSTOPPED(int)boolean
android.system.OsConstants.WIFSIGNALED(int)boolean
android.system.OsConstants.gaiName(int)String
android.system.OsConstants.errnoName(int)String
android.system.StructPollfd.toString)String
android.system.StructStat.toString)String
android.system.StructStatVfs.toString)String
android.system.StructTimespec.compareTo(android.system.StructTimespec)int
android.system.StructTimespec.equals(Object)boolean
android.system.StructTimespec.hashCode)int
android.system.StructTimespec.toString)String
android.system.StructTimeval.fromMillis(long)android.system.StructTimeval
android.system.StructTimeval.toMillis)long
android.system.StructTimeval.toString)String
android.system.StructTimeval.equals(Object)boolean
android.system.StructTimeval.hashCode)int
android.system.StructUtsname.toString)String
android.telecom.Call.getRttAudioMode)int
android.telecom.Call.setRttMode(int)void
android.telecom.Call.write(String)void
android.telecom.Call.read)String
android.telecom.Call.readImmediately)String
android.telecom.Call.can(int,int)boolean
android.telecom.Call.can(int)boolean
android.telecom.Call.capabilitiesToString(int)String
android.telecom.Call.hasProperty(int,int)boolean
android.telecom.Call.hasProperty(int)boolean
android.telecom.Call.propertiesToString(int)String
android.telecom.Call.getHandle)android.net.Uri
android.telecom.Call.getHandlePresentation)int
android.telecom.Call.getCallerDisplayName)String
android.telecom.Call.getCallerDisplayNamePresentation)int
android.telecom.Call.getAccountHandle)android.telecom.PhoneAccountHandle
android.telecom.Call.getCallCapabilities)int
android.telecom.Call.getCallProperties)int
android.telecom.Call.getDisconnectCause)android.telecom.DisconnectCause
android.telecom.Call.getConnectTimeMillis)long
android.telecom.Call.getGatewayInfo)android.telecom.GatewayInfo
android.telecom.Call.getVideoState)int
android.telecom.Call.getStatusHints)android.telecom.StatusHints
android.telecom.Call.getExtras)android.os.Bundle
android.telecom.Call.getIntentExtras)android.os.Bundle
android.telecom.Call.getCreationTimeMillis)long
android.telecom.Call.getCallDirection)int
android.telecom.Call.equals(Object)boolean
android.telecom.Call.hashCode)int
android.telecom.Call.toString)String
android.telecom.Call.onStateChanged(android.telecom.Call,int)void
android.telecom.Call.onParentChanged(android.telecom.Call,android.telecom.Call)void
android.telecom.Call.onChildrenChanged(android.telecom.Call,java.util.List)void
android.telecom.Call.onDetailsChanged(android.telecom.Call,android.telecom.Call.Details)void
android.telecom.Call.onCannedTextResponsesLoaded(android.telecom.Call,java.util.List)void
android.telecom.Call.onPostDialWait(android.telecom.Call,String)void
android.telecom.Call.onVideoCallChanged(android.telecom.Call,InCallService.VideoCall)void
android.telecom.Call.onCallDestroyed(android.telecom.Call)void
android.telecom.Call.onConferenceableCallsChanged(android.telecom.Call,java.util.List)void
android.telecom.Call.onConnectionEvent(android.telecom.Call,String,android.os.Bundle)void
android.telecom.Call.onRttModeChanged(android.telecom.Call,int)void
android.telecom.Call.onRttStatusChanged(android.telecom.Call,boolean,RttCall)void
android.telecom.Call.onRttRequest(android.telecom.Call,int)void
android.telecom.Call.onRttInitiationFailure(android.telecom.Call,int)void
android.telecom.Call.onHandoverComplete(android.telecom.Call)void
android.telecom.Call.onHandoverFailed(android.telecom.Call,int)void
android.telecom.Call.getRemainingPostDialSequence)String
android.telecom.Call.answer(int)void
android.telecom.Call.deflect(android.net.Uri)void
android.telecom.Call.reject(boolean,String)void
android.telecom.Call.disconnect)void
android.telecom.Call.hold)void
android.telecom.Call.unhold)void
android.telecom.Call.playDtmfTone(char)void
android.telecom.Call.stopDtmfTone)void
android.telecom.Call.postDialContinue(boolean)void
android.telecom.Call.phoneAccountSelected(android.telecom.PhoneAccountHandle,boolean)void
android.telecom.Call.conference(android.telecom.Call)void
android.telecom.Call.splitFromConference)void
android.telecom.Call.mergeConference)void
android.telecom.Call.swapConference)void
android.telecom.Call.pullExternalCall)void
android.telecom.Call.sendCallEvent(String,android.os.Bundle)void
android.telecom.Call.sendRttRequest)void
android.telecom.Call.respondToRttRequest(int,boolean)void
android.telecom.Call.handoverTo(android.telecom.PhoneAccountHandle,int,android.os.Bundle)void
android.telecom.Call.stopRtt)void
android.telecom.Call.putExtras(android.os.Bundle)void
android.telecom.Call.removeExtras(java.util.List)void
android.telecom.Call.getParent)android.telecom.Call
android.telecom.Call.getChildren)java.util.List
android.telecom.Call.getConferenceableCalls)java.util.List
android.telecom.Call.getState)int
android.telecom.Call.getCannedTextResponses)java.util.List
android.telecom.Call.getDetails)android.telecom.Call.Details
android.telecom.Call.getRttCall)RttCall
android.telecom.Call.isRttActive)boolean
android.telecom.Call.registerCallback(Callback)void
android.telecom.Call.registerCallback(Callback,android.os.Handler)void
android.telecom.Call.unregisterCallback(Callback)void
android.telecom.Call.toString)String
android.telecom.CallAudioState.equals(Object)boolean
android.telecom.CallAudioState.toString)String
android.telecom.CallAudioState.isMuted)boolean
android.telecom.CallAudioState.getRoute)int
android.telecom.CallAudioState.getSupportedRouteMask)int
android.telecom.CallAudioState.getActiveBluetoothDevice)android.bluetooth.BluetoothDevice
android.telecom.CallAudioState.getSupportedBluetoothDevices)java.util.Collection
android.telecom.CallAudioState.audioRouteToString(int)String
android.telecom.CallAudioState.describeContents)int
android.telecom.CallAudioState.writeToParcel(android.os.Parcel,int)void
android.telecom.CallRedirectionService.placeCallUnmodified)void
android.telecom.CallRedirectionService.redirectCall(android.net.Uri,android.telecom.PhoneAccountHandle,boolean)void
android.telecom.CallRedirectionService.cancelCall)void
android.telecom.CallRedirectionService.onBind(android.content.Intent)android.os.IBinder
android.telecom.CallRedirectionService.onUnbind(android.content.Intent)boolean
android.telecom.CallScreeningService.setDisallowCall(boolean)android.telecom.CallScreeningService.Builder
android.telecom.CallScreeningService.setRejectCall(boolean)android.telecom.CallScreeningService.Builder
android.telecom.CallScreeningService.setSilenceCall(boolean)android.telecom.CallScreeningService.Builder
android.telecom.CallScreeningService.setSkipCallLog(boolean)android.telecom.CallScreeningService.Builder
android.telecom.CallScreeningService.setSkipNotification(boolean)android.telecom.CallScreeningService.Builder
android.telecom.CallScreeningService.build)android.telecom.CallScreeningService.CallResponse
android.telecom.CallScreeningService.getDisallowCall)boolean
android.telecom.CallScreeningService.getRejectCall)boolean
android.telecom.CallScreeningService.getSilenceCall)boolean
android.telecom.CallScreeningService.getSkipCallLog)boolean
android.telecom.CallScreeningService.getSkipNotification)boolean
android.telecom.CallScreeningService.onBind(android.content.Intent)android.os.IBinder
android.telecom.CallScreeningService.onUnbind(android.content.Intent)boolean
android.telecom.CallScreeningService.respondToCall(Call.Details,android.telecom.CallScreeningService.CallResponse)void
android.telecom.Conference.getPhoneAccountHandle)android.telecom.PhoneAccountHandle
android.telecom.Conference.getConnections)java.util.List
android.telecom.Conference.getState)int
android.telecom.Conference.getConnectionCapabilities)int
android.telecom.Conference.getConnectionProperties)int
android.telecom.Conference.getCallAudioState)android.telecom.CallAudioState
android.telecom.Conference.getVideoState)int
android.telecom.Conference.onDisconnect)void
android.telecom.Conference.onSeparate(android.telecom.Connection)void
android.telecom.Conference.onMerge(android.telecom.Connection)void
android.telecom.Conference.onHold)void
android.telecom.Conference.onUnhold)void
android.telecom.Conference.onMerge)void
android.telecom.Conference.onSwap)void
android.telecom.Conference.onPlayDtmfTone(char)void
android.telecom.Conference.onStopDtmfTone)void
android.telecom.Conference.onCallAudioStateChanged(android.telecom.CallAudioState)void
android.telecom.Conference.onConnectionAdded(android.telecom.Connection)void
android.telecom.Conference.setOnHold)void
android.telecom.Conference.setDialing)void
android.telecom.Conference.setActive)void
android.telecom.Conference.setDisconnected(android.telecom.DisconnectCause)void
android.telecom.Conference.getDisconnectCause)android.telecom.DisconnectCause
android.telecom.Conference.setConnectionCapabilities(int)void
android.telecom.Conference.setConnectionProperties(int)void
android.telecom.Conference.addConnection(android.telecom.Connection)boolean
android.telecom.Conference.removeConnection(android.telecom.Connection)void
android.telecom.Conference.setConferenceableConnections(java.util.List)void
android.telecom.Conference.setVideoState(android.telecom.Connection,int)void
android.telecom.Conference.setVideoProvider(android.telecom.Connection,Connection.VideoProvider)void
android.telecom.Conference.getConferenceableConnections)java.util.List
android.telecom.Conference.destroy)void
android.telecom.Conference.setConnectionTime(long)void
android.telecom.Conference.setConnectionStartElapsedRealTime(long)void
android.telecom.Conference.getConnectionTime)long
android.telecom.Conference.toString)String
android.telecom.Conference.setStatusHints(android.telecom.StatusHints)void
android.telecom.Conference.getStatusHints)android.telecom.StatusHints
android.telecom.Conference.setExtras(android.os.Bundle)void
android.telecom.Conference.putExtras(android.os.Bundle)void
android.telecom.Conference.removeExtras(java.util.List)void
android.telecom.Conference.getExtras)android.os.Bundle
android.telecom.Conference.onExtrasChanged(android.os.Bundle)void
android.telecom.Connection.receiveSessionModifyRequest(android.telecom.VideoProfile)void
android.telecom.Connection.receiveSessionModifyResponse(int,android.telecom.VideoProfile,android.telecom.VideoProfile)void
android.telecom.Connection.handleCallSessionEvent(int)void
android.telecom.Connection.changePeerDimensions(int,int)void
android.telecom.Connection.setCallDataUsage(long)void
android.telecom.Connection.changeCameraCapabilities(VideoProfile.CameraCapabilities)void
android.telecom.Connection.changeVideoQuality(int)void
android.telecom.Connection.write(String)void
android.telecom.Connection.read)String
android.telecom.Connection.readImmediately)String
android.telecom.Connection.capabilitiesToString(int)String
android.telecom.Connection.propertiesToString(int)String
android.telecom.Connection.getAddress)android.net.Uri
android.telecom.Connection.getAddressPresentation)int
android.telecom.Connection.getCallerDisplayName)String
android.telecom.Connection.getCallerDisplayNamePresentation)int
android.telecom.Connection.getState)int
android.telecom.Connection.getCallAudioState)android.telecom.CallAudioState
android.telecom.Connection.getConference)android.telecom.Conference
android.telecom.Connection.isRingbackRequested)boolean
android.telecom.Connection.getAudioModeIsVoip)boolean
android.telecom.Connection.getStatusHints)android.telecom.StatusHints
android.telecom.Connection.getExtras)android.os.Bundle
android.telecom.Connection.getDisconnectCause)android.telecom.DisconnectCause
android.telecom.Connection.stateToString(int)String
android.telecom.Connection.getConnectionCapabilities)int
android.telecom.Connection.getConnectionProperties)int
android.telecom.Connection.setAddress(android.net.Uri,int)void
android.telecom.Connection.setCallerDisplayName(String,int)void
android.telecom.Connection.setVideoState(int)void
android.telecom.Connection.setActive)void
android.telecom.Connection.setRinging)void
android.telecom.Connection.setInitializing)void
android.telecom.Connection.setInitialized)void
android.telecom.Connection.setDialing)void
android.telecom.Connection.setPulling)void
android.telecom.Connection.setOnHold)void
android.telecom.Connection.setVideoProvider(VideoProvider)void
android.telecom.Connection.getVideoProvider)VideoProvider
android.telecom.Connection.setDisconnected(android.telecom.DisconnectCause)void
android.telecom.Connection.setPostDialWait(String)void
android.telecom.Connection.setNextPostDialChar(char)void
android.telecom.Connection.setRingbackRequested(boolean)void
android.telecom.Connection.setConnectionCapabilities(int)void
android.telecom.Connection.setConnectionProperties(int)void
android.telecom.Connection.destroy)void
android.telecom.Connection.setAudioModeIsVoip(boolean)void
android.telecom.Connection.setStatusHints(android.telecom.StatusHints)void
android.telecom.Connection.setConferenceableConnections(java.util.List)void
android.telecom.Connection.setConferenceables(java.util.List)void
android.telecom.Connection.getConferenceables)java.util.List
android.telecom.Connection.setExtras(android.os.Bundle)void
android.telecom.Connection.putExtras(android.os.Bundle)void
android.telecom.Connection.removeExtras(java.util.List)void
android.telecom.Connection.setAudioRoute(int)void
android.telecom.Connection.requestBluetoothAudio(android.bluetooth.BluetoothDevice)void
android.telecom.Connection.sendRttInitiationSuccess)void
android.telecom.Connection.sendRttInitiationFailure(int)void
android.telecom.Connection.sendRttSessionRemotelyTerminated)void
android.telecom.Connection.sendRemoteRttRequest)void
android.telecom.Connection.onCallAudioStateChanged(android.telecom.CallAudioState)void
android.telecom.Connection.onStateChanged(int)void
android.telecom.Connection.onPlayDtmfTone(char)void
android.telecom.Connection.onStopDtmfTone)void
android.telecom.Connection.onDisconnect)void
android.telecom.Connection.onSeparate)void
android.telecom.Connection.onAbort)void
android.telecom.Connection.onHold)void
android.telecom.Connection.onUnhold)void
android.telecom.Connection.onAnswer(int)void
android.telecom.Connection.onAnswer)void
android.telecom.Connection.onDeflect(android.net.Uri)void
android.telecom.Connection.onReject)void
android.telecom.Connection.onReject(String)void
android.telecom.Connection.onSilence)void
android.telecom.Connection.onPostDialContinue(boolean)void
android.telecom.Connection.onPullExternalCall)void
android.telecom.Connection.onCallEvent(String,android.os.Bundle)void
android.telecom.Connection.onHandoverComplete)void
android.telecom.Connection.onExtrasChanged(android.os.Bundle)void
android.telecom.Connection.onShowIncomingCallUi)void
android.telecom.Connection.onStartRtt(RttTextStream)void
android.telecom.Connection.onStopRtt)void
android.telecom.Connection.handleRttUpgradeResponse(RttTextStream)void
android.telecom.Connection.createFailedConnection(android.telecom.DisconnectCause)android.telecom.Connection
android.telecom.Connection.createCanceledConnection)android.telecom.Connection
android.telecom.Connection.sendConnectionEvent(String,android.os.Bundle)void
android.telecom.ConnectionRequest.getAccountHandle)android.telecom.PhoneAccountHandle
android.telecom.ConnectionRequest.getAddress)android.net.Uri
android.telecom.ConnectionRequest.getExtras)Bundle
android.telecom.ConnectionRequest.getVideoState)int
android.telecom.ConnectionRequest.isRequestingRtt)boolean
android.telecom.ConnectionRequest.toString)String
android.telecom.ConnectionRequest.describeContents)int
android.telecom.ConnectionRequest.writeToParcel(Parcel,int)void
android.telecom.ConnectionService.onBind(android.content.Intent)android.os.IBinder
android.telecom.ConnectionService.onUnbind(android.content.Intent)boolean
android.telecom.ConnectionService.createRemoteIncomingConnection(android.telecom.PhoneAccountHandle,android.telecom.ConnectionRequest)android.telecom.RemoteConnection
android.telecom.ConnectionService.createRemoteOutgoingConnection(android.telecom.PhoneAccountHandle,android.telecom.ConnectionRequest)android.telecom.RemoteConnection
android.telecom.ConnectionService.conferenceRemoteConnections(android.telecom.RemoteConnection,android.telecom.RemoteConnection)void
android.telecom.ConnectionService.addConference(android.telecom.Conference)void
android.telecom.ConnectionService.addExistingConnection(android.telecom.PhoneAccountHandle,android.telecom.Connection)void
android.telecom.ConnectionService.connectionServiceFocusReleased)void
android.telecom.ConnectionService.getAllConnections)java.util.Collection
android.telecom.ConnectionService.getAllConferences)java.util.Collection
android.telecom.ConnectionService.onCreateIncomingConnection(android.telecom.PhoneAccountHandle,android.telecom.ConnectionRequest)android.telecom.Connection
android.telecom.ConnectionService.onCreateIncomingConnectionFailed(android.telecom.PhoneAccountHandle,android.telecom.ConnectionRequest)void
android.telecom.ConnectionService.onCreateOutgoingConnectionFailed(android.telecom.PhoneAccountHandle,android.telecom.ConnectionRequest)void
android.telecom.ConnectionService.onCreateOutgoingConnection(android.telecom.PhoneAccountHandle,android.telecom.ConnectionRequest)android.telecom.Connection
android.telecom.ConnectionService.onCreateOutgoingHandoverConnection(android.telecom.PhoneAccountHandle,android.telecom.ConnectionRequest)android.telecom.Connection
android.telecom.ConnectionService.onCreateIncomingHandoverConnection(android.telecom.PhoneAccountHandle,android.telecom.ConnectionRequest)android.telecom.Connection
android.telecom.ConnectionService.onHandoverFailed(android.telecom.ConnectionRequest,int)void
android.telecom.ConnectionService.onConference(android.telecom.Connection,android.telecom.Connection)void
android.telecom.ConnectionService.onRemoteConferenceAdded(android.telecom.RemoteConference)void
android.telecom.ConnectionService.onRemoteExistingConnectionAdded(android.telecom.RemoteConnection)void
android.telecom.ConnectionService.onConnectionServiceFocusLost)void
android.telecom.ConnectionService.onConnectionServiceFocusGained)void
android.telecom.DisconnectCause.getCode)int
android.telecom.DisconnectCause.getLabel)CharSequence
android.telecom.DisconnectCause.getDescription)CharSequence
android.telecom.DisconnectCause.getReason)String
android.telecom.DisconnectCause.getTone)int
android.telecom.DisconnectCause.writeToParcel(android.os.Parcel,int)void
android.telecom.DisconnectCause.describeContents)int
android.telecom.DisconnectCause.hashCode)int
android.telecom.DisconnectCause.equals(Object)boolean
android.telecom.DisconnectCause.toString)String
android.telecom.GatewayInfo.getGatewayProviderPackageName)String
android.telecom.GatewayInfo.getGatewayAddress)android.net.Uri
android.telecom.GatewayInfo.getOriginalAddress)android.net.Uri
android.telecom.GatewayInfo.isEmpty)boolean
android.telecom.GatewayInfo.describeContents)int
android.telecom.GatewayInfo.writeToParcel(android.os.Parcel,int)void
android.telecom.InCallService.onBind(android.content.Intent)IBinder
android.telecom.InCallService.onUnbind(android.content.Intent)boolean
android.telecom.InCallService.getCalls)java.util.List
android.telecom.InCallService.canAddCall)boolean
android.telecom.InCallService.getCallAudioState)android.telecom.CallAudioState
android.telecom.InCallService.setMuted(boolean)void
android.telecom.InCallService.setAudioRoute(int)void
android.telecom.InCallService.requestBluetoothAudio(android.bluetooth.BluetoothDevice)void
android.telecom.InCallService.onCallAudioStateChanged(android.telecom.CallAudioState)void
android.telecom.InCallService.onBringToForeground(boolean)void
android.telecom.InCallService.onCallAdded(android.telecom.Call)void
android.telecom.InCallService.onCallRemoved(android.telecom.Call)void
android.telecom.InCallService.onCanAddCallChanged(boolean)void
android.telecom.InCallService.onSilenceRinger)void
android.telecom.InCallService.onConnectionEvent(android.telecom.Call,String,Bundle)void
android.telecom.PhoneAccount.setAddress(android.net.Uri)android.telecom.PhoneAccount.Builder
android.telecom.PhoneAccount.setSubscriptionAddress(android.net.Uri)android.telecom.PhoneAccount.Builder
android.telecom.PhoneAccount.setCapabilities(int)android.telecom.PhoneAccount.Builder
android.telecom.PhoneAccount.setIcon(android.graphics.drawable.Icon)android.telecom.PhoneAccount.Builder
android.telecom.PhoneAccount.setHighlightColor(int)android.telecom.PhoneAccount.Builder
android.telecom.PhoneAccount.setShortDescription(CharSequence)android.telecom.PhoneAccount.Builder
android.telecom.PhoneAccount.addSupportedUriScheme(String)android.telecom.PhoneAccount.Builder
android.telecom.PhoneAccount.setSupportedUriSchemes(java.util.List)android.telecom.PhoneAccount.Builder
android.telecom.PhoneAccount.setExtras(Bundle)android.telecom.PhoneAccount.Builder
android.telecom.PhoneAccount.build)android.telecom.PhoneAccount
android.telecom.PhoneAccount.equals(Object)boolean
android.telecom.PhoneAccount.hashCode)int
android.telecom.PhoneAccount.builder(android.telecom.PhoneAccountHandle,CharSequence)android.telecom.PhoneAccount.Builder
android.telecom.PhoneAccount.toBuilder)android.telecom.PhoneAccount.Builder
android.telecom.PhoneAccount.getAccountHandle)android.telecom.PhoneAccountHandle
android.telecom.PhoneAccount.getAddress)android.net.Uri
android.telecom.PhoneAccount.getSubscriptionAddress)android.net.Uri
android.telecom.PhoneAccount.getCapabilities)int
android.telecom.PhoneAccount.hasCapabilities(int)boolean
android.telecom.PhoneAccount.getLabel)CharSequence
android.telecom.PhoneAccount.getShortDescription)CharSequence
android.telecom.PhoneAccount.getSupportedUriSchemes)java.util.List
android.telecom.PhoneAccount.getExtras)Bundle
android.telecom.PhoneAccount.getIcon)android.graphics.drawable.Icon
android.telecom.PhoneAccount.isEnabled)boolean
android.telecom.PhoneAccount.supportsUriScheme(String)boolean
android.telecom.PhoneAccount.getHighlightColor)int
android.telecom.PhoneAccount.describeContents)int
android.telecom.PhoneAccount.writeToParcel(Parcel,int)void
android.telecom.PhoneAccount.toString)String
android.telecom.PhoneAccountHandle.getComponentName)android.content.ComponentName
android.telecom.PhoneAccountHandle.getId)String
android.telecom.PhoneAccountHandle.getUserHandle)UserHandle
android.telecom.PhoneAccountHandle.hashCode)int
android.telecom.PhoneAccountHandle.toString)String
android.telecom.PhoneAccountHandle.equals(Object)boolean
android.telecom.PhoneAccountHandle.describeContents)int
android.telecom.PhoneAccountHandle.writeToParcel(Parcel,int)void
android.telecom.PhoneAccountSuggestion.getPhoneAccountHandle)android.telecom.PhoneAccountHandle
android.telecom.PhoneAccountSuggestion.getReason)int
android.telecom.PhoneAccountSuggestion.shouldAutoSelect)boolean
android.telecom.PhoneAccountSuggestion.describeContents)int
android.telecom.PhoneAccountSuggestion.writeToParcel(android.os.Parcel,int)void
android.telecom.PhoneAccountSuggestion.equals(Object)boolean
android.telecom.PhoneAccountSuggestion.hashCode)int
android.telecom.RemoteConference.onStateChanged(android.telecom.RemoteConference,int,int)void
android.telecom.RemoteConference.onDisconnected(android.telecom.RemoteConference,android.telecom.DisconnectCause)void
android.telecom.RemoteConference.onConnectionAdded(android.telecom.RemoteConference,android.telecom.RemoteConnection)void
android.telecom.RemoteConference.onConnectionRemoved(android.telecom.RemoteConference,android.telecom.RemoteConnection)void
android.telecom.RemoteConference.onConnectionCapabilitiesChanged(android.telecom.RemoteConference,int)void
android.telecom.RemoteConference.onConnectionPropertiesChanged(android.telecom.RemoteConference,int)void
android.telecom.RemoteConference.onConferenceableConnectionsChanged(android.telecom.RemoteConference,java.util.List)void
android.telecom.RemoteConference.onDestroyed(android.telecom.RemoteConference)void
android.telecom.RemoteConference.onExtrasChanged(android.telecom.RemoteConference,android.os.Bundle)void
android.telecom.RemoteConference.getConnections)java.util.List
android.telecom.RemoteConference.getState)int
android.telecom.RemoteConference.getConnectionCapabilities)int
android.telecom.RemoteConference.getConnectionProperties)int
android.telecom.RemoteConference.getExtras)android.os.Bundle
android.telecom.RemoteConference.disconnect)void
android.telecom.RemoteConference.separate(android.telecom.RemoteConnection)void
android.telecom.RemoteConference.merge)void
android.telecom.RemoteConference.swap)void
android.telecom.RemoteConference.hold)void
android.telecom.RemoteConference.unhold)void
android.telecom.RemoteConference.getDisconnectCause)android.telecom.DisconnectCause
android.telecom.RemoteConference.playDtmfTone(char)void
android.telecom.RemoteConference.stopDtmfTone)void
android.telecom.RemoteConference.setCallAudioState(android.telecom.CallAudioState)void
android.telecom.RemoteConference.getConferenceableConnections)java.util.List
android.telecom.RemoteConference.registerCallback(Callback)void
android.telecom.RemoteConference.registerCallback(Callback,android.os.Handler)void
android.telecom.RemoteConference.unregisterCallback(Callback)void
android.telecom.RemoteConnection.onSessionModifyRequestReceived(android.telecom.RemoteConnection.VideoProvider,android.telecom.VideoProfile)void
android.telecom.RemoteConnection.onSessionModifyResponseReceived(android.telecom.RemoteConnection.VideoProvider,int,android.telecom.VideoProfile,android.telecom.VideoProfile)void
android.telecom.RemoteConnection.onCallSessionEvent(android.telecom.RemoteConnection.VideoProvider,int)void
android.telecom.RemoteConnection.onPeerDimensionsChanged(android.telecom.RemoteConnection.VideoProvider,int,int)void
android.telecom.RemoteConnection.onCallDataUsageChanged(android.telecom.RemoteConnection.VideoProvider,long)void
android.telecom.RemoteConnection.onCameraCapabilitiesChanged(android.telecom.RemoteConnection.VideoProvider,VideoProfile.CameraCapabilities)void
android.telecom.RemoteConnection.onVideoQualityChanged(android.telecom.RemoteConnection.VideoProvider,int)void
android.telecom.RemoteConnection.registerCallback(Callback)void
android.telecom.RemoteConnection.unregisterCallback(Callback)void
android.telecom.RemoteConnection.setCamera(String)void
android.telecom.RemoteConnection.setPreviewSurface(android.view.Surface)void
android.telecom.RemoteConnection.setDisplaySurface(android.view.Surface)void
android.telecom.RemoteConnection.setDeviceOrientation(int)void
android.telecom.RemoteConnection.setZoom(float)void
android.telecom.RemoteConnection.sendSessionModifyRequest(android.telecom.VideoProfile,android.telecom.VideoProfile)void
android.telecom.RemoteConnection.sendSessionModifyResponse(android.telecom.VideoProfile)void
android.telecom.RemoteConnection.requestCameraCapabilities)void
android.telecom.RemoteConnection.requestCallDataUsage)void
android.telecom.RemoteConnection.setPauseImage(android.net.Uri)void
android.telecom.RemoteConnection.onStateChanged(android.telecom.RemoteConnection,int)void
android.telecom.RemoteConnection.onDisconnected(android.telecom.RemoteConnection,android.telecom.DisconnectCause)void
android.telecom.RemoteConnection.onRingbackRequested(android.telecom.RemoteConnection,boolean)void
android.telecom.RemoteConnection.onConnectionCapabilitiesChanged(android.telecom.RemoteConnection,int)void
android.telecom.RemoteConnection.onConnectionPropertiesChanged(android.telecom.RemoteConnection,int)void
android.telecom.RemoteConnection.onPostDialWait(android.telecom.RemoteConnection,String)void
android.telecom.RemoteConnection.onPostDialChar(android.telecom.RemoteConnection,char)void
android.telecom.RemoteConnection.onVoipAudioChanged(android.telecom.RemoteConnection,boolean)void
android.telecom.RemoteConnection.onStatusHintsChanged(android.telecom.RemoteConnection,android.telecom.StatusHints)void
android.telecom.RemoteConnection.onAddressChanged(android.telecom.RemoteConnection,android.net.Uri,int)void
android.telecom.RemoteConnection.onCallerDisplayNameChanged(android.telecom.RemoteConnection,String,int)void
android.telecom.RemoteConnection.onVideoStateChanged(android.telecom.RemoteConnection,int)void
android.telecom.RemoteConnection.onDestroyed(android.telecom.RemoteConnection)void
android.telecom.RemoteConnection.onConferenceableConnectionsChanged(android.telecom.RemoteConnection,java.util.List)void
android.telecom.RemoteConnection.onVideoProviderChanged(android.telecom.RemoteConnection,android.telecom.RemoteConnection.VideoProvider)void
android.telecom.RemoteConnection.onConferenceChanged(android.telecom.RemoteConnection,android.telecom.RemoteConference)void
android.telecom.RemoteConnection.onExtrasChanged(android.telecom.RemoteConnection,android.os.Bundle)void
android.telecom.RemoteConnection.onConnectionEvent(android.telecom.RemoteConnection,String,android.os.Bundle)void
android.telecom.RemoteConnection.registerCallback(Callback)void
android.telecom.RemoteConnection.registerCallback(Callback,android.os.Handler)void
android.telecom.RemoteConnection.unregisterCallback(Callback)void
android.telecom.RemoteConnection.getState)int
android.telecom.RemoteConnection.getDisconnectCause)android.telecom.DisconnectCause
android.telecom.RemoteConnection.getConnectionCapabilities)int
android.telecom.RemoteConnection.getConnectionProperties)int
android.telecom.RemoteConnection.isVoipAudioMode)boolean
android.telecom.RemoteConnection.getStatusHints)android.telecom.StatusHints
android.telecom.RemoteConnection.getAddress)android.net.Uri
android.telecom.RemoteConnection.getAddressPresentation)int
android.telecom.RemoteConnection.getCallerDisplayName)CharSequence
android.telecom.RemoteConnection.getCallerDisplayNamePresentation)int
android.telecom.RemoteConnection.getVideoState)int
android.telecom.RemoteConnection.getVideoProvider)android.telecom.RemoteConnection.VideoProvider
android.telecom.RemoteConnection.getExtras)android.os.Bundle
android.telecom.RemoteConnection.isRingbackRequested)boolean
android.telecom.RemoteConnection.abort)void
android.telecom.RemoteConnection.answer)void
android.telecom.RemoteConnection.reject)void
android.telecom.RemoteConnection.hold)void
android.telecom.RemoteConnection.unhold)void
android.telecom.RemoteConnection.disconnect)void
android.telecom.RemoteConnection.playDtmfTone(char)void
android.telecom.RemoteConnection.stopDtmfTone)void
android.telecom.RemoteConnection.postDialContinue(boolean)void
android.telecom.RemoteConnection.pullExternalCall)void
android.telecom.RemoteConnection.setCallAudioState(android.telecom.CallAudioState)void
android.telecom.RemoteConnection.getConferenceableConnections)java.util.List
android.telecom.RemoteConnection.getConference)android.telecom.RemoteConference
android.telecom.StatusHints.getLabel)CharSequence
android.telecom.StatusHints.getIcon)android.graphics.drawable.Icon
android.telecom.StatusHints.getExtras)Bundle
android.telecom.StatusHints.describeContents)int
android.telecom.StatusHints.writeToParcel(Parcel,int)void
android.telecom.StatusHints.equals(Object)boolean
android.telecom.StatusHints.hashCode)int
android.telecom.TelecomManager.getDefaultOutgoingPhoneAccount(String)android.telecom.PhoneAccountHandle
android.telecom.TelecomManager.getUserSelectedOutgoingPhoneAccount)android.telecom.PhoneAccountHandle
android.telecom.TelecomManager.getSimCallManager)android.telecom.PhoneAccountHandle
android.telecom.TelecomManager.getCallCapablePhoneAccounts)java.util.List
android.telecom.TelecomManager.getSelfManagedPhoneAccounts)java.util.List
android.telecom.TelecomManager.getPhoneAccount(android.telecom.PhoneAccountHandle)android.telecom.PhoneAccount
android.telecom.TelecomManager.registerPhoneAccount(android.telecom.PhoneAccount)void
android.telecom.TelecomManager.unregisterPhoneAccount(android.telecom.PhoneAccountHandle)void
android.telecom.TelecomManager.getDefaultDialerPackage)String
android.telecom.TelecomManager.getSystemDialerPackage)String
android.telecom.TelecomManager.isVoiceMailNumber(android.telecom.PhoneAccountHandle,String)boolean
android.telecom.TelecomManager.getVoiceMailNumber(android.telecom.PhoneAccountHandle)String
android.telecom.TelecomManager.getLine1Number(android.telecom.PhoneAccountHandle)String
android.telecom.TelecomManager.isInCall)boolean
android.telecom.TelecomManager.isInManagedCall)boolean
android.telecom.TelecomManager.endCall)boolean
android.telecom.TelecomManager.acceptRingingCall)void
android.telecom.TelecomManager.acceptRingingCall(int)void
android.telecom.TelecomManager.silenceRinger)void
android.telecom.TelecomManager.isTtySupported)boolean
android.telecom.TelecomManager.addNewIncomingCall(android.telecom.PhoneAccountHandle,android.os.Bundle)void
android.telecom.TelecomManager.handleMmi(String)boolean
android.telecom.TelecomManager.handleMmi(String,android.telecom.PhoneAccountHandle)boolean
android.telecom.TelecomManager.getAdnUriForPhoneAccount(android.telecom.PhoneAccountHandle)android.net.Uri
android.telecom.TelecomManager.cancelMissedCallsNotification)void
android.telecom.TelecomManager.showInCallScreen(boolean)void
android.telecom.TelecomManager.placeCall(android.net.Uri,android.os.Bundle)void
android.telecom.TelecomManager.createManageBlockedNumbersIntent)android.content.Intent
android.telecom.TelecomManager.isIncomingCallPermitted(android.telecom.PhoneAccountHandle)boolean
android.telecom.TelecomManager.isOutgoingCallPermitted(android.telecom.PhoneAccountHandle)boolean
android.telecom.TelecomManager.acceptHandover(android.net.Uri,int,android.telecom.PhoneAccountHandle)void
android.telecom.VideoProfile.describeContents)int
android.telecom.VideoProfile.writeToParcel(android.os.Parcel,int)void
android.telecom.VideoProfile.getWidth)int
android.telecom.VideoProfile.getHeight)int
android.telecom.VideoProfile.isZoomSupported)boolean
android.telecom.VideoProfile.getMaxZoom)float
android.telecom.VideoProfile.getVideoState)int
android.telecom.VideoProfile.getQuality)int
android.telecom.VideoProfile.describeContents)int
android.telecom.VideoProfile.writeToParcel(android.os.Parcel,int)void
android.telecom.VideoProfile.toString)String
android.telecom.VideoProfile.videoStateToString(int)String
android.telecom.VideoProfile.isAudioOnly(int)boolean
android.telecom.VideoProfile.isVideo(int)boolean
android.telecom.VideoProfile.isTransmissionEnabled(int)boolean
android.telecom.VideoProfile.isReceptionEnabled(int)boolean
android.telecom.VideoProfile.isBidirectional(int)boolean
android.telecom.VideoProfile.isPaused(int)boolean
android.telephony.AvailableNetworkInfo.getSubId)int
android.telephony.AvailableNetworkInfo.getPriority)int
android.telephony.AvailableNetworkInfo.getMccMncs)java.util.List
android.telephony.AvailableNetworkInfo.getBands)java.util.List
android.telephony.AvailableNetworkInfo.describeContents)int
android.telephony.AvailableNetworkInfo.writeToParcel(android.os.Parcel,int)void
android.telephony.AvailableNetworkInfo.equals(Object)boolean
android.telephony.AvailableNetworkInfo.hashCode)int
android.telephony.AvailableNetworkInfo.toString)String
android.telephony.CarrierConfigManager.getConfigForSubId(int)android.os.PersistableBundle
android.telephony.CarrierConfigManager.getConfig)android.os.PersistableBundle
android.telephony.CarrierConfigManager.isConfigForIdentifiedCarrier(android.os.PersistableBundle)boolean
android.telephony.CarrierConfigManager.notifyConfigChangedForSubId(int)void
android.telephony.CellIdentity.describeContents)int
android.telephony.CellIdentity.getOperatorAlphaLong)CharSequence
android.telephony.CellIdentity.getOperatorAlphaShort)CharSequence
android.telephony.CellIdentity.equals(Object)boolean
android.telephony.CellIdentity.hashCode)int
android.telephony.CellIdentity.writeToParcel(android.os.Parcel,int)void
android.telephony.CellIdentityCdma.getNetworkId)int
android.telephony.CellIdentityCdma.getSystemId)int
android.telephony.CellIdentityCdma.getBasestationId)int
android.telephony.CellIdentityCdma.getLongitude)int
android.telephony.CellIdentityCdma.getLatitude)int
android.telephony.CellIdentityCdma.hashCode)int
android.telephony.CellIdentityCdma.equals(Object)boolean
android.telephony.CellIdentityCdma.toString)String
android.telephony.CellIdentityCdma.writeToParcel(android.os.Parcel,int)void
android.telephony.CellIdentityGsm.getMcc)int
android.telephony.CellIdentityGsm.getMnc)int
android.telephony.CellIdentityGsm.getLac)int
android.telephony.CellIdentityGsm.getCid)int
android.telephony.CellIdentityGsm.getArfcn)int
android.telephony.CellIdentityGsm.getBsic)int
android.telephony.CellIdentityGsm.getMobileNetworkOperator)String
android.telephony.CellIdentityGsm.getMccString)String
android.telephony.CellIdentityGsm.getMncString)String
android.telephony.CellIdentityGsm.getPsc)int
android.telephony.CellIdentityGsm.hashCode)int
android.telephony.CellIdentityGsm.equals(Object)boolean
android.telephony.CellIdentityGsm.toString)String
android.telephony.CellIdentityGsm.writeToParcel(android.os.Parcel,int)void
android.telephony.CellIdentityLte.getMcc)int
android.telephony.CellIdentityLte.getMnc)int
android.telephony.CellIdentityLte.getCi)int
android.telephony.CellIdentityLte.getPci)int
android.telephony.CellIdentityLte.getTac)int
android.telephony.CellIdentityLte.getEarfcn)int
android.telephony.CellIdentityLte.getBandwidth)int
android.telephony.CellIdentityLte.getMccString)String
android.telephony.CellIdentityLte.getMncString)String
android.telephony.CellIdentityLte.getMobileNetworkOperator)String
android.telephony.CellIdentityLte.hashCode)int
android.telephony.CellIdentityLte.equals(Object)boolean
android.telephony.CellIdentityLte.toString)String
android.telephony.CellIdentityLte.writeToParcel(android.os.Parcel,int)void
android.telephony.CellIdentityNr.hashCode)int
android.telephony.CellIdentityNr.equals(Object)boolean
android.telephony.CellIdentityNr.getNci)long
android.telephony.CellIdentityNr.getNrarfcn)int
android.telephony.CellIdentityNr.getPci)int
android.telephony.CellIdentityNr.getTac)int
android.telephony.CellIdentityNr.getMccString)String
android.telephony.CellIdentityNr.getMncString)String
android.telephony.CellIdentityNr.toString)String
android.telephony.CellIdentityNr.writeToParcel(android.os.Parcel,int)void
android.telephony.CellIdentityTdscdma.getMccString)String
android.telephony.CellIdentityTdscdma.getMncString)String
android.telephony.CellIdentityTdscdma.getMobileNetworkOperator)String
android.telephony.CellIdentityTdscdma.getLac)int
android.telephony.CellIdentityTdscdma.getCid)int
android.telephony.CellIdentityTdscdma.getCpid)int
android.telephony.CellIdentityTdscdma.getUarfcn)int
android.telephony.CellIdentityTdscdma.equals(Object)boolean
android.telephony.CellIdentityTdscdma.hashCode)int
android.telephony.CellIdentityTdscdma.toString)String
android.telephony.CellIdentityTdscdma.describeContents)int
android.telephony.CellIdentityTdscdma.writeToParcel(android.os.Parcel,int)void
android.telephony.CellIdentityWcdma.getMcc)int
android.telephony.CellIdentityWcdma.getMnc)int
android.telephony.CellIdentityWcdma.getLac)int
android.telephony.CellIdentityWcdma.getCid)int
android.telephony.CellIdentityWcdma.getPsc)int
android.telephony.CellIdentityWcdma.getMccString)String
android.telephony.CellIdentityWcdma.getMncString)String
android.telephony.CellIdentityWcdma.getMobileNetworkOperator)String
android.telephony.CellIdentityWcdma.hashCode)int
android.telephony.CellIdentityWcdma.getUarfcn)int
android.telephony.CellIdentityWcdma.equals(Object)boolean
android.telephony.CellIdentityWcdma.toString)String
android.telephony.CellIdentityWcdma.writeToParcel(android.os.Parcel,int)void
android.telephony.CellInfo.isRegistered)boolean
android.telephony.CellInfo.getTimeStamp)long
android.telephony.CellInfo.getCellConnectionStatus)int
android.telephony.CellInfo.hashCode)int
android.telephony.CellInfo.equals(Object)boolean
android.telephony.CellInfo.toString)String
android.telephony.CellInfo.describeContents)int
android.telephony.CellInfoCdma.getCellIdentity)android.telephony.CellIdentityCdma
android.telephony.CellInfoCdma.getCellSignalStrength)android.telephony.CellSignalStrengthCdma
android.telephony.CellInfoCdma.hashCode)int
android.telephony.CellInfoCdma.equals(Object)boolean
android.telephony.CellInfoCdma.toString)String
android.telephony.CellInfoCdma.describeContents)int
android.telephony.CellInfoCdma.writeToParcel(android.os.Parcel,int)void
android.telephony.CellInfoGsm.getCellIdentity)android.telephony.CellIdentityGsm
android.telephony.CellInfoGsm.getCellSignalStrength)android.telephony.CellSignalStrengthGsm
android.telephony.CellInfoGsm.hashCode)int
android.telephony.CellInfoGsm.equals(Object)boolean
android.telephony.CellInfoGsm.toString)String
android.telephony.CellInfoGsm.describeContents)int
android.telephony.CellInfoGsm.writeToParcel(android.os.Parcel,int)void
android.telephony.CellInfoLte.getCellIdentity)android.telephony.CellIdentityLte
android.telephony.CellInfoLte.getCellSignalStrength)android.telephony.CellSignalStrengthLte
android.telephony.CellInfoLte.hashCode)int
android.telephony.CellInfoLte.equals(Object)boolean
android.telephony.CellInfoLte.toString)String
android.telephony.CellInfoLte.describeContents)int
android.telephony.CellInfoLte.writeToParcel(android.os.Parcel,int)void
android.telephony.CellInfoNr.getCellIdentity)android.telephony.CellIdentity
android.telephony.CellInfoNr.getCellSignalStrength)android.telephony.CellSignalStrength
android.telephony.CellInfoNr.hashCode)int
android.telephony.CellInfoNr.equals(Object)boolean
android.telephony.CellInfoNr.toString)String
android.telephony.CellInfoNr.writeToParcel(android.os.Parcel,int)void
android.telephony.CellInfoTdscdma.getCellIdentity)android.telephony.CellIdentityTdscdma
android.telephony.CellInfoTdscdma.getCellSignalStrength)android.telephony.CellSignalStrengthTdscdma
android.telephony.CellInfoTdscdma.hashCode)int
android.telephony.CellInfoTdscdma.equals(Object)boolean
android.telephony.CellInfoTdscdma.toString)String
android.telephony.CellInfoTdscdma.describeContents)int
android.telephony.CellInfoTdscdma.writeToParcel(android.os.Parcel,int)void
android.telephony.CellInfoWcdma.getCellIdentity)android.telephony.CellIdentityWcdma
android.telephony.CellInfoWcdma.getCellSignalStrength)android.telephony.CellSignalStrengthWcdma
android.telephony.CellInfoWcdma.hashCode)int
android.telephony.CellInfoWcdma.equals(Object)boolean
android.telephony.CellInfoWcdma.toString)String
android.telephony.CellInfoWcdma.describeContents)int
android.telephony.CellInfoWcdma.writeToParcel(android.os.Parcel,int)void
android.telephony.CellLocation.requestLocationUpdate)void
android.telephony.CellLocation.getEmpty)android.telephony.CellLocation
android.telephony.CellSignalStrengthCdma.getLevel)int
android.telephony.CellSignalStrengthCdma.getAsuLevel)int
android.telephony.CellSignalStrengthCdma.getCdmaLevel)int
android.telephony.CellSignalStrengthCdma.getEvdoLevel)int
android.telephony.CellSignalStrengthCdma.getDbm)int
android.telephony.CellSignalStrengthCdma.getCdmaDbm)int
android.telephony.CellSignalStrengthCdma.getCdmaEcio)int
android.telephony.CellSignalStrengthCdma.getEvdoDbm)int
android.telephony.CellSignalStrengthCdma.getEvdoEcio)int
android.telephony.CellSignalStrengthCdma.getEvdoSnr)int
android.telephony.CellSignalStrengthCdma.hashCode)int
android.telephony.CellSignalStrengthCdma.equals(Object)boolean
android.telephony.CellSignalStrengthCdma.toString)String
android.telephony.CellSignalStrengthCdma.writeToParcel(android.os.Parcel,int)void
android.telephony.CellSignalStrengthCdma.describeContents)int
android.telephony.CellSignalStrengthGsm.getLevel)int
android.telephony.CellSignalStrengthGsm.getTimingAdvance)int
android.telephony.CellSignalStrengthGsm.getDbm)int
android.telephony.CellSignalStrengthGsm.getAsuLevel)int
android.telephony.CellSignalStrengthGsm.getBitErrorRate)int
android.telephony.CellSignalStrengthGsm.hashCode)int
android.telephony.CellSignalStrengthGsm.equals(Object)boolean
android.telephony.CellSignalStrengthGsm.toString)String
android.telephony.CellSignalStrengthGsm.writeToParcel(android.os.Parcel,int)void
android.telephony.CellSignalStrengthGsm.describeContents)int
android.telephony.CellSignalStrengthLte.getLevel)int
android.telephony.CellSignalStrengthLte.getRsrq)int
android.telephony.CellSignalStrengthLte.getRssi)int
android.telephony.CellSignalStrengthLte.getRssnr)int
android.telephony.CellSignalStrengthLte.getRsrp)int
android.telephony.CellSignalStrengthLte.getCqi)int
android.telephony.CellSignalStrengthLte.getDbm)int
android.telephony.CellSignalStrengthLte.getAsuLevel)int
android.telephony.CellSignalStrengthLte.getTimingAdvance)int
android.telephony.CellSignalStrengthLte.hashCode)int
android.telephony.CellSignalStrengthLte.equals(Object)boolean
android.telephony.CellSignalStrengthLte.toString)String
android.telephony.CellSignalStrengthLte.writeToParcel(android.os.Parcel,int)void
android.telephony.CellSignalStrengthLte.describeContents)int
android.telephony.CellSignalStrengthNr.getSsRsrp)int
android.telephony.CellSignalStrengthNr.getSsRsrq)int
android.telephony.CellSignalStrengthNr.getSsSinr)int
android.telephony.CellSignalStrengthNr.getCsiRsrp)int
android.telephony.CellSignalStrengthNr.getCsiRsrq)int
android.telephony.CellSignalStrengthNr.getCsiSinr)int
android.telephony.CellSignalStrengthNr.describeContents)int
android.telephony.CellSignalStrengthNr.writeToParcel(android.os.Parcel,int)void
android.telephony.CellSignalStrengthNr.getLevel)int
android.telephony.CellSignalStrengthNr.getAsuLevel)int
android.telephony.CellSignalStrengthNr.getDbm)int
android.telephony.CellSignalStrengthNr.hashCode)int
android.telephony.CellSignalStrengthNr.equals(Object)boolean
android.telephony.CellSignalStrengthNr.toString)String
android.telephony.CellSignalStrengthTdscdma.getLevel)int
android.telephony.CellSignalStrengthTdscdma.getDbm)int
android.telephony.CellSignalStrengthTdscdma.getRscp)int
android.telephony.CellSignalStrengthTdscdma.getAsuLevel)int
android.telephony.CellSignalStrengthTdscdma.hashCode)int
android.telephony.CellSignalStrengthTdscdma.equals(Object)boolean
android.telephony.CellSignalStrengthTdscdma.toString)String
android.telephony.CellSignalStrengthTdscdma.writeToParcel(android.os.Parcel,int)void
android.telephony.CellSignalStrengthTdscdma.describeContents)int
android.telephony.CellSignalStrengthWcdma.getLevel)int
android.telephony.CellSignalStrengthWcdma.getDbm)int
android.telephony.CellSignalStrengthWcdma.getAsuLevel)int
android.telephony.CellSignalStrengthWcdma.hashCode)int
android.telephony.CellSignalStrengthWcdma.equals(Object)boolean
android.telephony.CellSignalStrengthWcdma.toString)String
android.telephony.CellSignalStrengthWcdma.writeToParcel(android.os.Parcel,int)void
android.telephony.CellSignalStrengthWcdma.describeContents)int
android.telephony.IccOpenLogicalChannelResponse.getChannel)int
android.telephony.IccOpenLogicalChannelResponse.getStatus)int
android.telephony.IccOpenLogicalChannelResponse.describeContents)int
android.telephony.IccOpenLogicalChannelResponse.writeToParcel(android.os.Parcel,int)void
android.telephony.IccOpenLogicalChannelResponse.toString)String
android.telephony.MbmsDownloadSession.create(android.content.Context,java.util.concurrent.Executor,android.telephony.mbms.MbmsDownloadSessionCallback)android.telephony.MbmsDownloadSession
android.telephony.MbmsDownloadSession.create(android.content.Context,java.util.concurrent.Executor,int,android.telephony.mbms.MbmsDownloadSessionCallback)android.telephony.MbmsDownloadSession
android.telephony.MbmsDownloadSession.requestUpdateFileServices(java.util.List)void
android.telephony.MbmsDownloadSession.setTempFileRootDirectory(java.io.File)void
android.telephony.MbmsDownloadSession.getTempFileRootDirectory)java.io.File
android.telephony.MbmsDownloadSession.download(android.telephony.mbms.DownloadRequest)void
android.telephony.MbmsDownloadSession.listPendingDownloads)java.util.List
android.telephony.MbmsDownloadSession.addStatusListener(android.telephony.mbms.DownloadRequest,java.util.concurrent.Executor,android.telephony.mbms.DownloadStatusListener)void
android.telephony.MbmsDownloadSession.removeStatusListener(android.telephony.mbms.DownloadRequest,android.telephony.mbms.DownloadStatusListener)void
android.telephony.MbmsDownloadSession.addProgressListener(android.telephony.mbms.DownloadRequest,java.util.concurrent.Executor,android.telephony.mbms.DownloadProgressListener)void
android.telephony.MbmsDownloadSession.removeProgressListener(android.telephony.mbms.DownloadRequest,android.telephony.mbms.DownloadProgressListener)void
android.telephony.MbmsDownloadSession.cancelDownload(android.telephony.mbms.DownloadRequest)void
android.telephony.MbmsDownloadSession.requestDownloadState(android.telephony.mbms.DownloadRequest,android.telephony.mbms.FileInfo)void
android.telephony.MbmsDownloadSession.resetDownloadKnowledge(android.telephony.mbms.DownloadRequest)void
android.telephony.MbmsDownloadSession.close)void
android.telephony.MbmsGroupCallSession.create(android.content.Context,int,java.util.concurrent.Executor,android.telephony.mbms.MbmsGroupCallSessionCallback)android.telephony.MbmsGroupCallSession
android.telephony.MbmsGroupCallSession.create(android.content.Context,java.util.concurrent.Executor,android.telephony.mbms.MbmsGroupCallSessionCallback)android.telephony.MbmsGroupCallSession
android.telephony.MbmsGroupCallSession.close)void
android.telephony.MbmsGroupCallSession.startGroupCall(long,java.util.List,java.util.List,java.util.concurrent.Executor,android.telephony.mbms.GroupCallCallback)android.telephony.mbms.GroupCall
android.telephony.MbmsStreamingSession.create(android.content.Context,java.util.concurrent.Executor,int,android.telephony.mbms.MbmsStreamingSessionCallback)android.telephony.MbmsStreamingSession
android.telephony.MbmsStreamingSession.create(android.content.Context,java.util.concurrent.Executor,android.telephony.mbms.MbmsStreamingSessionCallback)android.telephony.MbmsStreamingSession
android.telephony.MbmsStreamingSession.close)void
android.telephony.MbmsStreamingSession.requestUpdateStreamingServices(java.util.List)void
android.telephony.MbmsStreamingSession.startStreaming(android.telephony.mbms.StreamingServiceInfo,java.util.concurrent.Executor,android.telephony.mbms.StreamingServiceCallback)android.telephony.mbms.StreamingService
android.telephony.NeighboringCellInfo.getRssi)int
android.telephony.NeighboringCellInfo.getLac)int
android.telephony.NeighboringCellInfo.getCid)int
android.telephony.NeighboringCellInfo.getPsc)int
android.telephony.NeighboringCellInfo.getNetworkType)int
android.telephony.NeighboringCellInfo.setCid(int)void
android.telephony.NeighboringCellInfo.setRssi(int)void
android.telephony.NeighboringCellInfo.toString)String
android.telephony.NeighboringCellInfo.describeContents)int
android.telephony.NeighboringCellInfo.writeToParcel(android.os.Parcel,int)void
android.telephony.NetworkScan.stopScan)void
android.telephony.NetworkScanRequest.getScanType)int
android.telephony.NetworkScanRequest.getSearchPeriodicity)int
android.telephony.NetworkScanRequest.getMaxSearchTime)int
android.telephony.NetworkScanRequest.getIncrementalResults)boolean
android.telephony.NetworkScanRequest.getIncrementalResultsPeriodicity)int
android.telephony.NetworkScanRequest.getPlmns)java.util.ArrayList
android.telephony.NetworkScanRequest.describeContents)int
android.telephony.NetworkScanRequest.writeToParcel(android.os.Parcel,int)void
android.telephony.NetworkScanRequest.equals(Object)boolean
android.telephony.NetworkScanRequest.hashCode)int
android.telephony.PhoneNumberFormattingTextWatcher.beforeTextChanged(CharSequence,int,int,int)void
android.telephony.PhoneNumberFormattingTextWatcher.onTextChanged(CharSequence,int,int,int)void
android.telephony.PhoneNumberUtils.isISODigit(char)boolean
android.telephony.PhoneNumberUtils.is12Key(char)boolean
android.telephony.PhoneNumberUtils.isDialable(char)boolean
android.telephony.PhoneNumberUtils.isReallyDialable(char)boolean
android.telephony.PhoneNumberUtils.isNonSeparator(char)boolean
android.telephony.PhoneNumberUtils.isStartsPostDial(char)boolean
android.telephony.PhoneNumberUtils.getNumberFromIntent(android.content.Intent,android.content.Context)String
android.telephony.PhoneNumberUtils.extractNetworkPortion(String)String
android.telephony.PhoneNumberUtils.stripSeparators(String)String
android.telephony.PhoneNumberUtils.extractPostDialPortion(String)String
android.telephony.PhoneNumberUtils.compare(String,String)boolean
android.telephony.PhoneNumberUtils.compare(android.content.Context,String,String)boolean
android.telephony.PhoneNumberUtils.toCallerIDMinMatch(String)String
android.telephony.PhoneNumberUtils.getStrippedReversed(String)String
android.telephony.PhoneNumberUtils.stringFromStringAndTOA(String,int)String
android.telephony.PhoneNumberUtils.toaFromString(String)int
android.telephony.PhoneNumberUtils.calledPartyBCDToString(byte,int,int)String
android.telephony.PhoneNumberUtils.calledPartyBCDToString(byte,int,int,int)String
android.telephony.PhoneNumberUtils.calledPartyBCDFragmentToString(byte,int,int)String
android.telephony.PhoneNumberUtils.calledPartyBCDFragmentToString(byte,int,int,int)String
android.telephony.PhoneNumberUtils.isWellFormedSmsAddress(String)boolean
android.telephony.PhoneNumberUtils.isGlobalPhoneNumber(String)boolean
android.telephony.PhoneNumberUtils.formatNumber(String)String
android.telephony.PhoneNumberUtils.getFormatTypeForLocale(java.util.Locale)int
android.telephony.PhoneNumberUtils.formatNumber(android.text.Editable,int)void
android.telephony.PhoneNumberUtils.formatNanpNumber(android.text.Editable)void
android.telephony.PhoneNumberUtils.formatJapaneseNumber(android.text.Editable)void
android.telephony.PhoneNumberUtils.formatNumberToE164(String,String)String
android.telephony.PhoneNumberUtils.formatNumberToRFC3966(String,String)String
android.telephony.PhoneNumberUtils.formatNumber(String,String)String
android.telephony.PhoneNumberUtils.formatNumber(String,String,String)String
android.telephony.PhoneNumberUtils.normalizeNumber(String)String
android.telephony.PhoneNumberUtils.replaceUnicodeDigits(String)String
android.telephony.PhoneNumberUtils.isEmergencyNumber(String)boolean
android.telephony.PhoneNumberUtils.isLocalEmergencyNumber(android.content.Context,String)boolean
android.telephony.PhoneNumberUtils.isVoiceMailNumber(String)boolean
android.telephony.PhoneNumberUtils.convertKeypadLettersToDigits(String)String
android.telephony.PhoneNumberUtils.createTtsSpannable(CharSequence)CharSequence
android.telephony.PhoneNumberUtils.addTtsSpan(android.text.Spannable,int,int)void
android.telephony.PhoneNumberUtils.createTtsSpan(String)android.text.style.TtsSpan
android.telephony.PhoneStateListener.onServiceStateChanged(android.telephony.ServiceState)void
android.telephony.PhoneStateListener.onSignalStrengthChanged(int)void
android.telephony.PhoneStateListener.onMessageWaitingIndicatorChanged(boolean)void
android.telephony.PhoneStateListener.onCallForwardingIndicatorChanged(boolean)void
android.telephony.PhoneStateListener.onCellLocationChanged(android.telephony.CellLocation)void
android.telephony.PhoneStateListener.onCallStateChanged(int,String)void
android.telephony.PhoneStateListener.onDataConnectionStateChanged(int)void
android.telephony.PhoneStateListener.onDataConnectionStateChanged(int,int)void
android.telephony.PhoneStateListener.onDataActivity(int)void
android.telephony.PhoneStateListener.onSignalStrengthsChanged(android.telephony.SignalStrength)void
android.telephony.PhoneStateListener.onCellInfoChanged(java.util.List)void
android.telephony.PhoneStateListener.onUserMobileDataStateChanged(boolean)void
android.telephony.PhoneStateListener.onActiveDataSubscriptionIdChanged(int)void
android.telephony.RadioAccessSpecifier.getRadioAccessNetwork)int
android.telephony.RadioAccessSpecifier.describeContents)int
android.telephony.RadioAccessSpecifier.writeToParcel(android.os.Parcel,int)void
android.telephony.RadioAccessSpecifier.equals(Object)boolean
android.telephony.RadioAccessSpecifier.hashCode)int
android.telephony.ServiceState.copyFrom(android.telephony.ServiceState)void
android.telephony.ServiceState.writeToParcel(android.os.Parcel,int)void
android.telephony.ServiceState.describeContents)int
android.telephony.ServiceState.getState)int
android.telephony.ServiceState.getDuplexMode)int
android.telephony.ServiceState.getChannelNumber)int
android.telephony.ServiceState.getRoaming)boolean
android.telephony.ServiceState.getOperatorAlphaLong)String
android.telephony.ServiceState.getOperatorAlphaShort)String
android.telephony.ServiceState.getOperatorNumeric)String
android.telephony.ServiceState.getIsManualSelection)boolean
android.telephony.ServiceState.hashCode)int
android.telephony.ServiceState.equals(Object)boolean
android.telephony.ServiceState.toString)String
android.telephony.ServiceState.setStateOutOfService)void
android.telephony.ServiceState.setStateOff)void
android.telephony.ServiceState.setState(int)void
android.telephony.ServiceState.setRoaming(boolean)void
android.telephony.ServiceState.setOperatorName(String,String,String)void
android.telephony.ServiceState.setIsManualSelection(boolean)void
android.telephony.ServiceState.getCdmaNetworkId)int
android.telephony.ServiceState.getCdmaSystemId)int
android.telephony.SignalStrength.getCellSignalStrengths)java.util.List
android.telephony.SignalStrength.getCellSignalStrengths(Class)java.util.List
android.telephony.SignalStrength.writeToParcel(android.os.Parcel,int)void
android.telephony.SignalStrength.describeContents)int
android.telephony.SignalStrength.getGsmSignalStrength)int
android.telephony.SignalStrength.getGsmBitErrorRate)int
android.telephony.SignalStrength.getCdmaDbm)int
android.telephony.SignalStrength.getCdmaEcio)int
android.telephony.SignalStrength.getEvdoDbm)int
android.telephony.SignalStrength.getEvdoEcio)int
android.telephony.SignalStrength.getEvdoSnr)int
android.telephony.SignalStrength.getLevel)int
android.telephony.SignalStrength.isGsm)boolean
android.telephony.SignalStrength.hashCode)int
android.telephony.SignalStrength.equals(Object)boolean
android.telephony.SignalStrength.toString)String
android.telephony.SmsManager.sendTextMessage(String,String,String,android.app.PendingIntent,android.app.PendingIntent)void
android.telephony.SmsManager.sendTextMessageWithoutPersisting(String,String,String,android.app.PendingIntent,android.app.PendingIntent)void
android.telephony.SmsManager.injectSmsPdu(byte,String,android.app.PendingIntent)void
android.telephony.SmsManager.divideMessage(String)java.util.ArrayList
android.telephony.SmsManager.sendMultipartTextMessage(String,String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)void
android.telephony.SmsManager.sendDataMessage(String,String,short,byte,android.app.PendingIntent,android.app.PendingIntent)void
android.telephony.SmsManager.getDefault)android.telephony.gsm.SmsManager
android.telephony.SmsManager.getSmsManagerForSubscriptionId(int)android.telephony.gsm.SmsManager
android.telephony.SmsManager.getSubscriptionId)int
android.telephony.SmsManager.getDefaultSmsSubscriptionId)int
android.telephony.SmsManager.sendMultimediaMessage(android.content.Context,android.net.Uri,String,android.os.Bundle,android.app.PendingIntent)void
android.telephony.SmsManager.downloadMultimediaMessage(android.content.Context,String,android.net.Uri,android.os.Bundle,android.app.PendingIntent)void
android.telephony.SmsManager.getCarrierConfigValues)android.os.Bundle
android.telephony.SmsManager.createAppSpecificSmsToken(android.app.PendingIntent)String
android.telephony.SmsManager.getSmsMessagesForFinancialApp(android.os.Bundle,java.util.concurrent.Executor,FinancialSmsCallback)void
android.telephony.SmsManager.createAppSpecificSmsTokenWithPackageInfo(String,android.app.PendingIntent)String
android.telephony.SmsMessage.toString)String
android.telephony.SmsMessage.valueOf(String)MessageClass
android.telephony.SmsMessage.createFromPdu(byte)android.telephony.gsm.SmsMessage
android.telephony.SmsMessage.createFromPdu(byte,String)android.telephony.gsm.SmsMessage
android.telephony.SmsMessage.getTPLayerLengthForPDU(String)int
android.telephony.SmsMessage.getSubmitPdu(String,String,String,boolean)android.telephony.SmsMessage.SubmitPdu
android.telephony.SmsMessage.getSubmitPdu(String,String,short,byte,boolean)android.telephony.SmsMessage.SubmitPdu
android.telephony.SmsMessage.getServiceCenterAddress)String
android.telephony.SmsMessage.getOriginatingAddress)String
android.telephony.SmsMessage.getDisplayOriginatingAddress)String
android.telephony.SmsMessage.getMessageBody)String
android.telephony.SmsMessage.getMessageClass)MessageClass
android.telephony.SmsMessage.getDisplayMessageBody)String
android.telephony.SmsMessage.getPseudoSubject)String
android.telephony.SmsMessage.getTimestampMillis)long
android.telephony.SmsMessage.isEmail)boolean
android.telephony.SmsMessage.getEmailBody)String
android.telephony.SmsMessage.getEmailFrom)String
android.telephony.SmsMessage.getProtocolIdentifier)int
android.telephony.SmsMessage.isReplace)boolean
android.telephony.SmsMessage.isCphsMwiMessage)boolean
android.telephony.SmsMessage.isMWIClearMessage)boolean
android.telephony.SmsMessage.isMWISetMessage)boolean
android.telephony.SmsMessage.isMwiDontStore)boolean
android.telephony.SmsMessage.getStatusOnSim)int
android.telephony.SmsMessage.getStatusOnIcc)int
android.telephony.SmsMessage.getIndexOnSim)int
android.telephony.SmsMessage.getIndexOnIcc)int
android.telephony.SmsMessage.getStatus)int
android.telephony.SmsMessage.isStatusReportMessage)boolean
android.telephony.SmsMessage.isReplyPathPresent)boolean
android.telephony.SubscriptionInfo.getSubscriptionId)int
android.telephony.SubscriptionInfo.getIccId)String
android.telephony.SubscriptionInfo.getSimSlotIndex)int
android.telephony.SubscriptionInfo.getCarrierId)int
android.telephony.SubscriptionInfo.getDisplayName)CharSequence
android.telephony.SubscriptionInfo.getCarrierName)CharSequence
android.telephony.SubscriptionInfo.createIconBitmap(android.content.Context)android.graphics.Bitmap
android.telephony.SubscriptionInfo.getIconTint)int
android.telephony.SubscriptionInfo.getNumber)String
android.telephony.SubscriptionInfo.getDataRoaming)int
android.telephony.SubscriptionInfo.getMcc)int
android.telephony.SubscriptionInfo.getMnc)int
android.telephony.SubscriptionInfo.getMccString)String
android.telephony.SubscriptionInfo.getMncString)String
android.telephony.SubscriptionInfo.getCountryIso)String
android.telephony.SubscriptionInfo.isEmbedded)boolean
android.telephony.SubscriptionInfo.isOpportunistic)boolean
android.telephony.SubscriptionInfo.getGroupUuid)ParcelUuid
android.telephony.SubscriptionInfo.getSubscriptionType)int
android.telephony.SubscriptionInfo.getCardId)int
android.telephony.SubscriptionInfo.writeToParcel(Parcel,int)void
android.telephony.SubscriptionInfo.describeContents)int
android.telephony.SubscriptionInfo.toString)String
android.telephony.SubscriptionInfo.hashCode)int
android.telephony.SubscriptionInfo.equals(Object)boolean
android.telephony.SubscriptionManager.onSubscriptionsChanged)void
android.telephony.SubscriptionManager.onOpportunisticSubscriptionsChanged)void
android.telephony.SubscriptionManager.from(android.content.Context)android.telephony.SubscriptionManager
android.telephony.SubscriptionManager.addOnSubscriptionsChangedListener(android.telephony.SubscriptionManager.OnSubscriptionsChangedListener)void
android.telephony.SubscriptionManager.removeOnSubscriptionsChangedListener(android.telephony.SubscriptionManager.OnSubscriptionsChangedListener)void
android.telephony.SubscriptionManager.addOnOpportunisticSubscriptionsChangedListener(java.util.concurrent.Executor,android.telephony.SubscriptionManager.OnOpportunisticSubscriptionsChangedListener)void
android.telephony.SubscriptionManager.removeOnOpportunisticSubscriptionsChangedListener(android.telephony.SubscriptionManager.OnOpportunisticSubscriptionsChangedListener)void
android.telephony.SubscriptionManager.getActiveSubscriptionInfo(int)android.telephony.SubscriptionInfo
android.telephony.SubscriptionManager.getActiveSubscriptionInfoForSimSlotIndex(int)android.telephony.SubscriptionInfo
android.telephony.SubscriptionManager.getActiveSubscriptionInfoList)java.util.List
android.telephony.SubscriptionManager.getAccessibleSubscriptionInfoList)java.util.List
android.telephony.SubscriptionManager.getActiveSubscriptionInfoCount)int
android.telephony.SubscriptionManager.getActiveSubscriptionInfoCountMax)int
android.telephony.SubscriptionManager.getSlotIndex(int)int
android.telephony.SubscriptionManager.getDefaultSubscriptionId)int
android.telephony.SubscriptionManager.getDefaultVoiceSubscriptionId)int
android.telephony.SubscriptionManager.getDefaultSmsSubscriptionId)int
android.telephony.SubscriptionManager.getDefaultDataSubscriptionId)int
android.telephony.SubscriptionManager.isValidSubscriptionId(int)boolean
android.telephony.SubscriptionManager.isUsableSubscriptionId(int)boolean
android.telephony.SubscriptionManager.isNetworkRoaming(int)boolean
android.telephony.SubscriptionManager.isActiveSubscriptionId(int)boolean
android.telephony.SubscriptionManager.getSubscriptionPlans(int)java.util.List
android.telephony.SubscriptionManager.setSubscriptionPlans(int,java.util.List)void
android.telephony.SubscriptionManager.setSubscriptionOverrideUnmetered(int,boolean,long)void
android.telephony.SubscriptionManager.setSubscriptionOverrideCongested(int,boolean,long)void
android.telephony.SubscriptionManager.canManageSubscription(android.telephony.SubscriptionInfo)boolean
android.telephony.SubscriptionManager.getOpportunisticSubscriptions)java.util.List
android.telephony.SubscriptionManager.switchToSubscription(int,android.app.PendingIntent)void
android.telephony.SubscriptionManager.setOpportunistic(boolean,int)boolean
android.telephony.SubscriptionManager.createSubscriptionGroup(java.util.List)android.os.ParcelUuid
android.telephony.SubscriptionManager.addSubscriptionsIntoGroup(java.util.List,android.os.ParcelUuid)void
android.telephony.SubscriptionManager.removeSubscriptionsFromGroup(java.util.List,android.os.ParcelUuid)void
android.telephony.SubscriptionManager.getSubscriptionsInGroup(android.os.ParcelUuid)java.util.List
android.telephony.SubscriptionPlan.createNonrecurring(java.time.ZonedDateTime,java.time.ZonedDateTime)android.telephony.SubscriptionPlan.Builder
android.telephony.SubscriptionPlan.createRecurring(java.time.ZonedDateTime,java.time.Period)android.telephony.SubscriptionPlan.Builder
android.telephony.SubscriptionPlan.build)android.telephony.SubscriptionPlan
android.telephony.SubscriptionPlan.setTitle(CharSequence)android.telephony.SubscriptionPlan.Builder
android.telephony.SubscriptionPlan.setSummary(CharSequence)android.telephony.SubscriptionPlan.Builder
android.telephony.SubscriptionPlan.setDataLimit(long,int)android.telephony.SubscriptionPlan.Builder
android.telephony.SubscriptionPlan.setDataUsage(long,long)android.telephony.SubscriptionPlan.Builder
android.telephony.SubscriptionPlan.describeContents)int
android.telephony.SubscriptionPlan.writeToParcel(android.os.Parcel,int)void
android.telephony.SubscriptionPlan.toString)String
android.telephony.SubscriptionPlan.hashCode)int
android.telephony.SubscriptionPlan.equals(Object)boolean
android.telephony.SubscriptionPlan.getTitle)CharSequence
android.telephony.SubscriptionPlan.getSummary)CharSequence
android.telephony.SubscriptionPlan.getDataLimitBytes)long
android.telephony.SubscriptionPlan.getDataLimitBehavior)int
android.telephony.SubscriptionPlan.getDataUsageBytes)long
android.telephony.SubscriptionPlan.getDataUsageTime)long
android.telephony.SubscriptionPlan.cycleIterator)java.util.Iterator
android.telephony.TelephonyManager.onReceiveUssdResponse(android.telephony.TelephonyManager,String,CharSequence)void
android.telephony.TelephonyManager.onReceiveUssdResponseFailed(android.telephony.TelephonyManager,String,int)void
android.telephony.TelephonyManager.onError(int,Throwable)void
android.telephony.TelephonyManager.getPhoneCount)int
android.telephony.TelephonyManager.createForSubscriptionId(int)android.telephony.TelephonyManager
android.telephony.TelephonyManager.createForPhoneAccountHandle(android.telecom.PhoneAccountHandle)android.telephony.TelephonyManager
android.telephony.TelephonyManager.getDeviceSoftwareVersion)String
android.telephony.TelephonyManager.getDeviceId)String
android.telephony.TelephonyManager.getDeviceId(int)String
android.telephony.TelephonyManager.getImei)String
android.telephony.TelephonyManager.getImei(int)String
android.telephony.TelephonyManager.getTypeAllocationCode)String
android.telephony.TelephonyManager.getTypeAllocationCode(int)String
android.telephony.TelephonyManager.getMeid)String
android.telephony.TelephonyManager.getMeid(int)String
android.telephony.TelephonyManager.getManufacturerCode)String
android.telephony.TelephonyManager.getManufacturerCode(int)String
android.telephony.TelephonyManager.getNai)String
android.telephony.TelephonyManager.getCellLocation)android.telephony.CellLocation
android.telephony.TelephonyManager.getPhoneType)int
android.telephony.TelephonyManager.getNetworkOperatorName)String
android.telephony.TelephonyManager.getNetworkOperator)String
android.telephony.TelephonyManager.getNetworkSpecifier)String
android.telephony.TelephonyManager.getCarrierConfig)android.os.PersistableBundle
android.telephony.TelephonyManager.isNetworkRoaming)boolean
android.telephony.TelephonyManager.getNetworkCountryIso)String
android.telephony.TelephonyManager.getNetworkType)int
android.telephony.TelephonyManager.getDataNetworkType)int
android.telephony.TelephonyManager.getVoiceNetworkType)int
android.telephony.TelephonyManager.hasIccCard)boolean
android.telephony.TelephonyManager.getSimState)int
android.telephony.TelephonyManager.getSimState(int)int
android.telephony.TelephonyManager.getSimOperator)String
android.telephony.TelephonyManager.getSimOperatorName)String
android.telephony.TelephonyManager.getSimCountryIso)String
android.telephony.TelephonyManager.getSimSerialNumber)String
android.telephony.TelephonyManager.getCardIdForDefaultEuicc)int
android.telephony.TelephonyManager.getUiccCardsInfo)java.util.List
android.telephony.TelephonyManager.getSubscriberId)String
android.telephony.TelephonyManager.getGroupIdLevel1)String
android.telephony.TelephonyManager.getLine1Number)String
android.telephony.TelephonyManager.setLine1NumberForDisplay(String,String)boolean
android.telephony.TelephonyManager.getVoiceMailNumber)String
android.telephony.TelephonyManager.setVoiceMailNumber(String,String)boolean
android.telephony.TelephonyManager.getVisualVoicemailPackageName)String
android.telephony.TelephonyManager.setVisualVoicemailSmsFilterSettings(android.telephony.VisualVoicemailSmsFilterSettings)void
android.telephony.TelephonyManager.sendVisualVoicemailSms(String,int,String,android.app.PendingIntent)void
android.telephony.TelephonyManager.getVoiceMailAlphaTag)String
android.telephony.TelephonyManager.sendDialerSpecialCode(String)void
android.telephony.TelephonyManager.getCallState)int
android.telephony.TelephonyManager.getDataActivity)int
android.telephony.TelephonyManager.getDataState)int
android.telephony.TelephonyManager.listen(android.telephony.PhoneStateListener,int)void
android.telephony.TelephonyManager.isVoiceCapable)boolean
android.telephony.TelephonyManager.isSmsCapable)boolean
android.telephony.TelephonyManager.getAllCellInfo)java.util.List
android.telephony.TelephonyManager.requestCellInfoUpdate(java.util.concurrent.Executor,CellInfoCallback)void
android.telephony.TelephonyManager.getMmsUserAgent)String
android.telephony.TelephonyManager.getMmsUAProfUrl)String
android.telephony.TelephonyManager.iccOpenLogicalChannel(String)android.telephony.IccOpenLogicalChannelResponse
android.telephony.TelephonyManager.iccOpenLogicalChannel(String,int)android.telephony.IccOpenLogicalChannelResponse
android.telephony.TelephonyManager.iccCloseLogicalChannel(int)boolean
android.telephony.TelephonyManager.iccTransmitApduLogicalChannel(int,int,int,int,int,int,String)String
android.telephony.TelephonyManager.iccTransmitApduBasicChannel(int,int,int,int,int,String)String
android.telephony.TelephonyManager.sendEnvelopeWithStatus(String)String
android.telephony.TelephonyManager.getIccAuthentication(int,int,String)String
android.telephony.TelephonyManager.setNetworkSelectionModeAutomatic)void
android.telephony.TelephonyManager.requestNetworkScan(android.telephony.NetworkScanRequest,java.util.concurrent.Executor,TelephonyScanManager.NetworkScanCallback)android.telephony.NetworkScan
android.telephony.TelephonyManager.setNetworkSelectionModeManual(String,boolean)boolean
android.telephony.TelephonyManager.setPreferredNetworkTypeToGlobal)boolean
android.telephony.TelephonyManager.hasCarrierPrivileges)boolean
android.telephony.TelephonyManager.setOperatorBrandOverride(String)boolean
android.telephony.TelephonyManager.sendUssdRequest(String,UssdResponseCallback,android.os.Handler)void
android.telephony.TelephonyManager.isConcurrentVoiceAndDataSupported)boolean
android.telephony.TelephonyManager.setDataEnabled(boolean)void
android.telephony.TelephonyManager.isDataEnabled)boolean
android.telephony.TelephonyManager.isDataRoamingEnabled)boolean
android.telephony.TelephonyManager.canChangeDtmfToneLength)boolean
android.telephony.TelephonyManager.isWorldPhone)boolean
android.telephony.TelephonyManager.isTtyModeSupported)boolean
android.telephony.TelephonyManager.isRttSupported)boolean
android.telephony.TelephonyManager.isHearingAidCompatibilitySupported)boolean
android.telephony.TelephonyManager.getServiceState)android.telephony.ServiceState
android.telephony.TelephonyManager.getVoicemailRingtoneUri(android.telecom.PhoneAccountHandle)android.net.Uri
android.telephony.TelephonyManager.setVoicemailRingtoneUri(android.telecom.PhoneAccountHandle,android.net.Uri)void
android.telephony.TelephonyManager.isVoicemailVibrationEnabled(android.telecom.PhoneAccountHandle)boolean
android.telephony.TelephonyManager.setVoicemailVibrationEnabled(android.telecom.PhoneAccountHandle,boolean)void
android.telephony.TelephonyManager.getSimCarrierId)int
android.telephony.TelephonyManager.getSimCarrierIdName)CharSequence
android.telephony.TelephonyManager.getSimSpecificCarrierId)int
android.telephony.TelephonyManager.getSimSpecificCarrierIdName)CharSequence
android.telephony.TelephonyManager.getCarrierIdFromSimMccMnc)int
android.telephony.TelephonyManager.getSignalStrength)android.telephony.SignalStrength
android.telephony.TelephonyManager.getEmergencyNumberList)java.util.Map
android.telephony.TelephonyManager.getEmergencyNumberList(int)java.util.Map
android.telephony.TelephonyManager.isEmergencyNumber(String)boolean
android.telephony.TelephonyManager.setPreferredOpportunisticDataSubscription(int,boolean,java.util.concurrent.Executor,java.util.function.Consumer)void
android.telephony.TelephonyManager.getPreferredOpportunisticDataSubscription)int
android.telephony.TelephonyManager.updateAvailableNetworks(java.util.List,java.util.concurrent.Executor,java.util.function.Consumer)void
android.telephony.TelephonyManager.isMultiSimSupported)int
android.telephony.TelephonyManager.switchMultiSimConfig(int)void
android.telephony.TelephonyManager.doesSwitchMultiSimConfigTriggerReboot)boolean
android.telephony.TelephonyScanManager.onResults(java.util.List)void
android.telephony.TelephonyScanManager.onComplete)void
android.telephony.TelephonyScanManager.onError(int)void
android.telephony.UiccCardInfo.writeToParcel(android.os.Parcel,int)void
android.telephony.UiccCardInfo.describeContents)int
android.telephony.UiccCardInfo.isEuicc)boolean
android.telephony.UiccCardInfo.getCardId)int
android.telephony.UiccCardInfo.getEid)String
android.telephony.UiccCardInfo.getIccId)String
android.telephony.UiccCardInfo.getSlotIndex)int
android.telephony.UiccCardInfo.isRemovable)boolean
android.telephony.UiccCardInfo.equals(Object)boolean
android.telephony.UiccCardInfo.hashCode)int
android.telephony.UiccCardInfo.toString)String
android.telephony.VisualVoicemailService.finish)void
android.telephony.VisualVoicemailService.equals(Object)boolean
android.telephony.VisualVoicemailService.hashCode)int
android.telephony.VisualVoicemailService.onBind(android.content.Intent)android.os.IBinder
android.telephony.VisualVoicemailSms.getPhoneAccountHandle)android.telecom.PhoneAccountHandle
android.telephony.VisualVoicemailSms.getPrefix)String
android.telephony.VisualVoicemailSms.getFields)Bundle
android.telephony.VisualVoicemailSms.getMessageBody)String
android.telephony.VisualVoicemailSms.describeContents)int
android.telephony.VisualVoicemailSms.writeToParcel(Parcel,int)void
android.telephony.VisualVoicemailSmsFilterSettings.build)android.telephony.VisualVoicemailSmsFilterSettings
android.telephony.VisualVoicemailSmsFilterSettings.setClientPrefix(String)android.telephony.VisualVoicemailSmsFilterSettings.Builder
android.telephony.VisualVoicemailSmsFilterSettings.setOriginatingNumbers(java.util.List)android.telephony.VisualVoicemailSmsFilterSettings.Builder
android.telephony.VisualVoicemailSmsFilterSettings.setDestinationPort(int)android.telephony.VisualVoicemailSmsFilterSettings.Builder
android.telephony.VisualVoicemailSmsFilterSettings.describeContents)int
android.telephony.VisualVoicemailSmsFilterSettings.writeToParcel(android.os.Parcel,int)void
android.telephony.VisualVoicemailSmsFilterSettings.toString)String
android.telephony.cdma.CdmaCellLocation.getBaseStationId)int
android.telephony.cdma.CdmaCellLocation.getBaseStationLatitude)int
android.telephony.cdma.CdmaCellLocation.getBaseStationLongitude)int
android.telephony.cdma.CdmaCellLocation.getSystemId)int
android.telephony.cdma.CdmaCellLocation.getNetworkId)int
android.telephony.cdma.CdmaCellLocation.setStateInvalid)void
android.telephony.cdma.CdmaCellLocation.setCellLocationData(int,int,int)void
android.telephony.cdma.CdmaCellLocation.setCellLocationData(int,int,int,int,int)void
android.telephony.cdma.CdmaCellLocation.hashCode)int
android.telephony.cdma.CdmaCellLocation.equals(Object)boolean
android.telephony.cdma.CdmaCellLocation.toString)String
android.telephony.cdma.CdmaCellLocation.fillInNotifierBundle(android.os.Bundle)void
android.telephony.cdma.CdmaCellLocation.convertQuartSecToDecDegrees(int)double
android.telephony.data.ApnSetting.setEntryName(String)android.telephony.data.ApnSetting.Builder
android.telephony.data.ApnSetting.setApnName(String)android.telephony.data.ApnSetting.Builder
android.telephony.data.ApnSetting.setProxyAddress(java.net.InetAddress)android.telephony.data.ApnSetting.Builder
android.telephony.data.ApnSetting.setProxyAddress(String)android.telephony.data.ApnSetting.Builder
android.telephony.data.ApnSetting.setProxyPort(int)android.telephony.data.ApnSetting.Builder
android.telephony.data.ApnSetting.setMmsc(android.net.Uri)android.telephony.data.ApnSetting.Builder
android.telephony.data.ApnSetting.setMmsProxyAddress(java.net.InetAddress)android.telephony.data.ApnSetting.Builder
android.telephony.data.ApnSetting.setMmsProxyAddress(String)android.telephony.data.ApnSetting.Builder
android.telephony.data.ApnSetting.setMmsProxyPort(int)android.telephony.data.ApnSetting.Builder
android.telephony.data.ApnSetting.setUser(String)android.telephony.data.ApnSetting.Builder
android.telephony.data.ApnSetting.setPassword(String)android.telephony.data.ApnSetting.Builder
android.telephony.data.ApnSetting.setAuthType(int)android.telephony.data.ApnSetting.Builder
android.telephony.data.ApnSetting.setApnTypeBitmask(int)android.telephony.data.ApnSetting.Builder
android.telephony.data.ApnSetting.setOperatorNumeric(String)android.telephony.data.ApnSetting.Builder
android.telephony.data.ApnSetting.setProtocol(int)android.telephony.data.ApnSetting.Builder
android.telephony.data.ApnSetting.setRoamingProtocol(int)android.telephony.data.ApnSetting.Builder
android.telephony.data.ApnSetting.setCarrierEnabled(boolean)android.telephony.data.ApnSetting.Builder
android.telephony.data.ApnSetting.setNetworkTypeBitmask(int)android.telephony.data.ApnSetting.Builder
android.telephony.data.ApnSetting.setMvnoType(int)android.telephony.data.ApnSetting.Builder
android.telephony.data.ApnSetting.setCarrierId(int)android.telephony.data.ApnSetting.Builder
android.telephony.data.ApnSetting.build)android.telephony.data.ApnSetting
android.telephony.data.ApnSetting.getEntryName)String
android.telephony.data.ApnSetting.getApnName)String
android.telephony.data.ApnSetting.getProxyAddress)java.net.InetAddress
android.telephony.data.ApnSetting.getProxyAddressAsString)String
android.telephony.data.ApnSetting.getProxyPort)int
android.telephony.data.ApnSetting.getMmsc)android.net.Uri
android.telephony.data.ApnSetting.getMmsProxyAddress)java.net.InetAddress
android.telephony.data.ApnSetting.getMmsProxyAddressAsString)String
android.telephony.data.ApnSetting.getMmsProxyPort)int
android.telephony.data.ApnSetting.getUser)String
android.telephony.data.ApnSetting.getPassword)String
android.telephony.data.ApnSetting.getAuthType)int
android.telephony.data.ApnSetting.getApnTypeBitmask)int
android.telephony.data.ApnSetting.getId)int
android.telephony.data.ApnSetting.getOperatorNumeric)String
android.telephony.data.ApnSetting.getProtocol)int
android.telephony.data.ApnSetting.getRoamingProtocol)int
android.telephony.data.ApnSetting.isEnabled)boolean
android.telephony.data.ApnSetting.getNetworkTypeBitmask)int
android.telephony.data.ApnSetting.getMvnoType)int
android.telephony.data.ApnSetting.getCarrierId)int
android.telephony.data.ApnSetting.toString)String
android.telephony.data.ApnSetting.equals(Object)boolean
android.telephony.data.ApnSetting.describeContents)int
android.telephony.data.ApnSetting.writeToParcel(android.os.Parcel,int)void
android.telephony.emergency.EmergencyNumber.writeToParcel(android.os.Parcel,int)void
android.telephony.emergency.EmergencyNumber.getNumber)String
android.telephony.emergency.EmergencyNumber.getCountryIso)String
android.telephony.emergency.EmergencyNumber.getMnc)String
android.telephony.emergency.EmergencyNumber.getEmergencyServiceCategories)java.util.List
android.telephony.emergency.EmergencyNumber.getEmergencyUrns)java.util.List
android.telephony.emergency.EmergencyNumber.isInEmergencyServiceCategories(int)boolean
android.telephony.emergency.EmergencyNumber.getEmergencyNumberSources)java.util.List
android.telephony.emergency.EmergencyNumber.isFromSources(int)boolean
android.telephony.emergency.EmergencyNumber.getEmergencyCallRouting)int
android.telephony.emergency.EmergencyNumber.describeContents)int
android.telephony.emergency.EmergencyNumber.toString)String
android.telephony.emergency.EmergencyNumber.equals(Object)boolean
android.telephony.emergency.EmergencyNumber.hashCode)int
android.telephony.emergency.EmergencyNumber.compareTo(android.telephony.emergency.EmergencyNumber)int
android.telephony.euicc.DownloadableSubscription.getEncodedActivationCode)String
android.telephony.euicc.DownloadableSubscription.forActivationCode(String)android.telephony.euicc.DownloadableSubscription
android.telephony.euicc.DownloadableSubscription.getConfirmationCode)String
android.telephony.euicc.DownloadableSubscription.writeToParcel(android.os.Parcel,int)void
android.telephony.euicc.DownloadableSubscription.describeContents)int
android.telephony.euicc.EuiccInfo.getOsVersion)String
android.telephony.euicc.EuiccInfo.writeToParcel(android.os.Parcel,int)void
android.telephony.euicc.EuiccInfo.describeContents)int
android.telephony.euicc.EuiccManager.createForCardId(int)android.telephony.euicc.EuiccManager
android.telephony.euicc.EuiccManager.isEnabled)boolean
android.telephony.euicc.EuiccManager.getEid)String
android.telephony.euicc.EuiccManager.downloadSubscription(android.telephony.euicc.DownloadableSubscription,boolean,android.app.PendingIntent)void
android.telephony.euicc.EuiccManager.startResolutionActivity(android.app.Activity,int,Intent,android.app.PendingIntent)void
android.telephony.euicc.EuiccManager.getEuiccInfo)android.telephony.euicc.EuiccInfo
android.telephony.euicc.EuiccManager.deleteSubscription(int,android.app.PendingIntent)void
android.telephony.euicc.EuiccManager.switchToSubscription(int,android.app.PendingIntent)void
android.telephony.euicc.EuiccManager.updateSubscriptionNickname(int,String,android.app.PendingIntent)void
android.telephony.gsm.GsmCellLocation.getLac)int
android.telephony.gsm.GsmCellLocation.getCid)int
android.telephony.gsm.GsmCellLocation.getPsc)int
android.telephony.gsm.GsmCellLocation.setStateInvalid)void
android.telephony.gsm.GsmCellLocation.setLacAndCid(int,int)void
android.telephony.gsm.GsmCellLocation.hashCode)int
android.telephony.gsm.GsmCellLocation.equals(Object)boolean
android.telephony.gsm.GsmCellLocation.toString)String
android.telephony.gsm.GsmCellLocation.fillInNotifierBundle(android.os.Bundle)void
android.telephony.gsm.SmsManager.getDefault)android.telephony.gsm.SmsManager
android.telephony.gsm.SmsManager.sendTextMessage(String,String,String,android.app.PendingIntent,android.app.PendingIntent)void
android.telephony.gsm.SmsManager.divideMessage(String)java.util.ArrayList
android.telephony.gsm.SmsManager.sendMultipartTextMessage(String,String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)void
android.telephony.gsm.SmsManager.sendDataMessage(String,String,short,byte,android.app.PendingIntent,android.app.PendingIntent)void
android.telephony.gsm.SmsMessage.toString)String
android.telephony.gsm.SmsMessage.valueOf(String)MessageClass
android.telephony.gsm.SmsMessage.createFromPdu(byte)android.telephony.gsm.SmsMessage
android.telephony.gsm.SmsMessage.getTPLayerLengthForPDU(String)int
android.telephony.gsm.SmsMessage.getSubmitPdu(String,String,String,boolean)android.telephony.gsm.SmsMessage.SubmitPdu
android.telephony.gsm.SmsMessage.getSubmitPdu(String,String,short,byte,boolean)android.telephony.gsm.SmsMessage.SubmitPdu
android.telephony.gsm.SmsMessage.getServiceCenterAddress)String
android.telephony.gsm.SmsMessage.getOriginatingAddress)String
android.telephony.gsm.SmsMessage.getDisplayOriginatingAddress)String
android.telephony.gsm.SmsMessage.getMessageBody)String
android.telephony.gsm.SmsMessage.getMessageClass)MessageClass
android.telephony.gsm.SmsMessage.getDisplayMessageBody)String
android.telephony.gsm.SmsMessage.getPseudoSubject)String
android.telephony.gsm.SmsMessage.getTimestampMillis)long
android.telephony.gsm.SmsMessage.isEmail)boolean
android.telephony.gsm.SmsMessage.getEmailBody)String
android.telephony.gsm.SmsMessage.getEmailFrom)String
android.telephony.gsm.SmsMessage.getProtocolIdentifier)int
android.telephony.gsm.SmsMessage.isReplace)boolean
android.telephony.gsm.SmsMessage.isCphsMwiMessage)boolean
android.telephony.gsm.SmsMessage.isMWIClearMessage)boolean
android.telephony.gsm.SmsMessage.isMWISetMessage)boolean
android.telephony.gsm.SmsMessage.isMwiDontStore)boolean
android.telephony.gsm.SmsMessage.getStatusOnSim)int
android.telephony.gsm.SmsMessage.getIndexOnSim)int
android.telephony.gsm.SmsMessage.getStatus)int
android.telephony.gsm.SmsMessage.isStatusReportMessage)boolean
android.telephony.gsm.SmsMessage.isReplyPathPresent)boolean
android.telephony.mbms.DownloadProgressListener.onProgressUpdated(android.telephony.mbms.DownloadRequest,android.telephony.mbms.FileInfo,int,int,int,int)void
android.telephony.mbms.DownloadRequest.fromDownloadRequest(android.telephony.mbms.DownloadRequest)android.telephony.mbms.DownloadRequest.Builder
android.telephony.mbms.DownloadRequest.fromSerializedRequest(byte)android.telephony.mbms.DownloadRequest.Builder
android.telephony.mbms.DownloadRequest.setServiceInfo(android.telephony.mbms.FileServiceInfo)android.telephony.mbms.DownloadRequest.Builder
android.telephony.mbms.DownloadRequest.setSubscriptionId(int)android.telephony.mbms.DownloadRequest.Builder
android.telephony.mbms.DownloadRequest.setAppIntent(android.content.Intent)android.telephony.mbms.DownloadRequest.Builder
android.telephony.mbms.DownloadRequest.build)android.telephony.mbms.DownloadRequest
android.telephony.mbms.DownloadRequest.describeContents)int
android.telephony.mbms.DownloadRequest.writeToParcel(android.os.Parcel,int)void
android.telephony.mbms.DownloadRequest.getFileServiceId)String
android.telephony.mbms.DownloadRequest.getSourceUri)android.net.Uri
android.telephony.mbms.DownloadRequest.getDestinationUri)android.net.Uri
android.telephony.mbms.DownloadRequest.getSubscriptionId)int
android.telephony.mbms.DownloadRequest.getMaxAppIntentSize)int
android.telephony.mbms.DownloadRequest.getMaxDestinationUriSize)int
android.telephony.mbms.DownloadRequest.equals(Object)boolean
android.telephony.mbms.DownloadRequest.hashCode)int
android.telephony.mbms.DownloadStatusListener.onStatusUpdated(android.telephony.mbms.DownloadRequest,android.telephony.mbms.FileInfo,int)void
android.telephony.mbms.FileInfo.writeToParcel(android.os.Parcel,int)void
android.telephony.mbms.FileInfo.describeContents)int
android.telephony.mbms.FileInfo.getUri)android.net.Uri
android.telephony.mbms.FileInfo.getMimeType)String
android.telephony.mbms.FileInfo.equals(Object)boolean
android.telephony.mbms.FileInfo.hashCode)int
android.telephony.mbms.FileServiceInfo.writeToParcel(android.os.Parcel,int)void
android.telephony.mbms.FileServiceInfo.describeContents)int
android.telephony.mbms.FileServiceInfo.getFiles)java.util.List
android.telephony.mbms.GroupCall.getTmgi)long
android.telephony.mbms.GroupCall.updateGroupCall(java.util.List,java.util.List)void
android.telephony.mbms.GroupCall.close)void
android.telephony.mbms.GroupCallCallback.onError(int,String)void
android.telephony.mbms.GroupCallCallback.onGroupCallStateChanged(int,int)void
android.telephony.mbms.GroupCallCallback.onBroadcastSignalStrengthUpdated(int)void
android.telephony.mbms.MbmsDownloadReceiver.onReceive(Context,Intent)void
android.telephony.mbms.MbmsDownloadSessionCallback.onError(int,String)void
android.telephony.mbms.MbmsDownloadSessionCallback.onFileServicesUpdated(java.util.List)void
android.telephony.mbms.MbmsDownloadSessionCallback.onMiddlewareReady)void
android.telephony.mbms.MbmsGroupCallSessionCallback.onError(int,String)void
android.telephony.mbms.MbmsGroupCallSessionCallback.onAvailableSaisUpdated(java.util.List,java.util.List)void
android.telephony.mbms.MbmsGroupCallSessionCallback.onServiceInterfaceAvailable(String,int)void
android.telephony.mbms.MbmsGroupCallSessionCallback.onMiddlewareReady)void
android.telephony.mbms.MbmsStreamingSessionCallback.onError(int,String)void
android.telephony.mbms.MbmsStreamingSessionCallback.onStreamingServicesUpdated(java.util.List)void
android.telephony.mbms.MbmsStreamingSessionCallback.onMiddlewareReady)void
android.telephony.mbms.ServiceInfo.getNameForLocale(Locale)CharSequence
android.telephony.mbms.ServiceInfo.getNamedContentLocales)Set
android.telephony.mbms.ServiceInfo.getServiceClassName)String
android.telephony.mbms.ServiceInfo.getLocales)List
android.telephony.mbms.ServiceInfo.getServiceId)String
android.telephony.mbms.ServiceInfo.getSessionStartTime)Date
android.telephony.mbms.ServiceInfo.getSessionEndTime)Date
android.telephony.mbms.ServiceInfo.equals(Object)boolean
android.telephony.mbms.ServiceInfo.hashCode)int
android.telephony.mbms.StreamingService.getPlaybackUri)android.net.Uri
android.telephony.mbms.StreamingService.getInfo)android.telephony.mbms.StreamingServiceInfo
android.telephony.mbms.StreamingService.close)void
android.telephony.mbms.StreamingServiceCallback.onError(int,String)void
android.telephony.mbms.StreamingServiceCallback.onStreamStateUpdated(int,int)void
android.telephony.mbms.StreamingServiceCallback.onMediaDescriptionUpdated)void
android.telephony.mbms.StreamingServiceCallback.onBroadcastSignalStrengthUpdated(int)void
android.telephony.mbms.StreamingServiceCallback.onStreamMethodUpdated(int)void
android.telephony.mbms.StreamingServiceInfo.writeToParcel(android.os.Parcel,int)void
android.telephony.mbms.StreamingServiceInfo.describeContents)int
android.text.AlteredCharSequence.make(CharSequence,char,int,int)android.text.AlteredCharSequence
android.text.AlteredCharSequence.charAt(int)char
android.text.AlteredCharSequence.length)int
android.text.AlteredCharSequence.subSequence(int,int)CharSequence
android.text.AlteredCharSequence.getChars(int,int,char,int)void
android.text.AlteredCharSequence.toString)String
android.text.Annotation.getSpanTypeId)int
android.text.Annotation.describeContents)int
android.text.Annotation.writeToParcel(android.os.Parcel,int)void
android.text.Annotation.getKey)String
android.text.Annotation.getValue)String
android.text.AutoText.get(CharSequence,int,int,android.view.View)String
android.text.AutoText.getSize(android.view.View)int
android.text.BidiFormatter.stereoReset(boolean)Builder
android.text.BidiFormatter.setTextDirectionHeuristic(android.text.TextDirectionHeuristic)Builder
android.text.BidiFormatter.build)android.text.BidiFormatter
android.text.BidiFormatter.getInstance)android.text.BidiFormatter
android.text.BidiFormatter.getInstance(boolean)android.text.BidiFormatter
android.text.BidiFormatter.getInstance(java.util.Locale)android.text.BidiFormatter
android.text.BidiFormatter.isRtlContext)boolean
android.text.BidiFormatter.getStereoReset)boolean
android.text.BidiFormatter.isRtl(String)boolean
android.text.BidiFormatter.isRtl(CharSequence)boolean
android.text.BidiFormatter.unicodeWrap(String,android.text.TextDirectionHeuristic,boolean)String
android.text.BidiFormatter.unicodeWrap(CharSequence,android.text.TextDirectionHeuristic,boolean)CharSequence
android.text.BidiFormatter.unicodeWrap(String,android.text.TextDirectionHeuristic)String
android.text.BidiFormatter.unicodeWrap(CharSequence,android.text.TextDirectionHeuristic)CharSequence
android.text.BidiFormatter.unicodeWrap(String,boolean)String
android.text.BidiFormatter.unicodeWrap(CharSequence,boolean)CharSequence
android.text.BidiFormatter.unicodeWrap(String)String
android.text.BidiFormatter.unicodeWrap(CharSequence)CharSequence
android.text.BoringLayout.toString)String
android.text.BoringLayout.make(CharSequence,android.text.TextPaint,int,Layout.Alignment,float,float,android.text.BoringLayout.Metrics,boolean)android.text.BoringLayout
android.text.BoringLayout.isBoring(CharSequence,android.text.TextPaint)android.text.BoringLayout.Metrics
android.text.BoringLayout.isBoring(CharSequence,android.text.TextPaint,android.text.BoringLayout.Metrics)android.text.BoringLayout.Metrics
android.text.BoringLayout.getHeight)int
android.text.BoringLayout.getLineCount)int
android.text.BoringLayout.getLineTop(int)int
android.text.BoringLayout.getLineDescent(int)int
android.text.BoringLayout.getLineStart(int)int
android.text.BoringLayout.getParagraphDirection(int)int
android.text.BoringLayout.getLineContainsTab(int)boolean
android.text.BoringLayout.getLineMax(int)float
android.text.BoringLayout.getLineWidth(int)float
android.text.BoringLayout.getTopPadding)int
android.text.BoringLayout.getBottomPadding)int
android.text.BoringLayout.getEllipsisCount(int)int
android.text.BoringLayout.getEllipsisStart(int)int
android.text.BoringLayout.getEllipsizedWidth)int
android.text.BoringLayout.draw(Canvas,Path,Paint,int)void
android.text.BoringLayout.ellipsized(int,int)void
android.text.DynamicLayout.obtain(CharSequence,android.text.TextPaint,int)Builder
android.text.DynamicLayout.setDisplayText(CharSequence)Builder
android.text.DynamicLayout.setAlignment(Layout.Alignment)Builder
android.text.DynamicLayout.setTextDirection(android.text.TextDirectionHeuristic)Builder
android.text.DynamicLayout.setLineSpacing(float,float)Builder
android.text.DynamicLayout.setIncludePad(boolean)Builder
android.text.DynamicLayout.setUseLineSpacingFromFallbacks(boolean)Builder
android.text.DynamicLayout.setEllipsizedWidth(int)Builder
android.text.DynamicLayout.setEllipsize(TextUtils.TruncateAt)Builder
android.text.DynamicLayout.setBreakStrategy(int)Builder
android.text.DynamicLayout.setHyphenationFrequency(int)Builder
android.text.DynamicLayout.setJustificationMode(int)Builder
android.text.DynamicLayout.build)android.text.DynamicLayout
android.text.DynamicLayout.getLineCount)int
android.text.DynamicLayout.getLineTop(int)int
android.text.DynamicLayout.getLineDescent(int)int
android.text.DynamicLayout.getLineStart(int)int
android.text.DynamicLayout.getLineContainsTab(int)boolean
android.text.DynamicLayout.getParagraphDirection(int)int
android.text.DynamicLayout.getTopPadding)int
android.text.DynamicLayout.getBottomPadding)int
android.text.DynamicLayout.getEllipsizedWidth)int
android.text.DynamicLayout.getEllipsisStart(int)int
android.text.DynamicLayout.getEllipsisCount(int)int
android.text.Editable.getInstance)android.text.Editable.Factory
android.text.Editable.newEditable(CharSequence)android.text.Editable
android.text.Html.fromHtml(String)android.text.Spanned
android.text.Html.fromHtml(String,int)android.text.Spanned
android.text.Html.fromHtml(String,android.text.Html.ImageGetter,android.text.Html.TagHandler)android.text.Spanned
android.text.Html.fromHtml(String,int,android.text.Html.ImageGetter,android.text.Html.TagHandler)android.text.Spanned
android.text.Html.toHtml(android.text.Spanned)String
android.text.Html.toHtml(android.text.Spanned,int)String
android.text.Html.escapeHtml(CharSequence)String
android.text.InputFilter.filter(CharSequence,int,int,android.text.Spanned,int,int)CharSequence
android.text.InputFilter.getMax)int
android.text.InputFilter.filter(CharSequence,int,int,android.text.Spanned,int,int)CharSequence
android.text.Layout.valueOf(String)Alignment
android.text.Layout.getDesiredWidth(CharSequence,android.text.TextPaint)float
android.text.Layout.getDesiredWidth(CharSequence,int,int,android.text.TextPaint)float
android.text.Layout.draw(Canvas)void
android.text.Layout.draw(Canvas,Path,Paint,int)void
android.text.Layout.getText)CharSequence
android.text.Layout.getPaint)android.text.TextPaint
android.text.Layout.getWidth)int
android.text.Layout.getEllipsizedWidth)int
android.text.Layout.increaseWidthTo(int)void
android.text.Layout.getHeight)int
android.text.Layout.getAlignment)Alignment
android.text.Layout.getSpacingMultiplier)float
android.text.Layout.getSpacingAdd)float
android.text.Layout.getLineBounds(int,Rect)int
android.text.Layout.isRtlCharAt(int)boolean
android.text.Layout.getPrimaryHorizontal(int)float
android.text.Layout.getSecondaryHorizontal(int)float
android.text.Layout.getLineLeft(int)float
android.text.Layout.getLineRight(int)float
android.text.Layout.getLineMax(int)float
android.text.Layout.getLineWidth(int)float
android.text.Layout.getLineForVertical(int)int
android.text.Layout.getLineForOffset(int)int
android.text.Layout.getOffsetForHorizontal(int,float)int
android.text.Layout.getLineEnd(int)int
android.text.Layout.getLineVisibleEnd(int)int
android.text.Layout.getLineBottom(int)int
android.text.Layout.getLineBaseline(int)int
android.text.Layout.getLineAscent(int)int
android.text.Layout.getOffsetToLeftOf(int)int
android.text.Layout.getOffsetToRightOf(int)int
android.text.Layout.getCursorPath(int,Path,CharSequence)void
android.text.Layout.getSelectionPath(int,int,Path)void
android.text.Layout.getParagraphAlignment(int)Alignment
android.text.Layout.getParagraphLeft(int)int
android.text.Layout.getParagraphRight(int)int
android.text.Layout.isSpanned)boolean
android.text.LoginFilter.isAllowed(char)boolean
android.text.LoginFilter.isAllowed(char)boolean
android.text.LoginFilter.isAllowed(char)boolean
android.text.LoginFilter.filter(CharSequence,int,int,android.text.Spanned,int,int)CharSequence
android.text.LoginFilter.onStart)void
android.text.LoginFilter.onInvalidCharacter(char)void
android.text.LoginFilter.onStop)void
android.text.PrecomputedText.setBreakStrategy(int)android.text.PrecomputedText.Builder
android.text.PrecomputedText.setHyphenationFrequency(int)android.text.PrecomputedText.Builder
android.text.PrecomputedText.setTextDirection(android.text.TextDirectionHeuristic)android.text.PrecomputedText.Builder
android.text.PrecomputedText.build)Params
android.text.PrecomputedText.getTextPaint)android.text.TextPaint
android.text.PrecomputedText.getTextDirection)android.text.TextDirectionHeuristic
android.text.PrecomputedText.getBreakStrategy)int
android.text.PrecomputedText.getHyphenationFrequency)int
android.text.PrecomputedText.equals(Object)boolean
android.text.PrecomputedText.hashCode)int
android.text.PrecomputedText.toString)String
android.text.PrecomputedText.create(CharSequence,Params)android.text.PrecomputedText
android.text.PrecomputedText.getParams)Params
android.text.PrecomputedText.getParagraphCount)int
android.text.PrecomputedText.getParagraphStart(int)int
android.text.PrecomputedText.getParagraphEnd(int)int
android.text.PrecomputedText.getWidth(int,int)float
android.text.PrecomputedText.getBounds(int,int,android.graphics.Rect)void
android.text.PrecomputedText.setSpan(Object,int,int,int)void
android.text.PrecomputedText.removeSpan(Object)void
android.text.PrecomputedText.getSpanStart(Object)int
android.text.PrecomputedText.getSpanEnd(Object)int
android.text.PrecomputedText.getSpanFlags(Object)int
android.text.PrecomputedText.nextSpanTransition(int,int,Class)int
android.text.PrecomputedText.length)int
android.text.PrecomputedText.charAt(int)char
android.text.PrecomputedText.subSequence(int,int)CharSequence
android.text.PrecomputedText.toString)String
android.text.Selection.getSelectionStart(CharSequence)int
android.text.Selection.getSelectionEnd(CharSequence)int
android.text.Selection.setSelection(android.text.Spannable,int,int)void
android.text.Selection.setSelection(android.text.Spannable,int)void
android.text.Selection.selectAll(android.text.Spannable)void
android.text.Selection.extendSelection(android.text.Spannable,int)void
android.text.Selection.removeSelection(android.text.Spannable)void
android.text.Selection.moveUp(android.text.Spannable,android.text.Layout)boolean
android.text.Selection.moveDown(android.text.Spannable,android.text.Layout)boolean
android.text.Selection.moveLeft(android.text.Spannable,android.text.Layout)boolean
android.text.Selection.moveRight(android.text.Spannable,android.text.Layout)boolean
android.text.Selection.extendUp(android.text.Spannable,android.text.Layout)boolean
android.text.Selection.extendDown(android.text.Spannable,android.text.Layout)boolean
android.text.Selection.extendLeft(android.text.Spannable,android.text.Layout)boolean
android.text.Selection.extendRight(android.text.Spannable,android.text.Layout)boolean
android.text.Selection.extendToLeftEdge(android.text.Spannable,android.text.Layout)boolean
android.text.Selection.extendToRightEdge(android.text.Spannable,android.text.Layout)boolean
android.text.Selection.moveToLeftEdge(android.text.Spannable,android.text.Layout)boolean
android.text.Selection.moveToRightEdge(android.text.Spannable,android.text.Layout)boolean
android.text.Spannable.getInstance)android.text.Spannable.Factory
android.text.Spannable.newSpannable(CharSequence)android.text.Spannable
android.text.SpannableString.valueOf(CharSequence)android.text.SpannableString
android.text.SpannableString.setSpan(Object,int,int,int)void
android.text.SpannableString.removeSpan(Object)void
android.text.SpannableString.subSequence(int,int)CharSequence
android.text.SpannableString.getChars(int,int,char,int)void
android.text.SpannableString.length)int
android.text.SpannableString.getSpanStart(Object)int
android.text.SpannableString.getSpanFlags(Object)int
android.text.SpannableString.nextSpanTransition(int,int,Class)int
android.text.SpannableString.hashCode)int
android.text.SpannableString.equals(Object)boolean
android.text.SpannableString.getSpanEnd(Object)int
android.text.SpannableString.toString)String
android.text.SpannableString.charAt(int)char
android.text.SpannableStringBuilder.valueOf(CharSequence)android.text.SpannableStringBuilder
android.text.SpannableStringBuilder.charAt(int)char
android.text.SpannableStringBuilder.length)int
android.text.SpannableStringBuilder.insert(int,CharSequence,int,int)android.text.SpannableStringBuilder
android.text.SpannableStringBuilder.insert(int,CharSequence)android.text.SpannableStringBuilder
android.text.SpannableStringBuilder.delete(int,int)android.text.SpannableStringBuilder
android.text.SpannableStringBuilder.clear)void
android.text.SpannableStringBuilder.clearSpans)void
android.text.SpannableStringBuilder.append(CharSequence)android.text.SpannableStringBuilder
android.text.SpannableStringBuilder.append(CharSequence,Object,int)android.text.SpannableStringBuilder
android.text.SpannableStringBuilder.append(CharSequence,int,int)android.text.SpannableStringBuilder
android.text.SpannableStringBuilder.append(char)android.text.SpannableStringBuilder
android.text.SpannableStringBuilder.replace(int,int,CharSequence)android.text.SpannableStringBuilder
android.text.SpannableStringBuilder.replace(int,int,CharSequence,int,int)android.text.SpannableStringBuilder
android.text.SpannableStringBuilder.setSpan(Object,int,int,int)void
android.text.SpannableStringBuilder.removeSpan(Object)void
android.text.SpannableStringBuilder.getSpanStart(Object)int
android.text.SpannableStringBuilder.getSpanEnd(Object)int
android.text.SpannableStringBuilder.getSpanFlags(Object)int
android.text.SpannableStringBuilder.nextSpanTransition(int,int,Class)int
android.text.SpannableStringBuilder.subSequence(int,int)CharSequence
android.text.SpannableStringBuilder.getChars(int,int,char,int)void
android.text.SpannableStringBuilder.toString)String
android.text.SpannableStringBuilder.getTextWatcherDepth)int
android.text.SpannableStringBuilder.getTextRunCursor(int,int,int,int,int,android.graphics.Paint)int
android.text.SpannableStringBuilder.setFilters(android.text.InputFilter)void
android.text.SpannableStringBuilder.equals(Object)boolean
android.text.SpannableStringBuilder.hashCode)int
android.text.SpannedString.subSequence(int,int)CharSequence
android.text.SpannedString.valueOf(CharSequence)android.text.SpannedString
android.text.SpannedString.getChars(int,int,char,int)void
android.text.SpannedString.hashCode)int
android.text.SpannedString.equals(Object)boolean
android.text.SpannedString.length)int
android.text.SpannedString.getSpanEnd(Object)int
android.text.SpannedString.toString)String
android.text.SpannedString.getSpanStart(Object)int
android.text.SpannedString.getSpanFlags(Object)int
android.text.SpannedString.charAt(int)char
android.text.SpannedString.nextSpanTransition(int,int,Class)int
android.text.StaticLayout.obtain(CharSequence,int,int,android.text.TextPaint,int)Builder
android.text.StaticLayout.setText(CharSequence)Builder
android.text.StaticLayout.setAlignment(Layout.Alignment)Builder
android.text.StaticLayout.setTextDirection(android.text.TextDirectionHeuristic)Builder
android.text.StaticLayout.setLineSpacing(float,float)Builder
android.text.StaticLayout.setIncludePad(boolean)Builder
android.text.StaticLayout.setUseLineSpacingFromFallbacks(boolean)Builder
android.text.StaticLayout.setEllipsizedWidth(int)Builder
android.text.StaticLayout.setEllipsize(TextUtils.TruncateAt)Builder
android.text.StaticLayout.setMaxLines(int)Builder
android.text.StaticLayout.setBreakStrategy(int)Builder
android.text.StaticLayout.setHyphenationFrequency(int)Builder
android.text.StaticLayout.setIndents(int,int)Builder
android.text.StaticLayout.setJustificationMode(int)Builder
android.text.StaticLayout.build)android.text.StaticLayout
android.text.StaticLayout.getLineForVertical(int)int
android.text.StaticLayout.getLineCount)int
android.text.StaticLayout.getLineTop(int)int
android.text.StaticLayout.getLineDescent(int)int
android.text.StaticLayout.getLineStart(int)int
android.text.StaticLayout.getParagraphDirection(int)int
android.text.StaticLayout.getLineContainsTab(int)boolean
android.text.StaticLayout.getTopPadding)int
android.text.StaticLayout.getBottomPadding)int
android.text.StaticLayout.getEllipsisCount(int)int
android.text.StaticLayout.getEllipsisStart(int)int
android.text.StaticLayout.getEllipsizedWidth)int
android.text.TextPaint.set(android.text.TextPaint)void
android.text.TextPaint.getUnderlineThickness)float
android.text.TextUtils.valueOf(String)TruncateAt
android.text.TextUtils.setString(String)void
android.text.TextUtils.iterator)Iterator
android.text.TextUtils.hasNext)boolean
android.text.TextUtils.next)String
android.text.TextUtils.remove)void
android.text.TextUtils.getChars(CharSequence,int,int,char,int)void
android.text.TextUtils.indexOf(CharSequence,char)int
android.text.TextUtils.indexOf(CharSequence,char,int)int
android.text.TextUtils.indexOf(CharSequence,char,int,int)int
android.text.TextUtils.lastIndexOf(CharSequence,char)int
android.text.TextUtils.lastIndexOf(CharSequence,char,int)int
android.text.TextUtils.lastIndexOf(CharSequence,char,int,int)int
android.text.TextUtils.indexOf(CharSequence,CharSequence)int
android.text.TextUtils.indexOf(CharSequence,CharSequence,int)int
android.text.TextUtils.indexOf(CharSequence,CharSequence,int,int)int
android.text.TextUtils.regionMatches(CharSequence,int,CharSequence,int,int)boolean
android.text.TextUtils.substring(CharSequence,int,int)String
android.text.TextUtils.join(CharSequence,Object)String
android.text.TextUtils.join(CharSequence,Iterable)String
android.text.TextUtils.stringOrSpannedString(CharSequence)CharSequence
android.text.TextUtils.isEmpty(CharSequence)boolean
android.text.TextUtils.getTrimmedLength(CharSequence)int
android.text.TextUtils.equals(CharSequence,CharSequence)boolean
android.text.TextUtils.getReverse(CharSequence,int,int)CharSequence
android.text.TextUtils.writeToParcel(CharSequence,android.os.Parcel,int)void
android.text.TextUtils.dumpSpans(CharSequence,android.util.Printer,String)void
android.text.TextUtils.replace(CharSequence,String,CharSequence)CharSequence
android.text.TextUtils.getOffsetBefore(CharSequence,int)int
android.text.TextUtils.getOffsetAfter(CharSequence,int)int
android.text.TextUtils.copySpansFrom(android.text.Spanned,int,int,Class,android.text.Spannable,int)void
android.text.TextUtils.ellipsize(CharSequence,android.text.TextPaint,float,TruncateAt)CharSequence
android.text.TextUtils.ellipsize(CharSequence,android.text.TextPaint,float,TruncateAt,boolean,android.text.TextUtils.EllipsizeCallback)CharSequence
android.text.TextUtils.listEllipsize(android.content.Context,List,String,android.text.TextPaint,float,int)CharSequence
android.text.TextUtils.commaEllipsize(CharSequence,android.text.TextPaint,float,String,String)CharSequence
android.text.TextUtils.htmlEncode(String)String
android.text.TextUtils.isGraphic(CharSequence)boolean
android.text.TextUtils.isGraphic(char)boolean
android.text.TextUtils.isDigitsOnly(CharSequence)boolean
android.text.TextUtils.getCapsMode(CharSequence,int,int)int
android.text.TextUtils.getLayoutDirectionFromLocale(Locale)int
android.text.TextUtils.makeSafeForPresentation(String,int,float,int)CharSequence
android.text.format.DateFormat.is24HourFormat(android.content.Context)boolean
android.text.format.DateFormat.getBestDateTimePattern(java.util.Locale,String)String
android.text.format.DateFormat.format(CharSequence,long)CharSequence
android.text.format.DateFormat.format(CharSequence,java.util.Date)CharSequence
android.text.format.DateFormat.format(CharSequence,java.util.Calendar)CharSequence
android.text.format.DateUtils.getDayOfWeekString(int,int)String
android.text.format.DateUtils.getAMPMString(int)String
android.text.format.DateUtils.getMonthString(int,int)String
android.text.format.DateUtils.getRelativeTimeSpanString(long)CharSequence
android.text.format.DateUtils.getRelativeTimeSpanString(long,long,long)CharSequence
android.text.format.DateUtils.getRelativeTimeSpanString(long,long,long,int)CharSequence
android.text.format.DateUtils.getRelativeDateTimeString(android.content.Context,long,long,long,int)CharSequence
android.text.format.DateUtils.formatElapsedTime(long)String
android.text.format.DateUtils.formatElapsedTime(StringBuilder,long)String
android.text.format.DateUtils.formatSameDayTime(long,long,int,int)CharSequence
android.text.format.DateUtils.isToday(long)boolean
android.text.format.DateUtils.formatDateRange(android.content.Context,long,long,int)String
android.text.format.DateUtils.formatDateRange(android.content.Context,android.text.format.Formatter,long,long,int)android.text.format.Formatter
android.text.format.DateUtils.formatDateRange(android.content.Context,android.text.format.Formatter,long,long,int,String)android.text.format.Formatter
android.text.format.DateUtils.formatDateTime(android.content.Context,long,int)String
android.text.format.DateUtils.getRelativeTimeSpanString(android.content.Context,long,boolean)CharSequence
android.text.format.DateUtils.getRelativeTimeSpanString(android.content.Context,long)CharSequence
android.text.format.Formatter.formatFileSize(android.content.Context,long)String
android.text.format.Formatter.formatShortFileSize(android.content.Context,long)String
android.text.format.Formatter.formatIpAddress(int)String
android.text.format.Time.normalize(boolean)long
android.text.format.Time.switchTimezone(String)void
android.text.format.Time.getActualMaximum(int)int
android.text.format.Time.clear(String)void
android.text.format.Time.compare(android.text.format.Time,android.text.format.Time)int
android.text.format.Time.format(String)String
android.text.format.Time.toString)String
android.text.format.Time.parse(String)boolean
android.text.format.Time.parse3339(String)boolean
android.text.format.Time.getCurrentTimezone)String
android.text.format.Time.setToNow)void
android.text.format.Time.toMillis(boolean)long
android.text.format.Time.set(long)void
android.text.format.Time.format2445)String
android.text.format.Time.set(android.text.format.Time)void
android.text.format.Time.set(int,int,int,int,int,int)void
android.text.format.Time.set(int,int,int)void
android.text.format.Time.before(android.text.format.Time)boolean
android.text.format.Time.after(android.text.format.Time)boolean
android.text.format.Time.getWeekNumber)int
android.text.format.Time.format3339(boolean)String
android.text.format.Time.isEpoch(android.text.format.Time)boolean
android.text.format.Time.getJulianDay(long,long)int
android.text.format.Time.setJulianDay(int)long
android.text.format.Time.getWeeksSinceEpochFromJulianDay(int,int)int
android.text.format.Time.getJulianMondayFromWeeksSinceEpoch(int)int
android.text.method.ArrowKeyMovementMethod.handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent)boolean
android.text.method.ArrowKeyMovementMethod.left(android.widget.TextView,android.text.Spannable)boolean
android.text.method.ArrowKeyMovementMethod.right(android.widget.TextView,android.text.Spannable)boolean
android.text.method.ArrowKeyMovementMethod.up(android.widget.TextView,android.text.Spannable)boolean
android.text.method.ArrowKeyMovementMethod.down(android.widget.TextView,android.text.Spannable)boolean
android.text.method.ArrowKeyMovementMethod.pageUp(android.widget.TextView,android.text.Spannable)boolean
android.text.method.ArrowKeyMovementMethod.pageDown(android.widget.TextView,android.text.Spannable)boolean
android.text.method.ArrowKeyMovementMethod.top(android.widget.TextView,android.text.Spannable)boolean
android.text.method.ArrowKeyMovementMethod.bottom(android.widget.TextView,android.text.Spannable)boolean
android.text.method.ArrowKeyMovementMethod.lineStart(android.widget.TextView,android.text.Spannable)boolean
android.text.method.ArrowKeyMovementMethod.lineEnd(android.widget.TextView,android.text.Spannable)boolean
android.text.method.ArrowKeyMovementMethod.home(android.widget.TextView,android.text.Spannable)boolean
android.text.method.ArrowKeyMovementMethod.end(android.widget.TextView,android.text.Spannable)boolean
android.text.method.ArrowKeyMovementMethod.onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)boolean
android.text.method.ArrowKeyMovementMethod.canSelectArbitrarily)boolean
android.text.method.ArrowKeyMovementMethod.initialize(android.widget.TextView,android.text.Spannable)void
android.text.method.ArrowKeyMovementMethod.onTakeFocus(android.widget.TextView,android.text.Spannable,int)void
android.text.method.ArrowKeyMovementMethod.getInstance)android.text.method.MovementMethod
android.text.method.BaseKeyListener.backspace(android.view.View,android.text.Editable,int,android.view.KeyEvent)boolean
android.text.method.BaseKeyListener.forwardDelete(android.view.View,android.text.Editable,int,android.view.KeyEvent)boolean
android.text.method.BaseKeyListener.onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)boolean
android.text.method.BaseKeyListener.onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent)boolean
android.text.method.BaseMovementMethod.canSelectArbitrarily)boolean
android.text.method.BaseMovementMethod.initialize(android.widget.TextView,android.text.Spannable)void
android.text.method.BaseMovementMethod.onKeyDown(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)boolean
android.text.method.BaseMovementMethod.onKeyOther(android.widget.TextView,android.text.Spannable,android.view.KeyEvent)boolean
android.text.method.BaseMovementMethod.onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)boolean
android.text.method.BaseMovementMethod.onTakeFocus(android.widget.TextView,android.text.Spannable,int)void
android.text.method.BaseMovementMethod.onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)boolean
android.text.method.BaseMovementMethod.onTrackballEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)boolean
android.text.method.BaseMovementMethod.onGenericMotionEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)boolean
android.text.method.BaseMovementMethod.getMovementMetaState(android.text.Spannable,android.view.KeyEvent)int
android.text.method.BaseMovementMethod.handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent)boolean
android.text.method.BaseMovementMethod.left(android.widget.TextView,android.text.Spannable)boolean
android.text.method.BaseMovementMethod.right(android.widget.TextView,android.text.Spannable)boolean
android.text.method.BaseMovementMethod.up(android.widget.TextView,android.text.Spannable)boolean
android.text.method.BaseMovementMethod.down(android.widget.TextView,android.text.Spannable)boolean
android.text.method.BaseMovementMethod.pageUp(android.widget.TextView,android.text.Spannable)boolean
android.text.method.BaseMovementMethod.pageDown(android.widget.TextView,android.text.Spannable)boolean
android.text.method.BaseMovementMethod.top(android.widget.TextView,android.text.Spannable)boolean
android.text.method.BaseMovementMethod.bottom(android.widget.TextView,android.text.Spannable)boolean
android.text.method.BaseMovementMethod.lineStart(android.widget.TextView,android.text.Spannable)boolean
android.text.method.BaseMovementMethod.lineEnd(android.widget.TextView,android.text.Spannable)boolean
android.text.method.BaseMovementMethod.home(android.widget.TextView,android.text.Spannable)boolean
android.text.method.BaseMovementMethod.end(android.widget.TextView,android.text.Spannable)boolean
android.text.method.CharacterPickerDialog.onCreate(android.os.Bundle)void
android.text.method.CharacterPickerDialog.onItemClick(android.widget.AdapterView,android.view.View,int,long)void
android.text.method.CharacterPickerDialog.onClick(android.view.View)void
android.text.method.DateKeyListener.getInputType)int
android.text.method.DateKeyListener.getInstance)android.text.method.DateKeyListener
android.text.method.DateKeyListener.getInstance(java.util.Locale)android.text.method.DateKeyListener
android.text.method.DateTimeKeyListener.getInputType)int
android.text.method.DateTimeKeyListener.getInstance)android.text.method.DateTimeKeyListener
android.text.method.DateTimeKeyListener.getInstance(java.util.Locale)android.text.method.DateTimeKeyListener
android.text.method.DialerKeyListener.getInstance)android.text.method.DialerKeyListener
android.text.method.DialerKeyListener.getInputType)int
android.text.method.DialerKeyListener.lookup(android.view.KeyEvent,android.text.Spannable)int
android.text.method.DigitsKeyListener.getInstance)android.text.method.DigitsKeyListener
android.text.method.DigitsKeyListener.getInstance(boolean,boolean)android.text.method.DigitsKeyListener
android.text.method.DigitsKeyListener.getInstance(java.util.Locale)android.text.method.DigitsKeyListener
android.text.method.DigitsKeyListener.getInstance(java.util.Locale,boolean,boolean)android.text.method.DigitsKeyListener
android.text.method.DigitsKeyListener.getInstance(String)android.text.method.DigitsKeyListener
android.text.method.DigitsKeyListener.getInputType)int
android.text.method.DigitsKeyListener.filter(CharSequence,int,int,android.text.Spanned,int,int)CharSequence
android.text.method.HideReturnsTransformationMethod.getInstance)android.text.method.HideReturnsTransformationMethod
android.text.method.LinkMovementMethod.canSelectArbitrarily)boolean
android.text.method.LinkMovementMethod.handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent)boolean
android.text.method.LinkMovementMethod.up(android.widget.TextView,android.text.Spannable)boolean
android.text.method.LinkMovementMethod.down(android.widget.TextView,android.text.Spannable)boolean
android.text.method.LinkMovementMethod.left(android.widget.TextView,android.text.Spannable)boolean
android.text.method.LinkMovementMethod.right(android.widget.TextView,android.text.Spannable)boolean
android.text.method.LinkMovementMethod.onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)boolean
android.text.method.LinkMovementMethod.initialize(android.widget.TextView,android.text.Spannable)void
android.text.method.LinkMovementMethod.onTakeFocus(android.widget.TextView,android.text.Spannable,int)void
android.text.method.LinkMovementMethod.getInstance)android.text.method.MovementMethod
android.text.method.MetaKeyKeyListener.resetMetaState(android.text.Spannable)void
android.text.method.MetaKeyKeyListener.getMetaState(CharSequence)int
android.text.method.MetaKeyKeyListener.getMetaState(CharSequence,android.view.KeyEvent)int
android.text.method.MetaKeyKeyListener.getMetaState(CharSequence,int)int
android.text.method.MetaKeyKeyListener.getMetaState(CharSequence,int,android.view.KeyEvent)int
android.text.method.MetaKeyKeyListener.adjustMetaAfterKeypress(android.text.Spannable)void
android.text.method.MetaKeyKeyListener.isMetaTracker(CharSequence,Object)boolean
android.text.method.MetaKeyKeyListener.isSelectingMetaTracker(CharSequence,Object)boolean
android.text.method.MetaKeyKeyListener.resetLockedMeta(android.text.Spannable)void
android.text.method.MetaKeyKeyListener.onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)boolean
android.text.method.MetaKeyKeyListener.onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent)boolean
android.text.method.MetaKeyKeyListener.clearMetaKeyState(android.view.View,android.text.Editable,int)void
android.text.method.MetaKeyKeyListener.clearMetaKeyState(android.text.Editable,int)void
android.text.method.MetaKeyKeyListener.resetLockedMeta(long)long
android.text.method.MetaKeyKeyListener.getMetaState(long)int
android.text.method.MetaKeyKeyListener.getMetaState(long,int)int
android.text.method.MetaKeyKeyListener.adjustMetaAfterKeypress(long)long
android.text.method.MetaKeyKeyListener.handleKeyDown(long,int,android.view.KeyEvent)long
android.text.method.MetaKeyKeyListener.handleKeyUp(long,int,android.view.KeyEvent)long
android.text.method.MetaKeyKeyListener.clearMetaKeyState(long,int)long
android.text.method.MultiTapKeyListener.getInstance(boolean,TextKeyListener.Capitalize)android.text.method.MultiTapKeyListener
android.text.method.MultiTapKeyListener.getInputType)int
android.text.method.MultiTapKeyListener.onKeyDown(android.view.View,Editable,int,android.view.KeyEvent)boolean
android.text.method.MultiTapKeyListener.onSpanChanged(Spannable,Object,int,int,int,int)void
android.text.method.MultiTapKeyListener.onSpanAdded(Spannable,Object,int,int)void
android.text.method.MultiTapKeyListener.onSpanRemoved(Spannable,Object,int,int)void
android.text.method.NumberKeyListener.lookup(android.view.KeyEvent,Spannable)int
android.text.method.NumberKeyListener.filter(CharSequence,int,int,Spanned,int,int)CharSequence
android.text.method.NumberKeyListener.ok(char,char)boolean
android.text.method.NumberKeyListener.onKeyDown(android.view.View,Editable,int,android.view.KeyEvent)boolean
android.text.method.PasswordTransformationMethod.getTransformation(CharSequence,android.view.View)CharSequence
android.text.method.PasswordTransformationMethod.getInstance)android.text.method.PasswordTransformationMethod
android.text.method.PasswordTransformationMethod.beforeTextChanged(CharSequence,int,int,int)void
android.text.method.PasswordTransformationMethod.onTextChanged(CharSequence,int,int,int)void
android.text.method.PasswordTransformationMethod.afterTextChanged(android.text.Editable)void
android.text.method.PasswordTransformationMethod.onFocusChanged(android.view.View,CharSequence,boolean,int,android.graphics.Rect)void
android.text.method.QwertyKeyListener.getInstance(boolean,TextKeyListener.Capitalize)android.text.method.QwertyKeyListener
android.text.method.QwertyKeyListener.getInstanceForFullKeyboard)android.text.method.QwertyKeyListener
android.text.method.QwertyKeyListener.getInputType)int
android.text.method.QwertyKeyListener.onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)boolean
android.text.method.QwertyKeyListener.markAsReplaced(android.text.Spannable,int,int,String)void
android.text.method.ReplacementTransformationMethod.getTransformation(CharSequence,android.view.View)CharSequence
android.text.method.ReplacementTransformationMethod.onFocusChanged(android.view.View,CharSequence,boolean,int,android.graphics.Rect)void
android.text.method.ScrollingMovementMethod.left(android.widget.TextView,android.text.Spannable)boolean
android.text.method.ScrollingMovementMethod.right(android.widget.TextView,android.text.Spannable)boolean
android.text.method.ScrollingMovementMethod.up(android.widget.TextView,android.text.Spannable)boolean
android.text.method.ScrollingMovementMethod.down(android.widget.TextView,android.text.Spannable)boolean
android.text.method.ScrollingMovementMethod.pageUp(android.widget.TextView,android.text.Spannable)boolean
android.text.method.ScrollingMovementMethod.pageDown(android.widget.TextView,android.text.Spannable)boolean
android.text.method.ScrollingMovementMethod.top(android.widget.TextView,android.text.Spannable)boolean
android.text.method.ScrollingMovementMethod.bottom(android.widget.TextView,android.text.Spannable)boolean
android.text.method.ScrollingMovementMethod.lineStart(android.widget.TextView,android.text.Spannable)boolean
android.text.method.ScrollingMovementMethod.lineEnd(android.widget.TextView,android.text.Spannable)boolean
android.text.method.ScrollingMovementMethod.home(android.widget.TextView,android.text.Spannable)boolean
android.text.method.ScrollingMovementMethod.end(android.widget.TextView,android.text.Spannable)boolean
android.text.method.ScrollingMovementMethod.onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)boolean
android.text.method.ScrollingMovementMethod.onTakeFocus(android.widget.TextView,android.text.Spannable,int)void
android.text.method.ScrollingMovementMethod.getInstance)android.text.method.MovementMethod
android.text.method.SingleLineTransformationMethod.getInstance)android.text.method.SingleLineTransformationMethod
android.text.method.TextKeyListener.valueOf(String)Capitalize
android.text.method.TextKeyListener.getInstance(boolean,Capitalize)android.text.method.TextKeyListener
android.text.method.TextKeyListener.getInstance)android.text.method.TextKeyListener
android.text.method.TextKeyListener.shouldCap(Capitalize,CharSequence,int)boolean
android.text.method.TextKeyListener.getInputType)int
android.text.method.TextKeyListener.onKeyDown(android.view.View,Editable,int,android.view.KeyEvent)boolean
android.text.method.TextKeyListener.onKeyUp(android.view.View,Editable,int,android.view.KeyEvent)boolean
android.text.method.TextKeyListener.onKeyOther(android.view.View,Editable,android.view.KeyEvent)boolean
android.text.method.TextKeyListener.clear(Editable)void
android.text.method.TextKeyListener.onSpanAdded(Spannable,Object,int,int)void
android.text.method.TextKeyListener.onSpanRemoved(Spannable,Object,int,int)void
android.text.method.TextKeyListener.onSpanChanged(Spannable,Object,int,int,int,int)void
android.text.method.TextKeyListener.release)void
android.text.method.TimeKeyListener.getInputType)int
android.text.method.TimeKeyListener.getInstance)android.text.method.TimeKeyListener
android.text.method.TimeKeyListener.getInstance(java.util.Locale)android.text.method.TimeKeyListener
android.text.method.Touch.scrollTo(android.widget.TextView,android.text.Layout,int,int)void
android.text.method.Touch.onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)boolean
android.text.method.Touch.getInitialScrollX(android.widget.TextView,android.text.Spannable)int
android.text.method.Touch.getInitialScrollY(android.widget.TextView,android.text.Spannable)int
android.text.style.AbsoluteSizeSpan.getSpanTypeId)int
android.text.style.AbsoluteSizeSpan.describeContents)int
android.text.style.AbsoluteSizeSpan.writeToParcel(android.os.Parcel,int)void
android.text.style.AbsoluteSizeSpan.getSize)int
android.text.style.AbsoluteSizeSpan.getDip)boolean
android.text.style.AbsoluteSizeSpan.updateDrawState(android.text.TextPaint)void
android.text.style.AbsoluteSizeSpan.updateMeasureState(android.text.TextPaint)void
android.text.style.AlignmentSpan.getSpanTypeId)int
android.text.style.AlignmentSpan.describeContents)int
android.text.style.AlignmentSpan.writeToParcel(android.os.Parcel,int)void
android.text.style.BackgroundColorSpan.getSpanTypeId)int
android.text.style.BackgroundColorSpan.describeContents)int
android.text.style.BackgroundColorSpan.writeToParcel(android.os.Parcel,int)void
android.text.style.BackgroundColorSpan.getBackgroundColor)int
android.text.style.BackgroundColorSpan.updateDrawState(android.text.TextPaint)void
android.text.style.BulletSpan.getSpanTypeId)int
android.text.style.BulletSpan.describeContents)int
android.text.style.BulletSpan.writeToParcel(android.os.Parcel,int)void
android.text.style.BulletSpan.getLeadingMargin(boolean)int
android.text.style.BulletSpan.getGapWidth)int
android.text.style.BulletSpan.getBulletRadius)int
android.text.style.BulletSpan.getColor)int
android.text.style.CharacterStyle.wrap(android.text.style.CharacterStyle)android.text.style.CharacterStyle
android.text.style.CharacterStyle.getUnderlying)android.text.style.CharacterStyle
android.text.style.ClickableSpan.updateDrawState(android.text.TextPaint)void
android.text.style.DrawableMarginSpan.getLeadingMargin(boolean)int
android.text.style.DrawableMarginSpan.chooseHeight(CharSequence,int,int,int,int,android.graphics.Paint.FontMetricsInt)void
android.text.style.DynamicDrawableSpan.getVerticalAlignment)int
android.text.style.DynamicDrawableSpan.getSize(android.graphics.Paint,CharSequence,int,int,android.graphics.Paint.FontMetricsInt)int
android.text.style.EasyEditSpan.describeContents)int
android.text.style.EasyEditSpan.writeToParcel(android.os.Parcel,int)void
android.text.style.EasyEditSpan.getSpanTypeId)int
android.text.style.ForegroundColorSpan.getSpanTypeId)int
android.text.style.ForegroundColorSpan.describeContents)int
android.text.style.ForegroundColorSpan.writeToParcel(android.os.Parcel,int)void
android.text.style.ForegroundColorSpan.getForegroundColor)int
android.text.style.ForegroundColorSpan.updateDrawState(android.text.TextPaint)void
android.text.style.IconMarginSpan.getLeadingMargin(boolean)int
android.text.style.IconMarginSpan.chooseHeight(CharSequence,int,int,int,int,android.graphics.Paint.FontMetricsInt)void
android.text.style.ImageSpan.getDrawable)android.graphics.drawable.Drawable
android.text.style.ImageSpan.getSource)String
android.text.style.LeadingMarginSpan.getSpanTypeId)int
android.text.style.LeadingMarginSpan.describeContents)int
android.text.style.LeadingMarginSpan.writeToParcel(android.os.Parcel,int)void
android.text.style.LeadingMarginSpan.getLeadingMargin(boolean)int
android.text.style.LineBackgroundSpan.getSpanTypeId)int
android.text.style.LineBackgroundSpan.describeContents)int
android.text.style.LineBackgroundSpan.writeToParcel(android.os.Parcel,int)void
android.text.style.LineBackgroundSpan.getColor)int
android.text.style.LineHeightSpan.getHeight)int
android.text.style.LineHeightSpan.getSpanTypeId)int
android.text.style.LineHeightSpan.describeContents)int
android.text.style.LineHeightSpan.writeToParcel(android.os.Parcel,int)void
android.text.style.LineHeightSpan.chooseHeight(CharSequence,int,int,int,int,android.graphics.Paint.FontMetricsInt)void
android.text.style.LocaleSpan.getSpanTypeId)int
android.text.style.LocaleSpan.describeContents)int
android.text.style.LocaleSpan.writeToParcel(android.os.Parcel,int)void
android.text.style.LocaleSpan.getLocale)java.util.Locale
android.text.style.LocaleSpan.getLocales)android.os.LocaleList
android.text.style.LocaleSpan.updateDrawState(android.text.TextPaint)void
android.text.style.LocaleSpan.updateMeasureState(android.text.TextPaint)void
android.text.style.MaskFilterSpan.getMaskFilter)android.graphics.MaskFilter
android.text.style.MaskFilterSpan.updateDrawState(android.text.TextPaint)void
android.text.style.MetricAffectingSpan.getUnderlying)android.text.style.MetricAffectingSpan
android.text.style.QuoteSpan.getSpanTypeId)int
android.text.style.QuoteSpan.describeContents)int
android.text.style.QuoteSpan.writeToParcel(android.os.Parcel,int)void
android.text.style.QuoteSpan.getColor)int
android.text.style.QuoteSpan.getStripeWidth)int
android.text.style.QuoteSpan.getGapWidth)int
android.text.style.QuoteSpan.getLeadingMargin(boolean)int
android.text.style.RelativeSizeSpan.getSpanTypeId)int
android.text.style.RelativeSizeSpan.describeContents)int
android.text.style.RelativeSizeSpan.writeToParcel(android.os.Parcel,int)void
android.text.style.RelativeSizeSpan.getSizeChange)float
android.text.style.RelativeSizeSpan.updateDrawState(android.text.TextPaint)void
android.text.style.RelativeSizeSpan.updateMeasureState(android.text.TextPaint)void
android.text.style.ReplacementSpan.updateMeasureState(android.text.TextPaint)void
android.text.style.ReplacementSpan.updateDrawState(android.text.TextPaint)void
android.text.style.ScaleXSpan.getSpanTypeId)int
android.text.style.ScaleXSpan.describeContents)int
android.text.style.ScaleXSpan.writeToParcel(android.os.Parcel,int)void
android.text.style.ScaleXSpan.getScaleX)float
android.text.style.ScaleXSpan.updateDrawState(android.text.TextPaint)void
android.text.style.ScaleXSpan.updateMeasureState(android.text.TextPaint)void
android.text.style.StrikethroughSpan.getSpanTypeId)int
android.text.style.StrikethroughSpan.describeContents)int
android.text.style.StrikethroughSpan.writeToParcel(android.os.Parcel,int)void
android.text.style.StrikethroughSpan.updateDrawState(android.text.TextPaint)void
android.text.style.StyleSpan.getSpanTypeId)int
android.text.style.StyleSpan.describeContents)int
android.text.style.StyleSpan.writeToParcel(android.os.Parcel,int)void
android.text.style.StyleSpan.getStyle)int
android.text.style.StyleSpan.updateDrawState(android.text.TextPaint)void
android.text.style.StyleSpan.updateMeasureState(android.text.TextPaint)void
android.text.style.SubscriptSpan.getSpanTypeId)int
android.text.style.SubscriptSpan.describeContents)int
android.text.style.SubscriptSpan.writeToParcel(android.os.Parcel,int)void
android.text.style.SubscriptSpan.updateDrawState(android.text.TextPaint)void
android.text.style.SubscriptSpan.updateMeasureState(android.text.TextPaint)void
android.text.style.SuggestionSpan.getLocale)String
android.text.style.SuggestionSpan.getLocaleObject)java.util.Locale
android.text.style.SuggestionSpan.getFlags)int
android.text.style.SuggestionSpan.setFlags(int)void
android.text.style.SuggestionSpan.describeContents)int
android.text.style.SuggestionSpan.writeToParcel(android.os.Parcel,int)void
android.text.style.SuggestionSpan.getSpanTypeId)int
android.text.style.SuggestionSpan.equals(Object)boolean
android.text.style.SuggestionSpan.hashCode)int
android.text.style.SuggestionSpan.updateDrawState(android.text.TextPaint)void
android.text.style.SuggestionSpan.getUnderlineColor)int
android.text.style.SuperscriptSpan.getSpanTypeId)int
android.text.style.SuperscriptSpan.describeContents)int
android.text.style.SuperscriptSpan.writeToParcel(android.os.Parcel,int)void
android.text.style.SuperscriptSpan.updateDrawState(android.text.TextPaint)void
android.text.style.SuperscriptSpan.updateMeasureState(android.text.TextPaint)void
android.text.style.TabStopSpan.getTabStop)int
android.text.style.TextAppearanceSpan.getSpanTypeId)int
android.text.style.TextAppearanceSpan.describeContents)int
android.text.style.TextAppearanceSpan.writeToParcel(android.os.Parcel,int)void
android.text.style.TextAppearanceSpan.getFamily)String
android.text.style.TextAppearanceSpan.getTextColor)android.content.res.ColorStateList
android.text.style.TextAppearanceSpan.getLinkTextColor)android.content.res.ColorStateList
android.text.style.TextAppearanceSpan.getTextSize)int
android.text.style.TextAppearanceSpan.getTextStyle)int
android.text.style.TextAppearanceSpan.getTextFontWeight)int
android.text.style.TextAppearanceSpan.getTextLocales)android.os.LocaleList
android.text.style.TextAppearanceSpan.getTypeface)android.graphics.Typeface
android.text.style.TextAppearanceSpan.getShadowColor)int
android.text.style.TextAppearanceSpan.getShadowDx)float
android.text.style.TextAppearanceSpan.getShadowDy)float
android.text.style.TextAppearanceSpan.getShadowRadius)float
android.text.style.TextAppearanceSpan.getFontFeatureSettings)String
android.text.style.TextAppearanceSpan.getFontVariationSettings)String
android.text.style.TextAppearanceSpan.isElegantTextHeight)boolean
android.text.style.TextAppearanceSpan.updateDrawState(android.text.TextPaint)void
android.text.style.TextAppearanceSpan.updateMeasureState(android.text.TextPaint)void
android.text.style.TtsSpan.setVerbatim(String)android.text.style.TtsSpan.VerbatimBuilder
android.text.style.TtsSpan.setHours(int)android.text.style.TtsSpan.TimeBuilder
android.text.style.TtsSpan.setMinutes(int)android.text.style.TtsSpan.TimeBuilder
android.text.style.TtsSpan.setText(String)android.text.style.TtsSpan.TextBuilder
android.text.style.TtsSpan.setCountryCode(String)android.text.style.TtsSpan.TelephoneBuilder
android.text.style.TtsSpan.setNumberParts(String)android.text.style.TtsSpan.TelephoneBuilder
android.text.style.TtsSpan.setExtension(String)android.text.style.TtsSpan.TelephoneBuilder
android.text.style.TtsSpan.setGender(String)android.text.style.TtsSpan.SemioticClassBuilder
android.text.style.TtsSpan.setAnimacy(String)android.text.style.TtsSpan.SemioticClassBuilder
android.text.style.TtsSpan.setMultiplicity(String)android.text.style.TtsSpan.SemioticClassBuilder
android.text.style.TtsSpan.setCase(String)android.text.style.TtsSpan.SemioticClassBuilder
android.text.style.TtsSpan.setNumber(long)android.text.style.TtsSpan.OrdinalBuilder
android.text.style.TtsSpan.setNumber(String)android.text.style.TtsSpan.OrdinalBuilder
android.text.style.TtsSpan.setIntegerPart(long)android.text.style.TtsSpan.MoneyBuilder
android.text.style.TtsSpan.setIntegerPart(String)android.text.style.TtsSpan.MoneyBuilder
android.text.style.TtsSpan.setFractionalPart(String)android.text.style.TtsSpan.MoneyBuilder
android.text.style.TtsSpan.setCurrency(String)android.text.style.TtsSpan.MoneyBuilder
android.text.style.TtsSpan.setQuantity(String)android.text.style.TtsSpan.MoneyBuilder
android.text.style.TtsSpan.setNumber(long)android.text.style.TtsSpan.MeasureBuilder
android.text.style.TtsSpan.setNumber(String)android.text.style.TtsSpan.MeasureBuilder
android.text.style.TtsSpan.setIntegerPart(long)android.text.style.TtsSpan.MeasureBuilder
android.text.style.TtsSpan.setIntegerPart(String)android.text.style.TtsSpan.MeasureBuilder
android.text.style.TtsSpan.setFractionalPart(String)android.text.style.TtsSpan.MeasureBuilder
android.text.style.TtsSpan.setNumerator(long)android.text.style.TtsSpan.MeasureBuilder
android.text.style.TtsSpan.setNumerator(String)android.text.style.TtsSpan.MeasureBuilder
android.text.style.TtsSpan.setDenominator(long)android.text.style.TtsSpan.MeasureBuilder
android.text.style.TtsSpan.setDenominator(String)android.text.style.TtsSpan.MeasureBuilder
android.text.style.TtsSpan.setUnit(String)android.text.style.TtsSpan.MeasureBuilder
android.text.style.TtsSpan.setIntegerPart(long)android.text.style.TtsSpan.FractionBuilder
android.text.style.TtsSpan.setIntegerPart(String)android.text.style.TtsSpan.FractionBuilder
android.text.style.TtsSpan.setNumerator(long)android.text.style.TtsSpan.FractionBuilder
android.text.style.TtsSpan.setNumerator(String)android.text.style.TtsSpan.FractionBuilder
android.text.style.TtsSpan.setDenominator(long)android.text.style.TtsSpan.FractionBuilder
android.text.style.TtsSpan.setDenominator(String)android.text.style.TtsSpan.FractionBuilder
android.text.style.TtsSpan.setEmailArguments(String,String)android.text.style.TtsSpan.ElectronicBuilder
android.text.style.TtsSpan.setProtocol(String)android.text.style.TtsSpan.ElectronicBuilder
android.text.style.TtsSpan.setUsername(String)android.text.style.TtsSpan.ElectronicBuilder
android.text.style.TtsSpan.setPassword(String)android.text.style.TtsSpan.ElectronicBuilder
android.text.style.TtsSpan.setDomain(String)android.text.style.TtsSpan.ElectronicBuilder
android.text.style.TtsSpan.setPort(int)android.text.style.TtsSpan.ElectronicBuilder
android.text.style.TtsSpan.setPath(String)android.text.style.TtsSpan.ElectronicBuilder
android.text.style.TtsSpan.setQueryString(String)android.text.style.TtsSpan.ElectronicBuilder
android.text.style.TtsSpan.setFragmentId(String)android.text.style.TtsSpan.ElectronicBuilder
android.text.style.TtsSpan.setDigits(String)android.text.style.TtsSpan.DigitsBuilder
android.text.style.TtsSpan.setArgumentsFromDouble(double,int,int)android.text.style.TtsSpan.DecimalBuilder
android.text.style.TtsSpan.setIntegerPart(long)android.text.style.TtsSpan.DecimalBuilder
android.text.style.TtsSpan.setIntegerPart(String)android.text.style.TtsSpan.DecimalBuilder
android.text.style.TtsSpan.setFractionalPart(String)android.text.style.TtsSpan.DecimalBuilder
android.text.style.TtsSpan.setWeekday(int)android.text.style.TtsSpan.DateBuilder
android.text.style.TtsSpan.setDay(int)android.text.style.TtsSpan.DateBuilder
android.text.style.TtsSpan.setMonth(int)android.text.style.TtsSpan.DateBuilder
android.text.style.TtsSpan.setYear(int)android.text.style.TtsSpan.DateBuilder
android.text.style.TtsSpan.setNumber(long)android.text.style.TtsSpan.CardinalBuilder
android.text.style.TtsSpan.setNumber(String)android.text.style.TtsSpan.CardinalBuilder
android.text.style.TtsSpan.build)android.text.style.TtsSpan
android.text.style.TtsSpan.setStringArgument(String,String)android.text.style.TtsSpan.Builder
android.text.style.TtsSpan.setIntArgument(String,int)android.text.style.TtsSpan.Builder
android.text.style.TtsSpan.setLongArgument(String,long)android.text.style.TtsSpan.Builder
android.text.style.TtsSpan.getType)String
android.text.style.TtsSpan.getArgs)android.os.PersistableBundle
android.text.style.TtsSpan.describeContents)int
android.text.style.TtsSpan.writeToParcel(android.os.Parcel,int)void
android.text.style.TtsSpan.getSpanTypeId)int
android.text.style.TypefaceSpan.getSpanTypeId)int
android.text.style.TypefaceSpan.describeContents)int
android.text.style.TypefaceSpan.writeToParcel(android.os.Parcel,int)void
android.text.style.TypefaceSpan.getFamily)String
android.text.style.TypefaceSpan.getTypeface)android.graphics.Typeface
android.text.style.TypefaceSpan.updateDrawState(android.text.TextPaint)void
android.text.style.TypefaceSpan.updateMeasureState(android.text.TextPaint)void
android.text.style.UnderlineSpan.getSpanTypeId)int
android.text.style.UnderlineSpan.describeContents)int
android.text.style.UnderlineSpan.writeToParcel(android.os.Parcel,int)void
android.text.style.UnderlineSpan.updateDrawState(android.text.TextPaint)void
android.text.style.URLSpan.getSpanTypeId)int
android.text.style.URLSpan.describeContents)int
android.text.style.URLSpan.writeToParcel(android.os.Parcel,int)void
android.text.style.URLSpan.getURL)String
android.text.style.URLSpan.onClick(android.view.View)void
android.text.util.Linkify.addLinks(android.text.Spannable,int)boolean
android.text.util.Linkify.addLinks(android.text.Spannable,int,java.util.function.Function)boolean
android.text.util.Linkify.addLinks(android.widget.TextView,int)boolean
android.text.util.Linkify.addLinks(android.widget.TextView,java.util.regex.Pattern,String)void
android.text.util.Linkify.addLinks(android.widget.TextView,java.util.regex.Pattern,String,android.text.util.Linkify.MatchFilter,android.text.util.Linkify.TransformFilter)void
android.text.util.Linkify.addLinks(android.widget.TextView,java.util.regex.Pattern,String,String,android.text.util.Linkify.MatchFilter,android.text.util.Linkify.TransformFilter)void
android.text.util.Linkify.addLinks(android.text.Spannable,java.util.regex.Pattern,String)boolean
android.text.util.Linkify.addLinks(android.text.Spannable,java.util.regex.Pattern,String,android.text.util.Linkify.MatchFilter,android.text.util.Linkify.TransformFilter)boolean
android.text.util.Linkify.addLinks(android.text.Spannable,java.util.regex.Pattern,String,String,android.text.util.Linkify.MatchFilter,android.text.util.Linkify.TransformFilter)boolean
android.text.util.Linkify.addLinks(android.text.Spannable,java.util.regex.Pattern,String,String,android.text.util.Linkify.MatchFilter,android.text.util.Linkify.TransformFilter,java.util.function.Function)boolean
android.text.util.Rfc822Token.getName)String
android.text.util.Rfc822Token.getAddress)String
android.text.util.Rfc822Token.getComment)String
android.text.util.Rfc822Token.setName(String)void
android.text.util.Rfc822Token.setAddress(String)void
android.text.util.Rfc822Token.setComment(String)void
android.text.util.Rfc822Token.toString)String
android.text.util.Rfc822Token.quoteNameIfNecessary(String)String
android.text.util.Rfc822Token.quoteName(String)String
android.text.util.Rfc822Token.quoteComment(String)String
android.text.util.Rfc822Token.hashCode)int
android.text.util.Rfc822Token.equals(Object)boolean
android.text.util.Rfc822Tokenizer.tokenize(CharSequence,java.util.Collection)void
android.text.util.Rfc822Tokenizer.findTokenStart(CharSequence,int)int
android.text.util.Rfc822Tokenizer.findTokenEnd(CharSequence,int)int
android.text.util.Rfc822Tokenizer.terminateToken(CharSequence)CharSequence
android.transition.ArcMotion.setMinimumHorizontalAngle(float)void
android.transition.ArcMotion.getMinimumHorizontalAngle)float
android.transition.ArcMotion.setMinimumVerticalAngle(float)void
android.transition.ArcMotion.getMinimumVerticalAngle)float
android.transition.ArcMotion.setMaximumAngle(float)void
android.transition.ArcMotion.getMaximumAngle)float
android.transition.ArcMotion.getPath(float,float,float,float)android.graphics.Path
android.transition.ChangeBounds.setResizeClip(boolean)void
android.transition.ChangeBounds.getResizeClip)boolean
android.transition.ChangeBounds.setReparent(boolean)void
android.transition.ChangeBounds.captureStartValues(android.transition.TransitionValues)void
android.transition.ChangeBounds.captureEndValues(android.transition.TransitionValues)void
android.transition.ChangeBounds.createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)android.animation.Animator
android.transition.ChangeClipBounds.captureStartValues(android.transition.TransitionValues)void
android.transition.ChangeClipBounds.captureEndValues(android.transition.TransitionValues)void
android.transition.ChangeClipBounds.createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)android.animation.Animator
android.transition.ChangeImageTransform.captureStartValues(android.transition.TransitionValues)void
android.transition.ChangeImageTransform.captureEndValues(android.transition.TransitionValues)void
android.transition.ChangeImageTransform.createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)android.animation.Animator
android.transition.ChangeScroll.captureStartValues(android.transition.TransitionValues)void
android.transition.ChangeScroll.captureEndValues(android.transition.TransitionValues)void
android.transition.ChangeScroll.createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)android.animation.Animator
android.transition.ChangeTransform.getReparentWithOverlay)boolean
android.transition.ChangeTransform.setReparentWithOverlay(boolean)void
android.transition.ChangeTransform.getReparent)boolean
android.transition.ChangeTransform.setReparent(boolean)void
android.transition.ChangeTransform.captureStartValues(android.transition.TransitionValues)void
android.transition.ChangeTransform.captureEndValues(android.transition.TransitionValues)void
android.transition.ChangeTransform.createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)android.animation.Animator
android.transition.CircularPropagation.setPropagationSpeed(float)void
android.transition.CircularPropagation.getStartDelay(android.view.ViewGroup,android.transition.Transition,android.transition.TransitionValues,android.transition.TransitionValues)long
android.transition.Explode.captureStartValues(android.transition.TransitionValues)void
android.transition.Explode.captureEndValues(android.transition.TransitionValues)void
android.transition.Explode.onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)android.animation.Animator
android.transition.Explode.onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)android.animation.Animator
android.transition.Fade.captureStartValues(android.transition.TransitionValues)void
android.transition.Fade.onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)android.animation.Animator
android.transition.Fade.onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)android.animation.Animator
android.transition.PatternPathMotion.getPatternPath)android.graphics.Path
android.transition.PatternPathMotion.setPatternPath(android.graphics.Path)void
android.transition.PatternPathMotion.getPath(float,float,float,float)android.graphics.Path
android.transition.Scene.getSceneForLayout(android.view.ViewGroup,int,android.content.Context)android.transition.Scene
android.transition.Scene.getSceneRoot)android.view.ViewGroup
android.transition.Scene.exit)void
android.transition.Scene.enter)void
android.transition.Scene.getCurrentScene(android.view.ViewGroup)android.transition.Scene
android.transition.Scene.setEnterAction(Runnable)void
android.transition.Scene.setExitAction(Runnable)void
android.transition.SidePropagation.setSide(int)void
android.transition.SidePropagation.setPropagationSpeed(float)void
android.transition.SidePropagation.getStartDelay(android.view.ViewGroup,android.transition.Transition,android.transition.TransitionValues,android.transition.TransitionValues)long
android.transition.Slide.captureStartValues(android.transition.TransitionValues)void
android.transition.Slide.captureEndValues(android.transition.TransitionValues)void
android.transition.Slide.setSlideEdge(int)void
android.transition.Slide.getSlideEdge)int
android.transition.Slide.onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)android.animation.Animator
android.transition.Slide.onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)android.animation.Animator
android.transition.Transition.setDuration(long)android.transition.Transition
android.transition.Transition.getDuration)long
android.transition.Transition.setStartDelay(long)android.transition.Transition
android.transition.Transition.getStartDelay)long
android.transition.Transition.setInterpolator(android.animation.TimeInterpolator)android.transition.Transition
android.transition.Transition.getInterpolator)android.animation.TimeInterpolator
android.transition.Transition.createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)android.animation.Animator
android.transition.Transition.addTarget(int)android.transition.Transition
android.transition.Transition.addTarget(String)android.transition.Transition
android.transition.Transition.addTarget(Class)android.transition.Transition
android.transition.Transition.removeTarget(int)android.transition.Transition
android.transition.Transition.removeTarget(String)android.transition.Transition
android.transition.Transition.excludeTarget(int,boolean)android.transition.Transition
android.transition.Transition.excludeTarget(String,boolean)android.transition.Transition
android.transition.Transition.excludeChildren(int,boolean)android.transition.Transition
android.transition.Transition.excludeTarget(android.view.View,boolean)android.transition.Transition
android.transition.Transition.excludeChildren(android.view.View,boolean)android.transition.Transition
android.transition.Transition.excludeTarget(Class,boolean)android.transition.Transition
android.transition.Transition.excludeChildren(Class,boolean)android.transition.Transition
android.transition.Transition.addTarget(android.view.View)android.transition.Transition
android.transition.Transition.removeTarget(android.view.View)android.transition.Transition
android.transition.Transition.removeTarget(Class)android.transition.Transition
android.transition.Transition.getTargetIds)java.util.List
android.transition.Transition.getTargets)java.util.List
android.transition.Transition.getTargetNames)java.util.List
android.transition.Transition.getTargetTypes)java.util.List
android.transition.Transition.getTransitionValues(android.view.View,boolean)android.transition.TransitionValues
android.transition.Transition.isTransitionRequired(android.transition.TransitionValues,android.transition.TransitionValues)boolean
android.transition.Transition.addListener(android.transition.Transition.TransitionListener)android.transition.Transition
android.transition.Transition.removeListener(android.transition.Transition.TransitionListener)android.transition.Transition
android.transition.Transition.setEpicenterCallback(EpicenterCallback)void
android.transition.Transition.getEpicenterCallback)EpicenterCallback
android.transition.Transition.getEpicenter)android.graphics.Rect
android.transition.Transition.setPathMotion(android.transition.PathMotion)void
android.transition.Transition.getPathMotion)android.transition.PathMotion
android.transition.Transition.setPropagation(android.transition.TransitionPropagation)void
android.transition.Transition.getPropagation)android.transition.TransitionPropagation
android.transition.Transition.canRemoveViews)boolean
android.transition.Transition.toString)String
android.transition.Transition.clone)android.transition.Transition
android.transition.Transition.getName)String
android.transition.TransitionInflater.from(android.content.Context)android.transition.TransitionInflater
android.transition.TransitionInflater.inflateTransition(int)android.transition.Transition
android.transition.TransitionInflater.inflateTransitionManager(int,android.view.ViewGroup)android.transition.TransitionManager
android.transition.TransitionListenerAdapter.onTransitionStart(android.transition.Transition)void
android.transition.TransitionListenerAdapter.onTransitionEnd(android.transition.Transition)void
android.transition.TransitionListenerAdapter.onTransitionCancel(android.transition.Transition)void
android.transition.TransitionListenerAdapter.onTransitionPause(android.transition.Transition)void
android.transition.TransitionListenerAdapter.onTransitionResume(android.transition.Transition)void
android.transition.TransitionManager.setTransition(android.transition.Scene,android.transition.Transition)void
android.transition.TransitionManager.setTransition(android.transition.Scene,android.transition.Scene,android.transition.Transition)void
android.transition.TransitionManager.transitionTo(android.transition.Scene)void
android.transition.TransitionManager.go(android.transition.Scene)void
android.transition.TransitionManager.go(android.transition.Scene,android.transition.Transition)void
android.transition.TransitionManager.beginDelayedTransition(android.view.ViewGroup)void
android.transition.TransitionManager.beginDelayedTransition(android.view.ViewGroup,android.transition.Transition)void
android.transition.TransitionManager.endTransitions(android.view.ViewGroup)void
android.transition.TransitionSet.setOrdering(int)android.transition.TransitionSet
android.transition.TransitionSet.getOrdering)int
android.transition.TransitionSet.addTransition(android.transition.Transition)android.transition.TransitionSet
android.transition.TransitionSet.getTransitionCount)int
android.transition.TransitionSet.getTransitionAt(int)android.transition.Transition
android.transition.TransitionSet.setDuration(long)android.transition.TransitionSet
android.transition.TransitionSet.setStartDelay(long)android.transition.TransitionSet
android.transition.TransitionSet.setInterpolator(android.animation.TimeInterpolator)android.transition.TransitionSet
android.transition.TransitionSet.addTarget(android.view.View)android.transition.TransitionSet
android.transition.TransitionSet.addTarget(int)android.transition.TransitionSet
android.transition.TransitionSet.addTarget(String)android.transition.TransitionSet
android.transition.TransitionSet.addTarget(Class)android.transition.TransitionSet
android.transition.TransitionSet.addListener(Transition.TransitionListener)android.transition.TransitionSet
android.transition.TransitionSet.removeTarget(int)android.transition.TransitionSet
android.transition.TransitionSet.removeTarget(android.view.View)android.transition.TransitionSet
android.transition.TransitionSet.removeTarget(Class)android.transition.TransitionSet
android.transition.TransitionSet.removeTarget(String)android.transition.TransitionSet
android.transition.TransitionSet.excludeTarget(android.view.View,boolean)android.transition.Transition
android.transition.TransitionSet.excludeTarget(String,boolean)android.transition.Transition
android.transition.TransitionSet.excludeTarget(int,boolean)android.transition.Transition
android.transition.TransitionSet.excludeTarget(Class,boolean)android.transition.Transition
android.transition.TransitionSet.removeListener(Transition.TransitionListener)android.transition.TransitionSet
android.transition.TransitionSet.setPathMotion(android.transition.PathMotion)void
android.transition.TransitionSet.removeTransition(android.transition.Transition)android.transition.TransitionSet
android.transition.TransitionSet.captureStartValues(android.transition.TransitionValues)void
android.transition.TransitionSet.captureEndValues(android.transition.TransitionValues)void
android.transition.TransitionSet.setPropagation(android.transition.TransitionPropagation)void
android.transition.TransitionSet.setEpicenterCallback(Transition.EpicenterCallback)void
android.transition.TransitionSet.clone)android.transition.TransitionSet
android.transition.TransitionValues.equals(Object)boolean
android.transition.TransitionValues.hashCode)int
android.transition.TransitionValues.toString)String
android.transition.Visibility.setMode(int)void
android.transition.Visibility.getMode)int
android.transition.Visibility.captureStartValues(android.transition.TransitionValues)void
android.transition.Visibility.captureEndValues(android.transition.TransitionValues)void
android.transition.Visibility.isVisible(android.transition.TransitionValues)boolean
android.transition.Visibility.createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)android.animation.Animator
android.transition.Visibility.onAppear(android.view.ViewGroup,android.transition.TransitionValues,int,android.transition.TransitionValues,int)android.animation.Animator
android.transition.Visibility.onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)android.animation.Animator
android.transition.Visibility.onDisappear(android.view.ViewGroup,android.transition.TransitionValues,int,android.transition.TransitionValues,int)android.animation.Animator
android.transition.Visibility.isTransitionRequired(android.transition.TransitionValues,android.transition.TransitionValues)boolean
android.transition.Visibility.onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)android.animation.Animator
android.transition.VisibilityPropagation.captureValues(android.transition.TransitionValues)void
android.transition.VisibilityPropagation.getViewVisibility(android.transition.TransitionValues)int
android.transition.VisibilityPropagation.getViewX(android.transition.TransitionValues)int
android.transition.VisibilityPropagation.getViewY(android.transition.TransitionValues)int
android.util.ArrayMap.clear)void
android.util.ArrayMap.ensureCapacity(int)void
android.util.ArrayMap.containsKey(Object)boolean
android.util.ArrayMap.indexOfKey(Object)int
android.util.ArrayMap.indexOfValue(Object)int
android.util.ArrayMap.containsValue(Object)boolean
android.util.ArrayMap.get(Object)Object
android.util.ArrayMap.keyAt(int)Object
android.util.ArrayMap.valueAt(int)Object
android.util.ArrayMap.setValueAt(int,Object)Object
android.util.ArrayMap.isEmpty)boolean
android.util.ArrayMap.put(Object,Object)Object
android.util.ArrayMap.putAll(android.util.ArrayMap)void
android.util.ArrayMap.remove(Object)Object
android.util.ArrayMap.removeAt(int)Object
android.util.ArrayMap.size)int
android.util.ArrayMap.equals(Object)boolean
android.util.ArrayMap.hashCode)int
android.util.ArrayMap.toString)String
android.util.ArrayMap.containsAll(Collection)boolean
android.util.ArrayMap.putAll(Map)void
android.util.ArrayMap.removeAll(Collection)boolean
android.util.ArrayMap.retainAll(Collection)boolean
android.util.ArrayMap.entrySet)Set
android.util.ArrayMap.keySet)Set
android.util.ArrayMap.values)Collection
android.util.ArraySet.clear)void
android.util.ArraySet.ensureCapacity(int)void
android.util.ArraySet.contains(Object)boolean
android.util.ArraySet.indexOf(Object)int
android.util.ArraySet.valueAt(int)Object
android.util.ArraySet.isEmpty)boolean
android.util.ArraySet.add(Object)boolean
android.util.ArraySet.addAll(android.util.ArraySet)void
android.util.ArraySet.remove(Object)boolean
android.util.ArraySet.removeAt(int)Object
android.util.ArraySet.removeAll(android.util.ArraySet)boolean
android.util.ArraySet.removeIf(java.util.function.Predicate)boolean
android.util.ArraySet.size)int
android.util.ArraySet.equals(Object)boolean
android.util.ArraySet.hashCode)int
android.util.ArraySet.toString)String
android.util.ArraySet.iterator)Iterator
android.util.ArraySet.containsAll(Collection)boolean
android.util.ArraySet.addAll(Collection)boolean
android.util.ArraySet.removeAll(Collection)boolean
android.util.ArraySet.retainAll(Collection)boolean
android.util.AtomicFile.getBaseFile)File
android.util.AtomicFile.delete)void
android.util.AtomicFile.startWrite)FileOutputStream
android.util.AtomicFile.finishWrite(FileOutputStream)void
android.util.AtomicFile.failWrite(FileOutputStream)void
android.util.AtomicFile.openRead)FileInputStream
android.util.AttributeSet.getAttributeNamespace(int)String
android.util.Base64.encodeToString(byte,int)String
android.util.Base64.encodeToString(byte,int,int,int)String
android.util.Base64InputStream.markSupported)boolean
android.util.Base64InputStream.mark(int)void
android.util.Base64InputStream.reset)void
android.util.Base64InputStream.close)void
android.util.Base64InputStream.available)int
android.util.Base64InputStream.skip(long)long
android.util.Base64InputStream.read)int
android.util.Base64InputStream.read(byte,int,int)int
android.util.Base64OutputStream.write(int)void
android.util.Base64OutputStream.write(byte,int,int)void
android.util.Base64OutputStream.close)void
android.util.DebugUtils.isObjectSelected(Object)boolean
android.util.DisplayMetrics.setTo(android.util.DisplayMetrics)void
android.util.DisplayMetrics.setToDefaults)void
android.util.DisplayMetrics.equals(Object)boolean
android.util.DisplayMetrics.equals(android.util.DisplayMetrics)boolean
android.util.DisplayMetrics.hashCode)int
android.util.DisplayMetrics.toString)String
android.util.EventLog.getProcessId)int
android.util.EventLog.getThreadId)int
android.util.EventLog.getTimeNanos)long
android.util.EventLog.getTag)int
android.util.EventLog.equals(Object)boolean
android.util.EventLog.hashCode)int
android.util.EventLog.getTagName(int)String
android.util.EventLog.getTagCode(String)int
android.util.EventLogTags.get(String)android.util.EventLogTags.Description
android.util.EventLogTags.get(int)android.util.EventLogTags.Description
android.util.FloatProperty.set(Object,Float)void
android.util.Half.halfValue)short
android.util.Half.byteValue)byte
android.util.Half.shortValue)short
android.util.Half.intValue)int
android.util.Half.longValue)long
android.util.Half.floatValue)float
android.util.Half.doubleValue)double
android.util.Half.isNaN)boolean
android.util.Half.equals(Object)boolean
android.util.Half.hashCode)int
android.util.Half.toString)String
android.util.Half.compareTo(android.util.Half)int
android.util.Half.hashCode(short)int
android.util.Half.compare(short,short)int
android.util.Half.halfToShortBits(short)short
android.util.Half.halfToIntBits(short)int
android.util.Half.halfToRawIntBits(short)int
android.util.Half.intBitsToHalf(int)short
android.util.Half.copySign(short,short)short
android.util.Half.abs(short)short
android.util.Half.round(short)short
android.util.Half.ceil(short)short
android.util.Half.floor(short)short
android.util.Half.trunc(short)short
android.util.Half.min(short,short)short
android.util.Half.max(short,short)short
android.util.Half.less(short,short)boolean
android.util.Half.lessEquals(short,short)boolean
android.util.Half.greater(short,short)boolean
android.util.Half.greaterEquals(short,short)boolean
android.util.Half.equals(short,short)boolean
android.util.Half.getSign(short)int
android.util.Half.getExponent(short)int
android.util.Half.getSignificand(short)int
android.util.Half.isInfinite(short)boolean
android.util.Half.isNaN(short)boolean
android.util.Half.isNormalized(short)boolean
android.util.Half.toFloat(short)float
android.util.Half.toHalf(float)short
android.util.Half.valueOf(short)android.util.Half
android.util.Half.valueOf(float)android.util.Half
android.util.Half.valueOf(String)android.util.Half
android.util.Half.parseHalf(String)short
android.util.Half.toString(short)String
android.util.Half.toHexString(short)String
android.util.IntProperty.set(Object,Integer)void
android.util.JsonReader.setLenient(boolean)void
android.util.JsonReader.isLenient)boolean
android.util.JsonReader.beginArray)void
android.util.JsonReader.endArray)void
android.util.JsonReader.beginObject)void
android.util.JsonReader.endObject)void
android.util.JsonReader.hasNext)boolean
android.util.JsonReader.peek)android.util.JsonToken
android.util.JsonReader.nextName)String
android.util.JsonReader.nextString)String
android.util.JsonReader.nextBoolean)boolean
android.util.JsonReader.nextNull)void
android.util.JsonReader.nextDouble)double
android.util.JsonReader.nextLong)long
android.util.JsonReader.nextInt)int
android.util.JsonReader.close)void
android.util.JsonReader.skipValue)void
android.util.JsonReader.toString)String
android.util.JsonToken.valueOf(String)android.util.JsonToken
android.util.JsonWriter.setIndent(String)void
android.util.JsonWriter.setLenient(boolean)void
android.util.JsonWriter.isLenient)boolean
android.util.JsonWriter.beginArray)android.util.JsonWriter
android.util.JsonWriter.endArray)android.util.JsonWriter
android.util.JsonWriter.beginObject)android.util.JsonWriter
android.util.JsonWriter.endObject)android.util.JsonWriter
android.util.JsonWriter.name(String)android.util.JsonWriter
android.util.JsonWriter.value(String)android.util.JsonWriter
android.util.JsonWriter.nullValue)android.util.JsonWriter
android.util.JsonWriter.value(boolean)android.util.JsonWriter
android.util.JsonWriter.value(double)android.util.JsonWriter
android.util.JsonWriter.value(long)android.util.JsonWriter
android.util.JsonWriter.value(Number)android.util.JsonWriter
android.util.JsonWriter.flush)void
android.util.JsonWriter.close)void
android.util.Log.v(String,String)int
android.util.Log.v(String,String,Throwable)int
android.util.Log.d(String,String)int
android.util.Log.d(String,String,Throwable)int
android.util.Log.i(String,String)int
android.util.Log.i(String,String,Throwable)int
android.util.Log.w(String,String)int
android.util.Log.w(String,String,Throwable)int
android.util.Log.w(String,Throwable)int
android.util.Log.e(String,String)int
android.util.Log.e(String,String,Throwable)int
android.util.Log.wtf(String,String)int
android.util.Log.wtf(String,Throwable)int
android.util.Log.wtf(String,String,Throwable)int
android.util.Log.getStackTraceString(Throwable)String
android.util.Log.println(int,String,String)int
android.util.LogPrinter.println(String)void
android.util.LongSparseArray.clone)android.util.LongSparseArray
android.util.LongSparseArray.get(long)Object
android.util.LongSparseArray.get(long,Object)Object
android.util.LongSparseArray.delete(long)void
android.util.LongSparseArray.remove(long)void
android.util.LongSparseArray.removeAt(int)void
android.util.LongSparseArray.put(long,Object)void
android.util.LongSparseArray.size)int
android.util.LongSparseArray.keyAt(int)long
android.util.LongSparseArray.valueAt(int)Object
android.util.LongSparseArray.setValueAt(int,Object)void
android.util.LongSparseArray.indexOfKey(long)int
android.util.LongSparseArray.indexOfValue(Object)int
android.util.LongSparseArray.clear)void
android.util.LongSparseArray.append(long,Object)void
android.util.LongSparseArray.toString)String
android.util.LruCache.resize(int)void
android.util.LruCache.get(Object)Object
android.util.LruCache.put(Object,Object)Object
android.util.LruCache.trimToSize(int)void
android.util.LruCache.remove(Object)Object
android.util.LruCache.entryRemoved(boolean,Object,Object,Object)void
android.util.LruCache.create(Object)Object
android.util.LruCache.sizeOf(Object,Object)int
android.util.LruCache.evictAll)void
android.util.MonthDisplayHelper.getYear)int
android.util.MonthDisplayHelper.getMonth)int
android.util.MonthDisplayHelper.getWeekStartDay)int
android.util.MonthDisplayHelper.getFirstDayOfMonth)int
android.util.MonthDisplayHelper.getNumberOfDaysInMonth)int
android.util.MonthDisplayHelper.getOffset)int
android.util.MonthDisplayHelper.getDayAt(int,int)int
android.util.MonthDisplayHelper.getRowOf(int)int
android.util.MonthDisplayHelper.getColumnOf(int)int
android.util.MonthDisplayHelper.previousMonth)void
android.util.MonthDisplayHelper.nextMonth)void
android.util.MonthDisplayHelper.isWithinCurrentMonth(int,int)boolean
android.util.Pair.equals(Object)boolean
android.util.Pair.hashCode)int
android.util.Pair.toString)String
android.util.Pair.create(Object,Object)android.util.Pair
android.util.Patterns.concatGroups(java.util.regex.Matcher)String
android.util.Patterns.digitsAndPlusOnly(java.util.regex.Matcher)String
android.util.PrintStreamPrinter.println(String)void
android.util.PrintWriterPrinter.println(String)void
android.util.Property.of(Class,Class,String)android.util.Property
android.util.Property.isReadOnly)boolean
android.util.Property.set(Object,Object)void
android.util.Property.getName)String
android.util.Property.getType)Class
android.util.Range.create(Comparable,Comparable)android.util.Range
android.util.Range.getLower)Comparable
android.util.Range.getUpper)Comparable
android.util.Range.contains(Comparable)boolean
android.util.Range.contains(android.util.Range)boolean
android.util.Range.equals(Object)boolean
android.util.Range.clamp(Comparable)Comparable
android.util.Range.intersect(android.util.Range)android.util.Range
android.util.Range.intersect(Comparable,Comparable)android.util.Range
android.util.Range.extend(android.util.Range)android.util.Range
android.util.Range.extend(Comparable,Comparable)android.util.Range
android.util.Range.extend(Comparable)android.util.Range
android.util.Range.toString)String
android.util.Range.hashCode)int
android.util.Rational.getNumerator)int
android.util.Rational.getDenominator)int
android.util.Rational.isNaN)boolean
android.util.Rational.isInfinite)boolean
android.util.Rational.isFinite)boolean
android.util.Rational.isZero)boolean
android.util.Rational.equals(Object)boolean
android.util.Rational.toString)String
android.util.Rational.hashCode)int
android.util.Rational.doubleValue)double
android.util.Rational.floatValue)float
android.util.Rational.intValue)int
android.util.Rational.longValue)long
android.util.Rational.shortValue)short
android.util.Rational.compareTo(android.util.Rational)int
android.util.Rational.parseRational(String)android.util.Rational
android.util.Size.getWidth)int
android.util.Size.getHeight)int
android.util.Size.equals(Object)boolean
android.util.Size.toString)String
android.util.Size.parseSize(String)android.util.Size
android.util.Size.hashCode)int
android.util.SizeF.getWidth)float
android.util.SizeF.getHeight)float
android.util.SizeF.equals(Object)boolean
android.util.SizeF.toString)String
android.util.SizeF.parseSizeF(String)android.util.SizeF
android.util.SizeF.hashCode)int
android.util.SparseArray.clone)android.util.SparseArray
android.util.SparseArray.get(int)Object
android.util.SparseArray.get(int,Object)Object
android.util.SparseArray.delete(int)void
android.util.SparseArray.remove(int)void
android.util.SparseArray.removeAt(int)void
android.util.SparseArray.removeAtRange(int,int)void
android.util.SparseArray.put(int,Object)void
android.util.SparseArray.size)int
android.util.SparseArray.keyAt(int)int
android.util.SparseArray.valueAt(int)Object
android.util.SparseArray.setValueAt(int,Object)void
android.util.SparseArray.indexOfKey(int)int
android.util.SparseArray.indexOfValue(Object)int
android.util.SparseArray.clear)void
android.util.SparseArray.append(int,Object)void
android.util.SparseArray.toString)String
android.util.SparseBooleanArray.clone)android.util.SparseBooleanArray
android.util.SparseBooleanArray.get(int)boolean
android.util.SparseBooleanArray.get(int,boolean)boolean
android.util.SparseBooleanArray.delete(int)void
android.util.SparseBooleanArray.removeAt(int)void
android.util.SparseBooleanArray.put(int,boolean)void
android.util.SparseBooleanArray.size)int
android.util.SparseBooleanArray.keyAt(int)int
android.util.SparseBooleanArray.valueAt(int)boolean
android.util.SparseBooleanArray.setValueAt(int,boolean)void
android.util.SparseBooleanArray.indexOfKey(int)int
android.util.SparseBooleanArray.indexOfValue(boolean)int
android.util.SparseBooleanArray.clear)void
android.util.SparseBooleanArray.append(int,boolean)void
android.util.SparseBooleanArray.hashCode)int
android.util.SparseBooleanArray.equals(Object)boolean
android.util.SparseBooleanArray.toString)String
android.util.SparseIntArray.clone)android.util.SparseIntArray
android.util.SparseIntArray.get(int)int
android.util.SparseIntArray.get(int,int)int
android.util.SparseIntArray.delete(int)void
android.util.SparseIntArray.removeAt(int)void
android.util.SparseIntArray.put(int,int)void
android.util.SparseIntArray.size)int
android.util.SparseIntArray.keyAt(int)int
android.util.SparseIntArray.valueAt(int)int
android.util.SparseIntArray.setValueAt(int,int)void
android.util.SparseIntArray.indexOfKey(int)int
android.util.SparseIntArray.indexOfValue(int)int
android.util.SparseIntArray.clear)void
android.util.SparseIntArray.append(int,int)void
android.util.SparseIntArray.toString)String
android.util.SparseLongArray.clone)android.util.SparseLongArray
android.util.SparseLongArray.get(int)long
android.util.SparseLongArray.get(int,long)long
android.util.SparseLongArray.delete(int)void
android.util.SparseLongArray.removeAt(int)void
android.util.SparseLongArray.put(int,long)void
android.util.SparseLongArray.size)int
android.util.SparseLongArray.keyAt(int)int
android.util.SparseLongArray.valueAt(int)long
android.util.SparseLongArray.indexOfKey(int)int
android.util.SparseLongArray.indexOfValue(long)int
android.util.SparseLongArray.clear)void
android.util.SparseLongArray.append(int,long)void
android.util.SparseLongArray.toString)String
android.util.StateSet.isWildCard(int)boolean
android.util.StateSet.stateSetMatches(int,int)boolean
android.util.StateSet.stateSetMatches(int,int)boolean
android.util.StateSet.dump(int)String
android.util.StatsLog.logStart(int)boolean
android.util.StatsLog.logStop(int)boolean
android.util.StatsLog.logEvent(int)boolean
android.util.StatsLog.logBinaryPushStateChanged(String,long,int,int,long)boolean
android.util.StringBuilderPrinter.println(String)void
android.util.TimeUtils.getTimeZone(int,boolean,long,String)java.util.TimeZone
android.util.TimeUtils.getTimeZoneIdsForCountryCode(String)java.util.List
android.util.TimeUtils.getTimeZoneDatabaseVersion)String
android.util.TimingLogger.reset(String,String)void
android.util.TimingLogger.reset)void
android.util.TimingLogger.addSplit(String)void
android.util.TimingLogger.dumpToLog)void
android.util.TypedValue.getFloat)float
android.util.TypedValue.isColorType)boolean
android.util.TypedValue.complexToFloat(int)float
android.util.TypedValue.complexToDimension(int,android.util.DisplayMetrics)float
android.util.TypedValue.complexToDimensionPixelOffset(int,android.util.DisplayMetrics)int
android.util.TypedValue.complexToDimensionPixelSize(int,android.util.DisplayMetrics)int
android.util.TypedValue.getComplexUnit)int
android.util.TypedValue.applyDimension(int,float,android.util.DisplayMetrics)float
android.util.TypedValue.getDimension(android.util.DisplayMetrics)float
android.util.TypedValue.complexToFraction(int,float,float)float
android.util.TypedValue.getFraction(float,float)float
android.util.TypedValue.coerceToString)CharSequence
android.util.TypedValue.coerceToString(int,int)String
android.util.TypedValue.setTo(android.util.TypedValue)void
android.util.TypedValue.toString)String
android.util.Xml.valueOf(String)Encoding
android.util.Xml.parse(String,org.xml.sax.ContentHandler)void
android.util.Xml.parse(Reader,org.xml.sax.ContentHandler)void
android.util.Xml.parse(InputStream,Encoding,org.xml.sax.ContentHandler)void
android.util.Xml.newPullParser)org.xmlpull.v1.XmlPullParser
android.util.Xml.newSerializer)org.xmlpull.v1.XmlSerializer
android.util.Xml.findEncodingByName(String)Encoding
android.util.Xml.asAttributeSet(org.xmlpull.v1.XmlPullParser)android.util.AttributeSet
android.view.AbsSavedState.getSuperState)android.os.Parcelable
android.view.AbsSavedState.describeContents)int
android.view.AbsSavedState.writeToParcel(android.os.Parcel,int)void
android.view.ActionMode.onGetContentRect(android.view.ActionMode,android.view.View,android.graphics.Rect)void
android.view.ActionMode.setTag(Object)void
android.view.ActionMode.getTag)Object
android.view.ActionMode.setTitleOptionalHint(boolean)void
android.view.ActionMode.getTitleOptionalHint)boolean
android.view.ActionMode.isTitleOptional)boolean
android.view.ActionMode.setType(int)void
android.view.ActionMode.getType)int
android.view.ActionMode.invalidateContentRect)void
android.view.ActionMode.hide(long)void
android.view.ActionMode.onWindowFocusChanged(boolean)void
android.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
android.view.ActionProvider.overridesItemVisibility)boolean
android.view.ActionProvider.isVisible)boolean
android.view.ActionProvider.refreshVisibility)void
android.view.ActionProvider.onPerformDefaultAction)boolean
android.view.ActionProvider.hasSubMenu)boolean
android.view.ActionProvider.onPrepareSubMenu(android.view.SubMenu)void
android.view.ActionProvider.setVisibilityListener(android.view.ActionProvider.VisibilityListener)void
android.view.Choreographer.getInstance)android.view.Choreographer
android.view.Choreographer.postFrameCallback(android.view.Choreographer.FrameCallback)void
android.view.Choreographer.postFrameCallbackDelayed(android.view.Choreographer.FrameCallback,long)void
android.view.Choreographer.removeFrameCallback(android.view.Choreographer.FrameCallback)void
android.view.ContextThemeWrapper.attachBaseContext(android.content.Context)void
android.view.ContextThemeWrapper.applyOverrideConfiguration(Configuration)void
android.view.ContextThemeWrapper.getAssets)AssetManager
android.view.ContextThemeWrapper.getResources)Resources
android.view.ContextThemeWrapper.setTheme(int)void
android.view.ContextThemeWrapper.setTheme(android.content.res.Resources.Theme)void
android.view.ContextThemeWrapper.getSystemService(String)Object
android.view.ContextThemeWrapper.onApplyThemeResource(android.content.res.Resources.Theme,int,boolean)void
android.view.Display.getModeId)int
android.view.Display.getPhysicalWidth)int
android.view.Display.getPhysicalHeight)int
android.view.Display.getRefreshRate)float
android.view.Display.equals(Object)boolean
android.view.Display.hashCode)int
android.view.Display.toString)String
android.view.Display.describeContents)int
android.view.Display.writeToParcel(android.os.Parcel,int)void
android.view.Display.getDesiredMaxLuminance)float
android.view.Display.getDesiredMaxAverageLuminance)float
android.view.Display.getDesiredMinLuminance)float
android.view.Display.equals(Object)boolean
android.view.Display.hashCode)int
android.view.Display.writeToParcel(android.os.Parcel,int)void
android.view.Display.describeContents)int
android.view.Display.getDisplayId)int
android.view.Display.isValid)boolean
android.view.Display.getFlags)int
android.view.Display.getName)String
android.view.Display.getSize(Point)void
android.view.Display.getRectSize(Rect)void
android.view.Display.getCurrentSizeRange(Point,Point)void
android.view.Display.getWidth)int
android.view.Display.getHeight)int
android.view.Display.getRotation)int
android.view.Display.getOrientation)int
android.view.Display.getCutout)android.view.DisplayCutout
android.view.Display.getPixelFormat)int
android.view.Display.getRefreshRate)float
android.view.Display.getMode)Mode
android.view.Display.getHdrCapabilities)HdrCapabilities
android.view.Display.isHdr)boolean
android.view.Display.isWideColorGamut)boolean
android.view.Display.getPreferredWideGamutColorSpace)ColorSpace
android.view.Display.getAppVsyncOffsetNanos)long
android.view.Display.getPresentationDeadlineNanos)long
android.view.Display.getMetrics(android.util.DisplayMetrics)void
android.view.Display.getRealSize(Point)void
android.view.Display.getRealMetrics(android.util.DisplayMetrics)void
android.view.Display.getState)int
android.view.Display.toString)String
android.view.DisplayCutout.getSafeInsetTop)int
android.view.DisplayCutout.getSafeInsetBottom)int
android.view.DisplayCutout.getSafeInsetLeft)int
android.view.DisplayCutout.getSafeInsetRight)int
android.view.DisplayCutout.getBoundingRects)java.util.List
android.view.DisplayCutout.getBoundingRectLeft)android.graphics.Rect
android.view.DisplayCutout.getBoundingRectTop)android.graphics.Rect
android.view.DisplayCutout.getBoundingRectRight)android.graphics.Rect
android.view.DisplayCutout.getBoundingRectBottom)android.graphics.Rect
android.view.DisplayCutout.hashCode)int
android.view.DisplayCutout.equals(Object)boolean
android.view.DisplayCutout.toString)String
android.view.DragAndDropPermissions.release)void
android.view.DragAndDropPermissions.describeContents)int
android.view.DragAndDropPermissions.writeToParcel(android.os.Parcel,int)void
android.view.DragEvent.getAction)int
android.view.DragEvent.getX)float
android.view.DragEvent.getY)float
android.view.DragEvent.getClipData)android.content.ClipData
android.view.DragEvent.getClipDescription)android.content.ClipDescription
android.view.DragEvent.getLocalState)Object
android.view.DragEvent.getResult)boolean
android.view.DragEvent.toString)String
android.view.DragEvent.describeContents)int
android.view.DragEvent.writeToParcel(android.os.Parcel,int)void
android.view.FocusFinder.getInstance)android.view.FocusFinder
android.view.FocusFinder.findNextFocus(android.view.ViewGroup,android.view.View,int)android.view.View
android.view.FocusFinder.findNextFocusFromRect(android.view.ViewGroup,android.graphics.Rect,int)android.view.View
android.view.FocusFinder.findNextKeyboardNavigationCluster(android.view.View,android.view.View,int)android.view.View
android.view.FocusFinder.findNearestTouchable(android.view.ViewGroup,int,int,int,int)android.view.View
android.view.FrameMetrics.getMetric(int)long
android.view.FrameStats.getRefreshPeriodNano)long
android.view.FrameStats.getFrameCount)int
android.view.FrameStats.getStartTimeNano)long
android.view.FrameStats.getEndTimeNano)long
android.view.FrameStats.getFramePresentedTimeNano(int)long
android.view.GestureDetector.onSingleTapUp(android.view.MotionEvent)boolean
android.view.GestureDetector.onLongPress(android.view.MotionEvent)void
android.view.GestureDetector.onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)boolean
android.view.GestureDetector.onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)boolean
android.view.GestureDetector.onShowPress(android.view.MotionEvent)void
android.view.GestureDetector.onDown(android.view.MotionEvent)boolean
android.view.GestureDetector.onDoubleTap(android.view.MotionEvent)boolean
android.view.GestureDetector.onDoubleTapEvent(android.view.MotionEvent)boolean
android.view.GestureDetector.onSingleTapConfirmed(android.view.MotionEvent)boolean
android.view.GestureDetector.onContextClick(android.view.MotionEvent)boolean
android.view.GestureDetector.setOnDoubleTapListener(android.view.GestureDetector.OnDoubleTapListener)void
android.view.GestureDetector.setContextClickListener(android.view.GestureDetector.OnContextClickListener)void
android.view.GestureDetector.setIsLongpressEnabled(boolean)void
android.view.GestureDetector.isLongpressEnabled)boolean
android.view.GestureDetector.onTouchEvent(android.view.MotionEvent)boolean
android.view.GestureDetector.onGenericMotionEvent(android.view.MotionEvent)boolean
android.view.Gravity.apply(int,int,int,android.graphics.Rect,android.graphics.Rect)void
android.view.Gravity.apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)void
android.view.Gravity.apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect)void
android.view.Gravity.apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)void
android.view.Gravity.applyDisplay(int,android.graphics.Rect,android.graphics.Rect)void
android.view.Gravity.applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)void
android.view.Gravity.isVertical(int)boolean
android.view.Gravity.isHorizontal(int)boolean
android.view.Gravity.getAbsoluteGravity(int,int)int
android.view.InputDevice.getAxis)int
android.view.InputDevice.getSource)int
android.view.InputDevice.isFromSource(int)boolean
android.view.InputDevice.getMin)float
android.view.InputDevice.getMax)float
android.view.InputDevice.getRange)float
android.view.InputDevice.getFlat)float
android.view.InputDevice.getFuzz)float
android.view.InputDevice.getResolution)float
android.view.InputDevice.getDevice(int)android.view.InputDevice
android.view.InputDevice.getId)int
android.view.InputDevice.getControllerNumber)int
android.view.InputDevice.getVendorId)int
android.view.InputDevice.getProductId)int
android.view.InputDevice.getDescriptor)String
android.view.InputDevice.isVirtual)boolean
android.view.InputDevice.isExternal)boolean
android.view.InputDevice.getName)String
android.view.InputDevice.getSources)int
android.view.InputDevice.supportsSource(int)boolean
android.view.InputDevice.getKeyboardType)int
android.view.InputDevice.getKeyCharacterMap)android.view.KeyCharacterMap
android.view.InputDevice.getMotionRange(int)MotionRange
android.view.InputDevice.getMotionRange(int,int)MotionRange
android.view.InputDevice.getMotionRanges)java.util.List
android.view.InputDevice.getVibrator)Vibrator
android.view.InputDevice.isEnabled)boolean
android.view.InputDevice.hasMicrophone)boolean
android.view.InputDevice.writeToParcel(Parcel,int)void
android.view.InputDevice.describeContents)int
android.view.InputDevice.toString)String
android.view.InputEvent.getDevice)android.view.InputDevice
android.view.InputEvent.isFromSource(int)boolean
android.view.InputEvent.describeContents)int
android.view.InputQueue.finalize)void
android.view.KeyboardShortcutGroup.getLabel)CharSequence
android.view.KeyboardShortcutGroup.getItems)java.util.List
android.view.KeyboardShortcutGroup.addItem(android.view.KeyboardShortcutInfo)void
android.view.KeyboardShortcutGroup.describeContents)int
android.view.KeyboardShortcutGroup.writeToParcel(android.os.Parcel,int)void
android.view.KeyboardShortcutInfo.getLabel)CharSequence
android.view.KeyboardShortcutInfo.getKeycode)int
android.view.KeyboardShortcutInfo.getBaseCharacter)char
android.view.KeyboardShortcutInfo.getModifiers)int
android.view.KeyboardShortcutInfo.describeContents)int
android.view.KeyboardShortcutInfo.writeToParcel(android.os.Parcel,int)void
android.view.KeyCharacterMap.finalize)void
android.view.KeyCharacterMap.load(int)android.view.KeyCharacterMap
android.view.KeyCharacterMap.get(int,int)int
android.view.KeyCharacterMap.getNumber(int)char
android.view.KeyCharacterMap.getMatch(int,char)char
android.view.KeyCharacterMap.getMatch(int,char,int)char
android.view.KeyCharacterMap.getDisplayLabel(int)char
android.view.KeyCharacterMap.getDeadChar(int,int)int
android.view.KeyCharacterMap.getKeyData(int,android.view.KeyCharacterMap.KeyData)boolean
android.view.KeyCharacterMap.isPrintingKey(int)boolean
android.view.KeyCharacterMap.getKeyboardType)int
android.view.KeyCharacterMap.getModifierBehavior)int
android.view.KeyCharacterMap.deviceHasKey(int)boolean
android.view.KeyCharacterMap.writeToParcel(android.os.Parcel,int)void
android.view.KeyCharacterMap.describeContents)int
android.view.KeyEvent.reset)void
android.view.KeyEvent.reset(Object)void
android.view.KeyEvent.startTracking(android.view.KeyEvent,Object)void
android.view.KeyEvent.isTracking(android.view.KeyEvent)boolean
android.view.KeyEvent.performedLongPress(android.view.KeyEvent)void
android.view.KeyEvent.handleUpEvent(android.view.KeyEvent)void
android.view.KeyEvent.getMaxKeyCode)int
android.view.KeyEvent.getDeadChar(int,int)int
android.view.KeyEvent.changeTimeRepeat(android.view.KeyEvent,long,int)android.view.KeyEvent
android.view.KeyEvent.changeTimeRepeat(android.view.KeyEvent,long,int,int)android.view.KeyEvent
android.view.KeyEvent.changeAction(android.view.KeyEvent,int)android.view.KeyEvent
android.view.KeyEvent.changeFlags(android.view.KeyEvent,int)android.view.KeyEvent
android.view.KeyEvent.isSystem)boolean
android.view.KeyEvent.isGamepadButton(int)boolean
android.view.KeyEvent.getDeviceId)int
android.view.KeyEvent.getSource)int
android.view.KeyEvent.setSource(int)void
android.view.KeyEvent.getMetaState)int
android.view.KeyEvent.getModifiers)int
android.view.KeyEvent.getFlags)int
android.view.KeyEvent.getModifierMetaStateMask)int
android.view.KeyEvent.isModifierKey(int)boolean
android.view.KeyEvent.normalizeMetaState(int)int
android.view.KeyEvent.metaStateHasNoModifiers(int)boolean
android.view.KeyEvent.metaStateHasModifiers(int,int)boolean
android.view.KeyEvent.hasNoModifiers)boolean
android.view.KeyEvent.hasModifiers(int)boolean
android.view.KeyEvent.isAltPressed)boolean
android.view.KeyEvent.isShiftPressed)boolean
android.view.KeyEvent.isSymPressed)boolean
android.view.KeyEvent.isCtrlPressed)boolean
android.view.KeyEvent.isMetaPressed)boolean
android.view.KeyEvent.isFunctionPressed)boolean
android.view.KeyEvent.isCapsLockOn)boolean
android.view.KeyEvent.isNumLockOn)boolean
android.view.KeyEvent.isScrollLockOn)boolean
android.view.KeyEvent.getAction)int
android.view.KeyEvent.isCanceled)boolean
android.view.KeyEvent.startTracking)void
android.view.KeyEvent.isTracking)boolean
android.view.KeyEvent.isLongPress)boolean
android.view.KeyEvent.getKeyCode)int
android.view.KeyEvent.getCharacters)String
android.view.KeyEvent.getScanCode)int
android.view.KeyEvent.getRepeatCount)int
android.view.KeyEvent.getDownTime)long
android.view.KeyEvent.getEventTime)long
android.view.KeyEvent.getKeyCharacterMap)android.view.KeyCharacterMap
android.view.KeyEvent.getDisplayLabel)char
android.view.KeyEvent.getUnicodeChar)int
android.view.KeyEvent.getUnicodeChar(int)int
android.view.KeyEvent.getKeyData(KeyCharacterMap.KeyData)boolean
android.view.KeyEvent.getMatch(char)char
android.view.KeyEvent.getMatch(char,int)char
android.view.KeyEvent.getNumber)char
android.view.KeyEvent.isPrintingKey)boolean
android.view.KeyEvent.dispatch(android.view.KeyEvent.Callback)boolean
android.view.KeyEvent.dispatch(android.view.KeyEvent.Callback,android.view.KeyEvent.DispatcherState,Object)boolean
android.view.KeyEvent.toString)String
android.view.KeyEvent.keyCodeToString(int)String
android.view.KeyEvent.keyCodeFromString(String)int
android.view.KeyEvent.writeToParcel(android.os.Parcel,int)void
android.view.LayoutInflater.from(android.content.Context)android.view.LayoutInflater
android.view.LayoutInflater.getContext)android.content.Context
android.view.LayoutInflater.getFactory)android.view.LayoutInflater.Factory
android.view.LayoutInflater.getFactory2)android.view.LayoutInflater.Factory2
android.view.LayoutInflater.setFactory(android.view.LayoutInflater.Factory)void
android.view.LayoutInflater.setFactory2(android.view.LayoutInflater.Factory2)void
android.view.LayoutInflater.getFilter)android.view.LayoutInflater.Filter
android.view.LayoutInflater.setFilter(android.view.LayoutInflater.Filter)void
android.view.LayoutInflater.inflate(int,android.view.ViewGroup)android.view.View
android.view.LayoutInflater.inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup)android.view.View
android.view.LayoutInflater.inflate(int,android.view.ViewGroup,boolean)android.view.View
android.view.LayoutInflater.inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup,boolean)android.view.View
android.view.LayoutInflater.createView(String,String,android.util.AttributeSet)android.view.View
android.view.LayoutInflater.createView(android.content.Context,String,String,android.util.AttributeSet)android.view.View
android.view.LayoutInflater.onCreateView(String,android.util.AttributeSet)android.view.View
android.view.LayoutInflater.onCreateView(android.view.View,String,android.util.AttributeSet)android.view.View
android.view.LayoutInflater.onCreateView(android.content.Context,android.view.View,String,android.util.AttributeSet)android.view.View
android.view.Menu.setGroupDividerEnabled(boolean)void
android.view.MenuInflater.inflate(int,android.view.Menu)void
android.view.MenuItem.setIconTintList(android.content.res.ColorStateList)android.view.MenuItem
android.view.MenuItem.getIconTintList)android.content.res.ColorStateList
android.view.MenuItem.setIconTintMode(android.graphics.PorterDuff.Mode)android.view.MenuItem
android.view.MenuItem.setIconTintBlendMode(android.graphics.BlendMode)android.view.MenuItem
android.view.MenuItem.getIconTintBlendMode)android.graphics.BlendMode
android.view.MenuItem.setShortcut(char,char,int,int)android.view.MenuItem
android.view.MenuItem.setNumericShortcut(char,int)android.view.MenuItem
android.view.MenuItem.getNumericModifiers)int
android.view.MenuItem.setAlphabeticShortcut(char,int)android.view.MenuItem
android.view.MenuItem.getAlphabeticModifiers)int
android.view.MenuItem.setContentDescription(CharSequence)android.view.MenuItem
android.view.MenuItem.getContentDescription)CharSequence
android.view.MenuItem.setTooltipText(CharSequence)android.view.MenuItem
android.view.MenuItem.getTooltipText)CharSequence
android.view.MotionEvent.clear)void
android.view.MotionEvent.copyFrom(PointerProperties)void
android.view.MotionEvent.equals(Object)boolean
android.view.MotionEvent.hashCode)int
android.view.MotionEvent.clear)void
android.view.MotionEvent.copyFrom(PointerCoords)void
android.view.MotionEvent.getAxisValue(int)float
android.view.MotionEvent.setAxisValue(int,float)void
android.view.MotionEvent.finalize)void
android.view.MotionEvent.obtain(long,long,int,float,float,int)android.view.MotionEvent
android.view.MotionEvent.obtain(android.view.MotionEvent)android.view.MotionEvent
android.view.MotionEvent.obtainNoHistory(android.view.MotionEvent)android.view.MotionEvent
android.view.MotionEvent.recycle)void
android.view.MotionEvent.getDeviceId)int
android.view.MotionEvent.getSource)int
android.view.MotionEvent.setSource(int)void
android.view.MotionEvent.getAction)int
android.view.MotionEvent.getActionMasked)int
android.view.MotionEvent.getActionIndex)int
android.view.MotionEvent.getFlags)int
android.view.MotionEvent.getDownTime)long
android.view.MotionEvent.getEventTime)long
android.view.MotionEvent.getX)float
android.view.MotionEvent.getY)float
android.view.MotionEvent.getPressure)float
android.view.MotionEvent.getSize)float
android.view.MotionEvent.getTouchMajor)float
android.view.MotionEvent.getTouchMinor)float
android.view.MotionEvent.getToolMajor)float
android.view.MotionEvent.getToolMinor)float
android.view.MotionEvent.getOrientation)float
android.view.MotionEvent.getAxisValue(int)float
android.view.MotionEvent.getPointerCount)int
android.view.MotionEvent.getPointerId(int)int
android.view.MotionEvent.getToolType(int)int
android.view.MotionEvent.findPointerIndex(int)int
android.view.MotionEvent.getX(int)float
android.view.MotionEvent.getY(int)float
android.view.MotionEvent.getPressure(int)float
android.view.MotionEvent.getSize(int)float
android.view.MotionEvent.getTouchMajor(int)float
android.view.MotionEvent.getTouchMinor(int)float
android.view.MotionEvent.getToolMajor(int)float
android.view.MotionEvent.getToolMinor(int)float
android.view.MotionEvent.getOrientation(int)float
android.view.MotionEvent.getAxisValue(int,int)float
android.view.MotionEvent.getPointerCoords(int,PointerCoords)void
android.view.MotionEvent.getPointerProperties(int,PointerProperties)void
android.view.MotionEvent.getMetaState)int
android.view.MotionEvent.getButtonState)int
android.view.MotionEvent.getClassification)int
android.view.MotionEvent.getActionButton)int
android.view.MotionEvent.getRawX)float
android.view.MotionEvent.getRawY)float
android.view.MotionEvent.getRawX(int)float
android.view.MotionEvent.getRawY(int)float
android.view.MotionEvent.getXPrecision)float
android.view.MotionEvent.getYPrecision)float
android.view.MotionEvent.getHistorySize)int
android.view.MotionEvent.getHistoricalEventTime(int)long
android.view.MotionEvent.getHistoricalX(int)float
android.view.MotionEvent.getHistoricalY(int)float
android.view.MotionEvent.getHistoricalPressure(int)float
android.view.MotionEvent.getHistoricalSize(int)float
android.view.MotionEvent.getHistoricalTouchMajor(int)float
android.view.MotionEvent.getHistoricalTouchMinor(int)float
android.view.MotionEvent.getHistoricalToolMajor(int)float
android.view.MotionEvent.getHistoricalToolMinor(int)float
android.view.MotionEvent.getHistoricalOrientation(int)float
android.view.MotionEvent.getHistoricalAxisValue(int,int)float
android.view.MotionEvent.getHistoricalX(int,int)float
android.view.MotionEvent.getHistoricalY(int,int)float
android.view.MotionEvent.getHistoricalPressure(int,int)float
android.view.MotionEvent.getHistoricalSize(int,int)float
android.view.MotionEvent.getHistoricalTouchMajor(int,int)float
android.view.MotionEvent.getHistoricalTouchMinor(int,int)float
android.view.MotionEvent.getHistoricalToolMajor(int,int)float
android.view.MotionEvent.getHistoricalToolMinor(int,int)float
android.view.MotionEvent.getHistoricalOrientation(int,int)float
android.view.MotionEvent.getHistoricalAxisValue(int,int,int)float
android.view.MotionEvent.getHistoricalPointerCoords(int,int,PointerCoords)void
android.view.MotionEvent.getEdgeFlags)int
android.view.MotionEvent.setEdgeFlags(int)void
android.view.MotionEvent.setAction(int)void
android.view.MotionEvent.offsetLocation(float,float)void
android.view.MotionEvent.setLocation(float,float)void
android.view.MotionEvent.transform(android.graphics.Matrix)void
android.view.MotionEvent.addBatch(long,float,float,float,float,int)void
android.view.MotionEvent.addBatch(long,PointerCoords,int)void
android.view.MotionEvent.toString)String
android.view.MotionEvent.actionToString(int)String
android.view.MotionEvent.axisToString(int)String
android.view.MotionEvent.axisFromString(String)int
android.view.MotionEvent.isButtonPressed(int)boolean
android.view.MotionEvent.writeToParcel(android.os.Parcel,int)void
android.view.OrientationEventListener.enable)void
android.view.OrientationEventListener.disable)void
android.view.OrientationEventListener.canDetectOrientation)boolean
android.view.OrientationListener.enable)void
android.view.OrientationListener.disable)void
android.view.OrientationListener.onAccuracyChanged(int,int)void
android.view.OrientationListener.onSensorChanged(int,float)void
android.view.PixelCopy.request(android.view.SurfaceView,android.graphics.Bitmap,android.view.PixelCopy.OnPixelCopyFinishedListener,android.os.Handler)void
android.view.PixelCopy.request(android.view.SurfaceView,android.graphics.Rect,android.graphics.Bitmap,android.view.PixelCopy.OnPixelCopyFinishedListener,android.os.Handler)void
android.view.PixelCopy.request(android.view.Surface,android.graphics.Bitmap,android.view.PixelCopy.OnPixelCopyFinishedListener,android.os.Handler)void
android.view.PixelCopy.request(android.view.Surface,android.graphics.Rect,android.graphics.Bitmap,android.view.PixelCopy.OnPixelCopyFinishedListener,android.os.Handler)void
android.view.PixelCopy.request(android.view.Window,android.graphics.Bitmap,android.view.PixelCopy.OnPixelCopyFinishedListener,android.os.Handler)void
android.view.PixelCopy.request(android.view.Window,android.graphics.Rect,android.graphics.Bitmap,android.view.PixelCopy.OnPixelCopyFinishedListener,android.os.Handler)void
android.view.PointerIcon.getSystemIcon(android.content.Context,int)android.view.PointerIcon
android.view.PointerIcon.create(android.graphics.Bitmap,float,float)android.view.PointerIcon
android.view.PointerIcon.load(android.content.res.Resources,int)android.view.PointerIcon
android.view.PointerIcon.describeContents)int
android.view.PointerIcon.writeToParcel(android.os.Parcel,int)void
android.view.PointerIcon.equals(Object)boolean
android.view.ScaleGestureDetector.onScale(android.view.ScaleGestureDetector)boolean
android.view.ScaleGestureDetector.onScaleBegin(android.view.ScaleGestureDetector)boolean
android.view.ScaleGestureDetector.onScaleEnd(android.view.ScaleGestureDetector)void
android.view.ScaleGestureDetector.onTouchEvent(android.view.MotionEvent)boolean
android.view.ScaleGestureDetector.setQuickScaleEnabled(boolean)void
android.view.ScaleGestureDetector.isQuickScaleEnabled)boolean
android.view.ScaleGestureDetector.setStylusScaleEnabled(boolean)void
android.view.ScaleGestureDetector.isStylusScaleEnabled)boolean
android.view.ScaleGestureDetector.isInProgress)boolean
android.view.ScaleGestureDetector.getFocusX)float
android.view.ScaleGestureDetector.getFocusY)float
android.view.ScaleGestureDetector.getCurrentSpan)float
android.view.ScaleGestureDetector.getCurrentSpanX)float
android.view.ScaleGestureDetector.getCurrentSpanY)float
android.view.ScaleGestureDetector.getPreviousSpan)float
android.view.ScaleGestureDetector.getPreviousSpanX)float
android.view.ScaleGestureDetector.getPreviousSpanY)float
android.view.ScaleGestureDetector.getScaleFactor)float
android.view.ScaleGestureDetector.getTimeDelta)long
android.view.ScaleGestureDetector.getEventTime)long
android.view.SearchEvent.getInputDevice)android.view.InputDevice
android.view.SoundEffectConstants.getContantForFocusDirection(int)int
android.view.Surface.finalize)void
android.view.Surface.release)void
android.view.Surface.isValid)boolean
android.view.Surface.lockCanvas(Rect)Canvas
android.view.Surface.unlockCanvasAndPost(Canvas)void
android.view.Surface.lockHardwareCanvas)Canvas
android.view.Surface.unlockCanvas(Canvas)void
android.view.Surface.describeContents)int
android.view.Surface.readFromParcel(android.os.Parcel)void
android.view.Surface.writeToParcel(android.os.Parcel,int)void
android.view.Surface.toString)String
android.view.SurfaceControl.apply)void
android.view.SurfaceControl.close)void
android.view.SurfaceControl.setVisibility(android.view.SurfaceControl,boolean)android.view.SurfaceControl.Transaction
android.view.SurfaceControl.setBufferSize(android.view.SurfaceControl,int,int)android.view.SurfaceControl.Transaction
android.view.SurfaceControl.setLayer(android.view.SurfaceControl,int)android.view.SurfaceControl.Transaction
android.view.SurfaceControl.setAlpha(android.view.SurfaceControl,float)android.view.SurfaceControl.Transaction
android.view.SurfaceControl.setGeometry(android.view.SurfaceControl,android.graphics.Rect,android.graphics.Rect,int)android.view.SurfaceControl.Transaction
android.view.SurfaceControl.reparent(android.view.SurfaceControl,android.view.SurfaceControl)android.view.SurfaceControl.Transaction
android.view.SurfaceControl.merge(android.view.SurfaceControl.Transaction)android.view.SurfaceControl.Transaction
android.view.SurfaceControl.build)android.view.SurfaceControl
android.view.SurfaceControl.setName(String)android.view.SurfaceControl.Builder
android.view.SurfaceControl.setBufferSize(int,int)android.view.SurfaceControl.Builder
android.view.SurfaceControl.setFormat(int)android.view.SurfaceControl.Builder
android.view.SurfaceControl.setOpaque(boolean)android.view.SurfaceControl.Builder
android.view.SurfaceControl.setParent(android.view.SurfaceControl)android.view.SurfaceControl.Builder
android.view.SurfaceControl.readFromParcel(android.os.Parcel)void
android.view.SurfaceControl.describeContents)int
android.view.SurfaceControl.writeToParcel(android.os.Parcel,int)void
android.view.SurfaceControl.finalize)void
android.view.SurfaceControl.release)void
android.view.SurfaceControl.isValid)boolean
android.view.SurfaceControl.toString)String
android.view.SurfaceHolder.surfaceRedrawNeededAsync(android.view.SurfaceHolder,Runnable)void
android.view.SurfaceHolder.lockHardwareCanvas)android.graphics.Canvas
android.view.SurfaceView.getHolder)android.view.SurfaceHolder
android.view.SurfaceView.onAttachedToWindow)void
android.view.SurfaceView.onWindowVisibilityChanged(int)void
android.view.SurfaceView.setVisibility(int)void
android.view.SurfaceView.onDetachedFromWindow)void
android.view.SurfaceView.onMeasure(int,int)void
android.view.SurfaceView.gatherTransparentRegion(android.graphics.Region)boolean
android.view.SurfaceView.draw(android.graphics.Canvas)void
android.view.SurfaceView.dispatchDraw(android.graphics.Canvas)void
android.view.SurfaceView.setZOrderMediaOverlay(boolean)void
android.view.SurfaceView.setZOrderOnTop(boolean)void
android.view.SurfaceView.setSecure(boolean)void
android.view.SurfaceView.getSurfaceControl)android.view.SurfaceControl
android.view.TextureView.isOpaque)boolean
android.view.TextureView.setOpaque(boolean)void
android.view.TextureView.onAttachedToWindow)void
android.view.TextureView.setLayerType(int,Paint)void
android.view.TextureView.setLayerPaint(Paint)void
android.view.TextureView.getLayerType)int
android.view.TextureView.buildLayer)void
android.view.TextureView.setForeground(android.graphics.drawable.Drawable)void
android.view.TextureView.setBackgroundDrawable(android.graphics.drawable.Drawable)void
android.view.TextureView.draw(Canvas)void
android.view.TextureView.onDraw(Canvas)void
android.view.TextureView.onSizeChanged(int,int,int,int)void
android.view.TextureView.onVisibilityChanged(android.view.View,int)void
android.view.TextureView.setTransform(Matrix)void
android.view.TextureView.getTransform(Matrix)Matrix
android.view.TextureView.getBitmap)Bitmap
android.view.TextureView.getBitmap(int,int)Bitmap
android.view.TextureView.getBitmap(Bitmap)Bitmap
android.view.TextureView.isAvailable)boolean
android.view.TextureView.lockCanvas)Canvas
android.view.TextureView.lockCanvas(Rect)Canvas
android.view.TextureView.unlockCanvasAndPost(Canvas)void
android.view.TextureView.getSurfaceTexture)SurfaceTexture
android.view.TextureView.setSurfaceTexture(SurfaceTexture)void
android.view.TextureView.getSurfaceTextureListener)android.view.TextureView.SurfaceTextureListener
android.view.TextureView.setSurfaceTextureListener(android.view.TextureView.SurfaceTextureListener)void
android.view.TouchDelegate.onTouchEvent(android.view.MotionEvent)boolean
android.view.TouchDelegate.onTouchExplorationHoverEvent(android.view.MotionEvent)boolean
android.view.VelocityTracker.obtain)android.view.VelocityTracker
android.view.VelocityTracker.recycle)void
android.view.VelocityTracker.finalize)void
android.view.VelocityTracker.clear)void
android.view.VelocityTracker.addMovement(android.view.MotionEvent)void
android.view.VelocityTracker.computeCurrentVelocity(int)void
android.view.VelocityTracker.computeCurrentVelocity(int,float)void
android.view.VelocityTracker.getXVelocity)float
android.view.VelocityTracker.getYVelocity)float
android.view.VelocityTracker.getXVelocity(int)float
android.view.VelocityTracker.getYVelocity(int)float
android.view.View.makeMeasureSpec(int,int)int
android.view.View.getMode(int)int
android.view.View.getSize(int)int
android.view.View.toString(int)String
android.view.View.getView)android.view.View
android.view.View.onProvideShadowMetrics(Point,Point)void
android.view.View.onDrawShadow(Canvas)void
android.view.View.writeToParcel(Parcel,int)void
android.view.View.sendAccessibilityEvent(android.view.View,int)void
android.view.View.performAccessibilityAction(android.view.View,int,Bundle)boolean
android.view.View.sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)void
android.view.View.dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)boolean
android.view.View.onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)void
android.view.View.onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)void
android.view.View.onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)void
android.view.View.addExtraDataToAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo,String,Bundle)void
android.view.View.onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)boolean
android.view.View.getAccessibilityNodeProvider(android.view.View)android.view.accessibility.AccessibilityNodeProvider
android.view.View.getAttributeSourceResourceMap)Map
android.view.View.getExplicitStyle)int
android.view.View.saveAttributeDataForStyleable(android.content.Context,int,AttributeSet,TypedArray,int,int)void
android.view.View.toString)String
android.view.View.getVerticalFadingEdgeLength)int
android.view.View.setFadingEdgeLength(int)void
android.view.View.getHorizontalFadingEdgeLength)int
android.view.View.getVerticalScrollbarWidth)int
android.view.View.getHorizontalScrollbarHeight)int
android.view.View.setVerticalScrollbarThumbDrawable(android.graphics.drawable.Drawable)void
android.view.View.setVerticalScrollbarTrackDrawable(android.graphics.drawable.Drawable)void
android.view.View.setHorizontalScrollbarThumbDrawable(android.graphics.drawable.Drawable)void
android.view.View.setHorizontalScrollbarTrackDrawable(android.graphics.drawable.Drawable)void
android.view.View.getVerticalScrollbarThumbDrawable)android.graphics.drawable.Drawable
android.view.View.getVerticalScrollbarTrackDrawable)android.graphics.drawable.Drawable
android.view.View.getHorizontalScrollbarThumbDrawable)android.graphics.drawable.Drawable
android.view.View.getHorizontalScrollbarTrackDrawable)android.graphics.drawable.Drawable
android.view.View.setVerticalScrollbarPosition(int)void
android.view.View.getVerticalScrollbarPosition)int
android.view.View.setScrollIndicators(int)void
android.view.View.setScrollIndicators(int,int)void
android.view.View.getScrollIndicators)int
android.view.View.setOnScrollChangeListener(android.view.View.OnScrollChangeListener)void
android.view.View.setOnFocusChangeListener(android.view.View.OnFocusChangeListener)void
android.view.View.addOnLayoutChangeListener(android.view.View.OnLayoutChangeListener)void
android.view.View.removeOnLayoutChangeListener(android.view.View.OnLayoutChangeListener)void
android.view.View.addOnAttachStateChangeListener(android.view.View.OnAttachStateChangeListener)void
android.view.View.removeOnAttachStateChangeListener(android.view.View.OnAttachStateChangeListener)void
android.view.View.getOnFocusChangeListener)android.view.View.OnFocusChangeListener
android.view.View.setOnClickListener(android.view.View.OnClickListener)void
android.view.View.hasOnClickListeners)boolean
android.view.View.setOnLongClickListener(android.view.View.OnLongClickListener)void
android.view.View.setOnContextClickListener(android.view.View.OnContextClickListener)void
android.view.View.setOnCreateContextMenuListener(android.view.View.OnCreateContextMenuListener)void
android.view.View.performClick)boolean
android.view.View.callOnClick)boolean
android.view.View.performLongClick)boolean
android.view.View.performLongClick(float,float)boolean
android.view.View.performContextClick(float,float)boolean
android.view.View.performContextClick)boolean
android.view.View.showContextMenu)boolean
android.view.View.showContextMenu(float,float)boolean
android.view.View.startActionMode(ActionMode.Callback)android.view.ActionMode
android.view.View.startActionMode(ActionMode.Callback,int)android.view.ActionMode
android.view.View.setOnKeyListener(android.view.View.OnKeyListener)void
android.view.View.setOnTouchListener(android.view.View.OnTouchListener)void
android.view.View.setOnGenericMotionListener(android.view.View.OnGenericMotionListener)void
android.view.View.setOnHoverListener(android.view.View.OnHoverListener)void
android.view.View.setOnDragListener(android.view.View.OnDragListener)void
android.view.View.setRevealOnFocusHint(boolean)void
android.view.View.getRevealOnFocusHint)boolean
android.view.View.requestRectangleOnScreen(Rect)boolean
android.view.View.requestRectangleOnScreen(Rect,boolean)boolean
android.view.View.clearFocus)void
android.view.View.hasFocus)boolean
android.view.View.hasFocusable)boolean
android.view.View.hasExplicitFocusable)boolean
android.view.View.onFocusChanged(boolean,int,Rect)void
android.view.View.setAccessibilityPaneTitle(CharSequence)void
android.view.View.getAccessibilityPaneTitle)CharSequence
android.view.View.sendAccessibilityEvent(int)void
android.view.View.announceForAccessibility(CharSequence)void
android.view.View.sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)void
android.view.View.dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)boolean
android.view.View.onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)void
android.view.View.onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)void
android.view.View.createAccessibilityNodeInfo)android.view.accessibility.AccessibilityNodeInfo
android.view.View.onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)void
android.view.View.getAccessibilityClassName)CharSequence
android.view.View.onProvideStructure(android.view.ViewStructure)void
android.view.View.onProvideAutofillStructure(android.view.ViewStructure,int)void
android.view.View.onProvideVirtualStructure(android.view.ViewStructure)void
android.view.View.onProvideAutofillVirtualStructure(android.view.ViewStructure,int)void
android.view.View.autofill(android.view.autofill.AutofillValue)void
android.view.View.autofill(SparseArray)void
android.view.View.getAutofillId)android.view.autofill.AutofillId
android.view.View.setAutofillId(android.view.autofill.AutofillId)void
android.view.View.getAutofillType)int
android.view.View.getAutofillValue)android.view.autofill.AutofillValue
android.view.View.getImportantForAutofill)int
android.view.View.setImportantForAutofill(int)void
android.view.View.isImportantForAutofill)boolean
android.view.View.setContentCaptureSession(android.view.contentcapture.ContentCaptureSession)void
android.view.View.getContentCaptureSession)android.view.contentcapture.ContentCaptureSession
android.view.View.dispatchProvideStructure(android.view.ViewStructure)void
android.view.View.dispatchProvideAutofillStructure(android.view.ViewStructure,int)void
android.view.View.addExtraDataToAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo,String,Bundle)void
android.view.View.isVisibleToUserForAutofill(int)boolean
android.view.View.getAccessibilityDelegate)android.view.View.AccessibilityDelegate
android.view.View.setAccessibilityDelegate(android.view.View.AccessibilityDelegate)void
android.view.View.getAccessibilityNodeProvider)android.view.accessibility.AccessibilityNodeProvider
android.view.View.getContentDescription)CharSequence
android.view.View.setContentDescription(CharSequence)void
android.view.View.setAccessibilityTraversalBefore(int)void
android.view.View.getAccessibilityTraversalBefore)int
android.view.View.setAccessibilityTraversalAfter(int)void
android.view.View.getAccessibilityTraversalAfter)int
android.view.View.getLabelFor)int
android.view.View.setLabelFor(int)void
android.view.View.isFocused)boolean
android.view.View.findFocus)android.view.View
android.view.View.isScrollContainer)boolean
android.view.View.setScrollContainer(boolean)void
android.view.View.getDrawingCacheQuality)int
android.view.View.setDrawingCacheQuality(int)void
android.view.View.getKeepScreenOn)boolean
android.view.View.setKeepScreenOn(boolean)void
android.view.View.getNextFocusLeftId)int
android.view.View.setNextFocusLeftId(int)void
android.view.View.getNextFocusRightId)int
android.view.View.setNextFocusRightId(int)void
android.view.View.getNextFocusUpId)int
android.view.View.setNextFocusUpId(int)void
android.view.View.getNextFocusDownId)int
android.view.View.setNextFocusDownId(int)void
android.view.View.getNextFocusForwardId)int
android.view.View.setNextFocusForwardId(int)void
android.view.View.getNextClusterForwardId)int
android.view.View.setNextClusterForwardId(int)void
android.view.View.isShown)boolean
android.view.View.fitSystemWindows(Rect)boolean
android.view.View.onApplyWindowInsets(android.view.WindowInsets)android.view.WindowInsets
android.view.View.setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)void
android.view.View.dispatchApplyWindowInsets(android.view.WindowInsets)android.view.WindowInsets
android.view.View.setSystemGestureExclusionRects(List)void
android.view.View.getSystemGestureExclusionRects)List
android.view.View.getLocationInSurface(int)void
android.view.View.getRootWindowInsets)android.view.WindowInsets
android.view.View.computeSystemWindowInsets(android.view.WindowInsets,Rect)android.view.WindowInsets
android.view.View.setFitsSystemWindows(boolean)void
android.view.View.getFitsSystemWindows)boolean
android.view.View.requestFitSystemWindows)void
android.view.View.requestApplyInsets)void
android.view.View.getVisibility)int
android.view.View.setVisibility(int)void
android.view.View.isEnabled)boolean
android.view.View.setEnabled(boolean)void
android.view.View.setFocusable(boolean)void
android.view.View.setFocusable(int)void
android.view.View.setFocusableInTouchMode(boolean)void
android.view.View.setSoundEffectsEnabled(boolean)void
android.view.View.isSoundEffectsEnabled)boolean
android.view.View.setHapticFeedbackEnabled(boolean)void
android.view.View.isHapticFeedbackEnabled)boolean
android.view.View.setLayoutDirection(int)void
android.view.View.getLayoutDirection)int
android.view.View.hasTransientState)boolean
android.view.View.setHasTransientState(boolean)void
android.view.View.isAttachedToWindow)boolean
android.view.View.isLaidOut)boolean
android.view.View.setWillNotDraw(boolean)void
android.view.View.willNotDraw)boolean
android.view.View.setWillNotCacheDrawing(boolean)void
android.view.View.willNotCacheDrawing)boolean
android.view.View.isClickable)boolean
android.view.View.setClickable(boolean)void
android.view.View.isLongClickable)boolean
android.view.View.setLongClickable(boolean)void
android.view.View.isContextClickable)boolean
android.view.View.setContextClickable(boolean)void
android.view.View.setPressed(boolean)void
android.view.View.dispatchSetPressed(boolean)void
android.view.View.isPressed)boolean
android.view.View.isSaveEnabled)boolean
android.view.View.setSaveEnabled(boolean)void
android.view.View.getFilterTouchesWhenObscured)boolean
android.view.View.setFilterTouchesWhenObscured(boolean)void
android.view.View.isSaveFromParentEnabled)boolean
android.view.View.setSaveFromParentEnabled(boolean)void
android.view.View.isFocusable)boolean
android.view.View.getFocusable)int
android.view.View.isFocusableInTouchMode)boolean
android.view.View.isScreenReaderFocusable)boolean
android.view.View.setScreenReaderFocusable(boolean)void
android.view.View.isAccessibilityHeading)boolean
android.view.View.setAccessibilityHeading(boolean)void
android.view.View.focusSearch(int)android.view.View
android.view.View.isKeyboardNavigationCluster)boolean
android.view.View.setKeyboardNavigationCluster(boolean)void
android.view.View.isFocusedByDefault)boolean
android.view.View.setFocusedByDefault(boolean)void
android.view.View.keyboardNavigationClusterSearch(android.view.View,int)android.view.View
android.view.View.dispatchUnhandledMove(android.view.View,int)boolean
android.view.View.setDefaultFocusHighlightEnabled(boolean)void
android.view.View.getDefaultFocusHighlightEnabled)boolean
android.view.View.getFocusables(int)ArrayList
android.view.View.addFocusables(ArrayList,int)void
android.view.View.addFocusables(ArrayList,int,int)void
android.view.View.addKeyboardNavigationClusters(Collection,int)void
android.view.View.findViewsWithText(ArrayList,CharSequence,int)void
android.view.View.getTouchables)ArrayList
android.view.View.addTouchables(ArrayList)void
android.view.View.isAccessibilityFocused)boolean
android.view.View.requestFocus)boolean
android.view.View.restoreDefaultFocus)boolean
android.view.View.requestFocus(int)boolean
android.view.View.requestFocus(int,Rect)boolean
android.view.View.requestFocusFromTouch)boolean
android.view.View.getImportantForAccessibility)int
android.view.View.setAccessibilityLiveRegion(int)void
android.view.View.getAccessibilityLiveRegion)int
android.view.View.setImportantForAccessibility(int)void
android.view.View.isImportantForAccessibility)boolean
android.view.View.getParentForAccessibility)android.view.ViewParent
android.view.View.addChildrenForAccessibility(ArrayList)void
android.view.View.setTransitionVisibility(int)void
android.view.View.dispatchNestedPrePerformAccessibilityAction(int,Bundle)boolean
android.view.View.performAccessibilityAction(int,Bundle)boolean
android.view.View.isTemporarilyDetached)boolean
android.view.View.dispatchStartTemporaryDetach)void
android.view.View.onStartTemporaryDetach)void
android.view.View.dispatchFinishTemporaryDetach)void
android.view.View.onFinishTemporaryDetach)void
android.view.View.dispatchKeyEventPreIme(android.view.KeyEvent)boolean
android.view.View.dispatchKeyEvent(android.view.KeyEvent)boolean
android.view.View.dispatchKeyShortcutEvent(android.view.KeyEvent)boolean
android.view.View.dispatchTouchEvent(android.view.MotionEvent)boolean
android.view.View.onFilterTouchEventForSecurity(android.view.MotionEvent)boolean
android.view.View.dispatchTrackballEvent(android.view.MotionEvent)boolean
android.view.View.dispatchCapturedPointerEvent(android.view.MotionEvent)boolean
android.view.View.dispatchGenericMotionEvent(android.view.MotionEvent)boolean
android.view.View.dispatchHoverEvent(android.view.MotionEvent)boolean
android.view.View.dispatchGenericPointerEvent(android.view.MotionEvent)boolean
android.view.View.dispatchGenericFocusedEvent(android.view.MotionEvent)boolean
android.view.View.dispatchWindowFocusChanged(boolean)void
android.view.View.onWindowFocusChanged(boolean)void
android.view.View.hasWindowFocus)boolean
android.view.View.dispatchVisibilityChanged(android.view.View,int)void
android.view.View.onVisibilityChanged(android.view.View,int)void
android.view.View.dispatchDisplayHint(int)void
android.view.View.onDisplayHint(int)void
android.view.View.dispatchWindowVisibilityChanged(int)void
android.view.View.onWindowVisibilityChanged(int)void
android.view.View.onVisibilityAggregated(boolean)void
android.view.View.getWindowVisibility)int
android.view.View.getWindowVisibleDisplayFrame(Rect)void
android.view.View.dispatchConfigurationChanged(Configuration)void
android.view.View.onConfigurationChanged(Configuration)void
android.view.View.isInTouchMode)boolean
android.view.View.getContext)android.content.Context
android.view.View.onKeyPreIme(int,android.view.KeyEvent)boolean
android.view.View.onKeyDown(int,android.view.KeyEvent)boolean
android.view.View.onKeyLongPress(int,android.view.KeyEvent)boolean
android.view.View.onKeyUp(int,android.view.KeyEvent)boolean
android.view.View.onKeyMultiple(int,int,android.view.KeyEvent)boolean
android.view.View.onKeyShortcut(int,android.view.KeyEvent)boolean
android.view.View.onCheckIsTextEditor)boolean
android.view.View.onCreateInputConnection(android.view.inputmethod.EditorInfo)android.view.inputmethod.InputConnection
android.view.View.checkInputConnectionProxy(android.view.View)boolean
android.view.View.createContextMenu(android.view.ContextMenu)void
android.view.View.onCreateContextMenu(android.view.ContextMenu)void
android.view.View.onTrackballEvent(android.view.MotionEvent)boolean
android.view.View.onGenericMotionEvent(android.view.MotionEvent)boolean
android.view.View.onHoverEvent(android.view.MotionEvent)boolean
android.view.View.isHovered)boolean
android.view.View.setHovered(boolean)void
android.view.View.onHoverChanged(boolean)void
android.view.View.onTouchEvent(android.view.MotionEvent)boolean
android.view.View.cancelLongPress)void
android.view.View.setTouchDelegate(android.view.TouchDelegate)void
android.view.View.getTouchDelegate)android.view.TouchDelegate
android.view.View.requestUnbufferedDispatch(android.view.MotionEvent)void
android.view.View.bringToFront)void
android.view.View.onScrollChanged(int,int,int,int)void
android.view.View.onSizeChanged(int,int,int,int)void
android.view.View.dispatchDraw(Canvas)void
android.view.View.getParent)android.view.ViewParent
android.view.View.setScrollX(int)void
android.view.View.setScrollY(int)void
android.view.View.getScrollX)int
android.view.View.getScrollY)int
android.view.View.getWidth)int
android.view.View.getHeight)int
android.view.View.getDrawingRect(Rect)void
android.view.View.getMeasuredWidth)int
android.view.View.getMeasuredWidthAndState)int
android.view.View.getMeasuredHeight)int
android.view.View.getMeasuredHeightAndState)int
android.view.View.getMeasuredState)int
android.view.View.getMatrix)Matrix
android.view.View.getCameraDistance)float
android.view.View.setCameraDistance(float)void
android.view.View.getRotation)float
android.view.View.setRotation(float)void
android.view.View.getRotationY)float
android.view.View.setRotationY(float)void
android.view.View.getRotationX)float
android.view.View.setRotationX(float)void
android.view.View.getScaleX)float
android.view.View.setScaleX(float)void
android.view.View.getScaleY)float
android.view.View.setScaleY(float)void
android.view.View.getPivotX)float
android.view.View.setPivotX(float)void
android.view.View.getPivotY)float
android.view.View.setPivotY(float)void
android.view.View.isPivotSet)boolean
android.view.View.resetPivot)void
android.view.View.getAlpha)float
android.view.View.forceHasOverlappingRendering(boolean)void
android.view.View.getHasOverlappingRendering)boolean
android.view.View.hasOverlappingRendering)boolean
android.view.View.setAlpha(float)void
android.view.View.setTransitionAlpha(float)void
android.view.View.getTransitionAlpha)float
android.view.View.setForceDarkAllowed(boolean)void
android.view.View.isForceDarkAllowed)boolean
android.view.View.getTop)int
android.view.View.setTop(int)void
android.view.View.getBottom)int
android.view.View.isDirty)boolean
android.view.View.setBottom(int)void
android.view.View.getLeft)int
android.view.View.setLeft(int)void
android.view.View.getRight)int
android.view.View.setRight(int)void
android.view.View.getX)float
android.view.View.setX(float)void
android.view.View.getY)float
android.view.View.setY(float)void
android.view.View.getZ)float
android.view.View.setZ(float)void
android.view.View.getElevation)float
android.view.View.setElevation(float)void
android.view.View.getTranslationX)float
android.view.View.setTranslationX(float)void
android.view.View.getTranslationY)float
android.view.View.setTranslationY(float)void
android.view.View.getTranslationZ)float
android.view.View.setTranslationZ(float)void
android.view.View.setAnimationMatrix(Matrix)void
android.view.View.getAnimationMatrix)Matrix
android.view.View.getStateListAnimator)android.animation.StateListAnimator
android.view.View.setStateListAnimator(android.animation.StateListAnimator)void
android.view.View.getClipToOutline)boolean
android.view.View.setClipToOutline(boolean)void
android.view.View.setOutlineProvider(android.view.ViewOutlineProvider)void
android.view.View.getOutlineProvider)android.view.ViewOutlineProvider
android.view.View.invalidateOutline)void
android.view.View.setOutlineSpotShadowColor(int)void
android.view.View.getOutlineSpotShadowColor)int
android.view.View.setOutlineAmbientShadowColor(int)void
android.view.View.getOutlineAmbientShadowColor)int
android.view.View.getHitRect(Rect)void
android.view.View.getFocusedRect(Rect)void
android.view.View.getGlobalVisibleRect(Rect,Point)boolean
android.view.View.getGlobalVisibleRect(Rect)boolean
android.view.View.getLocalVisibleRect(Rect)boolean
android.view.View.offsetTopAndBottom(int)void
android.view.View.offsetLeftAndRight(int)void
android.view.View.setLayoutParams(ViewGroup.LayoutParams)void
android.view.View.scrollTo(int,int)void
android.view.View.scrollBy(int,int)void
android.view.View.awakenScrollBars)boolean
android.view.View.awakenScrollBars(int)boolean
android.view.View.awakenScrollBars(int,boolean)boolean
android.view.View.invalidate(Rect)void
android.view.View.invalidate(int,int,int,int)void
android.view.View.invalidate)void
android.view.View.isOpaque)boolean
android.view.View.getHandler)Handler
android.view.View.post(Runnable)boolean
android.view.View.postDelayed(Runnable,long)boolean
android.view.View.postOnAnimation(Runnable)void
android.view.View.postOnAnimationDelayed(Runnable,long)void
android.view.View.removeCallbacks(Runnable)boolean
android.view.View.postInvalidate)void
android.view.View.postInvalidate(int,int,int,int)void
android.view.View.postInvalidateDelayed(long)void
android.view.View.postInvalidateDelayed(long,int,int,int,int)void
android.view.View.postInvalidateOnAnimation)void
android.view.View.postInvalidateOnAnimation(int,int,int,int)void
android.view.View.computeScroll)void
android.view.View.isHorizontalFadingEdgeEnabled)boolean
android.view.View.setHorizontalFadingEdgeEnabled(boolean)void
android.view.View.isVerticalFadingEdgeEnabled)boolean
android.view.View.setVerticalFadingEdgeEnabled(boolean)void
android.view.View.getTopFadingEdgeStrength)float
android.view.View.getBottomFadingEdgeStrength)float
android.view.View.getLeftFadingEdgeStrength)float
android.view.View.getRightFadingEdgeStrength)float
android.view.View.isHorizontalScrollBarEnabled)boolean
android.view.View.setHorizontalScrollBarEnabled(boolean)void
android.view.View.isVerticalScrollBarEnabled)boolean
android.view.View.setVerticalScrollBarEnabled(boolean)void
android.view.View.setScrollbarFadingEnabled(boolean)void
android.view.View.isScrollbarFadingEnabled)boolean
android.view.View.getScrollBarDefaultDelayBeforeFade)int
android.view.View.setScrollBarDefaultDelayBeforeFade(int)void
android.view.View.getScrollBarFadeDuration)int
android.view.View.setScrollBarFadeDuration(int)void
android.view.View.getScrollBarSize)int
android.view.View.setScrollBarSize(int)void
android.view.View.setScrollBarStyle(int)void
android.view.View.getScrollBarStyle)int
android.view.View.computeHorizontalScrollRange)int
android.view.View.computeHorizontalScrollOffset)int
android.view.View.computeHorizontalScrollExtent)int
android.view.View.computeVerticalScrollRange)int
android.view.View.computeVerticalScrollOffset)int
android.view.View.computeVerticalScrollExtent)int
android.view.View.canScrollHorizontally(int)boolean
android.view.View.canScrollVertically(int)boolean
android.view.View.onDrawScrollBars(Canvas)void
android.view.View.onDraw(Canvas)void
android.view.View.onAttachedToWindow)void
android.view.View.onScreenStateChanged(int)void
android.view.View.onRtlPropertiesChanged(int)void
android.view.View.canResolveLayoutDirection)boolean
android.view.View.isLayoutDirectionResolved)boolean
android.view.View.onDetachedFromWindow)void
android.view.View.getWindowAttachCount)int
android.view.View.getWindowToken)IBinder
android.view.View.getWindowId)android.view.WindowId
android.view.View.getApplicationWindowToken)IBinder
android.view.View.getDisplay)android.view.Display
android.view.View.cancelPendingInputEvents)void
android.view.View.onCancelPendingInputEvents)void
android.view.View.saveHierarchyState(SparseArray)void
android.view.View.dispatchSaveInstanceState(SparseArray)void
android.view.View.onSaveInstanceState)Parcelable
android.view.View.restoreHierarchyState(SparseArray)void
android.view.View.dispatchRestoreInstanceState(SparseArray)void
android.view.View.onRestoreInstanceState(Parcelable)void
android.view.View.getDrawingTime)long
android.view.View.setDuplicateParentStateEnabled(boolean)void
android.view.View.isDuplicateParentStateEnabled)boolean
android.view.View.setLayerType(int,Paint)void
android.view.View.setLayerPaint(Paint)void
android.view.View.getLayerType)int
android.view.View.buildLayer)void
android.view.View.setDrawingCacheEnabled(boolean)void
android.view.View.isDrawingCacheEnabled)boolean
android.view.View.getDrawingCache)Bitmap
android.view.View.getDrawingCache(boolean)Bitmap
android.view.View.destroyDrawingCache)void
android.view.View.setDrawingCacheBackgroundColor(int)void
android.view.View.getDrawingCacheBackgroundColor)int
android.view.View.buildDrawingCache)void
android.view.View.buildDrawingCache(boolean)void
android.view.View.isInEditMode)boolean
android.view.View.isPaddingOffsetRequired)boolean
android.view.View.getLeftPaddingOffset)int
android.view.View.getRightPaddingOffset)int
android.view.View.getTopPaddingOffset)int
android.view.View.getBottomPaddingOffset)int
android.view.View.isHardwareAccelerated)boolean
android.view.View.setClipBounds(Rect)void
android.view.View.getClipBounds)Rect
android.view.View.getClipBounds(Rect)boolean
android.view.View.draw(Canvas)void
android.view.View.getOverlay)android.view.ViewOverlay
android.view.View.getSolidColor)int
android.view.View.isLayoutRequested)boolean
android.view.View.layout(int,int,int,int)void
android.view.View.onLayout(boolean,int,int,int,int)void
android.view.View.setLeftTopRightBottom(int,int,int,int)void
android.view.View.onFinishInflate)void
android.view.View.getResources)Resources
android.view.View.invalidateDrawable(android.graphics.drawable.Drawable)void
android.view.View.scheduleDrawable(android.graphics.drawable.Drawable,Runnable,long)void
android.view.View.unscheduleDrawable(android.graphics.drawable.Drawable,Runnable)void
android.view.View.unscheduleDrawable(android.graphics.drawable.Drawable)void
android.view.View.verifyDrawable(android.graphics.drawable.Drawable)boolean
android.view.View.drawableStateChanged)void
android.view.View.drawableHotspotChanged(float,float)void
android.view.View.dispatchDrawableHotspotChanged(float,float)void
android.view.View.refreshDrawableState)void
android.view.View.jumpDrawablesToCurrentState)void
android.view.View.setBackgroundColor(int)void
android.view.View.setBackgroundResource(int)void
android.view.View.setBackground(android.graphics.drawable.Drawable)void
android.view.View.setBackgroundDrawable(android.graphics.drawable.Drawable)void
android.view.View.getBackground)android.graphics.drawable.Drawable
android.view.View.setBackgroundTintList(ColorStateList)void
android.view.View.getBackgroundTintList)ColorStateList
android.view.View.setBackgroundTintMode(android.graphics.PorterDuff.Mode)void
android.view.View.setBackgroundTintBlendMode(BlendMode)void
android.view.View.getBackgroundTintBlendMode)BlendMode
android.view.View.getForeground)android.graphics.drawable.Drawable
android.view.View.setForeground(android.graphics.drawable.Drawable)void
android.view.View.getForegroundGravity)int
android.view.View.setForegroundGravity(int)void
android.view.View.setForegroundTintList(ColorStateList)void
android.view.View.getForegroundTintList)ColorStateList
android.view.View.setForegroundTintMode(android.graphics.PorterDuff.Mode)void
android.view.View.setForegroundTintBlendMode(BlendMode)void
android.view.View.getForegroundTintBlendMode)BlendMode
android.view.View.onDrawForeground(Canvas)void
android.view.View.setPadding(int,int,int,int)void
android.view.View.setPaddingRelative(int,int,int,int)void
android.view.View.getSourceLayoutResId)int
android.view.View.getPaddingTop)int
android.view.View.getPaddingBottom)int
android.view.View.getPaddingLeft)int
android.view.View.getPaddingStart)int
android.view.View.getPaddingRight)int
android.view.View.getPaddingEnd)int
android.view.View.isPaddingRelative)boolean
android.view.View.setSelected(boolean)void
android.view.View.dispatchSetSelected(boolean)void
android.view.View.isSelected)boolean
android.view.View.setActivated(boolean)void
android.view.View.dispatchSetActivated(boolean)void
android.view.View.isActivated)boolean
android.view.View.getViewTreeObserver)android.view.ViewTreeObserver
android.view.View.getRootView)android.view.View
android.view.View.transformMatrixToGlobal(Matrix)void
android.view.View.transformMatrixToLocal(Matrix)void
android.view.View.getLocationOnScreen(int)void
android.view.View.getLocationInWindow(int)void
android.view.View.findViewById(int)android.view.View
android.view.View.requireViewById(int)android.view.View
android.view.View.findViewWithTag(Object)android.view.View
android.view.View.setId(int)void
android.view.View.getId)int
android.view.View.getUniqueDrawingId)long
android.view.View.getTag)Object
android.view.View.setTag(Object)void
android.view.View.getTag(int)Object
android.view.View.setTag(int,Object)void
android.view.View.getBaseline)int
android.view.View.isInLayout)boolean
android.view.View.requestLayout)void
android.view.View.forceLayout)void
android.view.View.measure(int,int)void
android.view.View.onMeasure(int,int)void
android.view.View.setMeasuredDimension(int,int)void
android.view.View.combineMeasuredStates(int,int)int
android.view.View.resolveSize(int,int)int
android.view.View.resolveSizeAndState(int,int,int)int
android.view.View.getDefaultSize(int,int)int
android.view.View.getSuggestedMinimumHeight)int
android.view.View.getSuggestedMinimumWidth)int
android.view.View.getMinimumHeight)int
android.view.View.setMinimumHeight(int)void
android.view.View.getMinimumWidth)int
android.view.View.setMinimumWidth(int)void
android.view.View.getAnimation)android.view.animation.Animation
android.view.View.startAnimation(android.view.animation.Animation)void
android.view.View.clearAnimation)void
android.view.View.setAnimation(android.view.animation.Animation)void
android.view.View.onAnimationStart)void
android.view.View.onAnimationEnd)void
android.view.View.onSetAlpha(int)boolean
android.view.View.playSoundEffect(int)void
android.view.View.performHapticFeedback(int)boolean
android.view.View.performHapticFeedback(int,int)boolean
android.view.View.setSystemUiVisibility(int)void
android.view.View.getSystemUiVisibility)int
android.view.View.getWindowSystemUiVisibility)int
android.view.View.onWindowSystemUiVisibilityChanged(int)void
android.view.View.dispatchWindowSystemUiVisiblityChanged(int)void
android.view.View.setOnSystemUiVisibilityChangeListener(android.view.View.OnSystemUiVisibilityChangeListener)void
android.view.View.dispatchSystemUiVisibilityChanged(int)void
android.view.View.startDrag(android.content.ClipData,android.view.View.DragShadowBuilder,Object,int)boolean
android.view.View.startDragAndDrop(android.content.ClipData,android.view.View.DragShadowBuilder,Object,int)boolean
android.view.View.cancelDragAndDrop)void
android.view.View.updateDragShadow(android.view.View.DragShadowBuilder)void
android.view.View.onDragEvent(android.view.DragEvent)boolean
android.view.View.dispatchDragEvent(android.view.DragEvent)boolean
android.view.View.inflate(android.content.Context,int,android.view.ViewGroup)android.view.View
android.view.View.onOverScrolled(int,int,boolean,boolean)void
android.view.View.getOverScrollMode)int
android.view.View.setOverScrollMode(int)void
android.view.View.setNestedScrollingEnabled(boolean)void
android.view.View.isNestedScrollingEnabled)boolean
android.view.View.startNestedScroll(int)boolean
android.view.View.stopNestedScroll)void
android.view.View.hasNestedScrollingParent)boolean
android.view.View.dispatchNestedScroll(int,int,int,int,int)boolean
android.view.View.dispatchNestedPreScroll(int,int,int,int)boolean
android.view.View.dispatchNestedFling(float,float,boolean)boolean
android.view.View.dispatchNestedPreFling(float,float)boolean
android.view.View.setTextDirection(int)void
android.view.View.getTextDirection)int
android.view.View.canResolveTextDirection)boolean
android.view.View.isTextDirectionResolved)boolean
android.view.View.setTextAlignment(int)void
android.view.View.getTextAlignment)int
android.view.View.canResolveTextAlignment)boolean
android.view.View.isTextAlignmentResolved)boolean
android.view.View.generateViewId)int
android.view.View.onResolvePointerIcon(android.view.MotionEvent,int)android.view.PointerIcon
android.view.View.setPointerIcon(android.view.PointerIcon)void
android.view.View.getPointerIcon)android.view.PointerIcon
android.view.View.hasPointerCapture)boolean
android.view.View.requestPointerCapture)void
android.view.View.releasePointerCapture)void
android.view.View.onPointerCaptureChange(boolean)void
android.view.View.dispatchPointerCaptureChanged(boolean)void
android.view.View.onCapturedPointerEvent(android.view.MotionEvent)boolean
android.view.View.setOnCapturedPointerListener(android.view.View.OnCapturedPointerListener)void
android.view.View.animate)android.view.ViewPropertyAnimator
android.view.View.setTransitionName(String)void
android.view.View.getTransitionName)String
android.view.View.setTooltipText(CharSequence)void
android.view.View.getTooltipText)CharSequence
android.view.View.addOnUnhandledKeyEventListener(android.view.View.OnUnhandledKeyEventListener)void
android.view.View.removeOnUnhandledKeyEventListener(android.view.View.OnUnhandledKeyEventListener)void
android.view.ViewAnimationUtils.createCircularReveal(android.view.View,int,int,float,float)android.animation.Animator
android.view.ViewConfiguration.get(android.content.Context)android.view.ViewConfiguration
android.view.ViewConfiguration.getScrollBarSize)int
android.view.ViewConfiguration.getScaledScrollBarSize)int
android.view.ViewConfiguration.getScrollBarFadeDuration)int
android.view.ViewConfiguration.getScrollDefaultDelay)int
android.view.ViewConfiguration.getFadingEdgeLength)int
android.view.ViewConfiguration.getScaledFadingEdgeLength)int
android.view.ViewConfiguration.getPressedStateDuration)int
android.view.ViewConfiguration.getLongPressTimeout)int
android.view.ViewConfiguration.getKeyRepeatTimeout)int
android.view.ViewConfiguration.getKeyRepeatDelay)int
android.view.ViewConfiguration.getTapTimeout)int
android.view.ViewConfiguration.getJumpTapTimeout)int
android.view.ViewConfiguration.getDoubleTapTimeout)int
android.view.ViewConfiguration.getEdgeSlop)int
android.view.ViewConfiguration.getScaledEdgeSlop)int
android.view.ViewConfiguration.getTouchSlop)int
android.view.ViewConfiguration.getScaledTouchSlop)int
android.view.ViewConfiguration.getScaledHoverSlop)int
android.view.ViewConfiguration.getScaledPagingTouchSlop)int
android.view.ViewConfiguration.getScaledDoubleTapSlop)int
android.view.ViewConfiguration.getWindowTouchSlop)int
android.view.ViewConfiguration.getScaledWindowTouchSlop)int
android.view.ViewConfiguration.getMinimumFlingVelocity)int
android.view.ViewConfiguration.getScaledMinimumFlingVelocity)int
android.view.ViewConfiguration.getMaximumFlingVelocity)int
android.view.ViewConfiguration.getScaledMaximumFlingVelocity)int
android.view.ViewConfiguration.getScaledHorizontalScrollFactor)float
android.view.ViewConfiguration.getScaledVerticalScrollFactor)float
android.view.ViewConfiguration.getMaximumDrawingCacheSize)int
android.view.ViewConfiguration.getScaledMaximumDrawingCacheSize)int
android.view.ViewConfiguration.getScaledOverscrollDistance)int
android.view.ViewConfiguration.getScaledOverflingDistance)int
android.view.ViewConfiguration.getZoomControlsTimeout)long
android.view.ViewConfiguration.getGlobalActionKeyTimeout)long
android.view.ViewConfiguration.getScrollFriction)float
android.view.ViewConfiguration.getDefaultActionModeHideDuration)long
android.view.ViewConfiguration.getAmbiguousGestureMultiplier)float
android.view.ViewConfiguration.hasPermanentMenuKey)boolean
android.view.ViewConfiguration.shouldShowMenuShortcutsWhenKeyboardPresent)boolean
android.view.ViewConfiguration.getScaledMinimumScalingSpan)int
android.view.ViewDebug.valueOf(String)RecyclerTraceType
android.view.ViewDebug.valueOf(String)HierarchyTraceType
android.view.ViewDebug.startRecyclerTracing(String,android.view.View)void
android.view.ViewDebug.stopRecyclerTracing)void
android.view.ViewDebug.trace(android.view.View,HierarchyTraceType)void
android.view.ViewDebug.startHierarchyTracing(String,android.view.View)void
android.view.ViewDebug.stopHierarchyTracing)void
android.view.ViewDebug.dumpCapturedView(String,Object)void
android.view.ViewGroup.setMargins(int,int,int,int)void
android.view.ViewGroup.setMarginStart(int)void
android.view.ViewGroup.getMarginStart)int
android.view.ViewGroup.setMarginEnd(int)void
android.view.ViewGroup.getMarginEnd)int
android.view.ViewGroup.isMarginRelative)boolean
android.view.ViewGroup.setLayoutDirection(int)void
android.view.ViewGroup.getLayoutDirection)int
android.view.ViewGroup.resolveLayoutDirection(int)void
android.view.ViewGroup.setBaseAttributes(android.content.res.TypedArray,int,int)void
android.view.ViewGroup.resolveLayoutDirection(int)void
android.view.ViewGroup.getDescendantFocusability)int
android.view.ViewGroup.setDescendantFocusability(int)void
android.view.ViewGroup.requestChildFocus(android.view.View,android.view.View)void
android.view.ViewGroup.focusableViewAvailable(android.view.View)void
android.view.ViewGroup.showContextMenuForChild(android.view.View)boolean
android.view.ViewGroup.showContextMenuForChild(android.view.View,float,float)boolean
android.view.ViewGroup.startActionModeForChild(android.view.View,ActionMode.Callback)android.view.ActionMode
android.view.ViewGroup.startActionModeForChild(android.view.View,ActionMode.Callback,int)android.view.ActionMode
android.view.ViewGroup.focusSearch(android.view.View,int)android.view.View
android.view.ViewGroup.requestChildRectangleOnScreen(android.view.View,Rect,boolean)boolean
android.view.ViewGroup.requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)boolean
android.view.ViewGroup.onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)boolean
android.view.ViewGroup.childHasTransientStateChanged(android.view.View,boolean)void
android.view.ViewGroup.hasTransientState)boolean
android.view.ViewGroup.dispatchUnhandledMove(android.view.View,int)boolean
android.view.ViewGroup.clearChildFocus(android.view.View)void
android.view.ViewGroup.clearFocus)void
android.view.ViewGroup.getFocusedChild)android.view.View
android.view.ViewGroup.hasFocus)boolean
android.view.ViewGroup.findFocus)android.view.View
android.view.ViewGroup.addFocusables(java.util.ArrayList,int,int)void
android.view.ViewGroup.addKeyboardNavigationClusters(java.util.Collection,int)void
android.view.ViewGroup.setTouchscreenBlocksFocus(boolean)void
android.view.ViewGroup.getTouchscreenBlocksFocus)boolean
android.view.ViewGroup.findViewsWithText(java.util.ArrayList,CharSequence,int)void
android.view.ViewGroup.dispatchWindowFocusChanged(boolean)void
android.view.ViewGroup.addTouchables(java.util.ArrayList)void
android.view.ViewGroup.dispatchDisplayHint(int)void
android.view.ViewGroup.dispatchVisibilityChanged(android.view.View,int)void
android.view.ViewGroup.dispatchWindowVisibilityChanged(int)void
android.view.ViewGroup.dispatchConfigurationChanged(android.content.res.Configuration)void
android.view.ViewGroup.recomputeViewAttributes(android.view.View)void
android.view.ViewGroup.bringChildToFront(android.view.View)void
android.view.ViewGroup.dispatchDragEvent(android.view.DragEvent)boolean
android.view.ViewGroup.dispatchWindowSystemUiVisiblityChanged(int)void
android.view.ViewGroup.dispatchSystemUiVisibilityChanged(int)void
android.view.ViewGroup.dispatchKeyEventPreIme(android.view.KeyEvent)boolean
android.view.ViewGroup.dispatchKeyEvent(android.view.KeyEvent)boolean
android.view.ViewGroup.dispatchKeyShortcutEvent(android.view.KeyEvent)boolean
android.view.ViewGroup.dispatchTrackballEvent(android.view.MotionEvent)boolean
android.view.ViewGroup.dispatchCapturedPointerEvent(android.view.MotionEvent)boolean
android.view.ViewGroup.dispatchPointerCaptureChanged(boolean)void
android.view.ViewGroup.onResolvePointerIcon(android.view.MotionEvent,int)android.view.PointerIcon
android.view.ViewGroup.dispatchHoverEvent(android.view.MotionEvent)boolean
android.view.ViewGroup.addChildrenForAccessibility(java.util.ArrayList)void
android.view.ViewGroup.onInterceptHoverEvent(android.view.MotionEvent)boolean
android.view.ViewGroup.dispatchGenericPointerEvent(android.view.MotionEvent)boolean
android.view.ViewGroup.dispatchGenericFocusedEvent(android.view.MotionEvent)boolean
android.view.ViewGroup.dispatchTouchEvent(android.view.MotionEvent)boolean
android.view.ViewGroup.setMotionEventSplittingEnabled(boolean)void
android.view.ViewGroup.isMotionEventSplittingEnabled)boolean
android.view.ViewGroup.isTransitionGroup)boolean
android.view.ViewGroup.setTransitionGroup(boolean)void
android.view.ViewGroup.requestDisallowInterceptTouchEvent(boolean)void
android.view.ViewGroup.onInterceptTouchEvent(android.view.MotionEvent)boolean
android.view.ViewGroup.requestFocus(int,Rect)boolean
android.view.ViewGroup.onRequestFocusInDescendants(int,Rect)boolean
android.view.ViewGroup.restoreDefaultFocus)boolean
android.view.ViewGroup.dispatchStartTemporaryDetach)void
android.view.ViewGroup.dispatchFinishTemporaryDetach)void
android.view.ViewGroup.dispatchProvideStructure(android.view.ViewStructure)void
android.view.ViewGroup.dispatchProvideAutofillStructure(android.view.ViewStructure,int)void
android.view.ViewGroup.getAccessibilityClassName)CharSequence
android.view.ViewGroup.notifySubtreeAccessibilityStateChanged(android.view.View,android.view.View,int)void
android.view.ViewGroup.onNestedPrePerformAccessibilityAction(android.view.View,int,android.os.Bundle)boolean
android.view.ViewGroup.dispatchSaveInstanceState(android.util.SparseArray)void
android.view.ViewGroup.dispatchFreezeSelfOnly(android.util.SparseArray)void
android.view.ViewGroup.dispatchRestoreInstanceState(android.util.SparseArray)void
android.view.ViewGroup.dispatchThawSelfOnly(android.util.SparseArray)void
android.view.ViewGroup.setChildrenDrawingCacheEnabled(boolean)void
android.view.ViewGroup.dispatchDraw(Canvas)void
android.view.ViewGroup.getOverlay)android.view.ViewGroupOverlay
android.view.ViewGroup.getChildDrawingOrder(int,int)int
android.view.ViewGroup.getChildDrawingOrder(int)int
android.view.ViewGroup.drawChild(Canvas,android.view.View,long)boolean
android.view.ViewGroup.getClipChildren)boolean
android.view.ViewGroup.setClipChildren(boolean)void
android.view.ViewGroup.setClipToPadding(boolean)void
android.view.ViewGroup.getClipToPadding)boolean
android.view.ViewGroup.dispatchSetSelected(boolean)void
android.view.ViewGroup.dispatchSetActivated(boolean)void
android.view.ViewGroup.dispatchSetPressed(boolean)void
android.view.ViewGroup.dispatchDrawableHotspotChanged(float,float)void
android.view.ViewGroup.setStaticTransformationsEnabled(boolean)void
android.view.ViewGroup.getChildStaticTransformation(android.view.View,android.view.animation.Transformation)boolean
android.view.ViewGroup.addView(android.view.View)void
android.view.ViewGroup.addView(android.view.View,int)void
android.view.ViewGroup.addView(android.view.View,int,int)void
android.view.ViewGroup.addView(android.view.View,android.view.ViewGroup.LayoutParams)void
android.view.ViewGroup.addView(android.view.View,int,android.view.ViewGroup.LayoutParams)void
android.view.ViewGroup.updateViewLayout(android.view.View,android.view.ViewGroup.LayoutParams)void
android.view.ViewGroup.checkLayoutParams(android.view.ViewGroup.LayoutParams)boolean
android.view.ViewGroup.setOnHierarchyChangeListener(android.view.ViewGroup.OnHierarchyChangeListener)void
android.view.ViewGroup.onViewAdded(android.view.View)void
android.view.ViewGroup.onViewRemoved(android.view.View)void
android.view.ViewGroup.onAttachedToWindow)void
android.view.ViewGroup.onDetachedFromWindow)void
android.view.ViewGroup.addViewInLayout(android.view.View,int,android.view.ViewGroup.LayoutParams)boolean
android.view.ViewGroup.addViewInLayout(android.view.View,int,android.view.ViewGroup.LayoutParams,boolean)boolean
android.view.ViewGroup.cleanupLayoutState(android.view.View)void
android.view.ViewGroup.attachLayoutAnimationParameters(android.view.View,android.view.ViewGroup.LayoutParams,int,int)void
android.view.ViewGroup.removeView(android.view.View)void
android.view.ViewGroup.removeViewInLayout(android.view.View)void
android.view.ViewGroup.removeViewsInLayout(int,int)void
android.view.ViewGroup.removeViewAt(int)void
android.view.ViewGroup.removeViews(int,int)void
android.view.ViewGroup.setLayoutTransition(android.animation.LayoutTransition)void
android.view.ViewGroup.getLayoutTransition)android.animation.LayoutTransition
android.view.ViewGroup.removeAllViews)void
android.view.ViewGroup.removeAllViewsInLayout)void
android.view.ViewGroup.removeDetachedView(android.view.View,boolean)void
android.view.ViewGroup.attachViewToParent(android.view.View,int,android.view.ViewGroup.LayoutParams)void
android.view.ViewGroup.detachViewFromParent(android.view.View)void
android.view.ViewGroup.detachViewFromParent(int)void
android.view.ViewGroup.detachViewsFromParent(int,int)void
android.view.ViewGroup.detachAllViewsFromParent)void
android.view.ViewGroup.onDescendantInvalidated(android.view.View,android.view.View)void
android.view.ViewGroup.invalidateChild(android.view.View,Rect)void
android.view.ViewGroup.invalidateChildInParent(int,Rect)android.view.ViewParent
android.view.ViewGroup.offsetDescendantRectToMyCoords(android.view.View,Rect)void
android.view.ViewGroup.offsetRectIntoDescendantCoords(android.view.View,Rect)void
android.view.ViewGroup.getChildVisibleRect(android.view.View,Rect,Point)boolean
android.view.ViewGroup.layout(int,int,int,int)void
android.view.ViewGroup.canAnimate)boolean
android.view.ViewGroup.startLayoutAnimation)void
android.view.ViewGroup.scheduleLayoutAnimation)void
android.view.ViewGroup.setLayoutAnimation(android.view.animation.LayoutAnimationController)void
android.view.ViewGroup.getLayoutAnimation)android.view.animation.LayoutAnimationController
android.view.ViewGroup.isAnimationCacheEnabled)boolean
android.view.ViewGroup.setAnimationCacheEnabled(boolean)void
android.view.ViewGroup.isAlwaysDrawnWithCacheEnabled)boolean
android.view.ViewGroup.setAlwaysDrawnWithCacheEnabled(boolean)void
android.view.ViewGroup.isChildrenDrawnWithCacheEnabled)boolean
android.view.ViewGroup.setChildrenDrawnWithCacheEnabled(boolean)void
android.view.ViewGroup.isChildrenDrawingOrderEnabled)boolean
android.view.ViewGroup.setChildrenDrawingOrderEnabled(boolean)void
android.view.ViewGroup.getPersistentDrawingCache)int
android.view.ViewGroup.setPersistentDrawingCache(int)void
android.view.ViewGroup.getLayoutMode)int
android.view.ViewGroup.setLayoutMode(int)void
android.view.ViewGroup.generateLayoutParams(android.util.AttributeSet)android.view.ViewGroup.LayoutParams
android.view.ViewGroup.generateLayoutParams(android.view.ViewGroup.LayoutParams)android.view.ViewGroup.LayoutParams
android.view.ViewGroup.generateDefaultLayoutParams)android.view.ViewGroup.LayoutParams
android.view.ViewGroup.debug(int)void
android.view.ViewGroup.indexOfChild(android.view.View)int
android.view.ViewGroup.getChildCount)int
android.view.ViewGroup.getChildAt(int)android.view.View
android.view.ViewGroup.measureChildren(int,int)void
android.view.ViewGroup.measureChild(android.view.View,int,int)void
android.view.ViewGroup.measureChildWithMargins(android.view.View,int,int,int,int)void
android.view.ViewGroup.getChildMeasureSpec(int,int,int)int
android.view.ViewGroup.clearDisappearingChildren)void
android.view.ViewGroup.startViewTransition(android.view.View)void
android.view.ViewGroup.endViewTransition(android.view.View)void
android.view.ViewGroup.suppressLayout(boolean)void
android.view.ViewGroup.isLayoutSuppressed)boolean
android.view.ViewGroup.gatherTransparentRegion(Region)boolean
android.view.ViewGroup.requestTransparentRegion(android.view.View)void
android.view.ViewGroup.dispatchApplyWindowInsets(android.view.WindowInsets)android.view.WindowInsets
android.view.ViewGroup.drawableStateChanged)void
android.view.ViewGroup.jumpDrawablesToCurrentState)void
android.view.ViewGroup.setAddStatesFromChildren(boolean)void
android.view.ViewGroup.addStatesFromChildren)boolean
android.view.ViewGroup.childDrawableStateChanged(android.view.View)void
android.view.ViewGroup.setLayoutAnimationListener(android.view.animation.Animation.AnimationListener)void
android.view.ViewGroup.shouldDelayChildPressedState)boolean
android.view.ViewGroup.onStartNestedScroll(android.view.View,android.view.View,int)boolean
android.view.ViewGroup.onNestedScrollAccepted(android.view.View,android.view.View,int)void
android.view.ViewGroup.onStopNestedScroll(android.view.View)void
android.view.ViewGroup.onNestedScroll(android.view.View,int,int,int,int)void
android.view.ViewGroup.onNestedPreScroll(android.view.View,int,int,int)void
android.view.ViewGroup.onNestedFling(android.view.View,float,float,boolean)boolean
android.view.ViewGroup.onNestedPreFling(android.view.View,float,float)boolean
android.view.ViewGroup.getNestedScrollAxes)int
android.view.ViewGroupOverlay.add(android.view.View)void
android.view.ViewGroupOverlay.remove(android.view.View)void
android.view.ViewOverlay.add(android.graphics.drawable.Drawable)void
android.view.ViewOverlay.remove(android.graphics.drawable.Drawable)void
android.view.ViewOverlay.clear)void
android.view.ViewParent.onDescendantInvalidated(android.view.View,android.view.View)void
android.view.ViewPropertyAnimator.setDuration(long)android.view.ViewPropertyAnimator
android.view.ViewPropertyAnimator.getDuration)long
android.view.ViewPropertyAnimator.getStartDelay)long
android.view.ViewPropertyAnimator.setStartDelay(long)android.view.ViewPropertyAnimator
android.view.ViewPropertyAnimator.setInterpolator(TimeInterpolator)android.view.ViewPropertyAnimator
android.view.ViewPropertyAnimator.getInterpolator)TimeInterpolator
android.view.ViewPropertyAnimator.setListener(android.animation.Animator.AnimatorListener)android.view.ViewPropertyAnimator
android.view.ViewPropertyAnimator.setUpdateListener(android.animation.ValueAnimator.AnimatorUpdateListener)android.view.ViewPropertyAnimator
android.view.ViewPropertyAnimator.start)void
android.view.ViewPropertyAnimator.cancel)void
android.view.ViewPropertyAnimator.x(float)android.view.ViewPropertyAnimator
android.view.ViewPropertyAnimator.xBy(float)android.view.ViewPropertyAnimator
android.view.ViewPropertyAnimator.y(float)android.view.ViewPropertyAnimator
android.view.ViewPropertyAnimator.yBy(float)android.view.ViewPropertyAnimator
android.view.ViewPropertyAnimator.z(float)android.view.ViewPropertyAnimator
android.view.ViewPropertyAnimator.zBy(float)android.view.ViewPropertyAnimator
android.view.ViewPropertyAnimator.rotation(float)android.view.ViewPropertyAnimator
android.view.ViewPropertyAnimator.rotationBy(float)android.view.ViewPropertyAnimator
android.view.ViewPropertyAnimator.rotationX(float)android.view.ViewPropertyAnimator
android.view.ViewPropertyAnimator.rotationXBy(float)android.view.ViewPropertyAnimator
android.view.ViewPropertyAnimator.rotationY(float)android.view.ViewPropertyAnimator
android.view.ViewPropertyAnimator.rotationYBy(float)android.view.ViewPropertyAnimator
android.view.ViewPropertyAnimator.translationX(float)android.view.ViewPropertyAnimator
android.view.ViewPropertyAnimator.translationXBy(float)android.view.ViewPropertyAnimator
android.view.ViewPropertyAnimator.translationY(float)android.view.ViewPropertyAnimator
android.view.ViewPropertyAnimator.translationYBy(float)android.view.ViewPropertyAnimator
android.view.ViewPropertyAnimator.translationZ(float)android.view.ViewPropertyAnimator
android.view.ViewPropertyAnimator.translationZBy(float)android.view.ViewPropertyAnimator
android.view.ViewPropertyAnimator.scaleX(float)android.view.ViewPropertyAnimator
android.view.ViewPropertyAnimator.scaleXBy(float)android.view.ViewPropertyAnimator
android.view.ViewPropertyAnimator.scaleY(float)android.view.ViewPropertyAnimator
android.view.ViewPropertyAnimator.scaleYBy(float)android.view.ViewPropertyAnimator
android.view.ViewPropertyAnimator.alpha(float)android.view.ViewPropertyAnimator
android.view.ViewPropertyAnimator.alphaBy(float)android.view.ViewPropertyAnimator
android.view.ViewPropertyAnimator.withLayer)android.view.ViewPropertyAnimator
android.view.ViewPropertyAnimator.withStartAction(Runnable)android.view.ViewPropertyAnimator
android.view.ViewPropertyAnimator.withEndAction(Runnable)android.view.ViewPropertyAnimator
android.view.ViewStructure.setTextIdEntry(String)void
android.view.ViewStructure.setImportantForAutofill(int)void
android.view.ViewStructure.setMinTextEms(int)void
android.view.ViewStructure.setMaxTextEms(int)void
android.view.ViewStructure.setMaxTextLength(int)void
android.view.ViewStub.getInflatedId)int
android.view.ViewStub.setInflatedId(int)void
android.view.ViewStub.getLayoutResource)int
android.view.ViewStub.setLayoutResource(int)void
android.view.ViewStub.setLayoutInflater(android.view.LayoutInflater)void
android.view.ViewStub.getLayoutInflater)android.view.LayoutInflater
android.view.ViewStub.onMeasure(int,int)void
android.view.ViewStub.draw(android.graphics.Canvas)void
android.view.ViewStub.dispatchDraw(android.graphics.Canvas)void
android.view.ViewStub.setVisibility(int)void
android.view.ViewStub.inflate)android.view.View
android.view.ViewStub.setOnInflateListener(android.view.ViewStub.OnInflateListener)void
android.view.ViewTreeObserver.addOnWindowAttachListener(android.view.ViewTreeObserver.OnWindowAttachListener)void
android.view.ViewTreeObserver.removeOnWindowAttachListener(android.view.ViewTreeObserver.OnWindowAttachListener)void
android.view.ViewTreeObserver.addOnWindowFocusChangeListener(android.view.ViewTreeObserver.OnWindowFocusChangeListener)void
android.view.ViewTreeObserver.removeOnWindowFocusChangeListener(android.view.ViewTreeObserver.OnWindowFocusChangeListener)void
android.view.ViewTreeObserver.addOnGlobalFocusChangeListener(android.view.ViewTreeObserver.OnGlobalFocusChangeListener)void
android.view.ViewTreeObserver.removeOnGlobalFocusChangeListener(android.view.ViewTreeObserver.OnGlobalFocusChangeListener)void
android.view.ViewTreeObserver.addOnGlobalLayoutListener(android.view.ViewTreeObserver.OnGlobalLayoutListener)void
android.view.ViewTreeObserver.removeGlobalOnLayoutListener(android.view.ViewTreeObserver.OnGlobalLayoutListener)void
android.view.ViewTreeObserver.removeOnGlobalLayoutListener(android.view.ViewTreeObserver.OnGlobalLayoutListener)void
android.view.ViewTreeObserver.addOnPreDrawListener(android.view.ViewTreeObserver.OnPreDrawListener)void
android.view.ViewTreeObserver.removeOnPreDrawListener(android.view.ViewTreeObserver.OnPreDrawListener)void
android.view.ViewTreeObserver.addOnDrawListener(android.view.ViewTreeObserver.OnDrawListener)void
android.view.ViewTreeObserver.removeOnDrawListener(android.view.ViewTreeObserver.OnDrawListener)void
android.view.ViewTreeObserver.registerFrameCommitCallback(Runnable)void
android.view.ViewTreeObserver.unregisterFrameCommitCallback(Runnable)boolean
android.view.ViewTreeObserver.addOnScrollChangedListener(android.view.ViewTreeObserver.OnScrollChangedListener)void
android.view.ViewTreeObserver.removeOnScrollChangedListener(android.view.ViewTreeObserver.OnScrollChangedListener)void
android.view.ViewTreeObserver.addOnTouchModeChangeListener(android.view.ViewTreeObserver.OnTouchModeChangeListener)void
android.view.ViewTreeObserver.removeOnTouchModeChangeListener(android.view.ViewTreeObserver.OnTouchModeChangeListener)void
android.view.ViewTreeObserver.addOnSystemGestureExclusionRectsChangedListener(java.util.function.Consumer)void
android.view.ViewTreeObserver.removeOnSystemGestureExclusionRectsChangedListener(java.util.function.Consumer)void
android.view.ViewTreeObserver.isAlive)boolean
android.view.ViewTreeObserver.dispatchOnGlobalLayout)void
android.view.ViewTreeObserver.dispatchOnPreDraw)boolean
android.view.ViewTreeObserver.dispatchOnDraw)void
android.view.Window.onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int)void
android.view.Window.onPointerCaptureChanged(boolean)void
android.view.Window.getContext)android.content.Context
android.view.Window.getWindowStyle)android.content.res.TypedArray
android.view.Window.setContainer(android.view.Window)void
android.view.Window.getContainer)android.view.Window
android.view.Window.hasChildren)boolean
android.view.Window.setWindowManager(android.view.WindowManager,IBinder,String)void
android.view.Window.setWindowManager(android.view.WindowManager,IBinder,String,boolean)void
android.view.Window.getWindowManager)android.view.WindowManager
android.view.Window.setCallback(android.view.Window.Callback)void
android.view.Window.getCallback)android.view.Window.Callback
android.view.Window.addOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener,Handler)void
android.view.Window.removeOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener)void
android.view.Window.setRestrictedCaptionAreaListener(android.view.Window.OnRestrictedCaptionAreaChangedListener)void
android.view.Window.setLayout(int,int)void
android.view.Window.setGravity(int)void
android.view.Window.setType(int)void
android.view.Window.setFormat(int)void
android.view.Window.setWindowAnimations(int)void
android.view.Window.setSoftInputMode(int)void
android.view.Window.addFlags(int)void
android.view.Window.clearFlags(int)void
android.view.Window.setFlags(int,int)void
android.view.Window.setColorMode(int)void
android.view.Window.getColorMode)int
android.view.Window.isWideColorGamut)boolean
android.view.Window.setDimAmount(float)void
android.view.Window.setAttributes(WindowManager.LayoutParams)void
android.view.Window.getForcedWindowFlags)int
android.view.Window.hasSoftInputMode)boolean
android.view.Window.setSustainedPerformanceMode(boolean)void
android.view.Window.requestFeature(int)boolean
android.view.Window.makeActive)void
android.view.Window.isActive)boolean
android.view.Window.findViewById(int)android.view.View
android.view.Window.requireViewById(int)android.view.View
android.view.Window.setElevation(float)void
android.view.Window.setClipToOutline(boolean)void
android.view.Window.setBackgroundDrawableResource(int)void
android.view.Window.getFeatures)int
android.view.Window.getDefaultFeatures(android.content.Context)int
android.view.Window.hasFeature(int)boolean
android.view.Window.getLocalFeatures)int
android.view.Window.setDefaultWindowFormat(int)void
android.view.Window.setMediaController(android.media.session.MediaController)void
android.view.Window.getMediaController)android.media.session.MediaController
android.view.Window.setUiOptions(int)void
android.view.Window.setUiOptions(int,int)void
android.view.Window.setIcon(int)void
android.view.Window.setLogo(int)void
android.view.Window.setLocalFocus(boolean,boolean)void
android.view.Window.injectInputEvent(android.view.InputEvent)void
android.view.Window.getTransitionManager)TransitionManager
android.view.Window.setTransitionManager(TransitionManager)void
android.view.Window.getContentScene)Scene
android.view.Window.setEnterTransition(Transition)void
android.view.Window.setReturnTransition(Transition)void
android.view.Window.setExitTransition(Transition)void
android.view.Window.setReenterTransition(Transition)void
android.view.Window.getEnterTransition)Transition
android.view.Window.getReturnTransition)Transition
android.view.Window.getExitTransition)Transition
android.view.Window.getReenterTransition)Transition
android.view.Window.setSharedElementEnterTransition(Transition)void
android.view.Window.setSharedElementReturnTransition(Transition)void
android.view.Window.getSharedElementEnterTransition)Transition
android.view.Window.getSharedElementReturnTransition)Transition
android.view.Window.setSharedElementExitTransition(Transition)void
android.view.Window.setSharedElementReenterTransition(Transition)void
android.view.Window.getSharedElementExitTransition)Transition
android.view.Window.getSharedElementReenterTransition)Transition
android.view.Window.setAllowEnterTransitionOverlap(boolean)void
android.view.Window.getAllowEnterTransitionOverlap)boolean
android.view.Window.setAllowReturnTransitionOverlap(boolean)void
android.view.Window.getAllowReturnTransitionOverlap)boolean
android.view.Window.getTransitionBackgroundFadeDuration)long
android.view.Window.setTransitionBackgroundFadeDuration(long)void
android.view.Window.getSharedElementsUseOverlay)boolean
android.view.Window.setSharedElementsUseOverlay(boolean)void
android.view.Window.setNavigationBarDividerColor(int)void
android.view.Window.getNavigationBarDividerColor)int
android.view.Window.setStatusBarContrastEnforced(boolean)void
android.view.Window.isStatusBarContrastEnforced)boolean
android.view.Window.setNavigationBarContrastEnforced(boolean)void
android.view.Window.isNavigationBarContrastEnforced)boolean
android.view.Window.setSystemGestureExclusionRects(java.util.List)void
android.view.Window.getSystemGestureExclusionRects)java.util.List
android.view.WindowAnimationFrameStats.describeContents)int
android.view.WindowAnimationFrameStats.writeToParcel(android.os.Parcel,int)void
android.view.WindowAnimationFrameStats.toString)String
android.view.WindowContentFrameStats.getFramePostedTimeNano(int)long
android.view.WindowContentFrameStats.getFrameReadyTimeNano(int)long
android.view.WindowContentFrameStats.describeContents)int
android.view.WindowContentFrameStats.writeToParcel(android.os.Parcel,int)void
android.view.WindowContentFrameStats.toString)String
android.view.WindowId.isFocused)boolean
android.view.WindowId.registerFocusObserver(FocusObserver)void
android.view.WindowId.unregisterFocusObserver(FocusObserver)void
android.view.WindowId.equals(Object)boolean
android.view.WindowId.hashCode)int
android.view.WindowId.toString)String
android.view.WindowId.describeContents)int
android.view.WindowId.writeToParcel(Parcel,int)void
android.view.WindowInsets.setSystemWindowInsets(android.graphics.Insets)Builder
android.view.WindowInsets.setSystemGestureInsets(android.graphics.Insets)Builder
android.view.WindowInsets.setMandatorySystemGestureInsets(android.graphics.Insets)Builder
android.view.WindowInsets.setTappableElementInsets(android.graphics.Insets)Builder
android.view.WindowInsets.setStableInsets(android.graphics.Insets)Builder
android.view.WindowInsets.setDisplayCutout(android.view.DisplayCutout)Builder
android.view.WindowInsets.build)android.view.WindowInsets
android.view.WindowInsets.getSystemWindowInsets)android.graphics.Insets
android.view.WindowInsets.getSystemWindowInsetLeft)int
android.view.WindowInsets.getSystemWindowInsetTop)int
android.view.WindowInsets.getSystemWindowInsetRight)int
android.view.WindowInsets.getSystemWindowInsetBottom)int
android.view.WindowInsets.hasSystemWindowInsets)boolean
android.view.WindowInsets.hasInsets)boolean
android.view.WindowInsets.getDisplayCutout)android.view.DisplayCutout
android.view.WindowInsets.consumeDisplayCutout)android.view.WindowInsets
android.view.WindowInsets.isConsumed)boolean
android.view.WindowInsets.isRound)boolean
android.view.WindowInsets.consumeSystemWindowInsets)android.view.WindowInsets
android.view.WindowInsets.replaceSystemWindowInsets(int,int,int,int)android.view.WindowInsets
android.view.WindowInsets.replaceSystemWindowInsets(android.graphics.Rect)android.view.WindowInsets
android.view.WindowInsets.getStableInsets)android.graphics.Insets
android.view.WindowInsets.getStableInsetTop)int
android.view.WindowInsets.getStableInsetLeft)int
android.view.WindowInsets.getStableInsetRight)int
android.view.WindowInsets.getStableInsetBottom)int
android.view.WindowInsets.hasStableInsets)boolean
android.view.WindowInsets.getSystemGestureInsets)android.graphics.Insets
android.view.WindowInsets.getMandatorySystemGestureInsets)android.graphics.Insets
android.view.WindowInsets.getTappableElementInsets)android.graphics.Insets
android.view.WindowInsets.consumeStableInsets)android.view.WindowInsets
android.view.WindowInsets.toString)String
android.view.WindowInsets.inset(int,int,int,int)android.view.WindowInsets
android.view.WindowInsets.equals(Object)boolean
android.view.WindowInsets.hashCode)int
android.view.WindowManager.mayUseInputMethod(int)boolean
android.view.WindowManager.setTitle(CharSequence)void
android.view.WindowManager.getTitle)CharSequence
android.view.WindowManager.setColorMode(int)void
android.view.WindowManager.getColorMode)int
android.view.WindowManager.describeContents)int
android.view.WindowManager.writeToParcel(Parcel,int)void
android.view.WindowManager.copyFrom(android.view.WindowManager.LayoutParams)int
android.view.WindowManager.debug(String)String
android.view.WindowManager.toString)String
android.view.accessibility.AccessibilityEvent.getRecordCount)int
android.view.accessibility.AccessibilityEvent.appendRecord(android.view.accessibility.AccessibilityRecord)void
android.view.accessibility.AccessibilityEvent.getRecord(int)android.view.accessibility.AccessibilityRecord
android.view.accessibility.AccessibilityEvent.getEventType)int
android.view.accessibility.AccessibilityEvent.getContentChangeTypes)int
android.view.accessibility.AccessibilityEvent.setContentChangeTypes(int)void
android.view.accessibility.AccessibilityEvent.getWindowChanges)int
android.view.accessibility.AccessibilityEvent.setEventType(int)void
android.view.accessibility.AccessibilityEvent.getEventTime)long
android.view.accessibility.AccessibilityEvent.setEventTime(long)void
android.view.accessibility.AccessibilityEvent.getPackageName)CharSequence
android.view.accessibility.AccessibilityEvent.setPackageName(CharSequence)void
android.view.accessibility.AccessibilityEvent.setMovementGranularity(int)void
android.view.accessibility.AccessibilityEvent.getMovementGranularity)int
android.view.accessibility.AccessibilityEvent.setAction(int)void
android.view.accessibility.AccessibilityEvent.getAction)int
android.view.accessibility.AccessibilityEvent.obtain(int)android.view.accessibility.AccessibilityEvent
android.view.accessibility.AccessibilityEvent.obtain(android.view.accessibility.AccessibilityEvent)android.view.accessibility.AccessibilityEvent
android.view.accessibility.AccessibilityEvent.obtain)android.view.accessibility.AccessibilityEvent
android.view.accessibility.AccessibilityEvent.recycle)void
android.view.accessibility.AccessibilityEvent.initFromParcel(android.os.Parcel)void
android.view.accessibility.AccessibilityEvent.writeToParcel(android.os.Parcel,int)void
android.view.accessibility.AccessibilityEvent.describeContents)int
android.view.accessibility.AccessibilityEvent.toString)String
android.view.accessibility.AccessibilityEvent.eventTypeToString(int)String
android.view.accessibility.AccessibilityManager.isEnabled)boolean
android.view.accessibility.AccessibilityManager.isTouchExplorationEnabled)boolean
android.view.accessibility.AccessibilityManager.sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)void
android.view.accessibility.AccessibilityManager.interrupt)void
android.view.accessibility.AccessibilityManager.getAccessibilityServiceList)java.util.List
android.view.accessibility.AccessibilityManager.getInstalledAccessibilityServiceList)java.util.List
android.view.accessibility.AccessibilityManager.getEnabledAccessibilityServiceList(int)java.util.List
android.view.accessibility.AccessibilityManager.addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager.AccessibilityStateChangeListener)boolean
android.view.accessibility.AccessibilityManager.addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager.AccessibilityStateChangeListener,android.os.Handler)void
android.view.accessibility.AccessibilityManager.removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager.AccessibilityStateChangeListener)boolean
android.view.accessibility.AccessibilityManager.addTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager.TouchExplorationStateChangeListener)boolean
android.view.accessibility.AccessibilityManager.addTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager.TouchExplorationStateChangeListener,android.os.Handler)void
android.view.accessibility.AccessibilityManager.removeTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager.TouchExplorationStateChangeListener)boolean
android.view.accessibility.AccessibilityManager.addAccessibilityRequestPreparer(android.view.accessibility.AccessibilityRequestPreparer)void
android.view.accessibility.AccessibilityManager.removeAccessibilityRequestPreparer(android.view.accessibility.AccessibilityRequestPreparer)void
android.view.accessibility.AccessibilityManager.getRecommendedTimeoutMillis(int,int)int
android.view.accessibility.AccessibilityManager.isAccessibilityButtonSupported)boolean
android.view.accessibility.AccessibilityNodeInfo.getRegionCount)int
android.view.accessibility.AccessibilityNodeInfo.getRegionAt(int)android.graphics.Region
android.view.accessibility.AccessibilityNodeInfo.getTargetForRegion(android.graphics.Region)android.view.accessibility.AccessibilityNodeInfo
android.view.accessibility.AccessibilityNodeInfo.describeContents)int
android.view.accessibility.AccessibilityNodeInfo.writeToParcel(Parcel,int)void
android.view.accessibility.AccessibilityNodeInfo.obtain(int,float,float,float)RangeInfo
android.view.accessibility.AccessibilityNodeInfo.getType)int
android.view.accessibility.AccessibilityNodeInfo.getMin)float
android.view.accessibility.AccessibilityNodeInfo.getMax)float
android.view.accessibility.AccessibilityNodeInfo.getCurrent)float
android.view.accessibility.AccessibilityNodeInfo.obtain(int,int,int,int,boolean)CollectionItemInfo
android.view.accessibility.AccessibilityNodeInfo.obtain(int,int,int,int,boolean,boolean)CollectionItemInfo
android.view.accessibility.AccessibilityNodeInfo.getColumnIndex)int
android.view.accessibility.AccessibilityNodeInfo.getRowIndex)int
android.view.accessibility.AccessibilityNodeInfo.getColumnSpan)int
android.view.accessibility.AccessibilityNodeInfo.getRowSpan)int
android.view.accessibility.AccessibilityNodeInfo.isHeading)boolean
android.view.accessibility.AccessibilityNodeInfo.isSelected)boolean
android.view.accessibility.AccessibilityNodeInfo.obtain(int,int,boolean)CollectionInfo
android.view.accessibility.AccessibilityNodeInfo.obtain(int,int,boolean,int)CollectionInfo
android.view.accessibility.AccessibilityNodeInfo.getRowCount)int
android.view.accessibility.AccessibilityNodeInfo.getColumnCount)int
android.view.accessibility.AccessibilityNodeInfo.isHierarchical)boolean
android.view.accessibility.AccessibilityNodeInfo.getSelectionMode)int
android.view.accessibility.AccessibilityNodeInfo.getId)int
android.view.accessibility.AccessibilityNodeInfo.getLabel)CharSequence
android.view.accessibility.AccessibilityNodeInfo.hashCode)int
android.view.accessibility.AccessibilityNodeInfo.equals(Object)boolean
android.view.accessibility.AccessibilityNodeInfo.toString)String
android.view.accessibility.AccessibilityNodeInfo.setSource(android.view.View)void
android.view.accessibility.AccessibilityNodeInfo.setSource(android.view.View,int)void
android.view.accessibility.AccessibilityNodeInfo.findFocus(int)android.view.accessibility.AccessibilityNodeInfo
android.view.accessibility.AccessibilityNodeInfo.focusSearch(int)android.view.accessibility.AccessibilityNodeInfo
android.view.accessibility.AccessibilityNodeInfo.getWindowId)int
android.view.accessibility.AccessibilityNodeInfo.refresh)boolean
android.view.accessibility.AccessibilityNodeInfo.refreshWithExtraData(String,Bundle)boolean
android.view.accessibility.AccessibilityNodeInfo.getChildCount)int
android.view.accessibility.AccessibilityNodeInfo.getChild(int)android.view.accessibility.AccessibilityNodeInfo
android.view.accessibility.AccessibilityNodeInfo.addChild(android.view.View)void
android.view.accessibility.AccessibilityNodeInfo.removeChild(android.view.View)boolean
android.view.accessibility.AccessibilityNodeInfo.addChild(android.view.View,int)void
android.view.accessibility.AccessibilityNodeInfo.removeChild(android.view.View,int)boolean
android.view.accessibility.AccessibilityNodeInfo.getActionList)java.util.List
android.view.accessibility.AccessibilityNodeInfo.getActions)int
android.view.accessibility.AccessibilityNodeInfo.addAction(AccessibilityAction)void
android.view.accessibility.AccessibilityNodeInfo.addAction(int)void
android.view.accessibility.AccessibilityNodeInfo.removeAction(int)void
android.view.accessibility.AccessibilityNodeInfo.removeAction(AccessibilityAction)boolean
android.view.accessibility.AccessibilityNodeInfo.getTraversalBefore)android.view.accessibility.AccessibilityNodeInfo
android.view.accessibility.AccessibilityNodeInfo.setTraversalBefore(android.view.View)void
android.view.accessibility.AccessibilityNodeInfo.setTraversalBefore(android.view.View,int)void
android.view.accessibility.AccessibilityNodeInfo.getTraversalAfter)android.view.accessibility.AccessibilityNodeInfo
android.view.accessibility.AccessibilityNodeInfo.setTraversalAfter(android.view.View)void
android.view.accessibility.AccessibilityNodeInfo.setTraversalAfter(android.view.View,int)void
android.view.accessibility.AccessibilityNodeInfo.getAvailableExtraData)java.util.List
android.view.accessibility.AccessibilityNodeInfo.setAvailableExtraData(java.util.List)void
android.view.accessibility.AccessibilityNodeInfo.setMaxTextLength(int)void
android.view.accessibility.AccessibilityNodeInfo.getMaxTextLength)int
android.view.accessibility.AccessibilityNodeInfo.setMovementGranularities(int)void
android.view.accessibility.AccessibilityNodeInfo.getMovementGranularities)int
android.view.accessibility.AccessibilityNodeInfo.performAction(int)boolean
android.view.accessibility.AccessibilityNodeInfo.performAction(int,Bundle)boolean
android.view.accessibility.AccessibilityNodeInfo.findAccessibilityNodeInfosByText(String)java.util.List
android.view.accessibility.AccessibilityNodeInfo.findAccessibilityNodeInfosByViewId(String)java.util.List
android.view.accessibility.AccessibilityNodeInfo.getWindow)android.view.accessibility.AccessibilityWindowInfo
android.view.accessibility.AccessibilityNodeInfo.getParent)android.view.accessibility.AccessibilityNodeInfo
android.view.accessibility.AccessibilityNodeInfo.setParent(android.view.View)void
android.view.accessibility.AccessibilityNodeInfo.setParent(android.view.View,int)void
android.view.accessibility.AccessibilityNodeInfo.getBoundsInParent(android.graphics.Rect)void
android.view.accessibility.AccessibilityNodeInfo.setBoundsInParent(android.graphics.Rect)void
android.view.accessibility.AccessibilityNodeInfo.getBoundsInScreen(android.graphics.Rect)void
android.view.accessibility.AccessibilityNodeInfo.setBoundsInScreen(android.graphics.Rect)void
android.view.accessibility.AccessibilityNodeInfo.isCheckable)boolean
android.view.accessibility.AccessibilityNodeInfo.setCheckable(boolean)void
android.view.accessibility.AccessibilityNodeInfo.isChecked)boolean
android.view.accessibility.AccessibilityNodeInfo.setChecked(boolean)void
android.view.accessibility.AccessibilityNodeInfo.isFocusable)boolean
android.view.accessibility.AccessibilityNodeInfo.setFocusable(boolean)void
android.view.accessibility.AccessibilityNodeInfo.isFocused)boolean
android.view.accessibility.AccessibilityNodeInfo.setFocused(boolean)void
android.view.accessibility.AccessibilityNodeInfo.isVisibleToUser)boolean
android.view.accessibility.AccessibilityNodeInfo.setVisibleToUser(boolean)void
android.view.accessibility.AccessibilityNodeInfo.isAccessibilityFocused)boolean
android.view.accessibility.AccessibilityNodeInfo.setAccessibilityFocused(boolean)void
android.view.accessibility.AccessibilityNodeInfo.isSelected)boolean
android.view.accessibility.AccessibilityNodeInfo.setSelected(boolean)void
android.view.accessibility.AccessibilityNodeInfo.isClickable)boolean
android.view.accessibility.AccessibilityNodeInfo.setClickable(boolean)void
android.view.accessibility.AccessibilityNodeInfo.isLongClickable)boolean
android.view.accessibility.AccessibilityNodeInfo.setLongClickable(boolean)void
android.view.accessibility.AccessibilityNodeInfo.isEnabled)boolean
android.view.accessibility.AccessibilityNodeInfo.setEnabled(boolean)void
android.view.accessibility.AccessibilityNodeInfo.isPassword)boolean
android.view.accessibility.AccessibilityNodeInfo.setPassword(boolean)void
android.view.accessibility.AccessibilityNodeInfo.isScrollable)boolean
android.view.accessibility.AccessibilityNodeInfo.setScrollable(boolean)void
android.view.accessibility.AccessibilityNodeInfo.isEditable)boolean
android.view.accessibility.AccessibilityNodeInfo.setEditable(boolean)void
android.view.accessibility.AccessibilityNodeInfo.setPaneTitle(CharSequence)void
android.view.accessibility.AccessibilityNodeInfo.getPaneTitle)CharSequence
android.view.accessibility.AccessibilityNodeInfo.getDrawingOrder)int
android.view.accessibility.AccessibilityNodeInfo.setDrawingOrder(int)void
android.view.accessibility.AccessibilityNodeInfo.getCollectionInfo)CollectionInfo
android.view.accessibility.AccessibilityNodeInfo.setCollectionInfo(CollectionInfo)void
android.view.accessibility.AccessibilityNodeInfo.getCollectionItemInfo)CollectionItemInfo
android.view.accessibility.AccessibilityNodeInfo.setCollectionItemInfo(CollectionItemInfo)void
android.view.accessibility.AccessibilityNodeInfo.getRangeInfo)RangeInfo
android.view.accessibility.AccessibilityNodeInfo.setRangeInfo(RangeInfo)void
android.view.accessibility.AccessibilityNodeInfo.isContentInvalid)boolean
android.view.accessibility.AccessibilityNodeInfo.setContentInvalid(boolean)void
android.view.accessibility.AccessibilityNodeInfo.isContextClickable)boolean
android.view.accessibility.AccessibilityNodeInfo.setContextClickable(boolean)void
android.view.accessibility.AccessibilityNodeInfo.getLiveRegion)int
android.view.accessibility.AccessibilityNodeInfo.setLiveRegion(int)void
android.view.accessibility.AccessibilityNodeInfo.isMultiLine)boolean
android.view.accessibility.AccessibilityNodeInfo.setMultiLine(boolean)void
android.view.accessibility.AccessibilityNodeInfo.canOpenPopup)boolean
android.view.accessibility.AccessibilityNodeInfo.setCanOpenPopup(boolean)void
android.view.accessibility.AccessibilityNodeInfo.isDismissable)boolean
android.view.accessibility.AccessibilityNodeInfo.setDismissable(boolean)void
android.view.accessibility.AccessibilityNodeInfo.isImportantForAccessibility)boolean
android.view.accessibility.AccessibilityNodeInfo.setImportantForAccessibility(boolean)void
android.view.accessibility.AccessibilityNodeInfo.isScreenReaderFocusable)boolean
android.view.accessibility.AccessibilityNodeInfo.setScreenReaderFocusable(boolean)void
android.view.accessibility.AccessibilityNodeInfo.isShowingHintText)boolean
android.view.accessibility.AccessibilityNodeInfo.setShowingHintText(boolean)void
android.view.accessibility.AccessibilityNodeInfo.isHeading)boolean
android.view.accessibility.AccessibilityNodeInfo.setHeading(boolean)void
android.view.accessibility.AccessibilityNodeInfo.isTextEntryKey)boolean
android.view.accessibility.AccessibilityNodeInfo.setTextEntryKey(boolean)void
android.view.accessibility.AccessibilityNodeInfo.getPackageName)CharSequence
android.view.accessibility.AccessibilityNodeInfo.setPackageName(CharSequence)void
android.view.accessibility.AccessibilityNodeInfo.getClassName)CharSequence
android.view.accessibility.AccessibilityNodeInfo.setClassName(CharSequence)void
android.view.accessibility.AccessibilityNodeInfo.getText)CharSequence
android.view.accessibility.AccessibilityNodeInfo.setText(CharSequence)void
android.view.accessibility.AccessibilityNodeInfo.getHintText)CharSequence
android.view.accessibility.AccessibilityNodeInfo.setHintText(CharSequence)void
android.view.accessibility.AccessibilityNodeInfo.setError(CharSequence)void
android.view.accessibility.AccessibilityNodeInfo.getError)CharSequence
android.view.accessibility.AccessibilityNodeInfo.getContentDescription)CharSequence
android.view.accessibility.AccessibilityNodeInfo.setContentDescription(CharSequence)void
android.view.accessibility.AccessibilityNodeInfo.getTooltipText)CharSequence
android.view.accessibility.AccessibilityNodeInfo.setTooltipText(CharSequence)void
android.view.accessibility.AccessibilityNodeInfo.setLabelFor(android.view.View)void
android.view.accessibility.AccessibilityNodeInfo.setLabelFor(android.view.View,int)void
android.view.accessibility.AccessibilityNodeInfo.getLabelFor)android.view.accessibility.AccessibilityNodeInfo
android.view.accessibility.AccessibilityNodeInfo.setLabeledBy(android.view.View)void
android.view.accessibility.AccessibilityNodeInfo.setLabeledBy(android.view.View,int)void
android.view.accessibility.AccessibilityNodeInfo.getLabeledBy)android.view.accessibility.AccessibilityNodeInfo
android.view.accessibility.AccessibilityNodeInfo.setViewIdResourceName(String)void
android.view.accessibility.AccessibilityNodeInfo.getViewIdResourceName)String
android.view.accessibility.AccessibilityNodeInfo.getTextSelectionStart)int
android.view.accessibility.AccessibilityNodeInfo.getTextSelectionEnd)int
android.view.accessibility.AccessibilityNodeInfo.setTextSelection(int,int)void
android.view.accessibility.AccessibilityNodeInfo.getInputType)int
android.view.accessibility.AccessibilityNodeInfo.setInputType(int)void
android.view.accessibility.AccessibilityNodeInfo.getExtras)Bundle
android.view.accessibility.AccessibilityNodeInfo.getTouchDelegateInfo)TouchDelegateInfo
android.view.accessibility.AccessibilityNodeInfo.setTouchDelegateInfo(TouchDelegateInfo)void
android.view.accessibility.AccessibilityNodeInfo.describeContents)int
android.view.accessibility.AccessibilityNodeInfo.obtain(android.view.View)android.view.accessibility.AccessibilityNodeInfo
android.view.accessibility.AccessibilityNodeInfo.obtain(android.view.View,int)android.view.accessibility.AccessibilityNodeInfo
android.view.accessibility.AccessibilityNodeInfo.obtain)android.view.accessibility.AccessibilityNodeInfo
android.view.accessibility.AccessibilityNodeInfo.obtain(android.view.accessibility.AccessibilityNodeInfo)android.view.accessibility.AccessibilityNodeInfo
android.view.accessibility.AccessibilityNodeInfo.recycle)void
android.view.accessibility.AccessibilityNodeInfo.writeToParcel(Parcel,int)void
android.view.accessibility.AccessibilityNodeInfo.equals(Object)boolean
android.view.accessibility.AccessibilityNodeInfo.hashCode)int
android.view.accessibility.AccessibilityNodeInfo.toString)String
android.view.accessibility.AccessibilityNodeProvider.createAccessibilityNodeInfo(int)android.view.accessibility.AccessibilityNodeInfo
android.view.accessibility.AccessibilityNodeProvider.addExtraDataToAccessibilityNodeInfo(int,android.view.accessibility.AccessibilityNodeInfo,String,android.os.Bundle)void
android.view.accessibility.AccessibilityNodeProvider.performAction(int,int,android.os.Bundle)boolean
android.view.accessibility.AccessibilityNodeProvider.findAccessibilityNodeInfosByText(String,int)java.util.List
android.view.accessibility.AccessibilityNodeProvider.findFocus(int)android.view.accessibility.AccessibilityNodeInfo
android.view.accessibility.AccessibilityRecord.setSource(android.view.View)void
android.view.accessibility.AccessibilityRecord.setSource(android.view.View,int)void
android.view.accessibility.AccessibilityRecord.getSource)android.view.accessibility.AccessibilityNodeInfo
android.view.accessibility.AccessibilityRecord.getWindowId)int
android.view.accessibility.AccessibilityRecord.isChecked)boolean
android.view.accessibility.AccessibilityRecord.setChecked(boolean)void
android.view.accessibility.AccessibilityRecord.isEnabled)boolean
android.view.accessibility.AccessibilityRecord.setEnabled(boolean)void
android.view.accessibility.AccessibilityRecord.isPassword)boolean
android.view.accessibility.AccessibilityRecord.setPassword(boolean)void
android.view.accessibility.AccessibilityRecord.isFullScreen)boolean
android.view.accessibility.AccessibilityRecord.setFullScreen(boolean)void
android.view.accessibility.AccessibilityRecord.isScrollable)boolean
android.view.accessibility.AccessibilityRecord.setScrollable(boolean)void
android.view.accessibility.AccessibilityRecord.getItemCount)int
android.view.accessibility.AccessibilityRecord.setItemCount(int)void
android.view.accessibility.AccessibilityRecord.getCurrentItemIndex)int
android.view.accessibility.AccessibilityRecord.setCurrentItemIndex(int)void
android.view.accessibility.AccessibilityRecord.getFromIndex)int
android.view.accessibility.AccessibilityRecord.setFromIndex(int)void
android.view.accessibility.AccessibilityRecord.getToIndex)int
android.view.accessibility.AccessibilityRecord.setToIndex(int)void
android.view.accessibility.AccessibilityRecord.getScrollX)int
android.view.accessibility.AccessibilityRecord.setScrollX(int)void
android.view.accessibility.AccessibilityRecord.getScrollY)int
android.view.accessibility.AccessibilityRecord.setScrollY(int)void
android.view.accessibility.AccessibilityRecord.getScrollDeltaX)int
android.view.accessibility.AccessibilityRecord.setScrollDeltaX(int)void
android.view.accessibility.AccessibilityRecord.getScrollDeltaY)int
android.view.accessibility.AccessibilityRecord.setScrollDeltaY(int)void
android.view.accessibility.AccessibilityRecord.getMaxScrollX)int
android.view.accessibility.AccessibilityRecord.setMaxScrollX(int)void
android.view.accessibility.AccessibilityRecord.getMaxScrollY)int
android.view.accessibility.AccessibilityRecord.setMaxScrollY(int)void
android.view.accessibility.AccessibilityRecord.getAddedCount)int
android.view.accessibility.AccessibilityRecord.setAddedCount(int)void
android.view.accessibility.AccessibilityRecord.getRemovedCount)int
android.view.accessibility.AccessibilityRecord.setRemovedCount(int)void
android.view.accessibility.AccessibilityRecord.getClassName)CharSequence
android.view.accessibility.AccessibilityRecord.setClassName(CharSequence)void
android.view.accessibility.AccessibilityRecord.getText)java.util.List
android.view.accessibility.AccessibilityRecord.getBeforeText)CharSequence
android.view.accessibility.AccessibilityRecord.setBeforeText(CharSequence)void
android.view.accessibility.AccessibilityRecord.getContentDescription)CharSequence
android.view.accessibility.AccessibilityRecord.setContentDescription(CharSequence)void
android.view.accessibility.AccessibilityRecord.getParcelableData)android.os.Parcelable
android.view.accessibility.AccessibilityRecord.setParcelableData(android.os.Parcelable)void
android.view.accessibility.AccessibilityRecord.obtain(android.view.accessibility.AccessibilityRecord)android.view.accessibility.AccessibilityRecord
android.view.accessibility.AccessibilityRecord.obtain)android.view.accessibility.AccessibilityRecord
android.view.accessibility.AccessibilityRecord.recycle)void
android.view.accessibility.AccessibilityRecord.toString)String
android.view.accessibility.AccessibilityRequestPreparer.getView)android.view.View
android.view.accessibility.AccessibilityWindowInfo.getTitle)CharSequence
android.view.accessibility.AccessibilityWindowInfo.getType)int
android.view.accessibility.AccessibilityWindowInfo.getLayer)int
android.view.accessibility.AccessibilityWindowInfo.getRoot)android.view.accessibility.AccessibilityNodeInfo
android.view.accessibility.AccessibilityWindowInfo.getAnchor)android.view.accessibility.AccessibilityNodeInfo
android.view.accessibility.AccessibilityWindowInfo.isInPictureInPictureMode)boolean
android.view.accessibility.AccessibilityWindowInfo.getParent)android.view.accessibility.AccessibilityWindowInfo
android.view.accessibility.AccessibilityWindowInfo.getId)int
android.view.accessibility.AccessibilityWindowInfo.getBoundsInScreen(android.graphics.Rect)void
android.view.accessibility.AccessibilityWindowInfo.isActive)boolean
android.view.accessibility.AccessibilityWindowInfo.isFocused)boolean
android.view.accessibility.AccessibilityWindowInfo.isAccessibilityFocused)boolean
android.view.accessibility.AccessibilityWindowInfo.getChildCount)int
android.view.accessibility.AccessibilityWindowInfo.getChild(int)android.view.accessibility.AccessibilityWindowInfo
android.view.accessibility.AccessibilityWindowInfo.obtain)android.view.accessibility.AccessibilityWindowInfo
android.view.accessibility.AccessibilityWindowInfo.obtain(android.view.accessibility.AccessibilityWindowInfo)android.view.accessibility.AccessibilityWindowInfo
android.view.accessibility.AccessibilityWindowInfo.recycle)void
android.view.accessibility.AccessibilityWindowInfo.describeContents)int
android.view.accessibility.AccessibilityWindowInfo.writeToParcel(android.os.Parcel,int)void
android.view.accessibility.AccessibilityWindowInfo.hashCode)int
android.view.accessibility.AccessibilityWindowInfo.equals(Object)boolean
android.view.accessibility.AccessibilityWindowInfo.toString)String
android.view.accessibility.CaptioningManager.onEnabledChanged(boolean)void
android.view.accessibility.CaptioningManager.onUserStyleChanged(CaptionStyle)void
android.view.accessibility.CaptioningManager.onLocaleChanged(java.util.Locale)void
android.view.accessibility.CaptioningManager.onFontScaleChanged(float)void
android.view.accessibility.CaptioningManager.hasBackgroundColor)boolean
android.view.accessibility.CaptioningManager.hasForegroundColor)boolean
android.view.accessibility.CaptioningManager.hasEdgeType)boolean
android.view.accessibility.CaptioningManager.hasEdgeColor)boolean
android.view.accessibility.CaptioningManager.hasWindowColor)boolean
android.view.accessibility.CaptioningManager.getTypeface)android.graphics.Typeface
android.view.accessibility.CaptioningManager.isEnabled)boolean
android.view.accessibility.CaptioningManager.getLocale)java.util.Locale
android.view.accessibility.CaptioningManager.getFontScale)float
android.view.accessibility.CaptioningManager.getUserStyle)CaptionStyle
android.view.accessibility.CaptioningManager.addCaptioningChangeListener(CaptioningChangeListener)void
android.view.accessibility.CaptioningManager.removeCaptioningChangeListener(CaptioningChangeListener)void
android.view.animation.AccelerateDecelerateInterpolator.getInterpolation(float)float
android.view.animation.AccelerateInterpolator.getInterpolation(float)float
android.view.animation.AlphaAnimation.applyTransformation(float,android.view.animation.Transformation)void
android.view.animation.AlphaAnimation.willChangeTransformationMatrix)boolean
android.view.animation.AlphaAnimation.willChangeBounds)boolean
android.view.animation.Animation.clone)android.view.animation.Animation
android.view.animation.Animation.reset)void
android.view.animation.Animation.cancel)void
android.view.animation.Animation.isInitialized)boolean
android.view.animation.Animation.initialize(int,int,int,int)void
android.view.animation.Animation.setInterpolator(android.content.Context,int)void
android.view.animation.Animation.setInterpolator(android.view.animation.Interpolator)void
android.view.animation.Animation.setStartOffset(long)void
android.view.animation.Animation.setDuration(long)void
android.view.animation.Animation.restrictDuration(long)void
android.view.animation.Animation.scaleCurrentDuration(float)void
android.view.animation.Animation.setStartTime(long)void
android.view.animation.Animation.start)void
android.view.animation.Animation.startNow)void
android.view.animation.Animation.setRepeatMode(int)void
android.view.animation.Animation.setRepeatCount(int)void
android.view.animation.Animation.isFillEnabled)boolean
android.view.animation.Animation.setFillEnabled(boolean)void
android.view.animation.Animation.setFillBefore(boolean)void
android.view.animation.Animation.setFillAfter(boolean)void
android.view.animation.Animation.setZAdjustment(int)void
android.view.animation.Animation.setBackgroundColor(int)void
android.view.animation.Animation.getScaleFactor)float
android.view.animation.Animation.setDetachWallpaper(boolean)void
android.view.animation.Animation.getInterpolator)android.view.animation.Interpolator
android.view.animation.Animation.getStartTime)long
android.view.animation.Animation.getDuration)long
android.view.animation.Animation.getStartOffset)long
android.view.animation.Animation.getRepeatMode)int
android.view.animation.Animation.getRepeatCount)int
android.view.animation.Animation.getFillBefore)boolean
android.view.animation.Animation.getFillAfter)boolean
android.view.animation.Animation.getZAdjustment)int
android.view.animation.Animation.getBackgroundColor)int
android.view.animation.Animation.getDetachWallpaper)boolean
android.view.animation.Animation.willChangeTransformationMatrix)boolean
android.view.animation.Animation.willChangeBounds)boolean
android.view.animation.Animation.setAnimationListener(android.view.animation.Animation.AnimationListener)void
android.view.animation.Animation.ensureInterpolator)void
android.view.animation.Animation.computeDurationHint)long
android.view.animation.Animation.getTransformation(long,android.view.animation.Transformation)boolean
android.view.animation.Animation.getTransformation(long,android.view.animation.Transformation,float)boolean
android.view.animation.Animation.hasStarted)boolean
android.view.animation.Animation.hasEnded)boolean
android.view.animation.Animation.applyTransformation(float,android.view.animation.Transformation)void
android.view.animation.Animation.resolveSize(int,float,int,int)float
android.view.animation.Animation.finalize)void
android.view.animation.AnimationSet.clone)android.view.animation.AnimationSet
android.view.animation.AnimationSet.setFillAfter(boolean)void
android.view.animation.AnimationSet.setFillBefore(boolean)void
android.view.animation.AnimationSet.setRepeatMode(int)void
android.view.animation.AnimationSet.setStartOffset(long)void
android.view.animation.AnimationSet.setDuration(long)void
android.view.animation.AnimationSet.addAnimation(android.view.animation.Animation)void
android.view.animation.AnimationSet.setStartTime(long)void
android.view.animation.AnimationSet.getStartTime)long
android.view.animation.AnimationSet.restrictDuration(long)void
android.view.animation.AnimationSet.getDuration)long
android.view.animation.AnimationSet.computeDurationHint)long
android.view.animation.AnimationSet.getTransformation(long,android.view.animation.Transformation)boolean
android.view.animation.AnimationSet.scaleCurrentDuration(float)void
android.view.animation.AnimationSet.initialize(int,int,int,int)void
android.view.animation.AnimationSet.reset)void
android.view.animation.AnimationSet.getAnimations)java.util.List
android.view.animation.AnimationSet.willChangeTransformationMatrix)boolean
android.view.animation.AnimationSet.willChangeBounds)boolean
android.view.animation.AnimationUtils.currentAnimationTimeMillis)long
android.view.animation.AnimationUtils.loadAnimation(android.content.Context,int)android.view.animation.Animation
android.view.animation.AnimationUtils.loadLayoutAnimation(android.content.Context,int)android.view.animation.LayoutAnimationController
android.view.animation.AnimationUtils.makeInAnimation(android.content.Context,boolean)android.view.animation.Animation
android.view.animation.AnimationUtils.makeOutAnimation(android.content.Context,boolean)android.view.animation.Animation
android.view.animation.AnimationUtils.makeInChildBottomAnimation(android.content.Context)android.view.animation.Animation
android.view.animation.AnimationUtils.loadInterpolator(android.content.Context,int)android.view.animation.Interpolator
android.view.animation.AnticipateInterpolator.getInterpolation(float)float
android.view.animation.AnticipateOvershootInterpolator.getInterpolation(float)float
android.view.animation.BounceInterpolator.getInterpolation(float)float
android.view.animation.CycleInterpolator.getInterpolation(float)float
android.view.animation.DecelerateInterpolator.getInterpolation(float)float
android.view.animation.GridLayoutAnimationController.getColumnDelay)float
android.view.animation.GridLayoutAnimationController.setColumnDelay(float)void
android.view.animation.GridLayoutAnimationController.getRowDelay)float
android.view.animation.GridLayoutAnimationController.setRowDelay(float)void
android.view.animation.GridLayoutAnimationController.getDirection)int
android.view.animation.GridLayoutAnimationController.setDirection(int)void
android.view.animation.GridLayoutAnimationController.getDirectionPriority)int
android.view.animation.GridLayoutAnimationController.setDirectionPriority(int)void
android.view.animation.GridLayoutAnimationController.willOverlap)boolean
android.view.animation.GridLayoutAnimationController.getDelayForView(android.view.View)long
android.view.animation.LayoutAnimationController.getOrder)int
android.view.animation.LayoutAnimationController.setOrder(int)void
android.view.animation.LayoutAnimationController.setAnimation(android.content.Context,int)void
android.view.animation.LayoutAnimationController.setAnimation(android.view.animation.Animation)void
android.view.animation.LayoutAnimationController.getAnimation)android.view.animation.Animation
android.view.animation.LayoutAnimationController.setInterpolator(android.content.Context,int)void
android.view.animation.LayoutAnimationController.setInterpolator(android.view.animation.Interpolator)void
android.view.animation.LayoutAnimationController.getInterpolator)android.view.animation.Interpolator
android.view.animation.LayoutAnimationController.getDelay)float
android.view.animation.LayoutAnimationController.setDelay(float)void
android.view.animation.LayoutAnimationController.willOverlap)boolean
android.view.animation.LayoutAnimationController.start)void
android.view.animation.LayoutAnimationController.getAnimationForView(android.view.View)android.view.animation.Animation
android.view.animation.LayoutAnimationController.isDone)boolean
android.view.animation.LayoutAnimationController.getDelayForView(android.view.View)long
android.view.animation.LayoutAnimationController.getTransformedIndex(android.view.animation.LayoutAnimationController.AnimationParameters)int
android.view.animation.LinearInterpolator.getInterpolation(float)float
android.view.animation.OvershootInterpolator.getInterpolation(float)float
android.view.animation.PathInterpolator.getInterpolation(float)float
android.view.animation.RotateAnimation.applyTransformation(float,android.view.animation.Transformation)void
android.view.animation.RotateAnimation.initialize(int,int,int,int)void
android.view.animation.ScaleAnimation.applyTransformation(float,android.view.animation.Transformation)void
android.view.animation.ScaleAnimation.initialize(int,int,int,int)void
android.view.animation.Transformation.clear)void
android.view.animation.Transformation.getTransformationType)int
android.view.animation.Transformation.setTransformationType(int)void
android.view.animation.Transformation.set(android.view.animation.Transformation)void
android.view.animation.Transformation.compose(android.view.animation.Transformation)void
android.view.animation.Transformation.getMatrix)android.graphics.Matrix
android.view.animation.Transformation.setAlpha(float)void
android.view.animation.Transformation.getAlpha)float
android.view.animation.Transformation.toString)String
android.view.animation.Transformation.toShortString)String
android.view.animation.TranslateAnimation.applyTransformation(float,android.view.animation.Transformation)void
android.view.animation.TranslateAnimation.initialize(int,int,int,int)void
android.view.autofill.AutofillId.hashCode)int
android.view.autofill.AutofillId.equals(Object)boolean
android.view.autofill.AutofillId.toString)String
android.view.autofill.AutofillId.describeContents)int
android.view.autofill.AutofillId.writeToParcel(android.os.Parcel,int)void
android.view.autofill.AutofillManager.onAutofillEvent(android.view.View,int)void
android.view.autofill.AutofillManager.onAutofillEvent(android.view.View,int,int)void
android.view.autofill.AutofillManager.isEnabled)boolean
android.view.autofill.AutofillManager.requestAutofill(android.view.View)void
android.view.autofill.AutofillManager.requestAutofill(android.view.View,int,android.graphics.Rect)void
android.view.autofill.AutofillManager.notifyViewEntered(android.view.View)void
android.view.autofill.AutofillManager.notifyViewExited(android.view.View)void
android.view.autofill.AutofillManager.notifyViewVisibilityChanged(android.view.View,boolean)void
android.view.autofill.AutofillManager.notifyViewVisibilityChanged(android.view.View,int,boolean)void
android.view.autofill.AutofillManager.notifyViewEntered(android.view.View,int,android.graphics.Rect)void
android.view.autofill.AutofillManager.notifyViewExited(android.view.View,int)void
android.view.autofill.AutofillManager.notifyValueChanged(android.view.View)void
android.view.autofill.AutofillManager.notifyValueChanged(android.view.View,int,android.view.autofill.AutofillValue)void
android.view.autofill.AutofillManager.notifyViewClicked(android.view.View)void
android.view.autofill.AutofillManager.notifyViewClicked(android.view.View,int)void
android.view.autofill.AutofillManager.commit)void
android.view.autofill.AutofillManager.cancel)void
android.view.autofill.AutofillManager.disableAutofillServices)void
android.view.autofill.AutofillManager.hasEnabledAutofillServices)boolean
android.view.autofill.AutofillManager.getAutofillServiceComponentName)android.content.ComponentName
android.view.autofill.AutofillManager.getUserDataId)String
android.view.autofill.AutofillManager.getUserData)android.service.autofill.UserData
android.view.autofill.AutofillManager.setUserData(android.service.autofill.UserData)void
android.view.autofill.AutofillManager.isFieldClassificationEnabled)boolean
android.view.autofill.AutofillManager.getDefaultFieldClassificationAlgorithm)String
android.view.autofill.AutofillManager.getAvailableFieldClassificationAlgorithms)java.util.List
android.view.autofill.AutofillManager.isAutofillSupported)boolean
android.view.autofill.AutofillManager.getNextAutofillId)android.view.autofill.AutofillId
android.view.autofill.AutofillManager.registerCallback(AutofillCallback)void
android.view.autofill.AutofillManager.unregisterCallback(AutofillCallback)void
android.view.autofill.AutofillValue.getTextValue)CharSequence
android.view.autofill.AutofillValue.isText)boolean
android.view.autofill.AutofillValue.getToggleValue)boolean
android.view.autofill.AutofillValue.isToggle)boolean
android.view.autofill.AutofillValue.getListValue)int
android.view.autofill.AutofillValue.isList)boolean
android.view.autofill.AutofillValue.getDateValue)long
android.view.autofill.AutofillValue.isDate)boolean
android.view.autofill.AutofillValue.hashCode)int
android.view.autofill.AutofillValue.equals(Object)boolean
android.view.autofill.AutofillValue.toString)String
android.view.autofill.AutofillValue.describeContents)int
android.view.autofill.AutofillValue.writeToParcel(android.os.Parcel,int)void
android.view.autofill.AutofillValue.forText(CharSequence)android.view.autofill.AutofillValue
android.view.autofill.AutofillValue.forToggle(boolean)android.view.autofill.AutofillValue
android.view.autofill.AutofillValue.forList(int)android.view.autofill.AutofillValue
android.view.autofill.AutofillValue.forDate(long)android.view.autofill.AutofillValue
android.view.contentcapture.ContentCaptureCondition.getLocusId)android.content.LocusId
android.view.contentcapture.ContentCaptureCondition.getFlags)int
android.view.contentcapture.ContentCaptureCondition.hashCode)int
android.view.contentcapture.ContentCaptureCondition.equals(Object)boolean
android.view.contentcapture.ContentCaptureCondition.toString)String
android.view.contentcapture.ContentCaptureCondition.describeContents)int
android.view.contentcapture.ContentCaptureCondition.writeToParcel(android.os.Parcel,int)void
android.view.contentcapture.ContentCaptureContext.setExtras(Bundle)Builder
android.view.contentcapture.ContentCaptureContext.build)android.view.contentcapture.ContentCaptureContext
android.view.contentcapture.ContentCaptureContext.getExtras)Bundle
android.view.contentcapture.ContentCaptureContext.getLocusId)android.content.LocusId
android.view.contentcapture.ContentCaptureContext.forLocusId(String)android.view.contentcapture.ContentCaptureContext
android.view.contentcapture.ContentCaptureContext.toString)String
android.view.contentcapture.ContentCaptureContext.describeContents)int
android.view.contentcapture.ContentCaptureContext.writeToParcel(Parcel,int)void
android.view.contentcapture.ContentCaptureManager.getServiceComponentName)android.content.ComponentName
android.view.contentcapture.ContentCaptureManager.isContentCaptureEnabled)boolean
android.view.contentcapture.ContentCaptureManager.getContentCaptureConditions)java.util.Set
android.view.contentcapture.ContentCaptureManager.setContentCaptureEnabled(boolean)void
android.view.contentcapture.ContentCaptureManager.removeData(android.view.contentcapture.DataRemovalRequest)void
android.view.contentcapture.ContentCaptureSession.getContentCaptureSessionId)android.view.contentcapture.ContentCaptureSessionId
android.view.contentcapture.ContentCaptureSession.createContentCaptureSession(android.view.contentcapture.ContentCaptureContext)android.view.contentcapture.ContentCaptureSession
android.view.contentcapture.ContentCaptureSession.setContentCaptureContext(android.view.contentcapture.ContentCaptureContext)void
android.view.contentcapture.ContentCaptureSession.getContentCaptureContext)android.view.contentcapture.ContentCaptureContext
android.view.contentcapture.ContentCaptureSession.destroy)void
android.view.contentcapture.ContentCaptureSession.close)void
android.view.contentcapture.ContentCaptureSession.notifyViewAppeared(android.view.ViewStructure)void
android.view.contentcapture.ContentCaptureSession.notifyViewDisappeared(android.view.autofill.AutofillId)void
android.view.contentcapture.ContentCaptureSession.notifyViewsDisappeared(android.view.autofill.AutofillId,long)void
android.view.contentcapture.ContentCaptureSession.notifyViewTextChanged(android.view.autofill.AutofillId,CharSequence)void
android.view.contentcapture.ContentCaptureSession.newViewStructure(android.view.View)android.view.ViewStructure
android.view.contentcapture.ContentCaptureSession.newAutofillId(android.view.autofill.AutofillId,long)android.view.autofill.AutofillId
android.view.contentcapture.ContentCaptureSession.newVirtualViewStructure(android.view.autofill.AutofillId,long)android.view.ViewStructure
android.view.contentcapture.ContentCaptureSession.toString)String
android.view.contentcapture.ContentCaptureSessionId.hashCode)int
android.view.contentcapture.ContentCaptureSessionId.equals(Object)boolean
android.view.contentcapture.ContentCaptureSessionId.toString)String
android.view.contentcapture.ContentCaptureSessionId.describeContents)int
android.view.contentcapture.ContentCaptureSessionId.writeToParcel(android.os.Parcel,int)void
android.view.contentcapture.DataRemovalRequest.getLocusId)android.content.LocusId
android.view.contentcapture.DataRemovalRequest.getFlags)int
android.view.contentcapture.DataRemovalRequest.forEverything)Builder
android.view.contentcapture.DataRemovalRequest.addLocusId(android.content.LocusId,int)Builder
android.view.contentcapture.DataRemovalRequest.build)android.view.contentcapture.DataRemovalRequest
android.view.contentcapture.DataRemovalRequest.getPackageName)String
android.view.contentcapture.DataRemovalRequest.isForEverything)boolean
android.view.contentcapture.DataRemovalRequest.getLocusIdRequests)java.util.List
android.view.contentcapture.DataRemovalRequest.describeContents)int
android.view.contentcapture.DataRemovalRequest.writeToParcel(android.os.Parcel,int)void
android.view.inputmethod.BaseInputConnection.removeComposingSpans(android.text.Spannable)void
android.view.inputmethod.BaseInputConnection.setComposingSpans(android.text.Spannable)void
android.view.inputmethod.BaseInputConnection.getComposingSpanStart(android.text.Spannable)int
android.view.inputmethod.BaseInputConnection.getComposingSpanEnd(android.text.Spannable)int
android.view.inputmethod.BaseInputConnection.getEditable)android.text.Editable
android.view.inputmethod.BaseInputConnection.beginBatchEdit)boolean
android.view.inputmethod.BaseInputConnection.endBatchEdit)boolean
android.view.inputmethod.BaseInputConnection.closeConnection)void
android.view.inputmethod.BaseInputConnection.clearMetaKeyStates(int)boolean
android.view.inputmethod.BaseInputConnection.commitCompletion(android.view.inputmethod.CompletionInfo)boolean
android.view.inputmethod.BaseInputConnection.commitCorrection(android.view.inputmethod.CorrectionInfo)boolean
android.view.inputmethod.BaseInputConnection.commitText(CharSequence,int)boolean
android.view.inputmethod.BaseInputConnection.deleteSurroundingText(int,int)boolean
android.view.inputmethod.BaseInputConnection.deleteSurroundingTextInCodePoints(int,int)boolean
android.view.inputmethod.BaseInputConnection.finishComposingText)boolean
android.view.inputmethod.BaseInputConnection.getCursorCapsMode(int)int
android.view.inputmethod.BaseInputConnection.getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)android.view.inputmethod.ExtractedText
android.view.inputmethod.BaseInputConnection.getTextBeforeCursor(int,int)CharSequence
android.view.inputmethod.BaseInputConnection.getSelectedText(int)CharSequence
android.view.inputmethod.BaseInputConnection.getTextAfterCursor(int,int)CharSequence
android.view.inputmethod.BaseInputConnection.performEditorAction(int)boolean
android.view.inputmethod.BaseInputConnection.performContextMenuAction(int)boolean
android.view.inputmethod.BaseInputConnection.performPrivateCommand(String,android.os.Bundle)boolean
android.view.inputmethod.BaseInputConnection.requestCursorUpdates(int)boolean
android.view.inputmethod.BaseInputConnection.getHandler)android.os.Handler
android.view.inputmethod.BaseInputConnection.setComposingText(CharSequence,int)boolean
android.view.inputmethod.BaseInputConnection.setComposingRegion(int,int)boolean
android.view.inputmethod.BaseInputConnection.setSelection(int,int)boolean
android.view.inputmethod.BaseInputConnection.sendKeyEvent(android.view.KeyEvent)boolean
android.view.inputmethod.BaseInputConnection.reportFullscreenMode(boolean)boolean
android.view.inputmethod.BaseInputConnection.commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)boolean
android.view.inputmethod.CompletionInfo.getId)long
android.view.inputmethod.CompletionInfo.getPosition)int
android.view.inputmethod.CompletionInfo.getText)CharSequence
android.view.inputmethod.CompletionInfo.getLabel)CharSequence
android.view.inputmethod.CompletionInfo.toString)String
android.view.inputmethod.CompletionInfo.writeToParcel(android.os.Parcel,int)void
android.view.inputmethod.CompletionInfo.describeContents)int
android.view.inputmethod.CorrectionInfo.getOffset)int
android.view.inputmethod.CorrectionInfo.getOldText)CharSequence
android.view.inputmethod.CorrectionInfo.getNewText)CharSequence
android.view.inputmethod.CorrectionInfo.toString)String
android.view.inputmethod.CorrectionInfo.writeToParcel(android.os.Parcel,int)void
android.view.inputmethod.CorrectionInfo.describeContents)int
android.view.inputmethod.CursorAnchorInfo.setSelectionRange(int,int)Builder
android.view.inputmethod.CursorAnchorInfo.setComposingText(int,CharSequence)Builder
android.view.inputmethod.CursorAnchorInfo.setInsertionMarkerLocation(float,float,float,float,int)Builder
android.view.inputmethod.CursorAnchorInfo.addCharacterBounds(int,float,float,float,float,int)Builder
android.view.inputmethod.CursorAnchorInfo.setMatrix(android.graphics.Matrix)Builder
android.view.inputmethod.CursorAnchorInfo.build)android.view.inputmethod.CursorAnchorInfo
android.view.inputmethod.CursorAnchorInfo.reset)void
android.view.inputmethod.CursorAnchorInfo.writeToParcel(android.os.Parcel,int)void
android.view.inputmethod.CursorAnchorInfo.hashCode)int
android.view.inputmethod.CursorAnchorInfo.equals(Object)boolean
android.view.inputmethod.CursorAnchorInfo.toString)String
android.view.inputmethod.CursorAnchorInfo.getSelectionStart)int
android.view.inputmethod.CursorAnchorInfo.getSelectionEnd)int
android.view.inputmethod.CursorAnchorInfo.getComposingTextStart)int
android.view.inputmethod.CursorAnchorInfo.getComposingText)CharSequence
android.view.inputmethod.CursorAnchorInfo.getInsertionMarkerFlags)int
android.view.inputmethod.CursorAnchorInfo.getInsertionMarkerHorizontal)float
android.view.inputmethod.CursorAnchorInfo.getInsertionMarkerTop)float
android.view.inputmethod.CursorAnchorInfo.getInsertionMarkerBaseline)float
android.view.inputmethod.CursorAnchorInfo.getInsertionMarkerBottom)float
android.view.inputmethod.CursorAnchorInfo.getCharacterBounds(int)android.graphics.RectF
android.view.inputmethod.CursorAnchorInfo.getCharacterBoundsFlags(int)int
android.view.inputmethod.CursorAnchorInfo.getMatrix)android.graphics.Matrix
android.view.inputmethod.CursorAnchorInfo.describeContents)int
android.view.inputmethod.EditorInfo.makeCompatible(int)void
android.view.inputmethod.EditorInfo.dump(android.util.Printer,String)void
android.view.inputmethod.EditorInfo.writeToParcel(Parcel,int)void
android.view.inputmethod.EditorInfo.describeContents)int
android.view.inputmethod.ExtractedText.writeToParcel(android.os.Parcel,int)void
android.view.inputmethod.ExtractedText.describeContents)int
android.view.inputmethod.ExtractedTextRequest.writeToParcel(android.os.Parcel,int)void
android.view.inputmethod.ExtractedTextRequest.describeContents)int
android.view.inputmethod.InputBinding.getConnection)android.view.inputmethod.InputConnection
android.view.inputmethod.InputBinding.getConnectionToken)IBinder
android.view.inputmethod.InputBinding.getUid)int
android.view.inputmethod.InputBinding.getPid)int
android.view.inputmethod.InputBinding.toString)String
android.view.inputmethod.InputBinding.writeToParcel(Parcel,int)void
android.view.inputmethod.InputBinding.describeContents)int
android.view.inputmethod.InputConnectionWrapper.setTarget(android.view.inputmethod.InputConnection)void
android.view.inputmethod.InputConnectionWrapper.getTextBeforeCursor(int,int)CharSequence
android.view.inputmethod.InputConnectionWrapper.getTextAfterCursor(int,int)CharSequence
android.view.inputmethod.InputConnectionWrapper.getSelectedText(int)CharSequence
android.view.inputmethod.InputConnectionWrapper.getCursorCapsMode(int)int
android.view.inputmethod.InputConnectionWrapper.getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)android.view.inputmethod.ExtractedText
android.view.inputmethod.InputConnectionWrapper.deleteSurroundingTextInCodePoints(int,int)boolean
android.view.inputmethod.InputConnectionWrapper.deleteSurroundingText(int,int)boolean
android.view.inputmethod.InputConnectionWrapper.setComposingText(CharSequence,int)boolean
android.view.inputmethod.InputConnectionWrapper.setComposingRegion(int,int)boolean
android.view.inputmethod.InputConnectionWrapper.finishComposingText)boolean
android.view.inputmethod.InputConnectionWrapper.commitText(CharSequence,int)boolean
android.view.inputmethod.InputConnectionWrapper.commitCompletion(android.view.inputmethod.CompletionInfo)boolean
android.view.inputmethod.InputConnectionWrapper.commitCorrection(android.view.inputmethod.CorrectionInfo)boolean
android.view.inputmethod.InputConnectionWrapper.setSelection(int,int)boolean
android.view.inputmethod.InputConnectionWrapper.performEditorAction(int)boolean
android.view.inputmethod.InputConnectionWrapper.performContextMenuAction(int)boolean
android.view.inputmethod.InputConnectionWrapper.beginBatchEdit)boolean
android.view.inputmethod.InputConnectionWrapper.endBatchEdit)boolean
android.view.inputmethod.InputConnectionWrapper.sendKeyEvent(android.view.KeyEvent)boolean
android.view.inputmethod.InputConnectionWrapper.clearMetaKeyStates(int)boolean
android.view.inputmethod.InputConnectionWrapper.reportFullscreenMode(boolean)boolean
android.view.inputmethod.InputConnectionWrapper.performPrivateCommand(String,android.os.Bundle)boolean
android.view.inputmethod.InputConnectionWrapper.requestCursorUpdates(int)boolean
android.view.inputmethod.InputConnectionWrapper.getHandler)android.os.Handler
android.view.inputmethod.InputConnectionWrapper.closeConnection)void
android.view.inputmethod.InputConnectionWrapper.commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)boolean
android.view.inputmethod.InputContentInfo.getContentUri)android.net.Uri
android.view.inputmethod.InputContentInfo.getDescription)android.content.ClipDescription
android.view.inputmethod.InputContentInfo.getLinkUri)android.net.Uri
android.view.inputmethod.InputContentInfo.requestPermission)void
android.view.inputmethod.InputContentInfo.releasePermission)void
android.view.inputmethod.InputContentInfo.writeToParcel(android.os.Parcel,int)void
android.view.inputmethod.InputContentInfo.describeContents)int
android.view.inputmethod.InputMethodInfo.getId)String
android.view.inputmethod.InputMethodInfo.getPackageName)String
android.view.inputmethod.InputMethodInfo.getServiceName)String
android.view.inputmethod.InputMethodInfo.getServiceInfo)ServiceInfo
android.view.inputmethod.InputMethodInfo.getComponent)android.content.ComponentName
android.view.inputmethod.InputMethodInfo.loadLabel(PackageManager)CharSequence
android.view.inputmethod.InputMethodInfo.loadIcon(PackageManager)android.graphics.drawable.Drawable
android.view.inputmethod.InputMethodInfo.getSettingsActivity)String
android.view.inputmethod.InputMethodInfo.getSubtypeCount)int
android.view.inputmethod.InputMethodInfo.getSubtypeAt(int)android.view.inputmethod.InputMethodSubtype
android.view.inputmethod.InputMethodInfo.getIsDefaultResourceId)int
android.view.inputmethod.InputMethodInfo.dump(android.util.Printer,String)void
android.view.inputmethod.InputMethodInfo.toString)String
android.view.inputmethod.InputMethodInfo.equals(Object)boolean
android.view.inputmethod.InputMethodInfo.hashCode)int
android.view.inputmethod.InputMethodInfo.writeToParcel(android.os.Parcel,int)void
android.view.inputmethod.InputMethodInfo.describeContents)int
android.view.inputmethod.InputMethodManager.getInputMethodList)java.util.List
android.view.inputmethod.InputMethodManager.getEnabledInputMethodList)java.util.List
android.view.inputmethod.InputMethodManager.getEnabledInputMethodSubtypeList(android.view.inputmethod.InputMethodInfo,boolean)java.util.List
android.view.inputmethod.InputMethodManager.showStatusIcon(IBinder,String,int)void
android.view.inputmethod.InputMethodManager.hideStatusIcon(IBinder)void
android.view.inputmethod.InputMethodManager.isFullscreenMode)boolean
android.view.inputmethod.InputMethodManager.isActive(android.view.View)boolean
android.view.inputmethod.InputMethodManager.isActive)boolean
android.view.inputmethod.InputMethodManager.isAcceptingText)boolean
android.view.inputmethod.InputMethodManager.displayCompletions(android.view.View,android.view.inputmethod.CompletionInfo)void
android.view.inputmethod.InputMethodManager.updateExtractedText(android.view.View,int,android.view.inputmethod.ExtractedText)void
android.view.inputmethod.InputMethodManager.showSoftInput(android.view.View,int)boolean
android.view.inputmethod.InputMethodManager.showSoftInput(android.view.View,int,ResultReceiver)boolean
android.view.inputmethod.InputMethodManager.hideSoftInputFromWindow(IBinder,int)boolean
android.view.inputmethod.InputMethodManager.hideSoftInputFromWindow(IBinder,int,ResultReceiver)boolean
android.view.inputmethod.InputMethodManager.toggleSoftInputFromWindow(IBinder,int,int)void
android.view.inputmethod.InputMethodManager.toggleSoftInput(int,int)void
android.view.inputmethod.InputMethodManager.restartInput(android.view.View)void
android.view.inputmethod.InputMethodManager.updateSelection(android.view.View,int,int,int,int)void
android.view.inputmethod.InputMethodManager.viewClicked(android.view.View)void
android.view.inputmethod.InputMethodManager.isWatchingCursor(android.view.View)boolean
android.view.inputmethod.InputMethodManager.updateCursor(android.view.View,int,int,int,int)void
android.view.inputmethod.InputMethodManager.updateCursorAnchorInfo(android.view.View,android.view.inputmethod.CursorAnchorInfo)void
android.view.inputmethod.InputMethodManager.sendAppPrivateCommand(android.view.View,String,Bundle)void
android.view.inputmethod.InputMethodManager.setInputMethod(IBinder,String)void
android.view.inputmethod.InputMethodManager.setInputMethodAndSubtype(IBinder,String,android.view.inputmethod.InputMethodSubtype)void
android.view.inputmethod.InputMethodManager.hideSoftInputFromInputMethod(IBinder,int)void
android.view.inputmethod.InputMethodManager.showSoftInputFromInputMethod(IBinder,int)void
android.view.inputmethod.InputMethodManager.dispatchKeyEventFromInputMethod(android.view.View,android.view.KeyEvent)void
android.view.inputmethod.InputMethodManager.showInputMethodPicker)void
android.view.inputmethod.InputMethodManager.showInputMethodAndSubtypeEnabler(String)void
android.view.inputmethod.InputMethodManager.getCurrentInputMethodSubtype)android.view.inputmethod.InputMethodSubtype
android.view.inputmethod.InputMethodManager.setCurrentInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)boolean
android.view.inputmethod.InputMethodManager.getShortcutInputMethodsAndSubtypes)java.util.Map
android.view.inputmethod.InputMethodManager.switchToLastInputMethod(IBinder)boolean
android.view.inputmethod.InputMethodManager.switchToNextInputMethod(IBinder,boolean)boolean
android.view.inputmethod.InputMethodManager.shouldOfferSwitchingToNextInputMethod(IBinder)boolean
android.view.inputmethod.InputMethodManager.setAdditionalInputMethodSubtypes(String,android.view.inputmethod.InputMethodSubtype)void
android.view.inputmethod.InputMethodManager.getLastInputMethodSubtype)android.view.inputmethod.InputMethodSubtype
android.view.inputmethod.InputMethodSubtype.setIsAuxiliary(boolean)android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder
android.view.inputmethod.InputMethodSubtype.setOverridesImplicitlyEnabledSubtype(boolean)android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder
android.view.inputmethod.InputMethodSubtype.setIsAsciiCapable(boolean)android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder
android.view.inputmethod.InputMethodSubtype.setSubtypeIconResId(int)android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder
android.view.inputmethod.InputMethodSubtype.setSubtypeNameResId(int)android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder
android.view.inputmethod.InputMethodSubtype.setSubtypeId(int)android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder
android.view.inputmethod.InputMethodSubtype.setSubtypeLocale(String)android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder
android.view.inputmethod.InputMethodSubtype.setLanguageTag(String)android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder
android.view.inputmethod.InputMethodSubtype.setSubtypeMode(String)android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder
android.view.inputmethod.InputMethodSubtype.setSubtypeExtraValue(String)android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder
android.view.inputmethod.InputMethodSubtype.build)android.view.inputmethod.InputMethodSubtype
android.view.inputmethod.InputMethodSubtype.getNameResId)int
android.view.inputmethod.InputMethodSubtype.getIconResId)int
android.view.inputmethod.InputMethodSubtype.getLocale)String
android.view.inputmethod.InputMethodSubtype.getLanguageTag)String
android.view.inputmethod.InputMethodSubtype.getMode)String
android.view.inputmethod.InputMethodSubtype.getExtraValue)String
android.view.inputmethod.InputMethodSubtype.isAuxiliary)boolean
android.view.inputmethod.InputMethodSubtype.overridesImplicitlyEnabledSubtype)boolean
android.view.inputmethod.InputMethodSubtype.isAsciiCapable)boolean
android.view.inputmethod.InputMethodSubtype.getDisplayName(android.content.Context,String,android.content.pm.ApplicationInfo)CharSequence
android.view.inputmethod.InputMethodSubtype.containsExtraValueKey(String)boolean
android.view.inputmethod.InputMethodSubtype.getExtraValueOf(String)String
android.view.inputmethod.InputMethodSubtype.hashCode)int
android.view.inputmethod.InputMethodSubtype.equals(Object)boolean
android.view.inputmethod.InputMethodSubtype.describeContents)int
android.view.inputmethod.InputMethodSubtype.writeToParcel(android.os.Parcel,int)void
android.view.inspector.IntFlagMapping.get(int)java.util.Set
android.view.inspector.IntFlagMapping.add(int,int,String)void
android.view.inspector.StaticInspectionCompanionProvider.provide(Class)android.view.inspector.InspectionCompanion
android.view.inspector.WindowInspector.getGlobalWindowViews)java.util.List
android.view.textclassifier.ConversationAction.setAction(android.app.RemoteAction)Builder
android.view.textclassifier.ConversationAction.setTextReply(CharSequence)Builder
android.view.textclassifier.ConversationAction.setConfidenceScore(float)Builder
android.view.textclassifier.ConversationAction.setExtras(Bundle)Builder
android.view.textclassifier.ConversationAction.build)android.view.textclassifier.ConversationAction
android.view.textclassifier.ConversationAction.writeToParcel(Parcel,int)void
android.view.textclassifier.ConversationAction.describeContents)int
android.view.textclassifier.ConversationAction.getType)String
android.view.textclassifier.ConversationAction.getAction)android.app.RemoteAction
android.view.textclassifier.ConversationAction.getConfidenceScore)float
android.view.textclassifier.ConversationAction.getTextReply)CharSequence
android.view.textclassifier.ConversationAction.getExtras)Bundle
android.view.textclassifier.ConversationActions.setHints(java.util.List)Builder
android.view.textclassifier.ConversationActions.setTypeConfig(TextClassifier.EntityConfig)Builder
android.view.textclassifier.ConversationActions.setMaxSuggestions(int)Builder
android.view.textclassifier.ConversationActions.setExtras(Bundle)Builder
android.view.textclassifier.ConversationActions.build)Request
android.view.textclassifier.ConversationActions.writeToParcel(Parcel,int)void
android.view.textclassifier.ConversationActions.describeContents)int
android.view.textclassifier.ConversationActions.getConversation)java.util.List
android.view.textclassifier.ConversationActions.getMaxSuggestions)int
android.view.textclassifier.ConversationActions.getHints)java.util.List
android.view.textclassifier.ConversationActions.getCallingPackageName)String
android.view.textclassifier.ConversationActions.getExtras)Bundle
android.view.textclassifier.ConversationActions.setText(CharSequence)Builder
android.view.textclassifier.ConversationActions.setReferenceTime(java.time.ZonedDateTime)Builder
android.view.textclassifier.ConversationActions.setExtras(Bundle)Builder
android.view.textclassifier.ConversationActions.build)Message
android.view.textclassifier.ConversationActions.writeToParcel(Parcel,int)void
android.view.textclassifier.ConversationActions.describeContents)int
android.view.textclassifier.ConversationActions.getAuthor)android.app.Person
android.view.textclassifier.ConversationActions.getReferenceTime)java.time.ZonedDateTime
android.view.textclassifier.ConversationActions.getText)CharSequence
android.view.textclassifier.ConversationActions.getExtras)Bundle
android.view.textclassifier.ConversationActions.describeContents)int
android.view.textclassifier.ConversationActions.writeToParcel(Parcel,int)void
android.view.textclassifier.ConversationActions.getConversationActions)java.util.List
android.view.textclassifier.ConversationActions.getId)String
android.view.textclassifier.SelectionEvent.writeToParcel(android.os.Parcel,int)void
android.view.textclassifier.SelectionEvent.describeContents)int
android.view.textclassifier.SelectionEvent.createSelectionStartedEvent(int,int)android.view.textclassifier.SelectionEvent
android.view.textclassifier.SelectionEvent.createSelectionModifiedEvent(int,int)android.view.textclassifier.SelectionEvent
android.view.textclassifier.SelectionEvent.createSelectionModifiedEvent(int,int,android.view.textclassifier.TextClassification)android.view.textclassifier.SelectionEvent
android.view.textclassifier.SelectionEvent.createSelectionModifiedEvent(int,int,android.view.textclassifier.TextSelection)android.view.textclassifier.SelectionEvent
android.view.textclassifier.SelectionEvent.createSelectionActionEvent(int,int,int)android.view.textclassifier.SelectionEvent
android.view.textclassifier.SelectionEvent.createSelectionActionEvent(int,int,int,android.view.textclassifier.TextClassification)android.view.textclassifier.SelectionEvent
android.view.textclassifier.SelectionEvent.getEventType)int
android.view.textclassifier.SelectionEvent.getEntityType)String
android.view.textclassifier.SelectionEvent.getPackageName)String
android.view.textclassifier.SelectionEvent.getWidgetType)String
android.view.textclassifier.SelectionEvent.getWidgetVersion)String
android.view.textclassifier.SelectionEvent.getInvocationMethod)int
android.view.textclassifier.SelectionEvent.getResultId)String
android.view.textclassifier.SelectionEvent.getEventTime)long
android.view.textclassifier.SelectionEvent.getDurationSinceSessionStart)long
android.view.textclassifier.SelectionEvent.getDurationSincePreviousEvent)long
android.view.textclassifier.SelectionEvent.getEventIndex)int
android.view.textclassifier.SelectionEvent.getSessionId)android.view.textclassifier.TextClassificationSessionId
android.view.textclassifier.SelectionEvent.getStart)int
android.view.textclassifier.SelectionEvent.getEnd)int
android.view.textclassifier.SelectionEvent.getSmartStart)int
android.view.textclassifier.SelectionEvent.getSmartEnd)int
android.view.textclassifier.SelectionEvent.isTerminal(int)boolean
android.view.textclassifier.SelectionEvent.hashCode)int
android.view.textclassifier.SelectionEvent.equals(Object)boolean
android.view.textclassifier.SelectionEvent.toString)String
android.view.textclassifier.TextClassification.setDefaultLocales(LocaleList)Builder
android.view.textclassifier.TextClassification.setReferenceTime(java.time.ZonedDateTime)Builder
android.view.textclassifier.TextClassification.setExtras(Bundle)Builder
android.view.textclassifier.TextClassification.build)Request
android.view.textclassifier.TextClassification.getText)CharSequence
android.view.textclassifier.TextClassification.getStartIndex)int
android.view.textclassifier.TextClassification.getEndIndex)int
android.view.textclassifier.TextClassification.getDefaultLocales)LocaleList
android.view.textclassifier.TextClassification.getReferenceTime)java.time.ZonedDateTime
android.view.textclassifier.TextClassification.getCallingPackageName)String
android.view.textclassifier.TextClassification.getExtras)Bundle
android.view.textclassifier.TextClassification.describeContents)int
android.view.textclassifier.TextClassification.writeToParcel(Parcel,int)void
android.view.textclassifier.TextClassification.setText(String)Builder
android.view.textclassifier.TextClassification.setEntityType(String,float)Builder
android.view.textclassifier.TextClassification.addAction(android.app.RemoteAction)Builder
android.view.textclassifier.TextClassification.setIcon(android.graphics.drawable.Drawable)Builder
android.view.textclassifier.TextClassification.setLabel(String)Builder
android.view.textclassifier.TextClassification.setIntent(android.content.Intent)Builder
android.view.textclassifier.TextClassification.setOnClickListener(android.view.View.OnClickListener)Builder
android.view.textclassifier.TextClassification.setId(String)Builder
android.view.textclassifier.TextClassification.setExtras(Bundle)Builder
android.view.textclassifier.TextClassification.build)android.view.textclassifier.TextClassification
android.view.textclassifier.TextClassification.getText)String
android.view.textclassifier.TextClassification.getEntityCount)int
android.view.textclassifier.TextClassification.getEntity(int)String
android.view.textclassifier.TextClassification.getConfidenceScore(String)float
android.view.textclassifier.TextClassification.getActions)java.util.List
android.view.textclassifier.TextClassification.getIcon)android.graphics.drawable.Drawable
android.view.textclassifier.TextClassification.getLabel)CharSequence
android.view.textclassifier.TextClassification.getIntent)android.content.Intent
android.view.textclassifier.TextClassification.getId)String
android.view.textclassifier.TextClassification.getExtras)Bundle
android.view.textclassifier.TextClassification.toString)String
android.view.textclassifier.TextClassification.describeContents)int
android.view.textclassifier.TextClassification.writeToParcel(Parcel,int)void
android.view.textclassifier.TextClassificationContext.setWidgetVersion(String)Builder
android.view.textclassifier.TextClassificationContext.build)android.view.textclassifier.TextClassificationContext
android.view.textclassifier.TextClassificationContext.getPackageName)String
android.view.textclassifier.TextClassificationContext.getWidgetType)String
android.view.textclassifier.TextClassificationContext.getWidgetVersion)String
android.view.textclassifier.TextClassificationContext.toString)String
android.view.textclassifier.TextClassificationContext.describeContents)int
android.view.textclassifier.TextClassificationContext.writeToParcel(android.os.Parcel,int)void
android.view.textclassifier.TextClassificationManager.getTextClassifier)android.view.textclassifier.TextClassifier
android.view.textclassifier.TextClassificationManager.setTextClassifier(android.view.textclassifier.TextClassifier)void
android.view.textclassifier.TextClassificationManager.createTextClassificationSession(android.view.textclassifier.TextClassificationContext)android.view.textclassifier.TextClassifier
android.view.textclassifier.TextClassificationManager.setTextClassificationSessionFactory(android.view.textclassifier.TextClassificationSessionFactory)void
android.view.textclassifier.TextClassificationManager.finalize)void
android.view.textclassifier.TextClassificationSessionId.hashCode)int
android.view.textclassifier.TextClassificationSessionId.equals(Object)boolean
android.view.textclassifier.TextClassificationSessionId.toString)String
android.view.textclassifier.TextClassificationSessionId.writeToParcel(android.os.Parcel,int)void
android.view.textclassifier.TextClassificationSessionId.describeContents)int
android.view.textclassifier.TextClassifier.setIncludedTypes(java.util.Collection)Builder
android.view.textclassifier.TextClassifier.setExcludedTypes(java.util.Collection)Builder
android.view.textclassifier.TextClassifier.includeTypesFromTextClassifier(boolean)Builder
android.view.textclassifier.TextClassifier.setHints(java.util.Collection)Builder
android.view.textclassifier.TextClassifier.build)EntityConfig
android.view.textclassifier.TextClassifier.writeToParcel(Parcel,int)void
android.view.textclassifier.TextClassifier.createWithHints(java.util.Collection)EntityConfig
android.view.textclassifier.TextClassifier.create(java.util.Collection,java.util.Collection,java.util.Collection)EntityConfig
android.view.textclassifier.TextClassifier.createWithExplicitEntityList(java.util.Collection)EntityConfig
android.view.textclassifier.TextClassifier.resolveEntityListModifications(java.util.Collection)java.util.Collection
android.view.textclassifier.TextClassifier.getHints)java.util.Collection
android.view.textclassifier.TextClassifier.shouldIncludeTypesFromTextClassifier)boolean
android.view.textclassifier.TextClassifier.describeContents)int
android.view.textclassifier.TextClassifier.suggestSelection(TextSelection.Request)android.view.textclassifier.TextSelection
android.view.textclassifier.TextClassifier.suggestSelection(CharSequence,int,int,LocaleList)android.view.textclassifier.TextSelection
android.view.textclassifier.TextClassifier.classifyText(TextClassification.Request)android.view.textclassifier.TextClassification
android.view.textclassifier.TextClassifier.classifyText(CharSequence,int,int,LocaleList)android.view.textclassifier.TextClassification
android.view.textclassifier.TextClassifier.generateLinks(TextLinks.Request)android.view.textclassifier.TextLinks
android.view.textclassifier.TextClassifier.getMaxGenerateLinksTextLength)int
android.view.textclassifier.TextClassifier.detectLanguage(TextLanguage.Request)android.view.textclassifier.TextLanguage
android.view.textclassifier.TextClassifier.suggestConversationActions(ConversationActions.Request)android.view.textclassifier.ConversationActions
android.view.textclassifier.TextClassifier.onSelectionEvent(android.view.textclassifier.SelectionEvent)void
android.view.textclassifier.TextClassifier.onTextClassifierEvent(android.view.textclassifier.TextClassifierEvent)void
android.view.textclassifier.TextClassifier.destroy)void
android.view.textclassifier.TextClassifier.isDestroyed)boolean
android.view.textclassifier.TextClassifierEvent.setRelativeWordStartIndex(int)Builder
android.view.textclassifier.TextClassifierEvent.setRelativeWordEndIndex(int)Builder
android.view.textclassifier.TextClassifierEvent.setRelativeSuggestedWordStartIndex(int)Builder
android.view.textclassifier.TextClassifierEvent.setRelativeSuggestedWordEndIndex(int)Builder
android.view.textclassifier.TextClassifierEvent.build)TextSelectionEvent
android.view.textclassifier.TextClassifierEvent.writeToParcel(Parcel,int)void
android.view.textclassifier.TextClassifierEvent.getRelativeWordStartIndex)int
android.view.textclassifier.TextClassifierEvent.getRelativeWordEndIndex)int
android.view.textclassifier.TextClassifierEvent.getRelativeSuggestedWordStartIndex)int
android.view.textclassifier.TextClassifierEvent.getRelativeSuggestedWordEndIndex)int
android.view.textclassifier.TextClassifierEvent.build)TextLinkifyEvent
android.view.textclassifier.TextClassifierEvent.build)LanguageDetectionEvent
android.view.textclassifier.TextClassifierEvent.build)ConversationActionsEvent
android.view.textclassifier.TextClassifierEvent.setEventContext(android.view.textclassifier.TextClassificationContext)Builder
android.view.textclassifier.TextClassifierEvent.setResultId(String)Builder
android.view.textclassifier.TextClassifierEvent.setEventIndex(int)Builder
android.view.textclassifier.TextClassifierEvent.setModelName(String)Builder
android.view.textclassifier.TextClassifierEvent.setLocale(android.icu.util.ULocale)Builder
android.view.textclassifier.TextClassifierEvent.setExtras(Bundle)Builder
android.view.textclassifier.TextClassifierEvent.describeContents)int
android.view.textclassifier.TextClassifierEvent.writeToParcel(Parcel,int)void
android.view.textclassifier.TextClassifierEvent.getEventCategory)int
android.view.textclassifier.TextClassifierEvent.getEventType)int
android.view.textclassifier.TextClassifierEvent.getEventContext)android.view.textclassifier.TextClassificationContext
android.view.textclassifier.TextClassifierEvent.getResultId)String
android.view.textclassifier.TextClassifierEvent.getEventIndex)int
android.view.textclassifier.TextClassifierEvent.getModelName)String
android.view.textclassifier.TextClassifierEvent.getLocale)android.icu.util.ULocale
android.view.textclassifier.TextClassifierEvent.getExtras)Bundle
android.view.textclassifier.TextClassifierEvent.toString)String
android.view.textclassifier.TextLanguage.setExtras(Bundle)Builder
android.view.textclassifier.TextLanguage.build)Request
android.view.textclassifier.TextLanguage.getText)CharSequence
android.view.textclassifier.TextLanguage.getCallingPackageName)String
android.view.textclassifier.TextLanguage.getExtras)Bundle
android.view.textclassifier.TextLanguage.describeContents)int
android.view.textclassifier.TextLanguage.writeToParcel(Parcel,int)void
android.view.textclassifier.TextLanguage.putLocale(android.icu.util.ULocale,float)Builder
android.view.textclassifier.TextLanguage.setId(String)Builder
android.view.textclassifier.TextLanguage.setExtras(Bundle)Builder
android.view.textclassifier.TextLanguage.build)android.view.textclassifier.TextLanguage
android.view.textclassifier.TextLanguage.getId)String
android.view.textclassifier.TextLanguage.getLocaleHypothesisCount)int
android.view.textclassifier.TextLanguage.getLocale(int)android.icu.util.ULocale
android.view.textclassifier.TextLanguage.getConfidenceScore(android.icu.util.ULocale)float
android.view.textclassifier.TextLanguage.getExtras)Bundle
android.view.textclassifier.TextLanguage.toString)String
android.view.textclassifier.TextLanguage.describeContents)int
android.view.textclassifier.TextLanguage.writeToParcel(Parcel,int)void
android.view.textclassifier.TextLinks.onClick(android.view.View)void
android.view.textclassifier.TextLinks.getTextLink)TextLink
android.view.textclassifier.TextLinks.getStart)int
android.view.textclassifier.TextLinks.getEnd)int
android.view.textclassifier.TextLinks.getEntityCount)int
android.view.textclassifier.TextLinks.getEntity(int)String
android.view.textclassifier.TextLinks.getConfidenceScore(String)float
android.view.textclassifier.TextLinks.getExtras)Bundle
android.view.textclassifier.TextLinks.toString)String
android.view.textclassifier.TextLinks.describeContents)int
android.view.textclassifier.TextLinks.writeToParcel(Parcel,int)void
android.view.textclassifier.TextLinks.setDefaultLocales(LocaleList)Builder
android.view.textclassifier.TextLinks.setEntityConfig(TextClassifier.EntityConfig)Builder
android.view.textclassifier.TextLinks.setExtras(Bundle)Builder
android.view.textclassifier.TextLinks.build)Request
android.view.textclassifier.TextLinks.getText)CharSequence
android.view.textclassifier.TextLinks.getDefaultLocales)LocaleList
android.view.textclassifier.TextLinks.getCallingPackageName)String
android.view.textclassifier.TextLinks.getExtras)Bundle
android.view.textclassifier.TextLinks.describeContents)int
android.view.textclassifier.TextLinks.writeToParcel(Parcel,int)void
android.view.textclassifier.TextLinks.addLink(int,int,java.util.Map)Builder
android.view.textclassifier.TextLinks.addLink(int,int,java.util.Map,Bundle)Builder
android.view.textclassifier.TextLinks.clearTextLinks)Builder
android.view.textclassifier.TextLinks.setExtras(Bundle)Builder
android.view.textclassifier.TextLinks.build)android.view.textclassifier.TextLinks
android.view.textclassifier.TextLinks.getLinks)java.util.Collection
android.view.textclassifier.TextLinks.getExtras)Bundle
android.view.textclassifier.TextLinks.apply(android.text.Spannable,int,java.util.function.Function)int
android.view.textclassifier.TextLinks.toString)String
android.view.textclassifier.TextLinks.describeContents)int
android.view.textclassifier.TextLinks.writeToParcel(Parcel,int)void
android.view.textclassifier.TextSelection.setDefaultLocales(LocaleList)Builder
android.view.textclassifier.TextSelection.setExtras(Bundle)Builder
android.view.textclassifier.TextSelection.build)Request
android.view.textclassifier.TextSelection.getText)CharSequence
android.view.textclassifier.TextSelection.getStartIndex)int
android.view.textclassifier.TextSelection.getEndIndex)int
android.view.textclassifier.TextSelection.getDefaultLocales)LocaleList
android.view.textclassifier.TextSelection.getCallingPackageName)String
android.view.textclassifier.TextSelection.getExtras)Bundle
android.view.textclassifier.TextSelection.describeContents)int
android.view.textclassifier.TextSelection.writeToParcel(Parcel,int)void
android.view.textclassifier.TextSelection.setEntityType(String,float)Builder
android.view.textclassifier.TextSelection.setId(String)Builder
android.view.textclassifier.TextSelection.setExtras(Bundle)Builder
android.view.textclassifier.TextSelection.build)android.view.textclassifier.TextSelection
android.view.textclassifier.TextSelection.getSelectionStartIndex)int
android.view.textclassifier.TextSelection.getSelectionEndIndex)int
android.view.textclassifier.TextSelection.getEntityCount)int
android.view.textclassifier.TextSelection.getEntity(int)String
android.view.textclassifier.TextSelection.getConfidenceScore(String)float
android.view.textclassifier.TextSelection.getId)String
android.view.textclassifier.TextSelection.getExtras)Bundle
android.view.textclassifier.TextSelection.toString)String
android.view.textclassifier.TextSelection.describeContents)int
android.view.textclassifier.TextSelection.writeToParcel(Parcel,int)void
android.view.textservice.SentenceSuggestionsInfo.writeToParcel(android.os.Parcel,int)void
android.view.textservice.SentenceSuggestionsInfo.describeContents)int
android.view.textservice.SentenceSuggestionsInfo.getSuggestionsCount)int
android.view.textservice.SentenceSuggestionsInfo.getSuggestionsInfoAt(int)android.view.textservice.SuggestionsInfo
android.view.textservice.SentenceSuggestionsInfo.getOffsetAt(int)int
android.view.textservice.SentenceSuggestionsInfo.getLengthAt(int)int
android.view.textservice.SpellCheckerInfo.getId)String
android.view.textservice.SpellCheckerInfo.getComponent)android.content.ComponentName
android.view.textservice.SpellCheckerInfo.getPackageName)String
android.view.textservice.SpellCheckerInfo.writeToParcel(android.os.Parcel,int)void
android.view.textservice.SpellCheckerInfo.loadLabel(android.content.pm.PackageManager)CharSequence
android.view.textservice.SpellCheckerInfo.loadIcon(android.content.pm.PackageManager)android.graphics.drawable.Drawable
android.view.textservice.SpellCheckerInfo.getServiceInfo)android.content.pm.ServiceInfo
android.view.textservice.SpellCheckerInfo.getSettingsActivity)String
android.view.textservice.SpellCheckerInfo.getSubtypeCount)int
android.view.textservice.SpellCheckerInfo.getSubtypeAt(int)android.view.textservice.SpellCheckerSubtype
android.view.textservice.SpellCheckerInfo.describeContents)int
android.view.textservice.SpellCheckerSession.isSessionDisconnected)boolean
android.view.textservice.SpellCheckerSession.getSpellChecker)android.view.textservice.SpellCheckerInfo
android.view.textservice.SpellCheckerSession.cancel)void
android.view.textservice.SpellCheckerSession.close)void
android.view.textservice.SpellCheckerSession.getSentenceSuggestions(android.view.textservice.TextInfo,int)void
android.view.textservice.SpellCheckerSession.getSuggestions(android.view.textservice.TextInfo,int)void
android.view.textservice.SpellCheckerSession.getSuggestions(android.view.textservice.TextInfo,int,boolean)void
android.view.textservice.SpellCheckerSession.finalize)void
android.view.textservice.SpellCheckerSubtype.getNameResId)int
android.view.textservice.SpellCheckerSubtype.getLocale)String
android.view.textservice.SpellCheckerSubtype.getLanguageTag)String
android.view.textservice.SpellCheckerSubtype.getExtraValue)String
android.view.textservice.SpellCheckerSubtype.containsExtraValueKey(String)boolean
android.view.textservice.SpellCheckerSubtype.getExtraValueOf(String)String
android.view.textservice.SpellCheckerSubtype.hashCode)int
android.view.textservice.SpellCheckerSubtype.equals(Object)boolean
android.view.textservice.SpellCheckerSubtype.getDisplayName(android.content.Context,String,android.content.pm.ApplicationInfo)CharSequence
android.view.textservice.SpellCheckerSubtype.describeContents)int
android.view.textservice.SpellCheckerSubtype.writeToParcel(android.os.Parcel,int)void
android.view.textservice.SuggestionsInfo.writeToParcel(android.os.Parcel,int)void
android.view.textservice.SuggestionsInfo.setCookieAndSequence(int,int)void
android.view.textservice.SuggestionsInfo.getCookie)int
android.view.textservice.SuggestionsInfo.getSequence)int
android.view.textservice.SuggestionsInfo.getSuggestionsAttributes)int
android.view.textservice.SuggestionsInfo.getSuggestionsCount)int
android.view.textservice.SuggestionsInfo.getSuggestionAt(int)String
android.view.textservice.SuggestionsInfo.describeContents)int
android.view.textservice.TextInfo.writeToParcel(android.os.Parcel,int)void
android.view.textservice.TextInfo.getText)String
android.view.textservice.TextInfo.getCharSequence)CharSequence
android.view.textservice.TextInfo.getCookie)int
android.view.textservice.TextInfo.getSequence)int
android.view.textservice.TextInfo.describeContents)int
android.view.textservice.TextServicesManager.newSpellCheckerSession(android.os.Bundle,java.util.Locale,SpellCheckerSession.SpellCheckerSessionListener,boolean)android.view.textservice.SpellCheckerSession
android.webkit.ConsoleMessage.valueOf(String)MessageLevel
android.webkit.ConsoleMessage.messageLevel)MessageLevel
android.webkit.ConsoleMessage.message)String
android.webkit.ConsoleMessage.sourceId)String
android.webkit.ConsoleMessage.lineNumber)int
android.webkit.CookieManager.clone)Object
android.webkit.CookieManager.getInstance)android.webkit.CookieManager
android.webkit.CookieManager.allowFileSchemeCookies)boolean
android.webkit.CookieManager.setAcceptFileSchemeCookies(boolean)void
android.webkit.CookieSyncManager.getInstance)android.webkit.CookieSyncManager
android.webkit.CookieSyncManager.createInstance(android.content.Context)android.webkit.CookieSyncManager
android.webkit.CookieSyncManager.sync)void
android.webkit.CookieSyncManager.syncFromRamToFlash)void
android.webkit.CookieSyncManager.resetSync)void
android.webkit.CookieSyncManager.startSync)void
android.webkit.CookieSyncManager.stopSync)void
android.webkit.CookieSyncManager.run)void
android.webkit.DateSorter.getIndex(long)int
android.webkit.DateSorter.getLabel(int)String
android.webkit.DateSorter.getBoundary(int)long
android.webkit.GeolocationPermissions.getInstance)android.webkit.GeolocationPermissions
android.webkit.GeolocationPermissions.getOrigins(android.webkit.ValueCallback)void
android.webkit.GeolocationPermissions.getAllowed(String,android.webkit.ValueCallback)void
android.webkit.GeolocationPermissions.clear(String)void
android.webkit.GeolocationPermissions.allow(String)void
android.webkit.GeolocationPermissions.clearAll)void
android.webkit.HttpAuthHandler.useHttpAuthUsernamePassword)boolean
android.webkit.HttpAuthHandler.cancel)void
android.webkit.HttpAuthHandler.proceed(String,String)void
android.webkit.JsPromptResult.confirm(String)void
android.webkit.JsResult.cancel)void
android.webkit.JsResult.confirm)void
android.webkit.MimeTypeMap.getFileExtensionFromUrl(String)String
android.webkit.MimeTypeMap.hasMimeType(String)boolean
android.webkit.MimeTypeMap.getMimeTypeFromExtension(String)String
android.webkit.MimeTypeMap.hasExtension(String)boolean
android.webkit.MimeTypeMap.getExtensionFromMimeType(String)String
android.webkit.MimeTypeMap.getSingleton)android.webkit.MimeTypeMap
android.webkit.ServiceWorkerClient.shouldInterceptRequest(android.webkit.WebResourceRequest)android.webkit.WebResourceResponse
android.webkit.ServiceWorkerController.getInstance)android.webkit.ServiceWorkerController
android.webkit.SslErrorHandler.proceed)void
android.webkit.SslErrorHandler.cancel)void
android.webkit.TracingConfig.build)android.webkit.TracingConfig
android.webkit.TracingConfig.addCategories(java.util.Collection)android.webkit.TracingConfig.Builder
android.webkit.TracingConfig.setTracingMode(int)android.webkit.TracingConfig.Builder
android.webkit.TracingConfig.getPredefinedCategories)int
android.webkit.TracingConfig.getCustomIncludedCategories)java.util.List
android.webkit.TracingConfig.getTracingMode)int
android.webkit.TracingController.getInstance)android.webkit.TracingController
android.webkit.URLUtil.guessUrl(String)String
android.webkit.URLUtil.composeSearchUrl(String,String,String)String
android.webkit.URLUtil.isAssetUrl(String)boolean
android.webkit.URLUtil.isCookielessProxyUrl(String)boolean
android.webkit.URLUtil.isFileUrl(String)boolean
android.webkit.URLUtil.isAboutUrl(String)boolean
android.webkit.URLUtil.isDataUrl(String)boolean
android.webkit.URLUtil.isJavaScriptUrl(String)boolean
android.webkit.URLUtil.isHttpUrl(String)boolean
android.webkit.URLUtil.isHttpsUrl(String)boolean
android.webkit.URLUtil.isNetworkUrl(String)boolean
android.webkit.URLUtil.isContentUrl(String)boolean
android.webkit.URLUtil.isValidUrl(String)boolean
android.webkit.URLUtil.stripAnchor(String)String
android.webkit.URLUtil.guessFileName(String,String,String)String
android.webkit.WebChromeClient.onProgressChanged(android.webkit.WebView,int)void
android.webkit.WebChromeClient.onReceivedTitle(android.webkit.WebView,String)void
android.webkit.WebChromeClient.onReceivedIcon(android.webkit.WebView,android.graphics.Bitmap)void
android.webkit.WebChromeClient.onReceivedTouchIconUrl(android.webkit.WebView,String,boolean)void
android.webkit.WebChromeClient.onShowCustomView(android.view.View,android.webkit.WebChromeClient.CustomViewCallback)void
android.webkit.WebChromeClient.onShowCustomView(android.view.View,int,android.webkit.WebChromeClient.CustomViewCallback)void
android.webkit.WebChromeClient.onHideCustomView)void
android.webkit.WebChromeClient.onCreateWindow(android.webkit.WebView,boolean,boolean,android.os.Message)boolean
android.webkit.WebChromeClient.onRequestFocus(android.webkit.WebView)void
android.webkit.WebChromeClient.onCloseWindow(android.webkit.WebView)void
android.webkit.WebChromeClient.onJsAlert(android.webkit.WebView,String,String,android.webkit.JsResult)boolean
android.webkit.WebChromeClient.onJsConfirm(android.webkit.WebView,String,String,android.webkit.JsResult)boolean
android.webkit.WebChromeClient.onJsPrompt(android.webkit.WebView,String,String,String,android.webkit.JsPromptResult)boolean
android.webkit.WebChromeClient.onJsBeforeUnload(android.webkit.WebView,String,String,android.webkit.JsResult)boolean
android.webkit.WebChromeClient.onExceededDatabaseQuota(String,String,long,long,long,WebStorage.QuotaUpdater)void
android.webkit.WebChromeClient.onReachedMaxAppCacheSize(long,long,WebStorage.QuotaUpdater)void
android.webkit.WebChromeClient.onGeolocationPermissionsShowPrompt(String,GeolocationPermissions.Callback)void
android.webkit.WebChromeClient.onGeolocationPermissionsHidePrompt)void
android.webkit.WebChromeClient.onPermissionRequest(android.webkit.PermissionRequest)void
android.webkit.WebChromeClient.onPermissionRequestCanceled(android.webkit.PermissionRequest)void
android.webkit.WebChromeClient.onJsTimeout)boolean
android.webkit.WebChromeClient.onConsoleMessage(String,int,String)void
android.webkit.WebChromeClient.onConsoleMessage(android.webkit.ConsoleMessage)boolean
android.webkit.WebChromeClient.getDefaultVideoPoster)android.graphics.Bitmap
android.webkit.WebChromeClient.getVideoLoadingProgressView)android.view.View
android.webkit.WebChromeClient.getVisitedHistory(android.webkit.ValueCallback)void
android.webkit.WebChromeClient.onShowFileChooser(android.webkit.WebView,android.webkit.ValueCallback,FileChooserParams)boolean
android.webkit.WebIconDatabase.getInstance)android.webkit.WebIconDatabase
android.webkit.WebMessage.getData)String
android.webkit.WebMessagePort.onMessage(android.webkit.WebMessagePort,android.webkit.WebMessage)void
android.webkit.WebResourceResponse.setMimeType(String)void
android.webkit.WebResourceResponse.getMimeType)String
android.webkit.WebResourceResponse.setEncoding(String)void
android.webkit.WebResourceResponse.getEncoding)String
android.webkit.WebResourceResponse.setStatusCodeAndReasonPhrase(int,String)void
android.webkit.WebResourceResponse.getStatusCode)int
android.webkit.WebResourceResponse.getReasonPhrase)String
android.webkit.WebResourceResponse.setResponseHeaders(java.util.Map)void
android.webkit.WebResourceResponse.getResponseHeaders)java.util.Map
android.webkit.WebResourceResponse.setData(java.io.InputStream)void
android.webkit.WebResourceResponse.getData)java.io.InputStream
android.webkit.WebSettings.valueOf(String)ZoomDensity
android.webkit.WebSettings.valueOf(String)TextSize
android.webkit.WebSettings.valueOf(String)RenderPriority
android.webkit.WebSettings.valueOf(String)PluginState
android.webkit.WebSettings.valueOf(String)LayoutAlgorithm
android.webkit.WebSettings.getDefaultUserAgent(android.content.Context)String
android.webkit.WebSettings.setForceDark(int)void
android.webkit.WebSettings.getForceDark)int
android.webkit.WebStorage.getOrigin)String
android.webkit.WebStorage.getQuota)long
android.webkit.WebStorage.getUsage)long
android.webkit.WebStorage.getOrigins(android.webkit.ValueCallback)void
android.webkit.WebStorage.getUsageForOrigin(String,android.webkit.ValueCallback)void
android.webkit.WebStorage.getQuotaForOrigin(String,android.webkit.ValueCallback)void
android.webkit.WebStorage.setQuotaForOrigin(String,long)void
android.webkit.WebStorage.deleteOrigin(String)void
android.webkit.WebStorage.deleteAllData)void
android.webkit.WebStorage.getInstance)android.webkit.WebStorage
android.webkit.WebView.getType)int
android.webkit.WebView.getExtra)String
android.webkit.WebView.setHorizontalScrollbarOverlay(boolean)void
android.webkit.WebView.setVerticalScrollbarOverlay(boolean)void
android.webkit.WebView.overlayHorizontalScrollbar)boolean
android.webkit.WebView.overlayVerticalScrollbar)boolean
android.webkit.WebView.getCertificate)android.net.http.SslCertificate
android.webkit.WebView.setCertificate(android.net.http.SslCertificate)void
android.webkit.WebView.savePassword(String,String,String)void
android.webkit.WebView.setHttpAuthUsernamePassword(String,String,String,String)void
android.webkit.WebView.destroy)void
android.webkit.WebView.setNetworkAvailable(boolean)void
android.webkit.WebView.saveState(Bundle)android.webkit.WebBackForwardList
android.webkit.WebView.restoreState(Bundle)android.webkit.WebBackForwardList
android.webkit.WebView.loadUrl(String,java.util.Map)void
android.webkit.WebView.loadUrl(String)void
android.webkit.WebView.postUrl(String,byte)void
android.webkit.WebView.loadData(String,String,String)void
android.webkit.WebView.loadDataWithBaseURL(String,String,String,String,String)void
android.webkit.WebView.evaluateJavascript(String,android.webkit.ValueCallback)void
android.webkit.WebView.saveWebArchive(String)void
android.webkit.WebView.saveWebArchive(String,boolean,android.webkit.ValueCallback)void
android.webkit.WebView.stopLoading)void
android.webkit.WebView.reload)void
android.webkit.WebView.canGoBack)boolean
android.webkit.WebView.goBack)void
android.webkit.WebView.canGoForward)boolean
android.webkit.WebView.goForward)void
android.webkit.WebView.canGoBackOrForward(int)boolean
android.webkit.WebView.goBackOrForward(int)void
android.webkit.WebView.isPrivateBrowsingEnabled)boolean
android.webkit.WebView.pageUp(boolean)boolean
android.webkit.WebView.pageDown(boolean)boolean
android.webkit.WebView.postVisualStateCallback(long,VisualStateCallback)void
android.webkit.WebView.clearView)void
android.webkit.WebView.capturePicture)Picture
android.webkit.WebView.createPrintDocumentAdapter)android.print.PrintDocumentAdapter
android.webkit.WebView.createPrintDocumentAdapter(String)android.print.PrintDocumentAdapter
android.webkit.WebView.getScale)float
android.webkit.WebView.setInitialScale(int)void
android.webkit.WebView.invokeZoomPicker)void
android.webkit.WebView.getHitTestResult)android.webkit.WebView.HitTestResult
android.webkit.WebView.requestFocusNodeHref(Message)void
android.webkit.WebView.requestImageRef(Message)void
android.webkit.WebView.getUrl)String
android.webkit.WebView.getOriginalUrl)String
android.webkit.WebView.getTitle)String
android.webkit.WebView.getFavicon)Bitmap
android.webkit.WebView.getProgress)int
android.webkit.WebView.getContentHeight)int
android.webkit.WebView.pauseTimers)void
android.webkit.WebView.resumeTimers)void
android.webkit.WebView.onPause)void
android.webkit.WebView.onResume)void
android.webkit.WebView.freeMemory)void
android.webkit.WebView.clearCache(boolean)void
android.webkit.WebView.clearFormData)void
android.webkit.WebView.clearHistory)void
android.webkit.WebView.clearSslPreferences)void
android.webkit.WebView.clearClientCertPreferences(Runnable)void
android.webkit.WebView.startSafeBrowsing(android.content.Context,android.webkit.ValueCallback)void
android.webkit.WebView.setSafeBrowsingWhitelist(java.util.List,android.webkit.ValueCallback)void
android.webkit.WebView.getSafeBrowsingPrivacyPolicyUrl)android.net.Uri
android.webkit.WebView.copyBackForwardList)android.webkit.WebBackForwardList
android.webkit.WebView.setFindListener(android.webkit.WebView.FindListener)void
android.webkit.WebView.findNext(boolean)void
android.webkit.WebView.findAll(String)int
android.webkit.WebView.findAllAsync(String)void
android.webkit.WebView.showFindDialog(String,boolean)boolean
android.webkit.WebView.findAddress(String)String
android.webkit.WebView.enableSlowWholeDocumentDraw)void
android.webkit.WebView.clearMatches)void
android.webkit.WebView.documentHasImages(Message)void
android.webkit.WebView.setWebViewClient(android.webkit.WebViewClient)void
android.webkit.WebView.getWebViewClient)android.webkit.WebViewClient
android.webkit.WebView.getWebViewRenderProcess)android.webkit.WebViewRenderProcess
android.webkit.WebView.setWebViewRenderProcessClient(java.util.concurrent.Executor,android.webkit.WebViewRenderProcessClient)void
android.webkit.WebView.setWebViewRenderProcessClient(android.webkit.WebViewRenderProcessClient)void
android.webkit.WebView.getWebViewRenderProcessClient)android.webkit.WebViewRenderProcessClient
android.webkit.WebView.setDownloadListener(android.webkit.DownloadListener)void
android.webkit.WebView.setWebChromeClient(android.webkit.WebChromeClient)void
android.webkit.WebView.getWebChromeClient)android.webkit.WebChromeClient
android.webkit.WebView.setPictureListener(android.webkit.WebView.PictureListener)void
android.webkit.WebView.addJavascriptInterface(Object,String)void
android.webkit.WebView.removeJavascriptInterface(String)void
android.webkit.WebView.postWebMessage(android.webkit.WebMessage,android.net.Uri)void
android.webkit.WebView.getSettings)android.webkit.WebSettings
android.webkit.WebView.setWebContentsDebuggingEnabled(boolean)void
android.webkit.WebView.setDataDirectorySuffix(String)void
android.webkit.WebView.disableWebView)void
android.webkit.WebView.onChildViewAdded(View,View)void
android.webkit.WebView.onChildViewRemoved(View,View)void
android.webkit.WebView.onGlobalFocusChanged(View,View)void
android.webkit.WebView.setMapTrackballToArrowKeys(boolean)void
android.webkit.WebView.flingScroll(int,int)void
android.webkit.WebView.canZoomIn)boolean
android.webkit.WebView.canZoomOut)boolean
android.webkit.WebView.zoomBy(float)void
android.webkit.WebView.zoomIn)boolean
android.webkit.WebView.zoomOut)boolean
android.webkit.WebView.setRendererPriorityPolicy(int,boolean)void
android.webkit.WebView.getRendererRequestedPriority)int
android.webkit.WebView.getRendererPriorityWaivedWhenNotVisible)boolean
android.webkit.WebView.setTextClassifier(android.view.textclassifier.TextClassifier)void
android.webkit.WebView.getTextClassifier)android.view.textclassifier.TextClassifier
android.webkit.WebView.getWebViewClassLoader)ClassLoader
android.webkit.WebView.getWebViewLooper)Looper
android.webkit.WebView.onAttachedToWindow)void
android.webkit.WebView.setLayoutParams(android.view.ViewGroup.LayoutParams)void
android.webkit.WebView.setOverScrollMode(int)void
android.webkit.WebView.setScrollBarStyle(int)void
android.webkit.WebView.computeHorizontalScrollRange)int
android.webkit.WebView.computeHorizontalScrollOffset)int
android.webkit.WebView.computeVerticalScrollRange)int
android.webkit.WebView.computeVerticalScrollOffset)int
android.webkit.WebView.computeVerticalScrollExtent)int
android.webkit.WebView.computeScroll)void
android.webkit.WebView.onHoverEvent(MotionEvent)boolean
android.webkit.WebView.onTouchEvent(MotionEvent)boolean
android.webkit.WebView.onGenericMotionEvent(MotionEvent)boolean
android.webkit.WebView.onTrackballEvent(MotionEvent)boolean
android.webkit.WebView.onKeyDown(int,KeyEvent)boolean
android.webkit.WebView.onKeyUp(int,KeyEvent)boolean
android.webkit.WebView.onKeyMultiple(int,int,KeyEvent)boolean
android.webkit.WebView.getAccessibilityNodeProvider)android.view.accessibility.AccessibilityNodeProvider
android.webkit.WebView.shouldDelayChildPressedState)boolean
android.webkit.WebView.getAccessibilityClassName)CharSequence
android.webkit.WebView.onProvideVirtualStructure(ViewStructure)void
android.webkit.WebView.onProvideAutofillVirtualStructure(ViewStructure,int)void
android.webkit.WebView.autofill(android.util.SparseArray)void
android.webkit.WebView.isVisibleToUserForAutofill(int)boolean
android.webkit.WebView.onOverScrolled(int,int,boolean,boolean)void
android.webkit.WebView.onWindowVisibilityChanged(int)void
android.webkit.WebView.onDraw(Canvas)void
android.webkit.WebView.performLongClick)boolean
android.webkit.WebView.onConfigurationChanged(android.content.res.Configuration)void
android.webkit.WebView.onCreateInputConnection(android.view.inputmethod.EditorInfo)android.view.inputmethod.InputConnection
android.webkit.WebView.onDragEvent(DragEvent)boolean
android.webkit.WebView.onVisibilityChanged(View,int)void
android.webkit.WebView.onWindowFocusChanged(boolean)void
android.webkit.WebView.onFocusChanged(boolean,int,Rect)void
android.webkit.WebView.onSizeChanged(int,int,int,int)void
android.webkit.WebView.onScrollChanged(int,int,int,int)void
android.webkit.WebView.dispatchKeyEvent(KeyEvent)boolean
android.webkit.WebView.requestFocus(int,Rect)boolean
android.webkit.WebView.onMeasure(int,int)void
android.webkit.WebView.requestChildRectangleOnScreen(View,Rect,boolean)boolean
android.webkit.WebView.setBackgroundColor(int)void
android.webkit.WebView.setLayerType(int,Paint)void
android.webkit.WebView.dispatchDraw(Canvas)void
android.webkit.WebView.onStartTemporaryDetach)void
android.webkit.WebView.onFinishTemporaryDetach)void
android.webkit.WebView.getHandler)Handler
android.webkit.WebView.findFocus)View
android.webkit.WebView.getCurrentWebViewPackage)android.content.pm.PackageInfo
android.webkit.WebView.onCheckIsTextEditor)boolean
android.webkit.WebViewClient.shouldOverrideUrlLoading(android.webkit.WebView,String)boolean
android.webkit.WebViewClient.shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)boolean
android.webkit.WebViewClient.onPageStarted(android.webkit.WebView,String,android.graphics.Bitmap)void
android.webkit.WebViewClient.onPageFinished(android.webkit.WebView,String)void
android.webkit.WebViewClient.onLoadResource(android.webkit.WebView,String)void
android.webkit.WebViewClient.onPageCommitVisible(android.webkit.WebView,String)void
android.webkit.WebViewClient.shouldInterceptRequest(android.webkit.WebView,String)android.webkit.WebResourceResponse
android.webkit.WebViewClient.shouldInterceptRequest(android.webkit.WebView,android.webkit.WebResourceRequest)android.webkit.WebResourceResponse
android.webkit.WebViewClient.onTooManyRedirects(android.webkit.WebView,android.os.Message,android.os.Message)void
android.webkit.WebViewClient.onReceivedError(android.webkit.WebView,int,String,String)void
android.webkit.WebViewClient.onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceError)void
android.webkit.WebViewClient.onReceivedHttpError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceResponse)void
android.webkit.WebViewClient.onFormResubmission(android.webkit.WebView,android.os.Message,android.os.Message)void
android.webkit.WebViewClient.doUpdateVisitedHistory(android.webkit.WebView,String,boolean)void
android.webkit.WebViewClient.onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError)void
android.webkit.WebViewClient.onReceivedClientCertRequest(android.webkit.WebView,android.webkit.ClientCertRequest)void
android.webkit.WebViewClient.onReceivedHttpAuthRequest(android.webkit.WebView,android.webkit.HttpAuthHandler,String,String)void
android.webkit.WebViewClient.shouldOverrideKeyEvent(android.webkit.WebView,android.view.KeyEvent)boolean
android.webkit.WebViewClient.onUnhandledKeyEvent(android.webkit.WebView,android.view.KeyEvent)void
android.webkit.WebViewClient.onScaleChanged(android.webkit.WebView,float,float)void
android.webkit.WebViewClient.onReceivedLoginRequest(android.webkit.WebView,String,String,String)void
android.webkit.WebViewClient.onRenderProcessGone(android.webkit.WebView,android.webkit.RenderProcessGoneDetail)boolean
android.webkit.WebViewClient.onSafeBrowsingHit(android.webkit.WebView,android.webkit.WebResourceRequest,int,android.webkit.SafeBrowsingResponse)void
android.webkit.WebViewDatabase.getInstance(android.content.Context)android.webkit.WebViewDatabase
android.webkit.WebViewFragment.onCreateView(LayoutInflater,ViewGroup,android.os.Bundle)View
android.webkit.WebViewFragment.onPause)void
android.webkit.WebViewFragment.onResume)void
android.webkit.WebViewFragment.onDestroyView)void
android.webkit.WebViewFragment.onDestroy)void
android.webkit.WebViewFragment.getWebView)android.webkit.WebView
android.widget.AbsListView.setAdapter(android.widget.ListAdapter)void
android.widget.AbsListView.getCheckedItemCount)int
android.widget.AbsListView.isItemChecked(int)boolean
android.widget.AbsListView.getCheckedItemPosition)int
android.widget.AbsListView.getCheckedItemPositions)android.util.SparseBooleanArray
android.widget.AbsListView.clearChoices)void
android.widget.AbsListView.setItemChecked(int,boolean)void
android.widget.AbsListView.performItemClick(View,int,long)boolean
android.widget.AbsListView.getChoiceMode)int
android.widget.AbsListView.setChoiceMode(int)void
android.widget.AbsListView.setMultiChoiceModeListener(android.widget.AbsListView.MultiChoiceModeListener)void
android.widget.AbsListView.setFastScrollEnabled(boolean)void
android.widget.AbsListView.setFastScrollStyle(int)void
android.widget.AbsListView.setFastScrollAlwaysVisible(boolean)void
android.widget.AbsListView.isFastScrollAlwaysVisible)boolean
android.widget.AbsListView.getVerticalScrollbarWidth)int
android.widget.AbsListView.isFastScrollEnabled)boolean
android.widget.AbsListView.setVerticalScrollbarPosition(int)void
android.widget.AbsListView.setScrollBarStyle(int)void
android.widget.AbsListView.setSmoothScrollbarEnabled(boolean)void
android.widget.AbsListView.isSmoothScrollbarEnabled)boolean
android.widget.AbsListView.setOnScrollListener(android.widget.AbsListView.OnScrollListener)void
android.widget.AbsListView.sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)void
android.widget.AbsListView.getAccessibilityClassName)CharSequence
android.widget.AbsListView.isScrollingCacheEnabled)boolean
android.widget.AbsListView.setScrollingCacheEnabled(boolean)void
android.widget.AbsListView.setTextFilterEnabled(boolean)void
android.widget.AbsListView.isTextFilterEnabled)boolean
android.widget.AbsListView.getFocusedRect(android.graphics.Rect)void
android.widget.AbsListView.isStackFromBottom)boolean
android.widget.AbsListView.setStackFromBottom(boolean)void
android.widget.AbsListView.onSaveInstanceState)android.os.Parcelable
android.widget.AbsListView.onRestoreInstanceState(android.os.Parcelable)void
android.widget.AbsListView.setFilterText(String)void
android.widget.AbsListView.getTextFilter)CharSequence
android.widget.AbsListView.onFocusChanged(boolean,int,android.graphics.Rect)void
android.widget.AbsListView.requestLayout)void
android.widget.AbsListView.computeVerticalScrollExtent)int
android.widget.AbsListView.computeVerticalScrollOffset)int
android.widget.AbsListView.computeVerticalScrollRange)int
android.widget.AbsListView.getTopFadingEdgeStrength)float
android.widget.AbsListView.getBottomFadingEdgeStrength)float
android.widget.AbsListView.onMeasure(int,int)void
android.widget.AbsListView.onLayout(boolean,int,int,int,int)void
android.widget.AbsListView.layoutChildren)void
android.widget.AbsListView.getSelectedView)View
android.widget.AbsListView.getListPaddingTop)int
android.widget.AbsListView.getListPaddingBottom)int
android.widget.AbsListView.getListPaddingLeft)int
android.widget.AbsListView.getListPaddingRight)int
android.widget.AbsListView.onInitializeAccessibilityNodeInfoForItem(View,int,android.view.accessibility.AccessibilityNodeInfo)void
android.widget.AbsListView.dispatchDraw(android.graphics.Canvas)void
android.widget.AbsListView.isPaddingOffsetRequired)boolean
android.widget.AbsListView.getLeftPaddingOffset)int
android.widget.AbsListView.getTopPaddingOffset)int
android.widget.AbsListView.getRightPaddingOffset)int
android.widget.AbsListView.getBottomPaddingOffset)int
android.widget.AbsListView.onSizeChanged(int,int,int,int)void
android.widget.AbsListView.setDrawSelectorOnTop(boolean)void
android.widget.AbsListView.isDrawSelectorOnTop)boolean
android.widget.AbsListView.setSelector(int)void
android.widget.AbsListView.setSelector(android.graphics.drawable.Drawable)void
android.widget.AbsListView.getSelector)android.graphics.drawable.Drawable
android.widget.AbsListView.setScrollIndicators(View,View)void
android.widget.AbsListView.drawableStateChanged)void
android.widget.AbsListView.verifyDrawable(android.graphics.drawable.Drawable)boolean
android.widget.AbsListView.jumpDrawablesToCurrentState)void
android.widget.AbsListView.onAttachedToWindow)void
android.widget.AbsListView.onDetachedFromWindow)void
android.widget.AbsListView.onWindowFocusChanged(boolean)void
android.widget.AbsListView.onRtlPropertiesChanged(int)void
android.widget.AbsListView.onCancelPendingInputEvents)void
android.widget.AbsListView.showContextMenu)boolean
android.widget.AbsListView.showContextMenu(float,float)boolean
android.widget.AbsListView.showContextMenuForChild(View)boolean
android.widget.AbsListView.showContextMenuForChild(View,float,float)boolean
android.widget.AbsListView.onKeyDown(int,KeyEvent)boolean
android.widget.AbsListView.onKeyUp(int,KeyEvent)boolean
android.widget.AbsListView.dispatchSetPressed(boolean)void
android.widget.AbsListView.dispatchDrawableHotspotChanged(float,float)void
android.widget.AbsListView.pointToPosition(int,int)int
android.widget.AbsListView.pointToRowId(int,int)long
android.widget.AbsListView.onTouchModeChanged(boolean)void
android.widget.AbsListView.onTouchEvent(MotionEvent)boolean
android.widget.AbsListView.onOverScrolled(int,int,boolean,boolean)void
android.widget.AbsListView.onGenericMotionEvent(MotionEvent)boolean
android.widget.AbsListView.fling(int)void
android.widget.AbsListView.onStartNestedScroll(View,View,int)boolean
android.widget.AbsListView.onNestedScrollAccepted(View,View,int)void
android.widget.AbsListView.onNestedScroll(View,int,int,int,int)void
android.widget.AbsListView.onNestedFling(View,float,float,boolean)boolean
android.widget.AbsListView.draw(android.graphics.Canvas)void
android.widget.AbsListView.requestDisallowInterceptTouchEvent(boolean)void
android.widget.AbsListView.onInterceptHoverEvent(MotionEvent)boolean
android.widget.AbsListView.onResolvePointerIcon(MotionEvent,int)PointerIcon
android.widget.AbsListView.onInterceptTouchEvent(MotionEvent)boolean
android.widget.AbsListView.addTouchables(java.util.ArrayList)void
android.widget.AbsListView.setFriction(float)void
android.widget.AbsListView.setVelocityScale(float)void
android.widget.AbsListView.smoothScrollToPosition(int)void
android.widget.AbsListView.smoothScrollToPositionFromTop(int,int,int)void
android.widget.AbsListView.smoothScrollToPositionFromTop(int,int)void
android.widget.AbsListView.smoothScrollToPosition(int,int)void
android.widget.AbsListView.smoothScrollBy(int,int)void
android.widget.AbsListView.scrollListBy(int)void
android.widget.AbsListView.canScrollList(int)boolean
android.widget.AbsListView.invalidateViews)void
android.widget.AbsListView.handleDataChanged)void
android.widget.AbsListView.onDisplayHint(int)void
android.widget.AbsListView.isInFilterMode)boolean
android.widget.AbsListView.onCreateInputConnection(android.view.inputmethod.EditorInfo)android.view.inputmethod.InputConnection
android.widget.AbsListView.checkInputConnectionProxy(View)boolean
android.widget.AbsListView.clearTextFilter)void
android.widget.AbsListView.hasTextFilter)boolean
android.widget.AbsListView.onGlobalLayout)void
android.widget.AbsListView.beforeTextChanged(CharSequence,int,int,int)void
android.widget.AbsListView.onTextChanged(CharSequence,int,int,int)void
android.widget.AbsListView.afterTextChanged(android.text.Editable)void
android.widget.AbsListView.onFilterComplete(int)void
android.widget.AbsListView.generateLayoutParams(android.util.AttributeSet)android.widget.AbsListView.LayoutParams
android.widget.AbsListView.checkLayoutParams(android.view.ViewGroup.LayoutParams)boolean
android.widget.AbsListView.setTranscriptMode(int)void
android.widget.AbsListView.getTranscriptMode)int
android.widget.AbsListView.getSolidColor)int
android.widget.AbsListView.setCacheColorHint(int)void
android.widget.AbsListView.getCacheColorHint)int
android.widget.AbsListView.reclaimViews(java.util.List)void
android.widget.AbsListView.setRemoteViewsAdapter(android.content.Intent)void
android.widget.AbsListView.deferNotifyDataSetChanged)void
android.widget.AbsListView.onRemoteAdapterConnected)boolean
android.widget.AbsListView.onRemoteAdapterDisconnected)void
android.widget.AbsListView.setEdgeEffectColor(int)void
android.widget.AbsListView.setBottomEdgeEffectColor(int)void
android.widget.AbsListView.setTopEdgeEffectColor(int)void
android.widget.AbsListView.getTopEdgeEffectColor)int
android.widget.AbsListView.getBottomEdgeEffectColor)int
android.widget.AbsListView.setRecyclerListener(android.widget.AbsListView.RecyclerListener)void
android.widget.AbsListView.setSelectionFromTop(int,int)void
android.widget.AbsoluteLayout.debug(String)String
android.widget.AbsoluteLayout.onMeasure(int,int)void
android.widget.AbsoluteLayout.onLayout(boolean,int,int,int,int)void
android.widget.AbsoluteLayout.checkLayoutParams(android.view.ViewGroup.LayoutParams)boolean
android.widget.AbsoluteLayout.shouldDelayChildPressedState)boolean
android.widget.AbsSeekBar.setThumb(android.graphics.drawable.Drawable)void
android.widget.AbsSeekBar.getThumb)android.graphics.drawable.Drawable
android.widget.AbsSeekBar.setThumbTintList(android.content.res.ColorStateList)void
android.widget.AbsSeekBar.getThumbTintList)android.content.res.ColorStateList
android.widget.AbsSeekBar.setThumbTintMode(android.graphics.PorterDuff.Mode)void
android.widget.AbsSeekBar.setThumbTintBlendMode(BlendMode)void
android.widget.AbsSeekBar.getThumbTintBlendMode)BlendMode
android.widget.AbsSeekBar.getThumbOffset)int
android.widget.AbsSeekBar.setThumbOffset(int)void
android.widget.AbsSeekBar.setSplitTrack(boolean)void
android.widget.AbsSeekBar.getSplitTrack)boolean
android.widget.AbsSeekBar.setTickMark(android.graphics.drawable.Drawable)void
android.widget.AbsSeekBar.getTickMark)android.graphics.drawable.Drawable
android.widget.AbsSeekBar.setTickMarkTintList(android.content.res.ColorStateList)void
android.widget.AbsSeekBar.getTickMarkTintList)android.content.res.ColorStateList
android.widget.AbsSeekBar.setTickMarkTintMode(android.graphics.PorterDuff.Mode)void
android.widget.AbsSeekBar.setTickMarkTintBlendMode(BlendMode)void
android.widget.AbsSeekBar.getTickMarkTintBlendMode)BlendMode
android.widget.AbsSeekBar.setKeyProgressIncrement(int)void
android.widget.AbsSeekBar.getKeyProgressIncrement)int
android.widget.AbsSeekBar.verifyDrawable(android.graphics.drawable.Drawable)boolean
android.widget.AbsSeekBar.jumpDrawablesToCurrentState)void
android.widget.AbsSeekBar.drawableStateChanged)void
android.widget.AbsSeekBar.drawableHotspotChanged(float,float)void
android.widget.AbsSeekBar.onSizeChanged(int,int,int,int)void
android.widget.AbsSeekBar.setSystemGestureExclusionRects(java.util.List)void
android.widget.AbsSeekBar.onTouchEvent(android.view.MotionEvent)boolean
android.widget.AbsSeekBar.onKeyDown(int,android.view.KeyEvent)boolean
android.widget.AbsSeekBar.getAccessibilityClassName)CharSequence
android.widget.AbsSeekBar.onRtlPropertiesChanged(int)void
android.widget.AbsSpinner.setAdapter(android.widget.SpinnerAdapter)void
android.widget.AbsSpinner.onMeasure(int,int)void
android.widget.AbsSpinner.setSelection(int,boolean)void
android.widget.AbsSpinner.setSelection(int)void
android.widget.AbsSpinner.getSelectedView)android.view.View
android.widget.AbsSpinner.requestLayout)void
android.widget.AbsSpinner.getAdapter)android.widget.SpinnerAdapter
android.widget.AbsSpinner.getCount)int
android.widget.AbsSpinner.pointToPosition(int,int)int
android.widget.AbsSpinner.dispatchRestoreInstanceState(android.util.SparseArray)void
android.widget.AbsSpinner.onSaveInstanceState)android.os.Parcelable
android.widget.AbsSpinner.onRestoreInstanceState(android.os.Parcelable)void
android.widget.AbsSpinner.getAccessibilityClassName)CharSequence
android.widget.AbsSpinner.autofill(android.view.autofill.AutofillValue)void
android.widget.AbsSpinner.getAutofillType)int
android.widget.AbsSpinner.getAutofillValue)android.view.autofill.AutofillValue
android.widget.ActionMenuView.setPopupTheme(int)void
android.widget.ActionMenuView.getPopupTheme)int
android.widget.ActionMenuView.onConfigurationChanged(android.content.res.Configuration)void
android.widget.ActionMenuView.setOnMenuItemClickListener(android.widget.ActionMenuView.OnMenuItemClickListener)void
android.widget.ActionMenuView.onMeasure(int,int)void
android.widget.ActionMenuView.onLayout(boolean,int,int,int,int)void
android.widget.ActionMenuView.onDetachedFromWindow)void
android.widget.ActionMenuView.setOverflowIcon(android.graphics.drawable.Drawable)void
android.widget.ActionMenuView.getOverflowIcon)android.graphics.drawable.Drawable
android.widget.ActionMenuView.generateDefaultLayoutParams)android.widget.ActionMenuView.LayoutParams
android.widget.ActionMenuView.generateLayoutParams(android.util.AttributeSet)android.widget.ActionMenuView.LayoutParams
android.widget.ActionMenuView.generateLayoutParams(android.view.ViewGroup.LayoutParams)android.widget.ActionMenuView.LayoutParams
android.widget.ActionMenuView.checkLayoutParams(android.view.ViewGroup.LayoutParams)boolean
android.widget.ActionMenuView.getMenu)Menu
android.widget.ActionMenuView.showOverflowMenu)boolean
android.widget.ActionMenuView.hideOverflowMenu)boolean
android.widget.ActionMenuView.isOverflowMenuShowing)boolean
android.widget.ActionMenuView.dismissPopupMenus)void
android.widget.AdapterView.setOnItemClickListener(android.widget.AdapterView.OnItemClickListener)void
android.widget.AdapterView.getOnItemClickListener)android.widget.AdapterView.OnItemClickListener
android.widget.AdapterView.performItemClick(View,int,long)boolean
android.widget.AdapterView.setOnItemLongClickListener(android.widget.AdapterView.OnItemLongClickListener)void
android.widget.AdapterView.getOnItemLongClickListener)android.widget.AdapterView.OnItemLongClickListener
android.widget.AdapterView.setOnItemSelectedListener(android.widget.AdapterView.OnItemSelectedListener)void
android.widget.AdapterView.getOnItemSelectedListener)android.widget.AdapterView.OnItemSelectedListener
android.widget.AdapterView.addView(View)void
android.widget.AdapterView.addView(View,int)void
android.widget.AdapterView.addView(View,android.view.ViewGroup.LayoutParams)void
android.widget.AdapterView.addView(View,int,android.view.ViewGroup.LayoutParams)void
android.widget.AdapterView.removeView(View)void
android.widget.AdapterView.removeViewAt(int)void
android.widget.AdapterView.removeAllViews)void
android.widget.AdapterView.onLayout(boolean,int,int,int,int)void
android.widget.AdapterView.getSelectedItemPosition)int
android.widget.AdapterView.getSelectedItemId)long
android.widget.AdapterView.getSelectedItem)Object
android.widget.AdapterView.getCount)int
android.widget.AdapterView.getPositionForView(View)int
android.widget.AdapterView.getFirstVisiblePosition)int
android.widget.AdapterView.getLastVisiblePosition)int
android.widget.AdapterView.setEmptyView(View)void
android.widget.AdapterView.getEmptyView)View
android.widget.AdapterView.setFocusable(int)void
android.widget.AdapterView.setFocusableInTouchMode(boolean)void
android.widget.AdapterView.getItemAtPosition(int)Object
android.widget.AdapterView.getItemIdAtPosition(int)long
android.widget.AdapterView.setOnClickListener(android.view.View.OnClickListener)void
android.widget.AdapterView.dispatchSaveInstanceState(android.util.SparseArray)void
android.widget.AdapterView.dispatchRestoreInstanceState(android.util.SparseArray)void
android.widget.AdapterView.onDetachedFromWindow)void
android.widget.AdapterView.getAccessibilityClassName)CharSequence
android.widget.AdapterView.canAnimate)boolean
android.widget.AdapterView.onProvideAutofillStructure(ViewStructure,int)void
android.widget.AdapterViewAnimator.setDisplayedChild(int)void
android.widget.AdapterViewAnimator.getDisplayedChild)int
android.widget.AdapterViewAnimator.showNext)void
android.widget.AdapterViewAnimator.showPrevious)void
android.widget.AdapterViewAnimator.onTouchEvent(android.view.MotionEvent)boolean
android.widget.AdapterViewAnimator.onMeasure(int,int)void
android.widget.AdapterViewAnimator.onLayout(boolean,int,int,int,int)void
android.widget.AdapterViewAnimator.onSaveInstanceState)android.os.Parcelable
android.widget.AdapterViewAnimator.onRestoreInstanceState(android.os.Parcelable)void
android.widget.AdapterViewAnimator.getCurrentView)android.view.View
android.widget.AdapterViewAnimator.getInAnimation)android.animation.ObjectAnimator
android.widget.AdapterViewAnimator.setInAnimation(android.animation.ObjectAnimator)void
android.widget.AdapterViewAnimator.getOutAnimation)android.animation.ObjectAnimator
android.widget.AdapterViewAnimator.setOutAnimation(android.animation.ObjectAnimator)void
android.widget.AdapterViewAnimator.setInAnimation(android.content.Context,int)void
android.widget.AdapterViewAnimator.setOutAnimation(android.content.Context,int)void
android.widget.AdapterViewAnimator.setAnimateFirstView(boolean)void
android.widget.AdapterViewAnimator.getBaseline)int
android.widget.AdapterViewAnimator.getAdapter)android.widget.Adapter
android.widget.AdapterViewAnimator.setAdapter(android.widget.Adapter)void
android.widget.AdapterViewAnimator.setRemoteViewsAdapter(android.content.Intent)void
android.widget.AdapterViewAnimator.setSelection(int)void
android.widget.AdapterViewAnimator.getSelectedView)android.view.View
android.widget.AdapterViewAnimator.deferNotifyDataSetChanged)void
android.widget.AdapterViewAnimator.onRemoteAdapterConnected)boolean
android.widget.AdapterViewAnimator.onRemoteAdapterDisconnected)void
android.widget.AdapterViewAnimator.advance)void
android.widget.AdapterViewAnimator.fyiWillBeAdvancedByHostKThx)void
android.widget.AdapterViewAnimator.getAccessibilityClassName)CharSequence
android.widget.AdapterViewFlipper.onAttachedToWindow)void
android.widget.AdapterViewFlipper.onDetachedFromWindow)void
android.widget.AdapterViewFlipper.onWindowVisibilityChanged(int)void
android.widget.AdapterViewFlipper.setAdapter(android.widget.Adapter)void
android.widget.AdapterViewFlipper.getFlipInterval)int
android.widget.AdapterViewFlipper.setFlipInterval(int)void
android.widget.AdapterViewFlipper.startFlipping)void
android.widget.AdapterViewFlipper.stopFlipping)void
android.widget.AdapterViewFlipper.showNext)void
android.widget.AdapterViewFlipper.showPrevious)void
android.widget.AdapterViewFlipper.isFlipping)boolean
android.widget.AdapterViewFlipper.setAutoStart(boolean)void
android.widget.AdapterViewFlipper.isAutoStart)boolean
android.widget.AdapterViewFlipper.fyiWillBeAdvancedByHostKThx)void
android.widget.AdapterViewFlipper.getAccessibilityClassName)CharSequence
android.widget.AlphabetIndexer.setCursor(android.database.Cursor)void
android.widget.AlphabetIndexer.compare(String,String)int
android.widget.AlphabetIndexer.getPositionForSection(int)int
android.widget.AlphabetIndexer.getSectionForPosition(int)int
android.widget.AlphabetIndexer.onChanged)void
android.widget.AlphabetIndexer.onInvalidated)void
android.widget.AnalogClock.onAttachedToWindow)void
android.widget.AnalogClock.onDetachedFromWindow)void
android.widget.AnalogClock.onMeasure(int,int)void
android.widget.AnalogClock.onSizeChanged(int,int,int,int)void
android.widget.AnalogClock.onDraw(android.graphics.Canvas)void
android.widget.ArrayAdapter.add(Object)void
android.widget.ArrayAdapter.addAll(Collection)void
android.widget.ArrayAdapter.insert(Object,int)void
android.widget.ArrayAdapter.remove(Object)void
android.widget.ArrayAdapter.clear)void
android.widget.ArrayAdapter.sort(Comparator)void
android.widget.ArrayAdapter.notifyDataSetChanged)void
android.widget.ArrayAdapter.setNotifyOnChange(boolean)void
android.widget.ArrayAdapter.getContext)android.content.Context
android.widget.ArrayAdapter.getCount)int
android.widget.ArrayAdapter.getItem(int)Object
android.widget.ArrayAdapter.getPosition(Object)int
android.widget.ArrayAdapter.getItemId(int)long
android.widget.ArrayAdapter.getView(int,android.view.View,android.view.ViewGroup)android.view.View
android.widget.ArrayAdapter.setDropDownViewResource(int)void
android.widget.ArrayAdapter.setDropDownViewTheme(android.content.res.Resources.Theme)void
android.widget.ArrayAdapter.getDropDownView(int,android.view.View,android.view.ViewGroup)android.view.View
android.widget.ArrayAdapter.createFromResource(android.content.Context,int,int)android.widget.ArrayAdapter
android.widget.ArrayAdapter.getFilter)android.widget.Filter
android.widget.AutoCompleteTextView.setOnClickListener(android.view.View.OnClickListener)void
android.widget.AutoCompleteTextView.setCompletionHint(CharSequence)void
android.widget.AutoCompleteTextView.getCompletionHint)CharSequence
android.widget.AutoCompleteTextView.getDropDownWidth)int
android.widget.AutoCompleteTextView.setDropDownWidth(int)void
android.widget.AutoCompleteTextView.getDropDownHeight)int
android.widget.AutoCompleteTextView.setDropDownHeight(int)void
android.widget.AutoCompleteTextView.getDropDownAnchor)int
android.widget.AutoCompleteTextView.setDropDownAnchor(int)void
android.widget.AutoCompleteTextView.getDropDownBackground)android.graphics.drawable.Drawable
android.widget.AutoCompleteTextView.setDropDownBackgroundDrawable(android.graphics.drawable.Drawable)void
android.widget.AutoCompleteTextView.setDropDownBackgroundResource(int)void
android.widget.AutoCompleteTextView.setDropDownVerticalOffset(int)void
android.widget.AutoCompleteTextView.getDropDownVerticalOffset)int
android.widget.AutoCompleteTextView.setDropDownHorizontalOffset(int)void
android.widget.AutoCompleteTextView.getDropDownHorizontalOffset)int
android.widget.AutoCompleteTextView.getThreshold)int
android.widget.AutoCompleteTextView.setThreshold(int)void
android.widget.AutoCompleteTextView.setOnItemClickListener(AdapterView.OnItemClickListener)void
android.widget.AutoCompleteTextView.setOnItemSelectedListener(AdapterView.OnItemSelectedListener)void
android.widget.AutoCompleteTextView.setOnDismissListener(android.widget.AutoCompleteTextView.OnDismissListener)void
android.widget.AutoCompleteTextView.getAdapter)android.widget.ListAdapter
android.widget.AutoCompleteTextView.setAdapter(android.widget.ListAdapter)void
android.widget.AutoCompleteTextView.onKeyPreIme(int,android.view.KeyEvent)boolean
android.widget.AutoCompleteTextView.onKeyUp(int,android.view.KeyEvent)boolean
android.widget.AutoCompleteTextView.onKeyDown(int,android.view.KeyEvent)boolean
android.widget.AutoCompleteTextView.enoughToFilter)boolean
android.widget.AutoCompleteTextView.refreshAutoCompleteResults)void
android.widget.AutoCompleteTextView.isPopupShowing)boolean
android.widget.AutoCompleteTextView.convertSelectionToString(Object)CharSequence
android.widget.AutoCompleteTextView.clearListSelection)void
android.widget.AutoCompleteTextView.setListSelection(int)void
android.widget.AutoCompleteTextView.getListSelection)int
android.widget.AutoCompleteTextView.performFiltering(CharSequence,int)void
android.widget.AutoCompleteTextView.performCompletion)void
android.widget.AutoCompleteTextView.onCommitCompletion(android.view.inputmethod.CompletionInfo)void
android.widget.AutoCompleteTextView.isPerformingCompletion)boolean
android.widget.AutoCompleteTextView.setText(CharSequence,boolean)void
android.widget.AutoCompleteTextView.replaceText(CharSequence)void
android.widget.AutoCompleteTextView.onFilterComplete(int)void
android.widget.AutoCompleteTextView.onWindowFocusChanged(boolean)void
android.widget.AutoCompleteTextView.onDisplayHint(int)void
android.widget.AutoCompleteTextView.onFocusChanged(boolean,int,android.graphics.Rect)void
android.widget.AutoCompleteTextView.onAttachedToWindow)void
android.widget.AutoCompleteTextView.onDetachedFromWindow)void
android.widget.AutoCompleteTextView.dismissDropDown)void
android.widget.AutoCompleteTextView.setFrame(int,int,int,int)boolean
android.widget.AutoCompleteTextView.getInputMethodMode)int
android.widget.AutoCompleteTextView.setInputMethodMode(int)void
android.widget.AutoCompleteTextView.showDropDown)void
android.widget.AutoCompleteTextView.setValidator(android.widget.AutoCompleteTextView.Validator)void
android.widget.AutoCompleteTextView.getValidator)android.widget.AutoCompleteTextView.Validator
android.widget.AutoCompleteTextView.performValidation)void
android.widget.AutoCompleteTextView.getFilter)android.widget.Filter
android.widget.BaseAdapter.hasStableIds)boolean
android.widget.BaseAdapter.registerDataSetObserver(android.database.DataSetObserver)void
android.widget.BaseAdapter.unregisterDataSetObserver(android.database.DataSetObserver)void
android.widget.BaseAdapter.notifyDataSetChanged)void
android.widget.BaseAdapter.notifyDataSetInvalidated)void
android.widget.BaseAdapter.areAllItemsEnabled)boolean
android.widget.BaseAdapter.isEnabled(int)boolean
android.widget.BaseAdapter.getDropDownView(int,android.view.View,android.view.ViewGroup)android.view.View
android.widget.BaseAdapter.getItemViewType(int)int
android.widget.BaseAdapter.getViewTypeCount)int
android.widget.BaseAdapter.isEmpty)boolean
android.widget.BaseExpandableListAdapter.registerDataSetObserver(android.database.DataSetObserver)void
android.widget.BaseExpandableListAdapter.unregisterDataSetObserver(android.database.DataSetObserver)void
android.widget.BaseExpandableListAdapter.notifyDataSetInvalidated)void
android.widget.BaseExpandableListAdapter.notifyDataSetChanged)void
android.widget.BaseExpandableListAdapter.areAllItemsEnabled)boolean
android.widget.BaseExpandableListAdapter.onGroupCollapsed(int)void
android.widget.BaseExpandableListAdapter.onGroupExpanded(int)void
android.widget.BaseExpandableListAdapter.getCombinedChildId(long,long)long
android.widget.BaseExpandableListAdapter.getCombinedGroupId(long)long
android.widget.BaseExpandableListAdapter.isEmpty)boolean
android.widget.BaseExpandableListAdapter.getChildType(int,int)int
android.widget.BaseExpandableListAdapter.getChildTypeCount)int
android.widget.BaseExpandableListAdapter.getGroupType(int)int
android.widget.BaseExpandableListAdapter.getGroupTypeCount)int
android.widget.Button.getAccessibilityClassName)CharSequence
android.widget.Button.onResolvePointerIcon(android.view.MotionEvent,int)android.view.PointerIcon
android.widget.CalendarView.setShownWeekCount(int)void
android.widget.CalendarView.getShownWeekCount)int
android.widget.CalendarView.setSelectedWeekBackgroundColor(int)void
android.widget.CalendarView.getSelectedWeekBackgroundColor)int
android.widget.CalendarView.setFocusedMonthDateColor(int)void
android.widget.CalendarView.getFocusedMonthDateColor)int
android.widget.CalendarView.setUnfocusedMonthDateColor(int)void
android.widget.CalendarView.getUnfocusedMonthDateColor)int
android.widget.CalendarView.setWeekNumberColor(int)void
android.widget.CalendarView.getWeekNumberColor)int
android.widget.CalendarView.setWeekSeparatorLineColor(int)void
android.widget.CalendarView.getWeekSeparatorLineColor)int
android.widget.CalendarView.setSelectedDateVerticalBar(int)void
android.widget.CalendarView.setSelectedDateVerticalBar(android.graphics.drawable.Drawable)void
android.widget.CalendarView.getSelectedDateVerticalBar)android.graphics.drawable.Drawable
android.widget.CalendarView.setWeekDayTextAppearance(int)void
android.widget.CalendarView.getWeekDayTextAppearance)int
android.widget.CalendarView.setDateTextAppearance(int)void
android.widget.CalendarView.getDateTextAppearance)int
android.widget.CalendarView.getMinDate)long
android.widget.CalendarView.setMinDate(long)void
android.widget.CalendarView.getMaxDate)long
android.widget.CalendarView.setMaxDate(long)void
android.widget.CalendarView.setShowWeekNumber(boolean)void
android.widget.CalendarView.getShowWeekNumber)boolean
android.widget.CalendarView.getFirstDayOfWeek)int
android.widget.CalendarView.setFirstDayOfWeek(int)void
android.widget.CalendarView.setOnDateChangeListener(android.widget.CalendarView.OnDateChangeListener)void
android.widget.CalendarView.getDate)long
android.widget.CalendarView.setDate(long)void
android.widget.CalendarView.setDate(long,boolean,boolean)void
android.widget.CalendarView.onConfigurationChanged(android.content.res.Configuration)void
android.widget.CalendarView.getAccessibilityClassName)CharSequence
android.widget.CheckBox.getAccessibilityClassName)CharSequence
android.widget.CheckedTextView.toggle)void
android.widget.CheckedTextView.isChecked)boolean
android.widget.CheckedTextView.setChecked(boolean)void
android.widget.CheckedTextView.setCheckMarkDrawable(int)void
android.widget.CheckedTextView.setCheckMarkDrawable(android.graphics.drawable.Drawable)void
android.widget.CheckedTextView.setCheckMarkTintList(android.content.res.ColorStateList)void
android.widget.CheckedTextView.getCheckMarkTintList)android.content.res.ColorStateList
android.widget.CheckedTextView.setCheckMarkTintMode(android.graphics.PorterDuff.Mode)void
android.widget.CheckedTextView.setCheckMarkTintBlendMode(BlendMode)void
android.widget.CheckedTextView.getCheckMarkTintBlendMode)BlendMode
android.widget.CheckedTextView.setVisibility(int)void
android.widget.CheckedTextView.jumpDrawablesToCurrentState)void
android.widget.CheckedTextView.verifyDrawable(android.graphics.drawable.Drawable)boolean
android.widget.CheckedTextView.getCheckMarkDrawable)android.graphics.drawable.Drawable
android.widget.CheckedTextView.onRtlPropertiesChanged(int)void
android.widget.CheckedTextView.onDraw(Canvas)void
android.widget.CheckedTextView.drawableStateChanged)void
android.widget.CheckedTextView.drawableHotspotChanged(float,float)void
android.widget.CheckedTextView.getAccessibilityClassName)CharSequence
android.widget.CheckedTextView.onSaveInstanceState)android.os.Parcelable
android.widget.CheckedTextView.onRestoreInstanceState(android.os.Parcelable)void
android.widget.Chronometer.setCountDown(boolean)void
android.widget.Chronometer.isCountDown)boolean
android.widget.Chronometer.isTheFinalCountDown)boolean
android.widget.Chronometer.setBase(long)void
android.widget.Chronometer.getBase)long
android.widget.Chronometer.setFormat(String)void
android.widget.Chronometer.getFormat)String
android.widget.Chronometer.setOnChronometerTickListener(android.widget.Chronometer.OnChronometerTickListener)void
android.widget.Chronometer.getOnChronometerTickListener)android.widget.Chronometer.OnChronometerTickListener
android.widget.Chronometer.start)void
android.widget.Chronometer.stop)void
android.widget.Chronometer.onDetachedFromWindow)void
android.widget.Chronometer.onWindowVisibilityChanged(int)void
android.widget.Chronometer.onVisibilityChanged(android.view.View,int)void
android.widget.Chronometer.getContentDescription)CharSequence
android.widget.Chronometer.getAccessibilityClassName)CharSequence
android.widget.CompoundButton.toggle)void
android.widget.CompoundButton.performClick)boolean
android.widget.CompoundButton.isChecked)boolean
android.widget.CompoundButton.setChecked(boolean)void
android.widget.CompoundButton.setOnCheckedChangeListener(android.widget.CompoundButton.OnCheckedChangeListener)void
android.widget.CompoundButton.setButtonDrawable(int)void
android.widget.CompoundButton.setButtonDrawable(android.graphics.drawable.Drawable)void
android.widget.CompoundButton.getButtonDrawable)android.graphics.drawable.Drawable
android.widget.CompoundButton.setButtonTintList(android.content.res.ColorStateList)void
android.widget.CompoundButton.getButtonTintList)android.content.res.ColorStateList
android.widget.CompoundButton.setButtonTintMode(android.graphics.PorterDuff.Mode)void
android.widget.CompoundButton.setButtonTintBlendMode(BlendMode)void
android.widget.CompoundButton.getButtonTintBlendMode)BlendMode
android.widget.CompoundButton.getAccessibilityClassName)CharSequence
android.widget.CompoundButton.getCompoundPaddingLeft)int
android.widget.CompoundButton.getCompoundPaddingRight)int
android.widget.CompoundButton.onDraw(Canvas)void
android.widget.CompoundButton.drawableStateChanged)void
android.widget.CompoundButton.drawableHotspotChanged(float,float)void
android.widget.CompoundButton.verifyDrawable(android.graphics.drawable.Drawable)boolean
android.widget.CompoundButton.jumpDrawablesToCurrentState)void
android.widget.CompoundButton.onSaveInstanceState)android.os.Parcelable
android.widget.CompoundButton.onRestoreInstanceState(android.os.Parcelable)void
android.widget.CompoundButton.autofill(android.view.autofill.AutofillValue)void
android.widget.CompoundButton.getAutofillType)int
android.widget.CompoundButton.getAutofillValue)android.view.autofill.AutofillValue
android.widget.CursorAdapter.init(android.content.Context,android.database.Cursor,boolean)void
android.widget.CursorAdapter.setDropDownViewTheme(android.content.res.Resources.Theme)void
android.widget.CursorAdapter.getCursor)android.database.Cursor
android.widget.CursorAdapter.getCount)int
android.widget.CursorAdapter.getItem(int)Object
android.widget.CursorAdapter.getItemId(int)long
android.widget.CursorAdapter.hasStableIds)boolean
android.widget.CursorAdapter.getView(int,android.view.View,android.view.ViewGroup)android.view.View
android.widget.CursorAdapter.getDropDownView(int,android.view.View,android.view.ViewGroup)android.view.View
android.widget.CursorAdapter.newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)android.view.View
android.widget.CursorAdapter.changeCursor(android.database.Cursor)void
android.widget.CursorAdapter.swapCursor(android.database.Cursor)android.database.Cursor
android.widget.CursorAdapter.convertToString(android.database.Cursor)CharSequence
android.widget.CursorAdapter.runQueryOnBackgroundThread(CharSequence)android.database.Cursor
android.widget.CursorAdapter.getFilter)android.widget.Filter
android.widget.CursorAdapter.getFilterQueryProvider)android.widget.FilterQueryProvider
android.widget.CursorAdapter.setFilterQueryProvider(android.widget.FilterQueryProvider)void
android.widget.CursorAdapter.onContentChanged)void
android.widget.CursorTreeAdapter.setGroupCursor(android.database.Cursor)void
android.widget.CursorTreeAdapter.setChildrenCursor(int,android.database.Cursor)void
android.widget.CursorTreeAdapter.getChild(int,int)android.database.Cursor
android.widget.CursorTreeAdapter.getChildId(int,int)long
android.widget.CursorTreeAdapter.getChildrenCount(int)int
android.widget.CursorTreeAdapter.getGroup(int)android.database.Cursor
android.widget.CursorTreeAdapter.getGroupCount)int
android.widget.CursorTreeAdapter.getGroupId(int)long
android.widget.CursorTreeAdapter.getGroupView(int,boolean,android.view.View,android.view.ViewGroup)android.view.View
android.widget.CursorTreeAdapter.getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)android.view.View
android.widget.CursorTreeAdapter.isChildSelectable(int,int)boolean
android.widget.CursorTreeAdapter.hasStableIds)boolean
android.widget.CursorTreeAdapter.notifyDataSetChanged)void
android.widget.CursorTreeAdapter.notifyDataSetChanged(boolean)void
android.widget.CursorTreeAdapter.notifyDataSetInvalidated)void
android.widget.CursorTreeAdapter.onGroupCollapsed(int)void
android.widget.CursorTreeAdapter.convertToString(android.database.Cursor)String
android.widget.CursorTreeAdapter.runQueryOnBackgroundThread(CharSequence)android.database.Cursor
android.widget.CursorTreeAdapter.getFilter)android.widget.Filter
android.widget.CursorTreeAdapter.getFilterQueryProvider)android.widget.FilterQueryProvider
android.widget.CursorTreeAdapter.setFilterQueryProvider(android.widget.FilterQueryProvider)void
android.widget.CursorTreeAdapter.changeCursor(android.database.Cursor)void
android.widget.CursorTreeAdapter.getCursor)android.database.Cursor
android.widget.DatePicker.init(int,int,int,android.widget.DatePicker.OnDateChangedListener)void
android.widget.DatePicker.setOnDateChangedListener(android.widget.DatePicker.OnDateChangedListener)void
android.widget.DatePicker.updateDate(int,int,int)void
android.widget.DatePicker.getYear)int
android.widget.DatePicker.getMonth)int
android.widget.DatePicker.getDayOfMonth)int
android.widget.DatePicker.getMinDate)long
android.widget.DatePicker.setMinDate(long)void
android.widget.DatePicker.getMaxDate)long
android.widget.DatePicker.setMaxDate(long)void
android.widget.DatePicker.setEnabled(boolean)void
android.widget.DatePicker.isEnabled)boolean
android.widget.DatePicker.getAccessibilityClassName)CharSequence
android.widget.DatePicker.onConfigurationChanged(android.content.res.Configuration)void
android.widget.DatePicker.setFirstDayOfWeek(int)void
android.widget.DatePicker.getFirstDayOfWeek)int
android.widget.DatePicker.getCalendarViewShown)boolean
android.widget.DatePicker.getCalendarView)android.widget.CalendarView
android.widget.DatePicker.setCalendarViewShown(boolean)void
android.widget.DatePicker.getSpinnersShown)boolean
android.widget.DatePicker.setSpinnersShown(boolean)void
android.widget.DatePicker.dispatchRestoreInstanceState(android.util.SparseArray)void
android.widget.DatePicker.onSaveInstanceState)android.os.Parcelable
android.widget.DatePicker.onRestoreInstanceState(android.os.Parcelable)void
android.widget.DatePicker.dispatchProvideAutofillStructure(android.view.ViewStructure,int)void
android.widget.DatePicker.autofill(android.view.autofill.AutofillValue)void
android.widget.DatePicker.getAutofillType)int
android.widget.DatePicker.getAutofillValue)android.view.autofill.AutofillValue
android.widget.DialerFilter.onFinishInflate)void
android.widget.DialerFilter.onFocusChanged(boolean,int,android.graphics.Rect)void
android.widget.DialerFilter.isQwertyKeyboard)boolean
android.widget.DialerFilter.onKeyDown(int,android.view.KeyEvent)boolean
android.widget.DialerFilter.onKeyUp(int,android.view.KeyEvent)boolean
android.widget.DialerFilter.getMode)int
android.widget.DialerFilter.setMode(int)void
android.widget.DialerFilter.getLetters)CharSequence
android.widget.DialerFilter.getDigits)CharSequence
android.widget.DialerFilter.getFilterText)CharSequence
android.widget.DialerFilter.append(String)void
android.widget.DialerFilter.clearText)void
android.widget.DialerFilter.setLettersWatcher(android.text.TextWatcher)void
android.widget.DialerFilter.setDigitsWatcher(android.text.TextWatcher)void
android.widget.DialerFilter.setFilterWatcher(android.text.TextWatcher)void
android.widget.DialerFilter.removeFilterWatcher(android.text.TextWatcher)void
android.widget.DialerFilter.onModeChange(int,int)void
android.widget.DigitalClock.onAttachedToWindow)void
android.widget.DigitalClock.onDetachedFromWindow)void
android.widget.DigitalClock.getAccessibilityClassName)CharSequence
android.widget.EdgeEffect.setSize(int,int)void
android.widget.EdgeEffect.isFinished)boolean
android.widget.EdgeEffect.finish)void
android.widget.EdgeEffect.onPull(float)void
android.widget.EdgeEffect.onPull(float,float)void
android.widget.EdgeEffect.onRelease)void
android.widget.EdgeEffect.onAbsorb(int)void
android.widget.EdgeEffect.setColor(int)void
android.widget.EdgeEffect.setBlendMode(android.graphics.BlendMode)void
android.widget.EdgeEffect.getColor)int
android.widget.EdgeEffect.getBlendMode)android.graphics.BlendMode
android.widget.EdgeEffect.draw(android.graphics.Canvas)boolean
android.widget.EdgeEffect.getMaxHeight)int
android.widget.EditText.getFreezesText)boolean
android.widget.EditText.getDefaultEditable)boolean
android.widget.EditText.getDefaultMovementMethod)android.text.method.MovementMethod
android.widget.EditText.getText)android.text.Editable
android.widget.EditText.setText(CharSequence,TextView.BufferType)void
android.widget.EditText.setSelection(int,int)void
android.widget.EditText.setSelection(int)void
android.widget.EditText.selectAll)void
android.widget.EditText.extendSelection(int)void
android.widget.EditText.setEllipsize(android.text.TextUtils.TruncateAt)void
android.widget.EditText.getAccessibilityClassName)CharSequence
android.widget.ExpandableListView.onRtlPropertiesChanged(int)void
android.widget.ExpandableListView.dispatchDraw(android.graphics.Canvas)void
android.widget.ExpandableListView.setChildDivider(android.graphics.drawable.Drawable)void
android.widget.ExpandableListView.setAdapter(android.widget.ListAdapter)void
android.widget.ExpandableListView.getAdapter)android.widget.ListAdapter
android.widget.ExpandableListView.setOnItemClickListener(AdapterView.OnItemClickListener)void
android.widget.ExpandableListView.setAdapter(android.widget.ExpandableListAdapter)void
android.widget.ExpandableListView.getExpandableListAdapter)android.widget.ExpandableListAdapter
android.widget.ExpandableListView.performItemClick(android.view.View,int,long)boolean
android.widget.ExpandableListView.expandGroup(int)boolean
android.widget.ExpandableListView.expandGroup(int,boolean)boolean
android.widget.ExpandableListView.collapseGroup(int)boolean
android.widget.ExpandableListView.setOnGroupCollapseListener(android.widget.ExpandableListView.OnGroupCollapseListener)void
android.widget.ExpandableListView.setOnGroupExpandListener(android.widget.ExpandableListView.OnGroupExpandListener)void
android.widget.ExpandableListView.setOnGroupClickListener(android.widget.ExpandableListView.OnGroupClickListener)void
android.widget.ExpandableListView.setOnChildClickListener(android.widget.ExpandableListView.OnChildClickListener)void
android.widget.ExpandableListView.getExpandableListPosition(int)long
android.widget.ExpandableListView.getFlatListPosition(long)int
android.widget.ExpandableListView.getSelectedPosition)long
android.widget.ExpandableListView.getSelectedId)long
android.widget.ExpandableListView.setSelectedGroup(int)void
android.widget.ExpandableListView.setSelectedChild(int,int,boolean)boolean
android.widget.ExpandableListView.isGroupExpanded(int)boolean
android.widget.ExpandableListView.getPackedPositionType(long)int
android.widget.ExpandableListView.getPackedPositionGroup(long)int
android.widget.ExpandableListView.getPackedPositionChild(long)int
android.widget.ExpandableListView.getPackedPositionForChild(int,int)long
android.widget.ExpandableListView.getPackedPositionForGroup(int)long
android.widget.ExpandableListView.setChildIndicator(android.graphics.drawable.Drawable)void
android.widget.ExpandableListView.setChildIndicatorBounds(int,int)void
android.widget.ExpandableListView.setChildIndicatorBoundsRelative(int,int)void
android.widget.ExpandableListView.setGroupIndicator(android.graphics.drawable.Drawable)void
android.widget.ExpandableListView.setIndicatorBounds(int,int)void
android.widget.ExpandableListView.setIndicatorBoundsRelative(int,int)void
android.widget.ExpandableListView.onSaveInstanceState)android.os.Parcelable
android.widget.ExpandableListView.onRestoreInstanceState(android.os.Parcelable)void
android.widget.ExpandableListView.getAccessibilityClassName)CharSequence
android.widget.Filter.filter(CharSequence)void
android.widget.Filter.filter(CharSequence,android.widget.Filter.FilterListener)void
android.widget.Filter.convertResultToString(Object)CharSequence
android.widget.FrameLayout.setForegroundGravity(int)void
android.widget.FrameLayout.generateDefaultLayoutParams)android.widget.FrameLayout.LayoutParams
android.widget.FrameLayout.onMeasure(int,int)void
android.widget.FrameLayout.onLayout(boolean,int,int,int,int)void
android.widget.FrameLayout.setMeasureAllChildren(boolean)void
android.widget.FrameLayout.getConsiderGoneChildrenWhenMeasuring)boolean
android.widget.FrameLayout.getMeasureAllChildren)boolean
android.widget.FrameLayout.generateLayoutParams(android.util.AttributeSet)android.widget.FrameLayout.LayoutParams
android.widget.FrameLayout.shouldDelayChildPressedState)boolean
android.widget.FrameLayout.checkLayoutParams(android.view.ViewGroup.LayoutParams)boolean
android.widget.FrameLayout.getAccessibilityClassName)CharSequence
android.widget.Gallery.onAttachedToWindow)void
android.widget.Gallery.setCallbackDuringFling(boolean)void
android.widget.Gallery.setAnimationDuration(int)void
android.widget.Gallery.setSpacing(int)void
android.widget.Gallery.setUnselectedAlpha(float)void
android.widget.Gallery.getChildStaticTransformation(View,android.view.animation.Transformation)boolean
android.widget.Gallery.computeHorizontalScrollExtent)int
android.widget.Gallery.computeHorizontalScrollOffset)int
android.widget.Gallery.computeHorizontalScrollRange)int
android.widget.Gallery.checkLayoutParams(android.view.ViewGroup.LayoutParams)boolean
android.widget.Gallery.onLayout(boolean,int,int,int,int)void
android.widget.Gallery.onTouchEvent(MotionEvent)boolean
android.widget.Gallery.onSingleTapUp(MotionEvent)boolean
android.widget.Gallery.onFling(MotionEvent,MotionEvent,float,float)boolean
android.widget.Gallery.onScroll(MotionEvent,MotionEvent,float,float)boolean
android.widget.Gallery.onDown(MotionEvent)boolean
android.widget.Gallery.onLongPress(MotionEvent)void
android.widget.Gallery.onShowPress(MotionEvent)void
android.widget.Gallery.dispatchSetSelected(boolean)void
android.widget.Gallery.dispatchSetPressed(boolean)void
android.widget.Gallery.showContextMenuForChild(View)boolean
android.widget.Gallery.showContextMenuForChild(View,float,float)boolean
android.widget.Gallery.showContextMenu)boolean
android.widget.Gallery.showContextMenu(float,float)boolean
android.widget.Gallery.dispatchKeyEvent(KeyEvent)boolean
android.widget.Gallery.onKeyDown(int,KeyEvent)boolean
android.widget.Gallery.onKeyUp(int,KeyEvent)boolean
android.widget.Gallery.setGravity(int)void
android.widget.Gallery.getChildDrawingOrder(int,int)int
android.widget.Gallery.onFocusChanged(boolean,int,android.graphics.Rect)void
android.widget.Gallery.getAccessibilityClassName)CharSequence
android.widget.GridLayout.equals(Object)boolean
android.widget.GridLayout.hashCode)int
android.widget.GridLayout.setGravity(int)void
android.widget.GridLayout.setBaseAttributes(android.content.res.TypedArray,int,int)void
android.widget.GridLayout.equals(Object)boolean
android.widget.GridLayout.hashCode)int
android.widget.GridLayout.getOrientation)int
android.widget.GridLayout.setOrientation(int)void
android.widget.GridLayout.getRowCount)int
android.widget.GridLayout.setRowCount(int)void
android.widget.GridLayout.getColumnCount)int
android.widget.GridLayout.setColumnCount(int)void
android.widget.GridLayout.getUseDefaultMargins)boolean
android.widget.GridLayout.setUseDefaultMargins(boolean)void
android.widget.GridLayout.getAlignmentMode)int
android.widget.GridLayout.setAlignmentMode(int)void
android.widget.GridLayout.isRowOrderPreserved)boolean
android.widget.GridLayout.setRowOrderPreserved(boolean)void
android.widget.GridLayout.isColumnOrderPreserved)boolean
android.widget.GridLayout.setColumnOrderPreserved(boolean)void
android.widget.GridLayout.checkLayoutParams(android.view.ViewGroup.LayoutParams)boolean
android.widget.GridLayout.generateDefaultLayoutParams)android.widget.GridLayout.LayoutParams
android.widget.GridLayout.generateLayoutParams(android.util.AttributeSet)android.widget.GridLayout.LayoutParams
android.widget.GridLayout.generateLayoutParams(android.view.ViewGroup.LayoutParams)android.widget.GridLayout.LayoutParams
android.widget.GridLayout.onViewAdded(android.view.View)void
android.widget.GridLayout.onViewRemoved(android.view.View)void
android.widget.GridLayout.onMeasure(int,int)void
android.widget.GridLayout.requestLayout)void
android.widget.GridLayout.onLayout(boolean,int,int,int,int)void
android.widget.GridLayout.getAccessibilityClassName)CharSequence
android.widget.GridLayout.spec(int,int,Alignment,float)android.widget.GridLayout.Spec
android.widget.GridLayout.spec(int,Alignment,float)android.widget.GridLayout.Spec
android.widget.GridLayout.spec(int,int,float)android.widget.GridLayout.Spec
android.widget.GridLayout.spec(int,float)android.widget.GridLayout.Spec
android.widget.GridLayout.spec(int,int,Alignment)android.widget.GridLayout.Spec
android.widget.GridLayout.spec(int,Alignment)android.widget.GridLayout.Spec
android.widget.GridLayout.spec(int,int)android.widget.GridLayout.Spec
android.widget.GridLayout.spec(int)android.widget.GridLayout.Spec
android.widget.GridView.getAdapter)android.widget.ListAdapter
android.widget.GridView.setRemoteViewsAdapter(android.content.Intent)void
android.widget.GridView.setAdapter(android.widget.ListAdapter)void
android.widget.GridView.smoothScrollToPosition(int)void
android.widget.GridView.smoothScrollByOffset(int)void
android.widget.GridView.onMeasure(int,int)void
android.widget.GridView.attachLayoutAnimationParameters(View,android.view.ViewGroup.LayoutParams,int,int)void
android.widget.GridView.layoutChildren)void
android.widget.GridView.setSelection(int)void
android.widget.GridView.onKeyDown(int,KeyEvent)boolean
android.widget.GridView.onKeyMultiple(int,int,KeyEvent)boolean
android.widget.GridView.onKeyUp(int,KeyEvent)boolean
android.widget.GridView.onFocusChanged(boolean,int,android.graphics.Rect)void
android.widget.GridView.setGravity(int)void
android.widget.GridView.getGravity)int
android.widget.GridView.setHorizontalSpacing(int)void
android.widget.GridView.getHorizontalSpacing)int
android.widget.GridView.getRequestedHorizontalSpacing)int
android.widget.GridView.setVerticalSpacing(int)void
android.widget.GridView.getVerticalSpacing)int
android.widget.GridView.setStretchMode(int)void
android.widget.GridView.getStretchMode)int
android.widget.GridView.setColumnWidth(int)void
android.widget.GridView.getColumnWidth)int
android.widget.GridView.getRequestedColumnWidth)int
android.widget.GridView.setNumColumns(int)void
android.widget.GridView.getNumColumns)int
android.widget.GridView.computeVerticalScrollExtent)int
android.widget.GridView.computeVerticalScrollOffset)int
android.widget.GridView.computeVerticalScrollRange)int
android.widget.GridView.getAccessibilityClassName)CharSequence
android.widget.GridView.onInitializeAccessibilityNodeInfoForItem(View,int,android.view.accessibility.AccessibilityNodeInfo)void
android.widget.HeaderViewListAdapter.getHeadersCount)int
android.widget.HeaderViewListAdapter.getFootersCount)int
android.widget.HeaderViewListAdapter.isEmpty)boolean
android.widget.HeaderViewListAdapter.removeHeader(android.view.View)boolean
android.widget.HeaderViewListAdapter.removeFooter(android.view.View)boolean
android.widget.HeaderViewListAdapter.getCount)int
android.widget.HeaderViewListAdapter.areAllItemsEnabled)boolean
android.widget.HeaderViewListAdapter.isEnabled(int)boolean
android.widget.HeaderViewListAdapter.getItem(int)Object
android.widget.HeaderViewListAdapter.getItemId(int)long
android.widget.HeaderViewListAdapter.hasStableIds)boolean
android.widget.HeaderViewListAdapter.getView(int,android.view.View,android.view.ViewGroup)android.view.View
android.widget.HeaderViewListAdapter.getItemViewType(int)int
android.widget.HeaderViewListAdapter.getViewTypeCount)int
android.widget.HeaderViewListAdapter.registerDataSetObserver(android.database.DataSetObserver)void
android.widget.HeaderViewListAdapter.unregisterDataSetObserver(android.database.DataSetObserver)void
android.widget.HeaderViewListAdapter.getFilter)android.widget.Filter
android.widget.HeaderViewListAdapter.getWrappedAdapter)android.widget.ListAdapter
android.widget.HorizontalScrollView.getLeftFadingEdgeStrength)float
android.widget.HorizontalScrollView.getRightFadingEdgeStrength)float
android.widget.HorizontalScrollView.setEdgeEffectColor(int)void
android.widget.HorizontalScrollView.setRightEdgeEffectColor(int)void
android.widget.HorizontalScrollView.setLeftEdgeEffectColor(int)void
android.widget.HorizontalScrollView.getLeftEdgeEffectColor)int
android.widget.HorizontalScrollView.getRightEdgeEffectColor)int
android.widget.HorizontalScrollView.getMaxScrollAmount)int
android.widget.HorizontalScrollView.addView(View)void
android.widget.HorizontalScrollView.addView(View,int)void
android.widget.HorizontalScrollView.addView(View,android.view.ViewGroup.LayoutParams)void
android.widget.HorizontalScrollView.addView(View,int,android.view.ViewGroup.LayoutParams)void
android.widget.HorizontalScrollView.isFillViewport)boolean
android.widget.HorizontalScrollView.setFillViewport(boolean)void
android.widget.HorizontalScrollView.isSmoothScrollingEnabled)boolean
android.widget.HorizontalScrollView.setSmoothScrollingEnabled(boolean)void
android.widget.HorizontalScrollView.onMeasure(int,int)void
android.widget.HorizontalScrollView.dispatchKeyEvent(KeyEvent)boolean
android.widget.HorizontalScrollView.executeKeyEvent(KeyEvent)boolean
android.widget.HorizontalScrollView.requestDisallowInterceptTouchEvent(boolean)void
android.widget.HorizontalScrollView.onInterceptTouchEvent(MotionEvent)boolean
android.widget.HorizontalScrollView.onTouchEvent(MotionEvent)boolean
android.widget.HorizontalScrollView.onGenericMotionEvent(MotionEvent)boolean
android.widget.HorizontalScrollView.shouldDelayChildPressedState)boolean
android.widget.HorizontalScrollView.onOverScrolled(int,int,boolean,boolean)void
android.widget.HorizontalScrollView.getAccessibilityClassName)CharSequence
android.widget.HorizontalScrollView.pageScroll(int)boolean
android.widget.HorizontalScrollView.fullScroll(int)boolean
android.widget.HorizontalScrollView.arrowScroll(int)boolean
android.widget.HorizontalScrollView.smoothScrollBy(int,int)void
android.widget.HorizontalScrollView.smoothScrollTo(int,int)void
android.widget.HorizontalScrollView.computeHorizontalScrollRange)int
android.widget.HorizontalScrollView.computeHorizontalScrollOffset)int
android.widget.HorizontalScrollView.measureChild(View,int,int)void
android.widget.HorizontalScrollView.measureChildWithMargins(View,int,int,int,int)void
android.widget.HorizontalScrollView.computeScroll)void
android.widget.HorizontalScrollView.computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)int
android.widget.HorizontalScrollView.requestChildFocus(View,View)void
android.widget.HorizontalScrollView.onRequestFocusInDescendants(int,android.graphics.Rect)boolean
android.widget.HorizontalScrollView.requestChildRectangleOnScreen(View,android.graphics.Rect,boolean)boolean
android.widget.HorizontalScrollView.requestLayout)void
android.widget.HorizontalScrollView.onLayout(boolean,int,int,int,int)void
android.widget.HorizontalScrollView.onSizeChanged(int,int,int,int)void
android.widget.HorizontalScrollView.fling(int)void
android.widget.HorizontalScrollView.scrollTo(int,int)void
android.widget.HorizontalScrollView.draw(android.graphics.Canvas)void
android.widget.HorizontalScrollView.onRestoreInstanceState(android.os.Parcelable)void
android.widget.HorizontalScrollView.onSaveInstanceState)android.os.Parcelable
android.widget.ImageButton.onSetAlpha(int)boolean
android.widget.ImageButton.getAccessibilityClassName)CharSequence
android.widget.ImageButton.onResolvePointerIcon(android.view.MotionEvent,int)android.view.PointerIcon
android.widget.ImageSwitcher.setImageResource(int)void
android.widget.ImageSwitcher.setImageURI(android.net.Uri)void
android.widget.ImageSwitcher.setImageDrawable(android.graphics.drawable.Drawable)void
android.widget.ImageSwitcher.getAccessibilityClassName)CharSequence
android.widget.ImageView.valueOf(String)ScaleType
android.widget.ImageView.verifyDrawable(android.graphics.drawable.Drawable)boolean
android.widget.ImageView.jumpDrawablesToCurrentState)void
android.widget.ImageView.invalidateDrawable(android.graphics.drawable.Drawable)void
android.widget.ImageView.hasOverlappingRendering)boolean
android.widget.ImageView.getAdjustViewBounds)boolean
android.widget.ImageView.setAdjustViewBounds(boolean)void
android.widget.ImageView.getMaxWidth)int
android.widget.ImageView.setMaxWidth(int)void
android.widget.ImageView.getMaxHeight)int
android.widget.ImageView.setMaxHeight(int)void
android.widget.ImageView.getDrawable)android.graphics.drawable.Drawable
android.widget.ImageView.setImageResource(int)void
android.widget.ImageView.setImageURI(android.net.Uri)void
android.widget.ImageView.setImageDrawable(android.graphics.drawable.Drawable)void
android.widget.ImageView.setImageIcon(android.graphics.drawable.Icon)void
android.widget.ImageView.setImageTintList(android.content.res.ColorStateList)void
android.widget.ImageView.getImageTintList)android.content.res.ColorStateList
android.widget.ImageView.setImageTintMode(android.graphics.PorterDuff.Mode)void
android.widget.ImageView.setImageTintBlendMode(BlendMode)void
android.widget.ImageView.getImageTintBlendMode)BlendMode
android.widget.ImageView.setImageBitmap(Bitmap)void
android.widget.ImageView.setImageState(int,boolean)void
android.widget.ImageView.setSelected(boolean)void
android.widget.ImageView.setImageLevel(int)void
android.widget.ImageView.setScaleType(ScaleType)void
android.widget.ImageView.getScaleType)ScaleType
android.widget.ImageView.getImageMatrix)Matrix
android.widget.ImageView.setImageMatrix(Matrix)void
android.widget.ImageView.getCropToPadding)boolean
android.widget.ImageView.setCropToPadding(boolean)void
android.widget.ImageView.onRtlPropertiesChanged(int)void
android.widget.ImageView.onMeasure(int,int)void
android.widget.ImageView.setFrame(int,int,int,int)boolean
android.widget.ImageView.drawableStateChanged)void
android.widget.ImageView.drawableHotspotChanged(float,float)void
android.widget.ImageView.animateTransform(Matrix)void
android.widget.ImageView.onDraw(Canvas)void
android.widget.ImageView.getBaseline)int
android.widget.ImageView.setBaseline(int)void
android.widget.ImageView.setBaselineAlignBottom(boolean)void
android.widget.ImageView.getBaselineAlignBottom)boolean
android.widget.ImageView.setColorFilter(int,android.graphics.PorterDuff.Mode)void
android.widget.ImageView.setColorFilter(int)void
android.widget.ImageView.clearColorFilter)void
android.widget.ImageView.getColorFilter)ColorFilter
android.widget.ImageView.setColorFilter(ColorFilter)void
android.widget.ImageView.getImageAlpha)int
android.widget.ImageView.setImageAlpha(int)void
android.widget.ImageView.setAlpha(int)void
android.widget.ImageView.isOpaque)boolean
android.widget.ImageView.onVisibilityAggregated(boolean)void
android.widget.ImageView.setVisibility(int)void
android.widget.ImageView.onAttachedToWindow)void
android.widget.ImageView.onDetachedFromWindow)void
android.widget.ImageView.getAccessibilityClassName)CharSequence
android.widget.LinearLayout.debug(String)String
android.widget.LinearLayout.setShowDividers(int)void
android.widget.LinearLayout.shouldDelayChildPressedState)boolean
android.widget.LinearLayout.getShowDividers)int
android.widget.LinearLayout.getDividerDrawable)android.graphics.drawable.Drawable
android.widget.LinearLayout.setDividerDrawable(android.graphics.drawable.Drawable)void
android.widget.LinearLayout.setDividerPadding(int)void
android.widget.LinearLayout.getDividerPadding)int
android.widget.LinearLayout.onDraw(android.graphics.Canvas)void
android.widget.LinearLayout.isBaselineAligned)boolean
android.widget.LinearLayout.setBaselineAligned(boolean)void
android.widget.LinearLayout.isMeasureWithLargestChildEnabled)boolean
android.widget.LinearLayout.setMeasureWithLargestChildEnabled(boolean)void
android.widget.LinearLayout.getBaseline)int
android.widget.LinearLayout.getBaselineAlignedChildIndex)int
android.widget.LinearLayout.setBaselineAlignedChildIndex(int)void
android.widget.LinearLayout.getWeightSum)float
android.widget.LinearLayout.setWeightSum(float)void
android.widget.LinearLayout.onMeasure(int,int)void
android.widget.LinearLayout.onLayout(boolean,int,int,int,int)void
android.widget.LinearLayout.onRtlPropertiesChanged(int)void
android.widget.LinearLayout.setOrientation(int)void
android.widget.LinearLayout.getOrientation)int
android.widget.LinearLayout.setGravity(int)void
android.widget.LinearLayout.getGravity)int
android.widget.LinearLayout.setHorizontalGravity(int)void
android.widget.LinearLayout.setVerticalGravity(int)void
android.widget.LinearLayout.generateLayoutParams(android.util.AttributeSet)android.widget.LinearLayout.LayoutParams
android.widget.LinearLayout.generateDefaultLayoutParams)android.widget.LinearLayout.LayoutParams
android.widget.LinearLayout.generateLayoutParams(android.view.ViewGroup.LayoutParams)android.widget.LinearLayout.LayoutParams
android.widget.LinearLayout.checkLayoutParams(android.view.ViewGroup.LayoutParams)boolean
android.widget.LinearLayout.getAccessibilityClassName)CharSequence
android.widget.ListPopupWindow.setAdapter(android.widget.ListAdapter)void
android.widget.ListPopupWindow.setPromptPosition(int)void
android.widget.ListPopupWindow.getPromptPosition)int
android.widget.ListPopupWindow.setModal(boolean)void
android.widget.ListPopupWindow.isModal)boolean
android.widget.ListPopupWindow.setSoftInputMode(int)void
android.widget.ListPopupWindow.getSoftInputMode)int
android.widget.ListPopupWindow.setListSelector(android.graphics.drawable.Drawable)void
android.widget.ListPopupWindow.getBackground)android.graphics.drawable.Drawable
android.widget.ListPopupWindow.setBackgroundDrawable(android.graphics.drawable.Drawable)void
android.widget.ListPopupWindow.setAnimationStyle(int)void
android.widget.ListPopupWindow.getAnimationStyle)int
android.widget.ListPopupWindow.getAnchorView)android.view.View
android.widget.ListPopupWindow.setAnchorView(android.view.View)void
android.widget.ListPopupWindow.getHorizontalOffset)int
android.widget.ListPopupWindow.setHorizontalOffset(int)void
android.widget.ListPopupWindow.getVerticalOffset)int
android.widget.ListPopupWindow.setVerticalOffset(int)void
android.widget.ListPopupWindow.setEpicenterBounds(android.graphics.Rect)void
android.widget.ListPopupWindow.getEpicenterBounds)android.graphics.Rect
android.widget.ListPopupWindow.setDropDownGravity(int)void
android.widget.ListPopupWindow.getWidth)int
android.widget.ListPopupWindow.setWidth(int)void
android.widget.ListPopupWindow.setContentWidth(int)void
android.widget.ListPopupWindow.getHeight)int
android.widget.ListPopupWindow.setHeight(int)void
android.widget.ListPopupWindow.setWindowLayoutType(int)void
android.widget.ListPopupWindow.setOnItemClickListener(AdapterView.OnItemClickListener)void
android.widget.ListPopupWindow.setOnItemSelectedListener(AdapterView.OnItemSelectedListener)void
android.widget.ListPopupWindow.setPromptView(android.view.View)void
android.widget.ListPopupWindow.postShow)void
android.widget.ListPopupWindow.show)void
android.widget.ListPopupWindow.dismiss)void
android.widget.ListPopupWindow.setOnDismissListener(PopupWindow.OnDismissListener)void
android.widget.ListPopupWindow.setInputMethodMode(int)void
android.widget.ListPopupWindow.getInputMethodMode)int
android.widget.ListPopupWindow.setSelection(int)void
android.widget.ListPopupWindow.clearListSelection)void
android.widget.ListPopupWindow.isShowing)boolean
android.widget.ListPopupWindow.isInputMethodNotNeeded)boolean
android.widget.ListPopupWindow.performItemClick(int)boolean
android.widget.ListPopupWindow.getSelectedItem)Object
android.widget.ListPopupWindow.getSelectedItemPosition)int
android.widget.ListPopupWindow.getSelectedItemId)long
android.widget.ListPopupWindow.getSelectedView)android.view.View
android.widget.ListPopupWindow.getListView)android.widget.ListView
android.widget.ListPopupWindow.onKeyDown(int,android.view.KeyEvent)boolean
android.widget.ListPopupWindow.onKeyUp(int,android.view.KeyEvent)boolean
android.widget.ListPopupWindow.onKeyPreIme(int,android.view.KeyEvent)boolean
android.widget.ListView.getMaxScrollAmount)int
android.widget.ListView.addHeaderView(android.view.View,Object,boolean)void
android.widget.ListView.addHeaderView(android.view.View)void
android.widget.ListView.getHeaderViewsCount)int
android.widget.ListView.removeHeaderView(android.view.View)boolean
android.widget.ListView.addFooterView(android.view.View,Object,boolean)void
android.widget.ListView.addFooterView(android.view.View)void
android.widget.ListView.getFooterViewsCount)int
android.widget.ListView.removeFooterView(android.view.View)boolean
android.widget.ListView.getAdapter)android.widget.ListAdapter
android.widget.ListView.setRemoteViewsAdapter(android.content.Intent)void
android.widget.ListView.setAdapter(android.widget.ListAdapter)void
android.widget.ListView.requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)boolean
android.widget.ListView.smoothScrollToPosition(int)void
android.widget.ListView.smoothScrollByOffset(int)void
android.widget.ListView.onDetachedFromWindow)void
android.widget.ListView.onSizeChanged(int,int,int,int)void
android.widget.ListView.onMeasure(int,int)void
android.widget.ListView.layoutChildren)void
android.widget.ListView.canAnimate)boolean
android.widget.ListView.setSelection(int)void
android.widget.ListView.setSelectionAfterHeaderView)void
android.widget.ListView.dispatchKeyEvent(android.view.KeyEvent)boolean
android.widget.ListView.onKeyDown(int,android.view.KeyEvent)boolean
android.widget.ListView.onKeyMultiple(int,int,android.view.KeyEvent)boolean
android.widget.ListView.onKeyUp(int,android.view.KeyEvent)boolean
android.widget.ListView.setItemsCanFocus(boolean)void
android.widget.ListView.getItemsCanFocus)boolean
android.widget.ListView.isOpaque)boolean
android.widget.ListView.setCacheColorHint(int)void
android.widget.ListView.dispatchDraw(android.graphics.Canvas)void
android.widget.ListView.drawChild(android.graphics.Canvas,android.view.View,long)boolean
android.widget.ListView.getDivider)android.graphics.drawable.Drawable
android.widget.ListView.setDivider(android.graphics.drawable.Drawable)void
android.widget.ListView.getDividerHeight)int
android.widget.ListView.setDividerHeight(int)void
android.widget.ListView.setHeaderDividersEnabled(boolean)void
android.widget.ListView.areHeaderDividersEnabled)boolean
android.widget.ListView.setFooterDividersEnabled(boolean)void
android.widget.ListView.areFooterDividersEnabled)boolean
android.widget.ListView.setOverscrollHeader(android.graphics.drawable.Drawable)void
android.widget.ListView.getOverscrollHeader)android.graphics.drawable.Drawable
android.widget.ListView.setOverscrollFooter(android.graphics.drawable.Drawable)void
android.widget.ListView.getOverscrollFooter)android.graphics.drawable.Drawable
android.widget.ListView.onFocusChanged(boolean,int,android.graphics.Rect)void
android.widget.ListView.onFinishInflate)void
android.widget.ListView.getAccessibilityClassName)CharSequence
android.widget.ListView.onInitializeAccessibilityNodeInfoForItem(android.view.View,int,android.view.accessibility.AccessibilityNodeInfo)void
android.widget.Magnifier.setSize(int,int)Builder
android.widget.Magnifier.setInitialZoom(float)Builder
android.widget.Magnifier.setElevation(float)Builder
android.widget.Magnifier.setCornerRadius(float)Builder
android.widget.Magnifier.setOverlay(android.graphics.drawable.Drawable)Builder
android.widget.Magnifier.setDefaultSourceToMagnifierOffset(int,int)Builder
android.widget.Magnifier.setClippingEnabled(boolean)Builder
android.widget.Magnifier.setSourceBounds(int,int,int,int)Builder
android.widget.Magnifier.build)android.widget.Magnifier
android.widget.Magnifier.show(float,float)void
android.widget.Magnifier.show(float,float,float,float)void
android.widget.Magnifier.dismiss)void
android.widget.Magnifier.update)void
android.widget.Magnifier.getWidth)int
android.widget.Magnifier.getHeight)int
android.widget.Magnifier.getSourceWidth)int
android.widget.Magnifier.getSourceHeight)int
android.widget.Magnifier.setZoom(float)void
android.widget.Magnifier.getZoom)float
android.widget.Magnifier.getElevation)float
android.widget.Magnifier.getCornerRadius)float
android.widget.Magnifier.getDefaultHorizontalSourceToMagnifierOffset)int
android.widget.Magnifier.getDefaultVerticalSourceToMagnifierOffset)int
android.widget.Magnifier.getOverlay)android.graphics.drawable.Drawable
android.widget.Magnifier.isClippingEnabled)boolean
android.widget.Magnifier.getPosition)android.graphics.Point
android.widget.Magnifier.getSourcePosition)android.graphics.Point
android.widget.MediaController.onFinishInflate)void
android.widget.MediaController.setMediaPlayer(android.widget.MediaController.MediaPlayerControl)void
android.widget.MediaController.setAnchorView(View)void
android.widget.MediaController.show)void
android.widget.MediaController.show(int)void
android.widget.MediaController.isShowing)boolean
android.widget.MediaController.hide)void
android.widget.MediaController.onTouchEvent(MotionEvent)boolean
android.widget.MediaController.onTrackballEvent(MotionEvent)boolean
android.widget.MediaController.dispatchKeyEvent(KeyEvent)boolean
android.widget.MediaController.setEnabled(boolean)void
android.widget.MediaController.getAccessibilityClassName)CharSequence
android.widget.MediaController.setPrevNextListeners(android.view.View.OnClickListener,android.view.View.OnClickListener)void
android.widget.MultiAutoCompleteTextView.findTokenStart(CharSequence,int)int
android.widget.MultiAutoCompleteTextView.findTokenEnd(CharSequence,int)int
android.widget.MultiAutoCompleteTextView.terminateToken(CharSequence)CharSequence
android.widget.MultiAutoCompleteTextView.setTokenizer(android.widget.MultiAutoCompleteTextView.Tokenizer)void
android.widget.MultiAutoCompleteTextView.performFiltering(CharSequence,int)void
android.widget.MultiAutoCompleteTextView.enoughToFilter)boolean
android.widget.MultiAutoCompleteTextView.performValidation)void
android.widget.MultiAutoCompleteTextView.performFiltering(CharSequence,int,int,int)void
android.widget.MultiAutoCompleteTextView.replaceText(CharSequence)void
android.widget.MultiAutoCompleteTextView.getAccessibilityClassName)CharSequence
android.widget.NumberPicker.onLayout(boolean,int,int,int,int)void
android.widget.NumberPicker.onMeasure(int,int)void
android.widget.NumberPicker.onInterceptTouchEvent(android.view.MotionEvent)boolean
android.widget.NumberPicker.onTouchEvent(android.view.MotionEvent)boolean
android.widget.NumberPicker.dispatchTouchEvent(android.view.MotionEvent)boolean
android.widget.NumberPicker.dispatchKeyEvent(android.view.KeyEvent)boolean
android.widget.NumberPicker.dispatchTrackballEvent(android.view.MotionEvent)boolean
android.widget.NumberPicker.dispatchHoverEvent(android.view.MotionEvent)boolean
android.widget.NumberPicker.computeScroll)void
android.widget.NumberPicker.setEnabled(boolean)void
android.widget.NumberPicker.scrollBy(int,int)void
android.widget.NumberPicker.computeVerticalScrollOffset)int
android.widget.NumberPicker.computeVerticalScrollRange)int
android.widget.NumberPicker.computeVerticalScrollExtent)int
android.widget.NumberPicker.getSolidColor)int
android.widget.NumberPicker.setOnValueChangedListener(android.widget.NumberPicker.OnValueChangeListener)void
android.widget.NumberPicker.setOnScrollListener(android.widget.NumberPicker.OnScrollListener)void
android.widget.NumberPicker.setFormatter(android.widget.NumberPicker.Formatter)void
android.widget.NumberPicker.setValue(int)void
android.widget.NumberPicker.performClick)boolean
android.widget.NumberPicker.performLongClick)boolean
android.widget.NumberPicker.getWrapSelectorWheel)boolean
android.widget.NumberPicker.setWrapSelectorWheel(boolean)void
android.widget.NumberPicker.setOnLongPressUpdateInterval(long)void
android.widget.NumberPicker.getValue)int
android.widget.NumberPicker.getMinValue)int
android.widget.NumberPicker.setMinValue(int)void
android.widget.NumberPicker.getMaxValue)int
android.widget.NumberPicker.setMaxValue(int)void
android.widget.NumberPicker.setDisplayedValues(String)void
android.widget.NumberPicker.setSelectionDividerHeight(int)void
android.widget.NumberPicker.getSelectionDividerHeight)int
android.widget.NumberPicker.getTopFadingEdgeStrength)float
android.widget.NumberPicker.getBottomFadingEdgeStrength)float
android.widget.NumberPicker.onDetachedFromWindow)void
android.widget.NumberPicker.drawableStateChanged)void
android.widget.NumberPicker.jumpDrawablesToCurrentState)void
android.widget.NumberPicker.onDraw(android.graphics.Canvas)void
android.widget.NumberPicker.getAccessibilityNodeProvider)android.view.accessibility.AccessibilityNodeProvider
android.widget.NumberPicker.setTextColor(int)void
android.widget.NumberPicker.getTextColor)int
android.widget.NumberPicker.setTextSize(float)void
android.widget.NumberPicker.getTextSize)float
android.widget.OverScroller.setFriction(float)void
android.widget.OverScroller.isFinished)boolean
android.widget.OverScroller.forceFinished(boolean)void
android.widget.OverScroller.getCurrX)int
android.widget.OverScroller.getCurrY)int
android.widget.OverScroller.getCurrVelocity)float
android.widget.OverScroller.getStartX)int
android.widget.OverScroller.getStartY)int
android.widget.OverScroller.getFinalX)int
android.widget.OverScroller.getFinalY)int
android.widget.OverScroller.computeScrollOffset)boolean
android.widget.OverScroller.startScroll(int,int,int,int)void
android.widget.OverScroller.startScroll(int,int,int,int,int)void
android.widget.OverScroller.springBack(int,int,int,int,int,int)boolean
android.widget.OverScroller.notifyHorizontalEdgeReached(int,int,int)void
android.widget.OverScroller.notifyVerticalEdgeReached(int,int,int)void
android.widget.OverScroller.isOverScrolled)boolean
android.widget.OverScroller.abortAnimation)void
android.widget.PopupMenu.setGravity(int)void
android.widget.PopupMenu.getGravity)int
android.widget.PopupMenu.getMenu)Menu
android.widget.PopupMenu.getMenuInflater)MenuInflater
android.widget.PopupMenu.inflate(int)void
android.widget.PopupMenu.show)void
android.widget.PopupMenu.dismiss)void
android.widget.PopupMenu.setOnMenuItemClickListener(android.widget.PopupMenu.OnMenuItemClickListener)void
android.widget.PopupMenu.setOnDismissListener(android.widget.PopupMenu.OnDismissListener)void
android.widget.PopupMenu.setForceShowIcon(boolean)void
android.widget.PopupWindow.setEnterTransition(android.transition.Transition)void
android.widget.PopupWindow.getEnterTransition)android.transition.Transition
android.widget.PopupWindow.setExitTransition(android.transition.Transition)void
android.widget.PopupWindow.getExitTransition)android.transition.Transition
android.widget.PopupWindow.getEpicenterBounds)android.graphics.Rect
android.widget.PopupWindow.setEpicenterBounds(android.graphics.Rect)void
android.widget.PopupWindow.getBackground)android.graphics.drawable.Drawable
android.widget.PopupWindow.setBackgroundDrawable(android.graphics.drawable.Drawable)void
android.widget.PopupWindow.getElevation)float
android.widget.PopupWindow.setElevation(float)void
android.widget.PopupWindow.getAnimationStyle)int
android.widget.PopupWindow.setIgnoreCheekPress)void
android.widget.PopupWindow.setAnimationStyle(int)void
android.widget.PopupWindow.getContentView)android.view.View
android.widget.PopupWindow.setContentView(android.view.View)void
android.widget.PopupWindow.setTouchInterceptor(android.view.View.OnTouchListener)void
android.widget.PopupWindow.isFocusable)boolean
android.widget.PopupWindow.setFocusable(boolean)void
android.widget.PopupWindow.getInputMethodMode)int
android.widget.PopupWindow.setInputMethodMode(int)void
android.widget.PopupWindow.setSoftInputMode(int)void
android.widget.PopupWindow.getSoftInputMode)int
android.widget.PopupWindow.isTouchable)boolean
android.widget.PopupWindow.setTouchable(boolean)void
android.widget.PopupWindow.isOutsideTouchable)boolean
android.widget.PopupWindow.setOutsideTouchable(boolean)void
android.widget.PopupWindow.isClippingEnabled)boolean
android.widget.PopupWindow.setClippingEnabled(boolean)void
android.widget.PopupWindow.isClippedToScreen)boolean
android.widget.PopupWindow.setIsClippedToScreen(boolean)void
android.widget.PopupWindow.isSplitTouchEnabled)boolean
android.widget.PopupWindow.setSplitTouchEnabled(boolean)void
android.widget.PopupWindow.isLaidOutInScreen)boolean
android.widget.PopupWindow.setIsLaidOutInScreen(boolean)void
android.widget.PopupWindow.isAttachedInDecor)boolean
android.widget.PopupWindow.setAttachedInDecor(boolean)void
android.widget.PopupWindow.setWindowLayoutType(int)void
android.widget.PopupWindow.getWindowLayoutType)int
android.widget.PopupWindow.isTouchModal)boolean
android.widget.PopupWindow.setTouchModal(boolean)void
android.widget.PopupWindow.setWindowLayoutMode(int,int)void
android.widget.PopupWindow.getHeight)int
android.widget.PopupWindow.setHeight(int)void
android.widget.PopupWindow.getWidth)int
android.widget.PopupWindow.setWidth(int)void
android.widget.PopupWindow.setOverlapAnchor(boolean)void
android.widget.PopupWindow.getOverlapAnchor)boolean
android.widget.PopupWindow.isShowing)boolean
android.widget.PopupWindow.showAtLocation(android.view.View,int,int,int)void
android.widget.PopupWindow.showAsDropDown(android.view.View)void
android.widget.PopupWindow.showAsDropDown(android.view.View,int,int)void
android.widget.PopupWindow.showAsDropDown(android.view.View,int,int,int)void
android.widget.PopupWindow.isAboveAnchor)boolean
android.widget.PopupWindow.getMaxAvailableHeight(android.view.View)int
android.widget.PopupWindow.getMaxAvailableHeight(android.view.View,int)int
android.widget.PopupWindow.getMaxAvailableHeight(android.view.View,int,boolean)int
android.widget.PopupWindow.dismiss)void
android.widget.PopupWindow.setOnDismissListener(android.widget.PopupWindow.OnDismissListener)void
android.widget.PopupWindow.update)void
android.widget.PopupWindow.update(int,int)void
android.widget.PopupWindow.update(int,int,int,int)void
android.widget.PopupWindow.update(int,int,int,int,boolean)void
android.widget.PopupWindow.update(android.view.View,int,int)void
android.widget.PopupWindow.update(android.view.View,int,int,int,int)void
android.widget.ProgressBar.setMinWidth(int)void
android.widget.ProgressBar.getMinWidth)int
android.widget.ProgressBar.setMaxWidth(int)void
android.widget.ProgressBar.getMaxWidth)int
android.widget.ProgressBar.setMinHeight(int)void
android.widget.ProgressBar.getMinHeight)int
android.widget.ProgressBar.setMaxHeight(int)void
android.widget.ProgressBar.getMaxHeight)int
android.widget.ProgressBar.getIndeterminateDrawable)android.graphics.drawable.Drawable
android.widget.ProgressBar.setIndeterminateDrawable(android.graphics.drawable.Drawable)void
android.widget.ProgressBar.setIndeterminateTintList(android.content.res.ColorStateList)void
android.widget.ProgressBar.getIndeterminateTintList)android.content.res.ColorStateList
android.widget.ProgressBar.setIndeterminateTintMode(android.graphics.PorterDuff.Mode)void
android.widget.ProgressBar.setIndeterminateTintBlendMode(BlendMode)void
android.widget.ProgressBar.getIndeterminateTintBlendMode)BlendMode
android.widget.ProgressBar.setIndeterminateDrawableTiled(android.graphics.drawable.Drawable)void
android.widget.ProgressBar.getProgressDrawable)android.graphics.drawable.Drawable
android.widget.ProgressBar.setProgressDrawable(android.graphics.drawable.Drawable)void
android.widget.ProgressBar.setProgressTintList(android.content.res.ColorStateList)void
android.widget.ProgressBar.getProgressTintList)android.content.res.ColorStateList
android.widget.ProgressBar.setProgressTintMode(android.graphics.PorterDuff.Mode)void
android.widget.ProgressBar.setProgressTintBlendMode(BlendMode)void
android.widget.ProgressBar.getProgressTintBlendMode)BlendMode
android.widget.ProgressBar.setProgressBackgroundTintList(android.content.res.ColorStateList)void
android.widget.ProgressBar.getProgressBackgroundTintList)android.content.res.ColorStateList
android.widget.ProgressBar.setProgressBackgroundTintMode(android.graphics.PorterDuff.Mode)void
android.widget.ProgressBar.setProgressBackgroundTintBlendMode(BlendMode)void
android.widget.ProgressBar.getProgressBackgroundTintBlendMode)BlendMode
android.widget.ProgressBar.setSecondaryProgressTintList(android.content.res.ColorStateList)void
android.widget.ProgressBar.getSecondaryProgressTintList)android.content.res.ColorStateList
android.widget.ProgressBar.setSecondaryProgressTintMode(android.graphics.PorterDuff.Mode)void
android.widget.ProgressBar.setSecondaryProgressTintBlendMode(BlendMode)void
android.widget.ProgressBar.getSecondaryProgressTintBlendMode)BlendMode
android.widget.ProgressBar.setProgressDrawableTiled(android.graphics.drawable.Drawable)void
android.widget.ProgressBar.getCurrentDrawable)android.graphics.drawable.Drawable
android.widget.ProgressBar.verifyDrawable(android.graphics.drawable.Drawable)boolean
android.widget.ProgressBar.jumpDrawablesToCurrentState)void
android.widget.ProgressBar.postInvalidate)void
android.widget.ProgressBar.setProgress(int,boolean)void
android.widget.ProgressBar.setInterpolator(android.content.Context,int)void
android.widget.ProgressBar.setInterpolator(android.view.animation.Interpolator)void
android.widget.ProgressBar.getInterpolator)android.view.animation.Interpolator
android.widget.ProgressBar.onVisibilityAggregated(boolean)void
android.widget.ProgressBar.invalidateDrawable(android.graphics.drawable.Drawable)void
android.widget.ProgressBar.onSizeChanged(int,int,int,int)void
android.widget.ProgressBar.drawableStateChanged)void
android.widget.ProgressBar.drawableHotspotChanged(float,float)void
android.widget.ProgressBar.onSaveInstanceState)android.os.Parcelable
android.widget.ProgressBar.onRestoreInstanceState(android.os.Parcelable)void
android.widget.ProgressBar.onAttachedToWindow)void
android.widget.ProgressBar.onDetachedFromWindow)void
android.widget.ProgressBar.getAccessibilityClassName)CharSequence
android.widget.ProgressBar.isAnimating)boolean
android.widget.QuickContactBadge.onAttachedToWindow)void
android.widget.QuickContactBadge.drawableStateChanged)void
android.widget.QuickContactBadge.drawableHotspotChanged(float,float)void
android.widget.QuickContactBadge.setMode(int)void
android.widget.QuickContactBadge.setPrioritizedMimeType(String)void
android.widget.QuickContactBadge.onDraw(android.graphics.Canvas)void
android.widget.QuickContactBadge.setImageToDefault)void
android.widget.QuickContactBadge.assignContactUri(android.net.Uri)void
android.widget.QuickContactBadge.assignContactFromEmail(String,boolean)void
android.widget.QuickContactBadge.assignContactFromEmail(String,boolean,android.os.Bundle)void
android.widget.QuickContactBadge.assignContactFromPhone(String,boolean)void
android.widget.QuickContactBadge.assignContactFromPhone(String,boolean,android.os.Bundle)void
android.widget.QuickContactBadge.setOverlay(android.graphics.drawable.Drawable)void
android.widget.QuickContactBadge.onClick(android.view.View)void
android.widget.QuickContactBadge.getAccessibilityClassName)CharSequence
android.widget.QuickContactBadge.setExcludeMimes(String)void
android.widget.RadioButton.toggle)void
android.widget.RadioButton.getAccessibilityClassName)CharSequence
android.widget.RadioGroup.setBaseAttributes(android.content.res.TypedArray,int,int)void
android.widget.RadioGroup.setOnHierarchyChangeListener(android.view.ViewGroup.OnHierarchyChangeListener)void
android.widget.RadioGroup.onFinishInflate)void
android.widget.RadioGroup.addView(android.view.View,int,android.view.ViewGroup.LayoutParams)void
android.widget.RadioGroup.check(int)void
android.widget.RadioGroup.getCheckedRadioButtonId)int
android.widget.RadioGroup.clearCheck)void
android.widget.RadioGroup.setOnCheckedChangeListener(android.widget.RadioGroup.OnCheckedChangeListener)void
android.widget.RadioGroup.generateLayoutParams(android.util.AttributeSet)android.widget.RadioGroup.LayoutParams
android.widget.RadioGroup.checkLayoutParams(android.view.ViewGroup.LayoutParams)boolean
android.widget.RadioGroup.getAccessibilityClassName)CharSequence
android.widget.RadioGroup.autofill(android.view.autofill.AutofillValue)void
android.widget.RadioGroup.getAutofillType)int
android.widget.RadioGroup.getAutofillValue)android.view.autofill.AutofillValue
android.widget.RatingBar.setOnRatingBarChangeListener(android.widget.RatingBar.OnRatingBarChangeListener)void
android.widget.RatingBar.getOnRatingBarChangeListener)android.widget.RatingBar.OnRatingBarChangeListener
android.widget.RatingBar.setIsIndicator(boolean)void
android.widget.RatingBar.isIndicator)boolean
android.widget.RatingBar.setNumStars(int)void
android.widget.RatingBar.getNumStars)int
android.widget.RatingBar.setRating(float)void
android.widget.RatingBar.getRating)float
android.widget.RatingBar.setStepSize(float)void
android.widget.RatingBar.getStepSize)float
android.widget.RatingBar.getAccessibilityClassName)CharSequence
android.widget.RelativeLayout.debug(String)String
android.widget.RelativeLayout.addRule(int)void
android.widget.RelativeLayout.addRule(int,int)void
android.widget.RelativeLayout.removeRule(int)void
android.widget.RelativeLayout.getRule(int)int
android.widget.RelativeLayout.resolveLayoutDirection(int)void
android.widget.RelativeLayout.shouldDelayChildPressedState)boolean
android.widget.RelativeLayout.setIgnoreGravity(int)void
android.widget.RelativeLayout.getIgnoreGravity)int
android.widget.RelativeLayout.getGravity)int
android.widget.RelativeLayout.setGravity(int)void
android.widget.RelativeLayout.setHorizontalGravity(int)void
android.widget.RelativeLayout.setVerticalGravity(int)void
android.widget.RelativeLayout.getBaseline)int
android.widget.RelativeLayout.requestLayout)void
android.widget.RelativeLayout.onMeasure(int,int)void
android.widget.RelativeLayout.onLayout(boolean,int,int,int,int)void
android.widget.RelativeLayout.generateLayoutParams(android.util.AttributeSet)android.widget.RelativeLayout.LayoutParams
android.widget.RelativeLayout.checkLayoutParams(android.view.ViewGroup.LayoutParams)boolean
android.widget.RelativeLayout.getAccessibilityClassName)CharSequence
android.widget.RemoteViews.fromPendingIntent(android.app.PendingIntent)android.widget.RemoteViews.RemoteResponse
android.widget.RemoteViews.fromFillInIntent(android.content.Intent)android.widget.RemoteViews.RemoteResponse
android.widget.RemoteViews.addSharedElement(int,String)android.widget.RemoteViews.RemoteResponse
android.widget.RemoteViews.clone)android.widget.RemoteViews
android.widget.RemoteViews.getPackage)String
android.widget.RemoteViews.getLayoutId)int
android.widget.RemoteViews.addView(int,android.widget.RemoteViews)void
android.widget.RemoteViews.removeAllViews(int)void
android.widget.RemoteViews.showNext(int)void
android.widget.RemoteViews.showPrevious(int)void
android.widget.RemoteViews.setDisplayedChild(int,int)void
android.widget.RemoteViews.setViewVisibility(int,int)void
android.widget.RemoteViews.setTextViewText(int,CharSequence)void
android.widget.RemoteViews.setTextViewTextSize(int,int,float)void
android.widget.RemoteViews.setTextViewCompoundDrawables(int,int,int,int,int)void
android.widget.RemoteViews.setTextViewCompoundDrawablesRelative(int,int,int,int,int)void
android.widget.RemoteViews.setImageViewResource(int,int)void
android.widget.RemoteViews.setImageViewUri(int,android.net.Uri)void
android.widget.RemoteViews.setImageViewBitmap(int,android.graphics.Bitmap)void
android.widget.RemoteViews.setImageViewIcon(int,android.graphics.drawable.Icon)void
android.widget.RemoteViews.setEmptyView(int,int)void
android.widget.RemoteViews.setChronometer(int,long,String,boolean)void
android.widget.RemoteViews.setChronometerCountDown(int,boolean)void
android.widget.RemoteViews.setProgressBar(int,int,int,boolean)void
android.widget.RemoteViews.setOnClickPendingIntent(int,android.app.PendingIntent)void
android.widget.RemoteViews.setOnClickResponse(int,android.widget.RemoteViews.RemoteResponse)void
android.widget.RemoteViews.setPendingIntentTemplate(int,android.app.PendingIntent)void
android.widget.RemoteViews.setOnClickFillInIntent(int,android.content.Intent)void
android.widget.RemoteViews.setTextColor(int,int)void
android.widget.RemoteViews.setRemoteAdapter(int,int,android.content.Intent)void
android.widget.RemoteViews.setRemoteAdapter(int,android.content.Intent)void
android.widget.RemoteViews.setScrollPosition(int,int)void
android.widget.RemoteViews.setRelativeScrollPosition(int,int)void
android.widget.RemoteViews.setViewPadding(int,int,int,int,int)void
android.widget.RemoteViews.setBoolean(int,String,boolean)void
android.widget.RemoteViews.setByte(int,String,byte)void
android.widget.RemoteViews.setShort(int,String,short)void
android.widget.RemoteViews.setInt(int,String,int)void
android.widget.RemoteViews.setLong(int,String,long)void
android.widget.RemoteViews.setFloat(int,String,float)void
android.widget.RemoteViews.setDouble(int,String,double)void
android.widget.RemoteViews.setChar(int,String,char)void
android.widget.RemoteViews.setString(int,String,String)void
android.widget.RemoteViews.setCharSequence(int,String,CharSequence)void
android.widget.RemoteViews.setUri(int,String,android.net.Uri)void
android.widget.RemoteViews.setBitmap(int,String,android.graphics.Bitmap)void
android.widget.RemoteViews.setBundle(int,String,Bundle)void
android.widget.RemoteViews.setIntent(int,String,android.content.Intent)void
android.widget.RemoteViews.setIcon(int,String,android.graphics.drawable.Icon)void
android.widget.RemoteViews.setContentDescription(int,CharSequence)void
android.widget.RemoteViews.setAccessibilityTraversalBefore(int,int)void
android.widget.RemoteViews.setAccessibilityTraversalAfter(int,int)void
android.widget.RemoteViews.setLabelFor(int,int)void
android.widget.RemoteViews.setLightBackgroundLayoutId(int)void
android.widget.RemoteViews.apply(android.content.Context,ViewGroup)View
android.widget.RemoteViews.reapply(android.content.Context,View)void
android.widget.RemoteViews.onLoadClass(Class)boolean
android.widget.RemoteViews.describeContents)int
android.widget.RemoteViews.writeToParcel(Parcel,int)void
android.widget.RemoteViewsService.onBind(android.content.Intent)android.os.IBinder
android.widget.ResourceCursorAdapter.setDropDownViewTheme(android.content.res.Resources.Theme)void
android.widget.ResourceCursorAdapter.newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)android.view.View
android.widget.ResourceCursorAdapter.newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)android.view.View
android.widget.ResourceCursorAdapter.setViewResource(int)void
android.widget.ResourceCursorAdapter.setDropDownViewResource(int)void
android.widget.ResourceCursorTreeAdapter.newChildView(android.content.Context,android.database.Cursor,boolean,android.view.ViewGroup)android.view.View
android.widget.ResourceCursorTreeAdapter.newGroupView(android.content.Context,android.database.Cursor,boolean,android.view.ViewGroup)android.view.View
android.widget.Scroller.setFriction(float)void
android.widget.Scroller.isFinished)boolean
android.widget.Scroller.forceFinished(boolean)void
android.widget.Scroller.getDuration)int
android.widget.Scroller.getCurrX)int
android.widget.Scroller.getCurrY)int
android.widget.Scroller.getCurrVelocity)float
android.widget.Scroller.getStartX)int
android.widget.Scroller.getStartY)int
android.widget.Scroller.getFinalX)int
android.widget.Scroller.getFinalY)int
android.widget.Scroller.computeScrollOffset)boolean
android.widget.Scroller.startScroll(int,int,int,int)void
android.widget.Scroller.startScroll(int,int,int,int,int)void
android.widget.Scroller.abortAnimation)void
android.widget.Scroller.extendDuration(int)void
android.widget.Scroller.timePassed)int
android.widget.Scroller.setFinalX(int)void
android.widget.Scroller.setFinalY(int)void
android.widget.ScrollView.shouldDelayChildPressedState)boolean
android.widget.ScrollView.getTopFadingEdgeStrength)float
android.widget.ScrollView.getBottomFadingEdgeStrength)float
android.widget.ScrollView.setEdgeEffectColor(int)void
android.widget.ScrollView.setBottomEdgeEffectColor(int)void
android.widget.ScrollView.setTopEdgeEffectColor(int)void
android.widget.ScrollView.getTopEdgeEffectColor)int
android.widget.ScrollView.getBottomEdgeEffectColor)int
android.widget.ScrollView.getMaxScrollAmount)int
android.widget.ScrollView.addView(View)void
android.widget.ScrollView.addView(View,int)void
android.widget.ScrollView.addView(View,android.view.ViewGroup.LayoutParams)void
android.widget.ScrollView.addView(View,int,android.view.ViewGroup.LayoutParams)void
android.widget.ScrollView.isFillViewport)boolean
android.widget.ScrollView.setFillViewport(boolean)void
android.widget.ScrollView.isSmoothScrollingEnabled)boolean
android.widget.ScrollView.setSmoothScrollingEnabled(boolean)void
android.widget.ScrollView.onMeasure(int,int)void
android.widget.ScrollView.dispatchKeyEvent(KeyEvent)boolean
android.widget.ScrollView.executeKeyEvent(KeyEvent)boolean
android.widget.ScrollView.requestDisallowInterceptTouchEvent(boolean)void
android.widget.ScrollView.onInterceptTouchEvent(MotionEvent)boolean
android.widget.ScrollView.onTouchEvent(MotionEvent)boolean
android.widget.ScrollView.onGenericMotionEvent(MotionEvent)boolean
android.widget.ScrollView.onOverScrolled(int,int,boolean,boolean)void
android.widget.ScrollView.getAccessibilityClassName)CharSequence
android.widget.ScrollView.pageScroll(int)boolean
android.widget.ScrollView.fullScroll(int)boolean
android.widget.ScrollView.arrowScroll(int)boolean
android.widget.ScrollView.smoothScrollBy(int,int)void
android.widget.ScrollView.smoothScrollTo(int,int)void
android.widget.ScrollView.computeVerticalScrollRange)int
android.widget.ScrollView.computeVerticalScrollOffset)int
android.widget.ScrollView.measureChild(View,int,int)void
android.widget.ScrollView.measureChildWithMargins(View,int,int,int,int)void
android.widget.ScrollView.computeScroll)void
android.widget.ScrollView.scrollToDescendant(View)void
android.widget.ScrollView.computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)int
android.widget.ScrollView.requestChildFocus(View,View)void
android.widget.ScrollView.onRequestFocusInDescendants(int,android.graphics.Rect)boolean
android.widget.ScrollView.requestChildRectangleOnScreen(View,android.graphics.Rect,boolean)boolean
android.widget.ScrollView.requestLayout)void
android.widget.ScrollView.onDetachedFromWindow)void
android.widget.ScrollView.onLayout(boolean,int,int,int,int)void
android.widget.ScrollView.onSizeChanged(int,int,int,int)void
android.widget.ScrollView.fling(int)void
android.widget.ScrollView.scrollTo(int,int)void
android.widget.ScrollView.onStartNestedScroll(View,View,int)boolean
android.widget.ScrollView.onNestedScrollAccepted(View,View,int)void
android.widget.ScrollView.onStopNestedScroll(View)void
android.widget.ScrollView.onNestedScroll(View,int,int,int,int)void
android.widget.ScrollView.onNestedFling(View,float,float,boolean)boolean
android.widget.ScrollView.draw(android.graphics.Canvas)void
android.widget.ScrollView.onRestoreInstanceState(android.os.Parcelable)void
android.widget.ScrollView.onSaveInstanceState)android.os.Parcelable
android.widget.SearchView.setSearchableInfo(android.app.SearchableInfo)void
android.widget.SearchView.setImeOptions(int)void
android.widget.SearchView.getImeOptions)int
android.widget.SearchView.setInputType(int)void
android.widget.SearchView.getInputType)int
android.widget.SearchView.requestFocus(int,android.graphics.Rect)boolean
android.widget.SearchView.clearFocus)void
android.widget.SearchView.setOnQueryTextListener(android.widget.SearchView.OnQueryTextListener)void
android.widget.SearchView.setOnCloseListener(android.widget.SearchView.OnCloseListener)void
android.widget.SearchView.setOnQueryTextFocusChangeListener(android.view.View.OnFocusChangeListener)void
android.widget.SearchView.setOnSuggestionListener(android.widget.SearchView.OnSuggestionListener)void
android.widget.SearchView.setOnSearchClickListener(android.view.View.OnClickListener)void
android.widget.SearchView.getQuery)CharSequence
android.widget.SearchView.setQuery(CharSequence,boolean)void
android.widget.SearchView.setQueryHint(CharSequence)void
android.widget.SearchView.getQueryHint)CharSequence
android.widget.SearchView.setIconifiedByDefault(boolean)void
android.widget.SearchView.isIconfiedByDefault)boolean
android.widget.SearchView.isIconifiedByDefault)boolean
android.widget.SearchView.setIconified(boolean)void
android.widget.SearchView.isIconified)boolean
android.widget.SearchView.setSubmitButtonEnabled(boolean)void
android.widget.SearchView.isSubmitButtonEnabled)boolean
android.widget.SearchView.setQueryRefinementEnabled(boolean)void
android.widget.SearchView.isQueryRefinementEnabled)boolean
android.widget.SearchView.setSuggestionsAdapter(android.widget.CursorAdapter)void
android.widget.SearchView.getSuggestionsAdapter)android.widget.CursorAdapter
android.widget.SearchView.setMaxWidth(int)void
android.widget.SearchView.getMaxWidth)int
android.widget.SearchView.onMeasure(int,int)void
android.widget.SearchView.onLayout(boolean,int,int,int,int)void
android.widget.SearchView.onDetachedFromWindow)void
android.widget.SearchView.onKeyDown(int,KeyEvent)boolean
android.widget.SearchView.onWindowFocusChanged(boolean)void
android.widget.SearchView.onActionViewCollapsed)void
android.widget.SearchView.onActionViewExpanded)void
android.widget.SearchView.onSaveInstanceState)android.os.Parcelable
android.widget.SearchView.onRestoreInstanceState(android.os.Parcelable)void
android.widget.SearchView.getAccessibilityClassName)CharSequence
android.widget.SeekBar.setOnSeekBarChangeListener(android.widget.SeekBar.OnSeekBarChangeListener)void
android.widget.SeekBar.getAccessibilityClassName)CharSequence
android.widget.ShareActionProvider.setOnShareTargetSelectedListener(android.widget.ShareActionProvider.OnShareTargetSelectedListener)void
android.widget.ShareActionProvider.onCreateActionView)View
android.widget.ShareActionProvider.hasSubMenu)boolean
android.widget.ShareActionProvider.onPrepareSubMenu(SubMenu)void
android.widget.ShareActionProvider.setShareHistoryFileName(String)void
android.widget.ShareActionProvider.setShareIntent(android.content.Intent)void
android.widget.SimpleAdapter.getCount)int
android.widget.SimpleAdapter.getItem(int)Object
android.widget.SimpleAdapter.getItemId(int)long
android.widget.SimpleAdapter.getView(int,android.view.View,android.view.ViewGroup)android.view.View
android.widget.SimpleAdapter.setDropDownViewResource(int)void
android.widget.SimpleAdapter.setDropDownViewTheme(android.content.res.Resources.Theme)void
android.widget.SimpleAdapter.getDropDownView(int,android.view.View,android.view.ViewGroup)android.view.View
android.widget.SimpleAdapter.getViewBinder)android.widget.SimpleAdapter.ViewBinder
android.widget.SimpleAdapter.setViewBinder(android.widget.SimpleAdapter.ViewBinder)void
android.widget.SimpleAdapter.setViewImage(android.widget.ImageView,int)void
android.widget.SimpleAdapter.setViewImage(android.widget.ImageView,String)void
android.widget.SimpleAdapter.setViewText(android.widget.TextView,String)void
android.widget.SimpleAdapter.getFilter)android.widget.Filter
android.widget.SimpleCursorAdapter.bindView(android.view.View,android.content.Context,android.database.Cursor)void
android.widget.SimpleCursorAdapter.getViewBinder)android.widget.SimpleCursorAdapter.ViewBinder
android.widget.SimpleCursorAdapter.setViewBinder(android.widget.SimpleCursorAdapter.ViewBinder)void
android.widget.SimpleCursorAdapter.setViewImage(android.widget.ImageView,String)void
android.widget.SimpleCursorAdapter.setViewText(android.widget.TextView,String)void
android.widget.SimpleCursorAdapter.getStringConversionColumn)int
android.widget.SimpleCursorAdapter.setStringConversionColumn(int)void
android.widget.SimpleCursorAdapter.getCursorToStringConverter)android.widget.SimpleCursorAdapter.CursorToStringConverter
android.widget.SimpleCursorAdapter.setCursorToStringConverter(android.widget.SimpleCursorAdapter.CursorToStringConverter)void
android.widget.SimpleCursorAdapter.convertToString(android.database.Cursor)CharSequence
android.widget.SimpleCursorAdapter.swapCursor(android.database.Cursor)android.database.Cursor
android.widget.SimpleCursorAdapter.changeCursorAndColumns(android.database.Cursor,String,int)void
android.widget.SimpleCursorTreeAdapter.getViewBinder)android.widget.SimpleCursorTreeAdapter.ViewBinder
android.widget.SimpleCursorTreeAdapter.setViewBinder(android.widget.SimpleCursorTreeAdapter.ViewBinder)void
android.widget.SimpleCursorTreeAdapter.bindChildView(android.view.View,android.content.Context,android.database.Cursor,boolean)void
android.widget.SimpleCursorTreeAdapter.bindGroupView(android.view.View,android.content.Context,android.database.Cursor,boolean)void
android.widget.SimpleCursorTreeAdapter.setViewImage(android.widget.ImageView,String)void
android.widget.SimpleCursorTreeAdapter.setViewText(android.widget.TextView,String)void
android.widget.SimpleExpandableListAdapter.getChild(int,int)Object
android.widget.SimpleExpandableListAdapter.getChildId(int,int)long
android.widget.SimpleExpandableListAdapter.getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)android.view.View
android.widget.SimpleExpandableListAdapter.newChildView(boolean,android.view.ViewGroup)android.view.View
android.widget.SimpleExpandableListAdapter.getChildrenCount(int)int
android.widget.SimpleExpandableListAdapter.getGroup(int)Object
android.widget.SimpleExpandableListAdapter.getGroupCount)int
android.widget.SimpleExpandableListAdapter.getGroupId(int)long
android.widget.SimpleExpandableListAdapter.getGroupView(int,boolean,android.view.View,android.view.ViewGroup)android.view.View
android.widget.SimpleExpandableListAdapter.newGroupView(boolean,android.view.ViewGroup)android.view.View
android.widget.SimpleExpandableListAdapter.isChildSelectable(int,int)boolean
android.widget.SimpleExpandableListAdapter.hasStableIds)boolean
android.widget.SlidingDrawer.onFinishInflate)void
android.widget.SlidingDrawer.onMeasure(int,int)void
android.widget.SlidingDrawer.dispatchDraw(android.graphics.Canvas)void
android.widget.SlidingDrawer.onLayout(boolean,int,int,int,int)void
android.widget.SlidingDrawer.onInterceptTouchEvent(MotionEvent)boolean
android.widget.SlidingDrawer.onTouchEvent(MotionEvent)boolean
android.widget.SlidingDrawer.toggle)void
android.widget.SlidingDrawer.animateToggle)void
android.widget.SlidingDrawer.open)void
android.widget.SlidingDrawer.close)void
android.widget.SlidingDrawer.animateClose)void
android.widget.SlidingDrawer.animateOpen)void
android.widget.SlidingDrawer.getAccessibilityClassName)CharSequence
android.widget.SlidingDrawer.setOnDrawerOpenListener(android.widget.SlidingDrawer.OnDrawerOpenListener)void
android.widget.SlidingDrawer.setOnDrawerCloseListener(android.widget.SlidingDrawer.OnDrawerCloseListener)void
android.widget.SlidingDrawer.setOnDrawerScrollListener(android.widget.SlidingDrawer.OnDrawerScrollListener)void
android.widget.SlidingDrawer.getHandle)View
android.widget.SlidingDrawer.getContent)View
android.widget.SlidingDrawer.unlock)void
android.widget.SlidingDrawer.lock)void
android.widget.SlidingDrawer.isOpened)boolean
android.widget.SlidingDrawer.isMoving)boolean
android.widget.Space.draw(android.graphics.Canvas)void
android.widget.Space.onMeasure(int,int)void
android.widget.Spinner.getPopupContext)android.content.Context
android.widget.Spinner.setPopupBackgroundDrawable(android.graphics.drawable.Drawable)void
android.widget.Spinner.setPopupBackgroundResource(int)void
android.widget.Spinner.getPopupBackground)android.graphics.drawable.Drawable
android.widget.Spinner.setDropDownVerticalOffset(int)void
android.widget.Spinner.getDropDownVerticalOffset)int
android.widget.Spinner.setDropDownHorizontalOffset(int)void
android.widget.Spinner.getDropDownHorizontalOffset)int
android.widget.Spinner.setDropDownWidth(int)void
android.widget.Spinner.getDropDownWidth)int
android.widget.Spinner.setEnabled(boolean)void
android.widget.Spinner.setGravity(int)void
android.widget.Spinner.getGravity)int
android.widget.Spinner.setAdapter(android.widget.SpinnerAdapter)void
android.widget.Spinner.getBaseline)int
android.widget.Spinner.onDetachedFromWindow)void
android.widget.Spinner.setOnItemClickListener(AdapterView.OnItemClickListener)void
android.widget.Spinner.onTouchEvent(android.view.MotionEvent)boolean
android.widget.Spinner.onMeasure(int,int)void
android.widget.Spinner.onLayout(boolean,int,int,int,int)void
android.widget.Spinner.performClick)boolean
android.widget.Spinner.onClick(android.content.DialogInterface,int)void
android.widget.Spinner.getAccessibilityClassName)CharSequence
android.widget.Spinner.setPrompt(CharSequence)void
android.widget.Spinner.setPromptId(int)void
android.widget.Spinner.getPrompt)CharSequence
android.widget.Spinner.onSaveInstanceState)android.os.Parcelable
android.widget.Spinner.onRestoreInstanceState(android.os.Parcelable)void
android.widget.Spinner.onResolvePointerIcon(android.view.MotionEvent,int)android.view.PointerIcon
android.widget.StackView.showNext)void
android.widget.StackView.showPrevious)void
android.widget.StackView.dispatchDraw(android.graphics.Canvas)void
android.widget.StackView.onGenericMotionEvent(android.view.MotionEvent)boolean
android.widget.StackView.onInterceptTouchEvent(android.view.MotionEvent)boolean
android.widget.StackView.onTouchEvent(android.view.MotionEvent)boolean
android.widget.StackView.onLayout(boolean,int,int,int,int)void
android.widget.StackView.advance)void
android.widget.StackView.onMeasure(int,int)void
android.widget.StackView.getAccessibilityClassName)CharSequence
android.widget.Switch.setSwitchTextAppearance(android.content.Context,int)void
android.widget.Switch.setSwitchTypeface(Typeface,int)void
android.widget.Switch.setSwitchTypeface(Typeface)void
android.widget.Switch.setSwitchPadding(int)void
android.widget.Switch.getSwitchPadding)int
android.widget.Switch.setSwitchMinWidth(int)void
android.widget.Switch.getSwitchMinWidth)int
android.widget.Switch.setThumbTextPadding(int)void
android.widget.Switch.getThumbTextPadding)int
android.widget.Switch.setTrackDrawable(android.graphics.drawable.Drawable)void
android.widget.Switch.setTrackResource(int)void
android.widget.Switch.getTrackDrawable)android.graphics.drawable.Drawable
android.widget.Switch.setTrackTintList(android.content.res.ColorStateList)void
android.widget.Switch.getTrackTintList)android.content.res.ColorStateList
android.widget.Switch.setTrackTintMode(android.graphics.PorterDuff.Mode)void
android.widget.Switch.setTrackTintBlendMode(BlendMode)void
android.widget.Switch.getTrackTintBlendMode)BlendMode
android.widget.Switch.setThumbDrawable(android.graphics.drawable.Drawable)void
android.widget.Switch.setThumbResource(int)void
android.widget.Switch.getThumbDrawable)android.graphics.drawable.Drawable
android.widget.Switch.setThumbTintList(android.content.res.ColorStateList)void
android.widget.Switch.getThumbTintList)android.content.res.ColorStateList
android.widget.Switch.setThumbTintMode(android.graphics.PorterDuff.Mode)void
android.widget.Switch.setThumbTintBlendMode(BlendMode)void
android.widget.Switch.getThumbTintBlendMode)BlendMode
android.widget.Switch.setSplitTrack(boolean)void
android.widget.Switch.getSplitTrack)boolean
android.widget.Switch.getTextOn)CharSequence
android.widget.Switch.setTextOn(CharSequence)void
android.widget.Switch.getTextOff)CharSequence
android.widget.Switch.setTextOff(CharSequence)void
android.widget.Switch.setShowText(boolean)void
android.widget.Switch.getShowText)boolean
android.widget.Switch.onMeasure(int,int)void
android.widget.Switch.onTouchEvent(android.view.MotionEvent)boolean
android.widget.Switch.toggle)void
android.widget.Switch.setChecked(boolean)void
android.widget.Switch.onLayout(boolean,int,int,int,int)void
android.widget.Switch.draw(Canvas)void
android.widget.Switch.onDraw(Canvas)void
android.widget.Switch.getCompoundPaddingLeft)int
android.widget.Switch.getCompoundPaddingRight)int
android.widget.Switch.drawableStateChanged)void
android.widget.Switch.drawableHotspotChanged(float,float)void
android.widget.Switch.verifyDrawable(android.graphics.drawable.Drawable)boolean
android.widget.Switch.jumpDrawablesToCurrentState)void
android.widget.Switch.getAccessibilityClassName)CharSequence
android.widget.TabHost.setIndicator(CharSequence)android.widget.TabHost.TabSpec
android.widget.TabHost.setIndicator(CharSequence,android.graphics.drawable.Drawable)android.widget.TabHost.TabSpec
android.widget.TabHost.setIndicator(View)android.widget.TabHost.TabSpec
android.widget.TabHost.setContent(int)android.widget.TabHost.TabSpec
android.widget.TabHost.setContent(android.widget.TabHost.TabContentFactory)android.widget.TabHost.TabSpec
android.widget.TabHost.setContent(android.content.Intent)android.widget.TabHost.TabSpec
android.widget.TabHost.getTag)String
android.widget.TabHost.newTabSpec(String)android.widget.TabHost.TabSpec
android.widget.TabHost.setup)void
android.widget.TabHost.setup(android.app.LocalActivityManager)void
android.widget.TabHost.onTouchModeChanged(boolean)void
android.widget.TabHost.addTab(android.widget.TabHost.TabSpec)void
android.widget.TabHost.clearAllTabs)void
android.widget.TabHost.getTabWidget)android.widget.TabWidget
android.widget.TabHost.getCurrentTab)int
android.widget.TabHost.getCurrentTabTag)String
android.widget.TabHost.getCurrentTabView)View
android.widget.TabHost.getCurrentView)View
android.widget.TabHost.setCurrentTabByTag(String)void
android.widget.TabHost.getTabContentView)android.widget.FrameLayout
android.widget.TabHost.dispatchKeyEvent(KeyEvent)boolean
android.widget.TabHost.dispatchWindowFocusChanged(boolean)void
android.widget.TabHost.getAccessibilityClassName)CharSequence
android.widget.TabHost.setCurrentTab(int)void
android.widget.TabHost.setOnTabChangedListener(android.widget.TabHost.OnTabChangeListener)void
android.widget.TableLayout.setBaseAttributes(android.content.res.TypedArray,int,int)void
android.widget.TableLayout.setOnHierarchyChangeListener(android.view.ViewGroup.OnHierarchyChangeListener)void
android.widget.TableLayout.requestLayout)void
android.widget.TableLayout.isShrinkAllColumns)boolean
android.widget.TableLayout.setShrinkAllColumns(boolean)void
android.widget.TableLayout.isStretchAllColumns)boolean
android.widget.TableLayout.setStretchAllColumns(boolean)void
android.widget.TableLayout.setColumnCollapsed(int,boolean)void
android.widget.TableLayout.isColumnCollapsed(int)boolean
android.widget.TableLayout.setColumnStretchable(int,boolean)void
android.widget.TableLayout.isColumnStretchable(int)boolean
android.widget.TableLayout.setColumnShrinkable(int,boolean)void
android.widget.TableLayout.isColumnShrinkable(int)boolean
android.widget.TableLayout.addView(android.view.View)void
android.widget.TableLayout.addView(android.view.View,int)void
android.widget.TableLayout.addView(android.view.View,android.view.ViewGroup.LayoutParams)void
android.widget.TableLayout.addView(android.view.View,int,android.view.ViewGroup.LayoutParams)void
android.widget.TableLayout.onMeasure(int,int)void
android.widget.TableLayout.onLayout(boolean,int,int,int,int)void
android.widget.TableLayout.generateLayoutParams(android.util.AttributeSet)android.widget.TableLayout.LayoutParams
android.widget.TableLayout.checkLayoutParams(android.view.ViewGroup.LayoutParams)boolean
android.widget.TableLayout.getAccessibilityClassName)CharSequence
android.widget.TableRow.setBaseAttributes(android.content.res.TypedArray,int,int)void
android.widget.TableRow.setOnHierarchyChangeListener(android.view.ViewGroup.OnHierarchyChangeListener)void
android.widget.TableRow.onMeasure(int,int)void
android.widget.TableRow.onLayout(boolean,int,int,int,int)void
android.widget.TableRow.getVirtualChildAt(int)View
android.widget.TableRow.getVirtualChildCount)int
android.widget.TableRow.generateLayoutParams(android.util.AttributeSet)android.widget.TableRow.LayoutParams
android.widget.TableRow.checkLayoutParams(android.view.ViewGroup.LayoutParams)boolean
android.widget.TableRow.getAccessibilityClassName)CharSequence
android.widget.TabWidget.onSizeChanged(int,int,int,int)void
android.widget.TabWidget.getChildDrawingOrder(int,int)int
android.widget.TabWidget.getChildTabViewAt(int)View
android.widget.TabWidget.getTabCount)int
android.widget.TabWidget.setDividerDrawable(android.graphics.drawable.Drawable)void
android.widget.TabWidget.setDividerDrawable(int)void
android.widget.TabWidget.setLeftStripDrawable(android.graphics.drawable.Drawable)void
android.widget.TabWidget.setLeftStripDrawable(int)void
android.widget.TabWidget.getLeftStripDrawable)android.graphics.drawable.Drawable
android.widget.TabWidget.setRightStripDrawable(android.graphics.drawable.Drawable)void
android.widget.TabWidget.setRightStripDrawable(int)void
android.widget.TabWidget.getRightStripDrawable)android.graphics.drawable.Drawable
android.widget.TabWidget.setStripEnabled(boolean)void
android.widget.TabWidget.isStripEnabled)boolean
android.widget.TabWidget.childDrawableStateChanged(View)void
android.widget.TabWidget.dispatchDraw(android.graphics.Canvas)void
android.widget.TabWidget.setCurrentTab(int)void
android.widget.TabWidget.getAccessibilityClassName)CharSequence
android.widget.TabWidget.focusCurrentTab(int)void
android.widget.TabWidget.setEnabled(boolean)void
android.widget.TabWidget.addView(View)void
android.widget.TabWidget.removeAllViews)void
android.widget.TabWidget.onResolvePointerIcon(MotionEvent,int)PointerIcon
android.widget.TabWidget.onFocusChange(View,boolean)void
android.widget.TextClock.getFormat12Hour)CharSequence
android.widget.TextClock.setFormat12Hour(CharSequence)void
android.widget.TextClock.getFormat24Hour)CharSequence
android.widget.TextClock.setFormat24Hour(CharSequence)void
android.widget.TextClock.is24HourModeEnabled)boolean
android.widget.TextClock.getTimeZone)String
android.widget.TextClock.setTimeZone(String)void
android.widget.TextClock.onAttachedToWindow)void
android.widget.TextClock.onVisibilityAggregated(boolean)void
android.widget.TextClock.onDetachedFromWindow)void
android.widget.TextSwitcher.addView(android.view.View,int,android.view.ViewGroup.LayoutParams)void
android.widget.TextSwitcher.setText(CharSequence)void
android.widget.TextSwitcher.setCurrentText(CharSequence)void
android.widget.TextSwitcher.getAccessibilityClassName)CharSequence
android.widget.TextView.writeToParcel(Parcel,int)void
android.widget.TextView.toString)String
android.widget.TextView.valueOf(String)BufferType
android.widget.TextView.setAutoSizeTextTypeWithDefaults(int)void
android.widget.TextView.setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)void
android.widget.TextView.setAutoSizeTextTypeUniformWithPresetSizes(int,int)void
android.widget.TextView.getAutoSizeTextType)int
android.widget.TextView.getAutoSizeStepGranularity)int
android.widget.TextView.getAutoSizeMinTextSize)int
android.widget.TextView.getAutoSizeMaxTextSize)int
android.widget.TextView.setEnabled(boolean)void
android.widget.TextView.setTypeface(Typeface,int)void
android.widget.TextView.getDefaultEditable)boolean
android.widget.TextView.getDefaultMovementMethod)MovementMethod
android.widget.TextView.getText)CharSequence
android.widget.TextView.length)int
android.widget.TextView.getEditableText)Editable
android.widget.TextView.getLineHeight)int
android.widget.TextView.getLayout)Layout
android.widget.TextView.getKeyListener)KeyListener
android.widget.TextView.setKeyListener(KeyListener)void
android.widget.TextView.getMovementMethod)MovementMethod
android.widget.TextView.setMovementMethod(MovementMethod)void
android.widget.TextView.getTransformationMethod)TransformationMethod
android.widget.TextView.setTransformationMethod(TransformationMethod)void
android.widget.TextView.getCompoundPaddingTop)int
android.widget.TextView.getCompoundPaddingBottom)int
android.widget.TextView.getCompoundPaddingLeft)int
android.widget.TextView.getCompoundPaddingRight)int
android.widget.TextView.getCompoundPaddingStart)int
android.widget.TextView.getCompoundPaddingEnd)int
android.widget.TextView.getExtendedPaddingTop)int
android.widget.TextView.getExtendedPaddingBottom)int
android.widget.TextView.getTotalPaddingLeft)int
android.widget.TextView.getTotalPaddingRight)int
android.widget.TextView.getTotalPaddingStart)int
android.widget.TextView.getTotalPaddingEnd)int
android.widget.TextView.getTotalPaddingTop)int
android.widget.TextView.getTotalPaddingBottom)int
android.widget.TextView.setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)void
android.widget.TextView.setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)void
android.widget.TextView.setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)void
android.widget.TextView.setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)void
android.widget.TextView.setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int)void
android.widget.TextView.setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)void
android.widget.TextView.setCompoundDrawablePadding(int)void
android.widget.TextView.getCompoundDrawablePadding)int
android.widget.TextView.setCompoundDrawableTintList(android.content.res.ColorStateList)void
android.widget.TextView.getCompoundDrawableTintList)android.content.res.ColorStateList
android.widget.TextView.setCompoundDrawableTintMode(android.graphics.PorterDuff.Mode)void
android.widget.TextView.setCompoundDrawableTintBlendMode(BlendMode)void
android.widget.TextView.getCompoundDrawableTintBlendMode)BlendMode
android.widget.TextView.setPadding(int,int,int,int)void
android.widget.TextView.setPaddingRelative(int,int,int,int)void
android.widget.TextView.setFirstBaselineToTopHeight(int)void
android.widget.TextView.setLastBaselineToBottomHeight(int)void
android.widget.TextView.getFirstBaselineToTopHeight)int
android.widget.TextView.getLastBaselineToBottomHeight)int
android.widget.TextView.getAutoLinkMask)int
android.widget.TextView.setTextSelectHandle(android.graphics.drawable.Drawable)void
android.widget.TextView.setTextSelectHandle(int)void
android.widget.TextView.getTextSelectHandle)android.graphics.drawable.Drawable
android.widget.TextView.setTextSelectHandleLeft(android.graphics.drawable.Drawable)void
android.widget.TextView.setTextSelectHandleLeft(int)void
android.widget.TextView.getTextSelectHandleLeft)android.graphics.drawable.Drawable
android.widget.TextView.setTextSelectHandleRight(android.graphics.drawable.Drawable)void
android.widget.TextView.setTextSelectHandleRight(int)void
android.widget.TextView.getTextSelectHandleRight)android.graphics.drawable.Drawable
android.widget.TextView.setTextCursorDrawable(android.graphics.drawable.Drawable)void
android.widget.TextView.setTextCursorDrawable(int)void
android.widget.TextView.getTextCursorDrawable)android.graphics.drawable.Drawable
android.widget.TextView.setTextAppearance(int)void
android.widget.TextView.setTextAppearance(android.content.Context,int)void
android.widget.TextView.getTextLocale)java.util.Locale
android.widget.TextView.getTextLocales)LocaleList
android.widget.TextView.setTextLocale(java.util.Locale)void
android.widget.TextView.setTextLocales(LocaleList)void
android.widget.TextView.onConfigurationChanged(android.content.res.Configuration)void
android.widget.TextView.getTextSize)float
android.widget.TextView.setTextSize(float)void
android.widget.TextView.setTextSize(int,float)void
android.widget.TextView.getTextScaleX)float
android.widget.TextView.setTextScaleX(float)void
android.widget.TextView.setTypeface(Typeface)void
android.widget.TextView.getTypeface)Typeface
android.widget.TextView.setElegantTextHeight(boolean)void
android.widget.TextView.setFallbackLineSpacing(boolean)void
android.widget.TextView.isFallbackLineSpacing)boolean
android.widget.TextView.isElegantTextHeight)boolean
android.widget.TextView.getLetterSpacing)float
android.widget.TextView.setLetterSpacing(float)void
android.widget.TextView.getFontFeatureSettings)String
android.widget.TextView.getFontVariationSettings)String
android.widget.TextView.setBreakStrategy(int)void
android.widget.TextView.getBreakStrategy)int
android.widget.TextView.setHyphenationFrequency(int)void
android.widget.TextView.getHyphenationFrequency)int
android.widget.TextView.setTextMetricsParams(android.text.PrecomputedText.Params)void
android.widget.TextView.setJustificationMode(int)void
android.widget.TextView.getJustificationMode)int
android.widget.TextView.setFontFeatureSettings(String)void
android.widget.TextView.setFontVariationSettings(String)boolean
android.widget.TextView.setTextColor(int)void
android.widget.TextView.setTextColor(android.content.res.ColorStateList)void
android.widget.TextView.getTextColors)android.content.res.ColorStateList
android.widget.TextView.getCurrentTextColor)int
android.widget.TextView.setHighlightColor(int)void
android.widget.TextView.getHighlightColor)int
android.widget.TextView.setShowSoftInputOnFocus(boolean)void
android.widget.TextView.getShowSoftInputOnFocus)boolean
android.widget.TextView.setShadowLayer(float,float,float,int)void
android.widget.TextView.getShadowRadius)float
android.widget.TextView.getShadowDx)float
android.widget.TextView.getShadowDy)float
android.widget.TextView.getShadowColor)int
android.widget.TextView.getPaint)TextPaint
android.widget.TextView.setAutoLinkMask(int)void
android.widget.TextView.setLinksClickable(boolean)void
android.widget.TextView.getLinksClickable)boolean
android.widget.TextView.setHintTextColor(int)void
android.widget.TextView.setHintTextColor(android.content.res.ColorStateList)void
android.widget.TextView.getHintTextColors)android.content.res.ColorStateList
android.widget.TextView.getCurrentHintTextColor)int
android.widget.TextView.setLinkTextColor(int)void
android.widget.TextView.setLinkTextColor(android.content.res.ColorStateList)void
android.widget.TextView.getLinkTextColors)android.content.res.ColorStateList
android.widget.TextView.setGravity(int)void
android.widget.TextView.getGravity)int
android.widget.TextView.getPaintFlags)int
android.widget.TextView.setPaintFlags(int)void
android.widget.TextView.setHorizontallyScrolling(boolean)void
android.widget.TextView.isHorizontallyScrollable)boolean
android.widget.TextView.setMinLines(int)void
android.widget.TextView.getMinLines)int
android.widget.TextView.setMinHeight(int)void
android.widget.TextView.getMinHeight)int
android.widget.TextView.setMaxLines(int)void
android.widget.TextView.getMaxLines)int
android.widget.TextView.setMaxHeight(int)void
android.widget.TextView.getMaxHeight)int
android.widget.TextView.setLines(int)void
android.widget.TextView.setHeight(int)void
android.widget.TextView.setMinEms(int)void
android.widget.TextView.getMinEms)int
android.widget.TextView.setMinWidth(int)void
android.widget.TextView.getMinWidth)int
android.widget.TextView.setMaxEms(int)void
android.widget.TextView.getMaxEms)int
android.widget.TextView.setMaxWidth(int)void
android.widget.TextView.getMaxWidth)int
android.widget.TextView.setEms(int)void
android.widget.TextView.setWidth(int)void
android.widget.TextView.setLineSpacing(float,float)void
android.widget.TextView.getLineSpacingMultiplier)float
android.widget.TextView.getLineSpacingExtra)float
android.widget.TextView.setLineHeight(int)void
android.widget.TextView.append(CharSequence)void
android.widget.TextView.append(CharSequence,int,int)void
android.widget.TextView.drawableStateChanged)void
android.widget.TextView.drawableHotspotChanged(float,float)void
android.widget.TextView.onSaveInstanceState)Parcelable
android.widget.TextView.onRestoreInstanceState(Parcelable)void
android.widget.TextView.setFreezesText(boolean)void
android.widget.TextView.getFreezesText)boolean
android.widget.TextView.setEditableFactory(android.text.Editable.Factory)void
android.widget.TextView.setSpannableFactory(android.text.Spannable.Factory)void
android.widget.TextView.setText(CharSequence)void
android.widget.TextView.setTextKeepState(CharSequence)void
android.widget.TextView.setText(CharSequence,BufferType)void
android.widget.TextView.setText(char,int,int)void
android.widget.TextView.setTextKeepState(CharSequence,BufferType)void
android.widget.TextView.setText(int)void
android.widget.TextView.setText(int,BufferType)void
android.widget.TextView.setHint(CharSequence)void
android.widget.TextView.setHint(int)void
android.widget.TextView.getHint)CharSequence
android.widget.TextView.isSingleLine)boolean
android.widget.TextView.setInputType(int)void
android.widget.TextView.setRawInputType(int)void
android.widget.TextView.getInputType)int
android.widget.TextView.setImeOptions(int)void
android.widget.TextView.getImeOptions)int
android.widget.TextView.setImeActionLabel(CharSequence,int)void
android.widget.TextView.getImeActionLabel)CharSequence
android.widget.TextView.getImeActionId)int
android.widget.TextView.setOnEditorActionListener(android.widget.TextView.OnEditorActionListener)void
android.widget.TextView.onEditorAction(int)void
android.widget.TextView.setPrivateImeOptions(String)void
android.widget.TextView.getPrivateImeOptions)String
android.widget.TextView.setInputExtras(int)void
android.widget.TextView.getInputExtras(boolean)Bundle
android.widget.TextView.setImeHintLocales(LocaleList)void
android.widget.TextView.getImeHintLocales)LocaleList
android.widget.TextView.getError)CharSequence
android.widget.TextView.setError(CharSequence)void
android.widget.TextView.setError(CharSequence,android.graphics.drawable.Drawable)void
android.widget.TextView.setFrame(int,int,int,int)boolean
android.widget.TextView.setFilters(InputFilter)void
android.widget.TextView.onPreDraw)boolean
android.widget.TextView.onAttachedToWindow)void
android.widget.TextView.onScreenStateChanged(int)void
android.widget.TextView.isPaddingOffsetRequired)boolean
android.widget.TextView.getLeftPaddingOffset)int
android.widget.TextView.getTopPaddingOffset)int
android.widget.TextView.getBottomPaddingOffset)int
android.widget.TextView.getRightPaddingOffset)int
android.widget.TextView.verifyDrawable(android.graphics.drawable.Drawable)boolean
android.widget.TextView.jumpDrawablesToCurrentState)void
android.widget.TextView.invalidateDrawable(android.graphics.drawable.Drawable)void
android.widget.TextView.hasOverlappingRendering)boolean
android.widget.TextView.isTextSelectable)boolean
android.widget.TextView.setTextIsSelectable(boolean)void
android.widget.TextView.onDraw(Canvas)void
android.widget.TextView.getFocusedRect(Rect)void
android.widget.TextView.getLineCount)int
android.widget.TextView.getLineBounds(int,Rect)int
android.widget.TextView.getBaseline)int
android.widget.TextView.onResolvePointerIcon(MotionEvent,int)PointerIcon
android.widget.TextView.onKeyPreIme(int,KeyEvent)boolean
android.widget.TextView.onKeyDown(int,KeyEvent)boolean
android.widget.TextView.onKeyMultiple(int,int,KeyEvent)boolean
android.widget.TextView.onKeyUp(int,KeyEvent)boolean
android.widget.TextView.onCheckIsTextEditor)boolean
android.widget.TextView.onCreateInputConnection(EditorInfo)InputConnection
android.widget.TextView.extractText(ExtractedTextRequest,ExtractedText)boolean
android.widget.TextView.setExtractedText(ExtractedText)void
android.widget.TextView.onCommitCompletion(CompletionInfo)void
android.widget.TextView.onCommitCorrection(CorrectionInfo)void
android.widget.TextView.beginBatchEdit)void
android.widget.TextView.endBatchEdit)void
android.widget.TextView.onBeginBatchEdit)void
android.widget.TextView.onEndBatchEdit)void
android.widget.TextView.onPrivateIMECommand(String,Bundle)boolean
android.widget.TextView.setIncludeFontPadding(boolean)void
android.widget.TextView.getIncludeFontPadding)boolean
android.widget.TextView.onMeasure(int,int)void
android.widget.TextView.onLayout(boolean,int,int,int,int)void
android.widget.TextView.bringPointIntoView(int)boolean
android.widget.TextView.moveCursorToVisibleOffset)boolean
android.widget.TextView.computeScroll)void
android.widget.TextView.debug(int)void
android.widget.TextView.getSelectionStart)int
android.widget.TextView.getSelectionEnd)int
android.widget.TextView.hasSelection)boolean
android.widget.TextView.setSingleLine)void
android.widget.TextView.setAllCaps(boolean)void
android.widget.TextView.isAllCaps)boolean
android.widget.TextView.setSingleLine(boolean)void
android.widget.TextView.setEllipsize(android.text.TextUtils.TruncateAt)void
android.widget.TextView.setMarqueeRepeatLimit(int)void
android.widget.TextView.getMarqueeRepeatLimit)int
android.widget.TextView.setSelectAllOnFocus(boolean)void
android.widget.TextView.setCursorVisible(boolean)void
android.widget.TextView.isCursorVisible)boolean
android.widget.TextView.onTextChanged(CharSequence,int,int,int)void
android.widget.TextView.onSelectionChanged(int,int)void
android.widget.TextView.addTextChangedListener(TextWatcher)void
android.widget.TextView.removeTextChangedListener(TextWatcher)void
android.widget.TextView.onFocusChanged(boolean,int,Rect)void
android.widget.TextView.onWindowFocusChanged(boolean)void
android.widget.TextView.onVisibilityChanged(View,int)void
android.widget.TextView.clearComposingText)void
android.widget.TextView.setSelected(boolean)void
android.widget.TextView.onTouchEvent(MotionEvent)boolean
android.widget.TextView.onGenericMotionEvent(MotionEvent)boolean
android.widget.TextView.onCreateContextMenu(ContextMenu)void
android.widget.TextView.showContextMenu)boolean
android.widget.TextView.showContextMenu(float,float)boolean
android.widget.TextView.didTouchFocusSelect)boolean
android.widget.TextView.cancelLongPress)void
android.widget.TextView.onTrackballEvent(MotionEvent)boolean
android.widget.TextView.setScroller(android.widget.Scroller)void
android.widget.TextView.getLeftFadingEdgeStrength)float
android.widget.TextView.getRightFadingEdgeStrength)float
android.widget.TextView.computeHorizontalScrollRange)int
android.widget.TextView.computeVerticalScrollRange)int
android.widget.TextView.computeVerticalScrollExtent)int
android.widget.TextView.findViewsWithText(java.util.ArrayList,CharSequence,int)void
android.widget.TextView.onKeyShortcut(int,KeyEvent)boolean
android.widget.TextView.getAccessibilityClassName)CharSequence
android.widget.TextView.autofill(android.view.autofill.AutofillValue)void
android.widget.TextView.getAutofillType)int
android.widget.TextView.getAutofillValue)android.view.autofill.AutofillValue
android.widget.TextView.addExtraDataToAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo,String,Bundle)void
android.widget.TextView.sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)void
android.widget.TextView.isInputMethodTarget)boolean
android.widget.TextView.onTextContextMenuItem(int)boolean
android.widget.TextView.performLongClick)boolean
android.widget.TextView.onScrollChanged(int,int,int,int)void
android.widget.TextView.isSuggestionsEnabled)boolean
android.widget.TextView.setCustomSelectionActionModeCallback(android.view.ActionMode.Callback)void
android.widget.TextView.setCustomInsertionActionModeCallback(android.view.ActionMode.Callback)void
android.widget.TextView.setTextClassifier(android.view.textclassifier.TextClassifier)void
android.widget.TextView.getTextClassifier)android.view.textclassifier.TextClassifier
android.widget.TextView.getOffsetForPosition(float,float)int
android.widget.TextView.onDragEvent(DragEvent)boolean
android.widget.TextView.onRtlPropertiesChanged(int)void
android.widget.TextView.getTextDirectionHeuristic)TextDirectionHeuristic
android.widget.TimePicker.setHour(int)void
android.widget.TimePicker.getHour)int
android.widget.TimePicker.setMinute(int)void
android.widget.TimePicker.getMinute)int
android.widget.TimePicker.setCurrentHour(Integer)void
android.widget.TimePicker.getCurrentHour)Integer
android.widget.TimePicker.setCurrentMinute(Integer)void
android.widget.TimePicker.getCurrentMinute)Integer
android.widget.TimePicker.setIs24HourView(Boolean)void
android.widget.TimePicker.is24HourView)boolean
android.widget.TimePicker.setOnTimeChangedListener(android.widget.TimePicker.OnTimeChangedListener)void
android.widget.TimePicker.setEnabled(boolean)void
android.widget.TimePicker.isEnabled)boolean
android.widget.TimePicker.getBaseline)int
android.widget.TimePicker.validateInput)boolean
android.widget.TimePicker.onSaveInstanceState)android.os.Parcelable
android.widget.TimePicker.onRestoreInstanceState(android.os.Parcelable)void
android.widget.TimePicker.getAccessibilityClassName)CharSequence
android.widget.TimePicker.dispatchProvideAutofillStructure(android.view.ViewStructure,int)void
android.widget.TimePicker.autofill(android.view.autofill.AutofillValue)void
android.widget.TimePicker.getAutofillType)int
android.widget.TimePicker.getAutofillValue)android.view.autofill.AutofillValue
android.widget.Toast.show)void
android.widget.Toast.cancel)void
android.widget.Toast.setView(android.view.View)void
android.widget.Toast.getView)android.view.View
android.widget.Toast.setDuration(int)void
android.widget.Toast.getDuration)int
android.widget.Toast.setMargin(float,float)void
android.widget.Toast.getHorizontalMargin)float
android.widget.Toast.getVerticalMargin)float
android.widget.Toast.setGravity(int,int,int)void
android.widget.Toast.getGravity)int
android.widget.Toast.getXOffset)int
android.widget.Toast.getYOffset)int
android.widget.Toast.makeText(android.content.Context,CharSequence,int)android.widget.Toast
android.widget.Toast.makeText(android.content.Context,int,int)android.widget.Toast
android.widget.Toast.setText(int)void
android.widget.Toast.setText(CharSequence)void
android.widget.ToggleButton.setChecked(boolean)void
android.widget.ToggleButton.getTextOn)CharSequence
android.widget.ToggleButton.setTextOn(CharSequence)void
android.widget.ToggleButton.getTextOff)CharSequence
android.widget.ToggleButton.setTextOff(CharSequence)void
android.widget.ToggleButton.getDisabledAlpha)float
android.widget.ToggleButton.onFinishInflate)void
android.widget.ToggleButton.setBackgroundDrawable(android.graphics.drawable.Drawable)void
android.widget.ToggleButton.drawableStateChanged)void
android.widget.ToggleButton.getAccessibilityClassName)CharSequence
android.widget.Toolbar.onAttachedToWindow)void
android.widget.Toolbar.setPopupTheme(int)void
android.widget.Toolbar.getPopupTheme)int
android.widget.Toolbar.setTitleMargin(int,int,int,int)void
android.widget.Toolbar.getTitleMarginStart)int
android.widget.Toolbar.setTitleMarginStart(int)void
android.widget.Toolbar.getTitleMarginTop)int
android.widget.Toolbar.setTitleMarginTop(int)void
android.widget.Toolbar.getTitleMarginEnd)int
android.widget.Toolbar.setTitleMarginEnd(int)void
android.widget.Toolbar.getTitleMarginBottom)int
android.widget.Toolbar.setTitleMarginBottom(int)void
android.widget.Toolbar.onRtlPropertiesChanged(int)void
android.widget.Toolbar.setLogo(int)void
android.widget.Toolbar.isOverflowMenuShowing)boolean
android.widget.Toolbar.showOverflowMenu)boolean
android.widget.Toolbar.hideOverflowMenu)boolean
android.widget.Toolbar.dismissPopupMenus)void
android.widget.Toolbar.setLogo(android.graphics.drawable.Drawable)void
android.widget.Toolbar.getLogo)android.graphics.drawable.Drawable
android.widget.Toolbar.setLogoDescription(int)void
android.widget.Toolbar.setLogoDescription(CharSequence)void
android.widget.Toolbar.getLogoDescription)CharSequence
android.widget.Toolbar.hasExpandedActionView)boolean
android.widget.Toolbar.collapseActionView)void
android.widget.Toolbar.getTitle)CharSequence
android.widget.Toolbar.setTitle(int)void
android.widget.Toolbar.setTitle(CharSequence)void
android.widget.Toolbar.getSubtitle)CharSequence
android.widget.Toolbar.setSubtitle(int)void
android.widget.Toolbar.setSubtitle(CharSequence)void
android.widget.Toolbar.setTitleTextAppearance(android.content.Context,int)void
android.widget.Toolbar.setSubtitleTextAppearance(android.content.Context,int)void
android.widget.Toolbar.setTitleTextColor(int)void
android.widget.Toolbar.setSubtitleTextColor(int)void
android.widget.Toolbar.getNavigationContentDescription)CharSequence
android.widget.Toolbar.setNavigationContentDescription(int)void
android.widget.Toolbar.setNavigationContentDescription(CharSequence)void
android.widget.Toolbar.setNavigationIcon(int)void
android.widget.Toolbar.setNavigationIcon(android.graphics.drawable.Drawable)void
android.widget.Toolbar.getNavigationIcon)android.graphics.drawable.Drawable
android.widget.Toolbar.setNavigationOnClickListener(android.view.View.OnClickListener)void
android.widget.Toolbar.getCollapseContentDescription)CharSequence
android.widget.Toolbar.setCollapseContentDescription(int)void
android.widget.Toolbar.setCollapseContentDescription(CharSequence)void
android.widget.Toolbar.getCollapseIcon)android.graphics.drawable.Drawable
android.widget.Toolbar.setCollapseIcon(int)void
android.widget.Toolbar.setCollapseIcon(android.graphics.drawable.Drawable)void
android.widget.Toolbar.getMenu)Menu
android.widget.Toolbar.setOverflowIcon(android.graphics.drawable.Drawable)void
android.widget.Toolbar.getOverflowIcon)android.graphics.drawable.Drawable
android.widget.Toolbar.inflateMenu(int)void
android.widget.Toolbar.setOnMenuItemClickListener(android.widget.Toolbar.OnMenuItemClickListener)void
android.widget.Toolbar.setContentInsetsRelative(int,int)void
android.widget.Toolbar.getContentInsetStart)int
android.widget.Toolbar.getContentInsetEnd)int
android.widget.Toolbar.setContentInsetsAbsolute(int,int)void
android.widget.Toolbar.getContentInsetLeft)int
android.widget.Toolbar.getContentInsetRight)int
android.widget.Toolbar.getContentInsetStartWithNavigation)int
android.widget.Toolbar.setContentInsetStartWithNavigation(int)void
android.widget.Toolbar.getContentInsetEndWithActions)int
android.widget.Toolbar.setContentInsetEndWithActions(int)void
android.widget.Toolbar.getCurrentContentInsetStart)int
android.widget.Toolbar.getCurrentContentInsetEnd)int
android.widget.Toolbar.getCurrentContentInsetLeft)int
android.widget.Toolbar.getCurrentContentInsetRight)int
android.widget.Toolbar.onSaveInstanceState)android.os.Parcelable
android.widget.Toolbar.onRestoreInstanceState(android.os.Parcelable)void
android.widget.Toolbar.onDetachedFromWindow)void
android.widget.Toolbar.onTouchEvent(MotionEvent)boolean
android.widget.Toolbar.onMeasure(int,int)void
android.widget.Toolbar.onLayout(boolean,int,int,int,int)void
android.widget.Toolbar.generateLayoutParams(android.util.AttributeSet)android.widget.Toolbar.LayoutParams
android.widget.Toolbar.generateLayoutParams(android.view.ViewGroup.LayoutParams)android.widget.Toolbar.LayoutParams
android.widget.Toolbar.generateDefaultLayoutParams)android.widget.Toolbar.LayoutParams
android.widget.Toolbar.checkLayoutParams(android.view.ViewGroup.LayoutParams)boolean
android.widget.TwoLineListItem.onFinishInflate)void
android.widget.TwoLineListItem.getText1)android.widget.TextView
android.widget.TwoLineListItem.getText2)android.widget.TextView
android.widget.TwoLineListItem.getAccessibilityClassName)CharSequence
android.widget.VideoView.onMeasure(int,int)void
android.widget.VideoView.getAccessibilityClassName)CharSequence
android.widget.VideoView.resolveAdjustedSize(int,int)int
android.widget.VideoView.setVideoPath(String)void
android.widget.VideoView.setVideoURI(android.net.Uri)void
android.widget.VideoView.setVideoURI(android.net.Uri,java.util.Map)void
android.widget.VideoView.setAudioFocusRequest(int)void
android.widget.VideoView.setAudioAttributes(AudioAttributes)void
android.widget.VideoView.addSubtitleSource(java.io.InputStream,MediaFormat)void
android.widget.VideoView.stopPlayback)void
android.widget.VideoView.setMediaController(android.widget.MediaController)void
android.widget.VideoView.setOnPreparedListener(android.media.MediaPlayer.OnPreparedListener)void
android.widget.VideoView.setOnCompletionListener(android.media.MediaPlayer.OnCompletionListener)void
android.widget.VideoView.setOnErrorListener(android.media.MediaPlayer.OnErrorListener)void
android.widget.VideoView.setOnInfoListener(android.media.MediaPlayer.OnInfoListener)void
android.widget.VideoView.onTouchEvent(MotionEvent)boolean
android.widget.VideoView.onTrackballEvent(MotionEvent)boolean
android.widget.VideoView.onKeyDown(int,KeyEvent)boolean
android.widget.VideoView.start)void
android.widget.VideoView.pause)void
android.widget.VideoView.suspend)void
android.widget.VideoView.resume)void
android.widget.VideoView.getDuration)int
android.widget.VideoView.getCurrentPosition)int
android.widget.VideoView.seekTo(int)void
android.widget.VideoView.isPlaying)boolean
android.widget.VideoView.getBufferPercentage)int
android.widget.VideoView.canPause)boolean
android.widget.VideoView.canSeekBackward)boolean
android.widget.VideoView.canSeekForward)boolean
android.widget.VideoView.getAudioSessionId)int
android.widget.VideoView.onAttachedToWindow)void
android.widget.VideoView.onDetachedFromWindow)void
android.widget.VideoView.onLayout(boolean,int,int,int,int)void
android.widget.VideoView.draw(android.graphics.Canvas)void
android.widget.ViewAnimator.setDisplayedChild(int)void
android.widget.ViewAnimator.getDisplayedChild)int
android.widget.ViewAnimator.showNext)void
android.widget.ViewAnimator.showPrevious)void
android.widget.ViewAnimator.addView(android.view.View,int,android.view.ViewGroup.LayoutParams)void
android.widget.ViewAnimator.removeAllViews)void
android.widget.ViewAnimator.removeView(android.view.View)void
android.widget.ViewAnimator.removeViewAt(int)void
android.widget.ViewAnimator.removeViewInLayout(android.view.View)void
android.widget.ViewAnimator.removeViews(int,int)void
android.widget.ViewAnimator.removeViewsInLayout(int,int)void
android.widget.ViewAnimator.getCurrentView)android.view.View
android.widget.ViewAnimator.getInAnimation)android.view.animation.Animation
android.widget.ViewAnimator.setInAnimation(android.view.animation.Animation)void
android.widget.ViewAnimator.getOutAnimation)android.view.animation.Animation
android.widget.ViewAnimator.setOutAnimation(android.view.animation.Animation)void
android.widget.ViewAnimator.setInAnimation(android.content.Context,int)void
android.widget.ViewAnimator.setOutAnimation(android.content.Context,int)void
android.widget.ViewAnimator.getAnimateFirstView)boolean
android.widget.ViewAnimator.setAnimateFirstView(boolean)void
android.widget.ViewAnimator.getBaseline)int
android.widget.ViewAnimator.getAccessibilityClassName)CharSequence
android.widget.ViewFlipper.onAttachedToWindow)void
android.widget.ViewFlipper.onDetachedFromWindow)void
android.widget.ViewFlipper.onWindowVisibilityChanged(int)void
android.widget.ViewFlipper.setFlipInterval(int)void
android.widget.ViewFlipper.getFlipInterval)int
android.widget.ViewFlipper.startFlipping)void
android.widget.ViewFlipper.stopFlipping)void
android.widget.ViewFlipper.getAccessibilityClassName)CharSequence
android.widget.ViewFlipper.isFlipping)boolean
android.widget.ViewFlipper.setAutoStart(boolean)void
android.widget.ViewFlipper.isAutoStart)boolean
android.widget.ViewSwitcher.addView(android.view.View,int,android.view.ViewGroup.LayoutParams)void
android.widget.ViewSwitcher.getAccessibilityClassName)CharSequence
android.widget.ViewSwitcher.getNextView)android.view.View
android.widget.ViewSwitcher.setFactory(android.widget.ViewSwitcher.ViewFactory)void
android.widget.ViewSwitcher.reset)void
android.widget.ZoomButton.onTouchEvent(MotionEvent)boolean
android.widget.ZoomButton.setZoomSpeed(long)void
android.widget.ZoomButton.onLongClick(View)boolean
android.widget.ZoomButton.onKeyUp(int,KeyEvent)boolean
android.widget.ZoomButton.setEnabled(boolean)void
android.widget.ZoomButton.dispatchUnhandledMove(View,int)boolean
android.widget.ZoomButton.getAccessibilityClassName)CharSequence
android.widget.ZoomButtonsController.setZoomInEnabled(boolean)void
android.widget.ZoomButtonsController.setZoomOutEnabled(boolean)void
android.widget.ZoomButtonsController.setZoomSpeed(long)void
android.widget.ZoomButtonsController.setOnZoomListener(android.widget.ZoomButtonsController.OnZoomListener)void
android.widget.ZoomButtonsController.setFocusable(boolean)void
android.widget.ZoomButtonsController.isAutoDismissed)boolean
android.widget.ZoomButtonsController.setAutoDismissed(boolean)void
android.widget.ZoomButtonsController.isVisible)boolean
android.widget.ZoomButtonsController.setVisible(boolean)void
android.widget.ZoomButtonsController.getContainer)ViewGroup
android.widget.ZoomButtonsController.getZoomControls)View
android.widget.ZoomButtonsController.onTouch(View,MotionEvent)boolean
android.widget.ZoomControls.setOnZoomInClickListener(android.view.View.OnClickListener)void
android.widget.ZoomControls.setOnZoomOutClickListener(android.view.View.OnClickListener)void
android.widget.ZoomControls.setZoomSpeed(long)void
android.widget.ZoomControls.onTouchEvent(android.view.MotionEvent)boolean
android.widget.ZoomControls.show)void
android.widget.ZoomControls.hide)void
android.widget.ZoomControls.setIsZoomInEnabled(boolean)void
android.widget.ZoomControls.setIsZoomOutEnabled(boolean)void
android.widget.ZoomControls.hasFocus)boolean
android.widget.ZoomControls.getAccessibilityClassName)CharSequence
dalvik.system.BaseDexClassLoader.findClass(String)Class
dalvik.system.BaseDexClassLoader.findResource(String)java.net.URL
dalvik.system.BaseDexClassLoader.findResources(String)java.util.Enumeration
dalvik.system.BaseDexClassLoader.findLibrary(String)String
dalvik.system.BaseDexClassLoader.toString)String
dalvik.system.DelegateLastClassLoader.loadClass(String,boolean)Class
dalvik.system.DelegateLastClassLoader.getResource(String)java.net.URL
dalvik.system.DelegateLastClassLoader.getResources(String)java.util.Enumeration
dalvik.system.DexFile.loadDex(String,String,int)dalvik.system.DexFile
dalvik.system.DexFile.getName)String
dalvik.system.DexFile.toString)String
dalvik.system.DexFile.close)void
dalvik.system.DexFile.loadClass(String,ClassLoader)Class
dalvik.system.DexFile.entries)java.util.Enumeration
dalvik.system.DexFile.finalize)void
java.awt.font.NumericShaper.valueOf(String)Range
java.awt.font.NumericShaper.getShaper(int)java.awt.font.NumericShaper
java.awt.font.NumericShaper.getShaper(Range)java.awt.font.NumericShaper
java.awt.font.NumericShaper.getContextualShaper(int)java.awt.font.NumericShaper
java.awt.font.NumericShaper.getContextualShaper(java.util.Set)java.awt.font.NumericShaper
java.awt.font.NumericShaper.getContextualShaper(int,int)java.awt.font.NumericShaper
java.awt.font.NumericShaper.getContextualShaper(java.util.Set,Range)java.awt.font.NumericShaper
java.awt.font.NumericShaper.shape(char,int,int)void
java.awt.font.NumericShaper.shape(char,int,int,int)void
java.awt.font.NumericShaper.shape(char,int,int,Range)void
java.awt.font.NumericShaper.isContextual)boolean
java.awt.font.NumericShaper.getRanges)int
java.awt.font.NumericShaper.getRangeSet)java.util.Set
java.awt.font.NumericShaper.hashCode)int
java.awt.font.NumericShaper.equals(Object)boolean
java.awt.font.NumericShaper.toString)String
java.awt.font.TextAttribute.readResolve)Object
java.beans.IndexedPropertyChangeEvent.getIndex)int
java.beans.PropertyChangeEvent.getPropertyName)String
java.beans.PropertyChangeEvent.getNewValue)Object
java.beans.PropertyChangeEvent.getOldValue)Object
java.beans.PropertyChangeEvent.setPropagationId(Object)void
java.beans.PropertyChangeEvent.getPropagationId)Object
java.beans.PropertyChangeEvent.toString)String
java.beans.PropertyChangeListenerProxy.propertyChange(java.beans.PropertyChangeEvent)void
java.beans.PropertyChangeListenerProxy.getPropertyName)String
java.beans.PropertyChangeSupport.addPropertyChangeListener(java.beans.PropertyChangeListener)void
java.beans.PropertyChangeSupport.removePropertyChangeListener(java.beans.PropertyChangeListener)void
java.beans.PropertyChangeSupport.addPropertyChangeListener(String,java.beans.PropertyChangeListener)void
java.beans.PropertyChangeSupport.removePropertyChangeListener(String,java.beans.PropertyChangeListener)void
java.beans.PropertyChangeSupport.firePropertyChange(String,Object,Object)void
java.beans.PropertyChangeSupport.firePropertyChange(String,int,int)void
java.beans.PropertyChangeSupport.firePropertyChange(String,boolean,boolean)void
java.beans.PropertyChangeSupport.firePropertyChange(java.beans.PropertyChangeEvent)void
java.beans.PropertyChangeSupport.fireIndexedPropertyChange(String,int,Object,Object)void
java.beans.PropertyChangeSupport.fireIndexedPropertyChange(String,int,int,int)void
java.beans.PropertyChangeSupport.fireIndexedPropertyChange(String,int,boolean,boolean)void
java.beans.PropertyChangeSupport.hasListeners(String)boolean
java.io.BufferedInputStream.markSupported)boolean
java.io.BufferedInputStream.close)void
java.io.BufferedReader.read)int
java.io.BufferedReader.read(char,int,int)int
java.io.BufferedReader.readLine)String
java.io.BufferedReader.skip(long)long
java.io.BufferedReader.ready)boolean
java.io.BufferedReader.markSupported)boolean
java.io.BufferedReader.mark(int)void
java.io.BufferedReader.reset)void
java.io.BufferedReader.close)void
java.io.BufferedReader.lines)java.util.stream.Stream
java.io.BufferedWriter.write(int)void
java.io.BufferedWriter.write(char,int,int)void
java.io.BufferedWriter.write(String,int,int)void
java.io.BufferedWriter.newLine)void
java.io.BufferedWriter.flush)void
java.io.BufferedWriter.close)void
java.io.ByteArrayInputStream.markSupported)boolean
java.io.ByteArrayInputStream.mark(int)void
java.io.ByteArrayInputStream.close)void
java.io.ByteArrayOutputStream.close)void
java.io.CharArrayReader.read)int
java.io.CharArrayReader.read(char,int,int)int
java.io.CharArrayReader.skip(long)long
java.io.CharArrayReader.ready)boolean
java.io.CharArrayReader.markSupported)boolean
java.io.CharArrayReader.mark(int)void
java.io.CharArrayReader.reset)void
java.io.CharArrayReader.close)void
java.io.CharArrayWriter.write(int)void
java.io.CharArrayWriter.write(char,int,int)void
java.io.CharArrayWriter.write(String,int,int)void
java.io.CharArrayWriter.writeTo(java.io.Writer)void
java.io.CharArrayWriter.append(CharSequence)java.io.CharArrayWriter
java.io.CharArrayWriter.append(CharSequence,int,int)java.io.CharArrayWriter
java.io.CharArrayWriter.append(char)java.io.CharArrayWriter
java.io.CharArrayWriter.reset)void
java.io.CharArrayWriter.size)int
java.io.CharArrayWriter.toString)String
java.io.CharArrayWriter.flush)void
java.io.CharArrayWriter.close)void
java.io.Closeable.close)void
java.io.Console.writer)java.io.PrintWriter
java.io.Console.reader)java.io.Reader
java.io.Console.readLine)String
java.io.Console.flush)void
java.io.DataInput.readFully(byte)void
java.io.DataInput.readFully(byte,int,int)void
java.io.DataInput.skipBytes(int)int
java.io.DataInput.readBoolean)boolean
java.io.DataInput.readByte)byte
java.io.DataInput.readUnsignedByte)int
java.io.DataInput.readShort)short
java.io.DataInput.readUnsignedShort)int
java.io.DataInput.readChar)char
java.io.DataInput.readInt)int
java.io.DataInput.readLong)long
java.io.DataInput.readFloat)float
java.io.DataInput.readDouble)double
java.io.DataInput.readLine)String
java.io.DataInput.readUTF)String
java.io.DataInputStream.read(byte)int
java.io.DataInputStream.read(byte,int,int)int
java.io.DataInputStream.readFully(byte)void
java.io.DataInputStream.readFully(byte,int,int)void
java.io.DataInputStream.skipBytes(int)int
java.io.DataInputStream.readBoolean)boolean
java.io.DataInputStream.readByte)byte
java.io.DataInputStream.readUnsignedByte)int
java.io.DataInputStream.readShort)short
java.io.DataInputStream.readUnsignedShort)int
java.io.DataInputStream.readChar)char
java.io.DataInputStream.readInt)int
java.io.DataInputStream.readLong)long
java.io.DataInputStream.readFloat)float
java.io.DataInputStream.readDouble)double
java.io.DataInputStream.readLine)String
java.io.DataInputStream.readUTF)String
java.io.DataInputStream.readUTF(java.io.DataInput)String
java.io.DataOutput.write(int)void
java.io.DataOutput.write(byte)void
java.io.DataOutput.write(byte,int,int)void
java.io.DataOutput.writeBoolean(boolean)void
java.io.DataOutput.writeByte(int)void
java.io.DataOutput.writeShort(int)void
java.io.DataOutput.writeChar(int)void
java.io.DataOutput.writeInt(int)void
java.io.DataOutput.writeLong(long)void
java.io.DataOutput.writeFloat(float)void
java.io.DataOutput.writeDouble(double)void
java.io.DataOutput.writeBytes(String)void
java.io.DataOutput.writeChars(String)void
java.io.DataOutput.writeUTF(String)void
java.io.DataOutputStream.flush)void
java.io.DataOutputStream.writeBoolean(boolean)void
java.io.DataOutputStream.writeByte(int)void
java.io.DataOutputStream.writeShort(int)void
java.io.DataOutputStream.writeChar(int)void
java.io.DataOutputStream.writeInt(int)void
java.io.DataOutputStream.writeLong(long)void
java.io.DataOutputStream.writeFloat(float)void
java.io.DataOutputStream.writeDouble(double)void
java.io.DataOutputStream.writeBytes(String)void
java.io.DataOutputStream.writeChars(String)void
java.io.DataOutputStream.writeUTF(String)void
java.io.DataOutputStream.size)int
java.io.Externalizable.writeExternal(java.io.ObjectOutput)void
java.io.Externalizable.readExternal(java.io.ObjectInput)void
java.io.File.getName)String
java.io.File.getParent)String
java.io.File.getParentFile)java.io.File
java.io.File.getPath)String
java.io.File.isAbsolute)boolean
java.io.File.getAbsolutePath)String
java.io.File.getAbsoluteFile)java.io.File
java.io.File.getCanonicalPath)String
java.io.File.getCanonicalFile)java.io.File
java.io.File.toURL)URL
java.io.File.toURI)URI
java.io.File.canRead)boolean
java.io.File.canWrite)boolean
java.io.File.exists)boolean
java.io.File.isDirectory)boolean
java.io.File.isFile)boolean
java.io.File.isHidden)boolean
java.io.File.lastModified)long
java.io.File.length)long
java.io.File.createNewFile)boolean
java.io.File.delete)boolean
java.io.File.deleteOnExit)void
java.io.File.mkdir)boolean
java.io.File.mkdirs)boolean
java.io.File.renameTo(java.io.File)boolean
java.io.File.setLastModified(long)boolean
java.io.File.setReadOnly)boolean
java.io.File.setWritable(boolean,boolean)boolean
java.io.File.setWritable(boolean)boolean
java.io.File.setReadable(boolean,boolean)boolean
java.io.File.setReadable(boolean)boolean
java.io.File.setExecutable(boolean,boolean)boolean
java.io.File.setExecutable(boolean)boolean
java.io.File.canExecute)boolean
java.io.File.getTotalSpace)long
java.io.File.getFreeSpace)long
java.io.File.getUsableSpace)long
java.io.File.createTempFile(String,String,java.io.File)java.io.File
java.io.File.createTempFile(String,String)java.io.File
java.io.File.compareTo(java.io.File)int
java.io.File.equals(Object)boolean
java.io.File.hashCode)int
java.io.File.toString)String
java.io.File.toPath)java.nio.file.Path
java.io.FileDescriptor.valid)boolean
java.io.FileInputStream.read)int
java.io.FileInputStream.read(byte)int
java.io.FileInputStream.read(byte,int,int)int
java.io.FileInputStream.skip(long)long
java.io.FileInputStream.available)int
java.io.FileInputStream.close)void
java.io.FileInputStream.getFD)java.io.FileDescriptor
java.io.FileInputStream.getChannel)java.nio.channels.FileChannel
java.io.FileInputStream.finalize)void
java.io.FileOutputStream.write(int)void
java.io.FileOutputStream.write(byte)void
java.io.FileOutputStream.write(byte,int,int)void
java.io.FileOutputStream.close)void
java.io.FileOutputStream.getFD)java.io.FileDescriptor
java.io.FileOutputStream.getChannel)java.nio.channels.FileChannel
java.io.FileOutputStream.finalize)void
java.io.FilePermission.implies(java.security.Permission)boolean
java.io.FilePermission.getActions)String
java.io.FilterInputStream.read)int
java.io.FilterInputStream.read(byte)int
java.io.FilterInputStream.read(byte,int,int)int
java.io.FilterInputStream.skip(long)long
java.io.FilterInputStream.available)int
java.io.FilterInputStream.close)void
java.io.FilterInputStream.markSupported)boolean
java.io.FilterOutputStream.write(int)void
java.io.FilterOutputStream.write(byte)void
java.io.FilterOutputStream.write(byte,int,int)void
java.io.FilterOutputStream.flush)void
java.io.FilterOutputStream.close)void
java.io.FilterReader.read)int
java.io.FilterReader.read(char,int,int)int
java.io.FilterReader.skip(long)long
java.io.FilterReader.ready)boolean
java.io.FilterReader.markSupported)boolean
java.io.FilterReader.mark(int)void
java.io.FilterReader.reset)void
java.io.FilterReader.close)void
java.io.FilterWriter.write(int)void
java.io.FilterWriter.write(char,int,int)void
java.io.FilterWriter.write(String,int,int)void
java.io.FilterWriter.flush)void
java.io.FilterWriter.close)void
java.io.Flushable.flush)void
java.io.InputStream.read)int
java.io.InputStream.read(byte)int
java.io.InputStream.read(byte,int,int)int
java.io.InputStream.skip(long)long
java.io.InputStream.available)int
java.io.InputStream.close)void
java.io.InputStream.markSupported)boolean
java.io.InputStreamReader.getEncoding)String
java.io.InputStreamReader.read)int
java.io.InputStreamReader.read(char,int,int)int
java.io.InputStreamReader.ready)boolean
java.io.InputStreamReader.close)void
java.io.InvalidClassException.getMessage)String
java.io.LineNumberInputStream.read)int
java.io.LineNumberInputStream.read(byte,int,int)int
java.io.LineNumberInputStream.skip(long)long
java.io.LineNumberInputStream.setLineNumber(int)void
java.io.LineNumberInputStream.getLineNumber)int
java.io.LineNumberInputStream.available)int
java.io.LineNumberInputStream.mark(int)void
java.io.LineNumberInputStream.reset)void
java.io.LineNumberReader.setLineNumber(int)void
java.io.LineNumberReader.getLineNumber)int
java.io.LineNumberReader.read)int
java.io.LineNumberReader.read(char,int,int)int
java.io.LineNumberReader.readLine)String
java.io.LineNumberReader.skip(long)long
java.io.LineNumberReader.mark(int)void
java.io.LineNumberReader.reset)void
java.io.ObjectInput.readObject)Object
java.io.ObjectInput.read)int
java.io.ObjectInput.read(byte)int
java.io.ObjectInput.read(byte,int,int)int
java.io.ObjectInput.skip(long)long
java.io.ObjectInput.available)int
java.io.ObjectInput.close)void
java.io.ObjectInputStream.defaulted(String)boolean
java.io.ObjectInputStream.get(String,boolean)boolean
java.io.ObjectInputStream.get(String,byte)byte
java.io.ObjectInputStream.get(String,char)char
java.io.ObjectInputStream.get(String,short)short
java.io.ObjectInputStream.get(String,int)int
java.io.ObjectInputStream.get(String,long)long
java.io.ObjectInputStream.get(String,float)float
java.io.ObjectInputStream.get(String,double)double
java.io.ObjectInputStream.get(String,Object)Object
java.io.ObjectInputStream.readObject)Object
java.io.ObjectInputStream.readObjectOverride)Object
java.io.ObjectInputStream.readUnshared)Object
java.io.ObjectInputStream.defaultReadObject)void
java.io.ObjectInputStream.readFields)GetField
java.io.ObjectInputStream.registerValidation(java.io.ObjectInputValidation,int)void
java.io.ObjectInputStream.resolveClass(java.io.ObjectStreamClass)Class
java.io.ObjectInputStream.resolveProxyClass(String)Class
java.io.ObjectInputStream.resolveObject(Object)Object
java.io.ObjectInputStream.enableResolveObject(boolean)boolean
java.io.ObjectInputStream.readStreamHeader)void
java.io.ObjectInputStream.readClassDescriptor)java.io.ObjectStreamClass
java.io.ObjectInputStream.read)int
java.io.ObjectInputStream.read(byte,int,int)int
java.io.ObjectInputStream.available)int
java.io.ObjectInputStream.close)void
java.io.ObjectInputStream.readBoolean)boolean
java.io.ObjectInputStream.readByte)byte
java.io.ObjectInputStream.readUnsignedByte)int
java.io.ObjectInputStream.readChar)char
java.io.ObjectInputStream.readShort)short
java.io.ObjectInputStream.readUnsignedShort)int
java.io.ObjectInputStream.readInt)int
java.io.ObjectInputStream.readLong)long
java.io.ObjectInputStream.readFloat)float
java.io.ObjectInputStream.readDouble)double
java.io.ObjectInputStream.readFully(byte)void
java.io.ObjectInputStream.readFully(byte,int,int)void
java.io.ObjectInputStream.skipBytes(int)int
java.io.ObjectInputStream.readLine)String
java.io.ObjectInputStream.readUTF)String
java.io.ObjectInputValidation.validateObject)void
java.io.ObjectOutput.writeObject(Object)void
java.io.ObjectOutput.write(int)void
java.io.ObjectOutput.write(byte)void
java.io.ObjectOutput.write(byte,int,int)void
java.io.ObjectOutput.flush)void
java.io.ObjectOutput.close)void
java.io.ObjectOutputStream.write(java.io.ObjectOutput)void
java.io.ObjectOutputStream.useProtocolVersion(int)void
java.io.ObjectOutputStream.writeObject(Object)void
java.io.ObjectOutputStream.writeObjectOverride(Object)void
java.io.ObjectOutputStream.writeUnshared(Object)void
java.io.ObjectOutputStream.defaultWriteObject)void
java.io.ObjectOutputStream.putFields)PutField
java.io.ObjectOutputStream.writeFields)void
java.io.ObjectOutputStream.reset)void
java.io.ObjectOutputStream.annotateClass(Class)void
java.io.ObjectOutputStream.annotateProxyClass(Class)void
java.io.ObjectOutputStream.replaceObject(Object)Object
java.io.ObjectOutputStream.enableReplaceObject(boolean)boolean
java.io.ObjectOutputStream.writeStreamHeader)void
java.io.ObjectOutputStream.writeClassDescriptor(java.io.ObjectStreamClass)void
java.io.ObjectOutputStream.write(int)void
java.io.ObjectOutputStream.write(byte)void
java.io.ObjectOutputStream.write(byte,int,int)void
java.io.ObjectOutputStream.flush)void
java.io.ObjectOutputStream.drain)void
java.io.ObjectOutputStream.close)void
java.io.ObjectOutputStream.writeBoolean(boolean)void
java.io.ObjectOutputStream.writeByte(int)void
java.io.ObjectOutputStream.writeShort(int)void
java.io.ObjectOutputStream.writeChar(int)void
java.io.ObjectOutputStream.writeInt(int)void
java.io.ObjectOutputStream.writeLong(long)void
java.io.ObjectOutputStream.writeFloat(float)void
java.io.ObjectOutputStream.writeDouble(double)void
java.io.ObjectOutputStream.writeBytes(String)void
java.io.ObjectOutputStream.writeChars(String)void
java.io.ObjectOutputStream.writeUTF(String)void
java.io.ObjectStreamClass.lookup(Class)java.io.ObjectStreamClass
java.io.ObjectStreamClass.lookupAny(Class)java.io.ObjectStreamClass
java.io.ObjectStreamClass.getName)String
java.io.ObjectStreamClass.getSerialVersionUID)long
java.io.ObjectStreamClass.forClass)Class
java.io.ObjectStreamClass.getField(String)java.io.ObjectStreamField
java.io.ObjectStreamClass.toString)String
java.io.ObjectStreamField.getName)String
java.io.ObjectStreamField.getType)Class
java.io.ObjectStreamField.getTypeCode)char
java.io.ObjectStreamField.getTypeString)String
java.io.ObjectStreamField.getOffset)int
java.io.ObjectStreamField.setOffset(int)void
java.io.ObjectStreamField.isPrimitive)boolean
java.io.ObjectStreamField.isUnshared)boolean
java.io.ObjectStreamField.compareTo(Object)int
java.io.ObjectStreamField.toString)String
java.io.OutputStream.write(int)void
java.io.OutputStream.write(byte)void
java.io.OutputStream.write(byte,int,int)void
java.io.OutputStream.flush)void
java.io.OutputStream.close)void
java.io.OutputStreamWriter.getEncoding)String
java.io.OutputStreamWriter.write(int)void
java.io.OutputStreamWriter.write(char,int,int)void
java.io.OutputStreamWriter.write(String,int,int)void
java.io.OutputStreamWriter.flush)void
java.io.OutputStreamWriter.close)void
java.io.PipedInputStream.connect(java.io.PipedOutputStream)void
java.io.PipedInputStream.close)void
java.io.PipedOutputStream.write(int)void
java.io.PipedOutputStream.write(byte,int,int)void
java.io.PipedOutputStream.close)void
java.io.PipedReader.connect(java.io.PipedWriter)void
java.io.PipedReader.close)void
java.io.PipedWriter.write(int)void
java.io.PipedWriter.write(char,int,int)void
java.io.PipedWriter.close)void
java.io.PrintStream.flush)void
java.io.PrintStream.close)void
java.io.PrintStream.checkError)boolean
java.io.PrintStream.setError)void
java.io.PrintStream.clearError)void
java.io.PrintStream.write(int)void
java.io.PrintStream.write(byte,int,int)void
java.io.PrintStream.print(boolean)void
java.io.PrintStream.print(char)void
java.io.PrintStream.print(int)void
java.io.PrintStream.print(long)void
java.io.PrintStream.print(float)void
java.io.PrintStream.print(double)void
java.io.PrintStream.print(char)void
java.io.PrintStream.print(String)void
java.io.PrintStream.print(Object)void
java.io.PrintStream.println)void
java.io.PrintStream.println(boolean)void
java.io.PrintStream.println(char)void
java.io.PrintStream.println(int)void
java.io.PrintStream.println(long)void
java.io.PrintStream.println(float)void
java.io.PrintStream.println(double)void
java.io.PrintStream.println(char)void
java.io.PrintStream.println(String)void
java.io.PrintStream.println(Object)void
java.io.PrintStream.append(CharSequence)java.io.PrintStream
java.io.PrintStream.append(CharSequence,int,int)java.io.PrintStream
java.io.PrintStream.append(char)java.io.PrintStream
java.io.PrintWriter.flush)void
java.io.PrintWriter.close)void
java.io.PrintWriter.checkError)boolean
java.io.PrintWriter.setError)void
java.io.PrintWriter.clearError)void
java.io.PrintWriter.write(int)void
java.io.PrintWriter.write(char,int,int)void
java.io.PrintWriter.write(char)void
java.io.PrintWriter.write(String,int,int)void
java.io.PrintWriter.write(String)void
java.io.PrintWriter.print(boolean)void
java.io.PrintWriter.print(char)void
java.io.PrintWriter.print(int)void
java.io.PrintWriter.print(long)void
java.io.PrintWriter.print(float)void
java.io.PrintWriter.print(double)void
java.io.PrintWriter.print(char)void
java.io.PrintWriter.print(String)void
java.io.PrintWriter.print(Object)void
java.io.PrintWriter.println)void
java.io.PrintWriter.println(boolean)void
java.io.PrintWriter.println(char)void
java.io.PrintWriter.println(int)void
java.io.PrintWriter.println(long)void
java.io.PrintWriter.println(float)void
java.io.PrintWriter.println(double)void
java.io.PrintWriter.println(char)void
java.io.PrintWriter.println(String)void
java.io.PrintWriter.println(Object)void
java.io.PrintWriter.append(CharSequence)java.io.PrintWriter
java.io.PrintWriter.append(CharSequence,int,int)java.io.PrintWriter
java.io.PrintWriter.append(char)java.io.PrintWriter
java.io.PushbackInputStream.read)int
java.io.PushbackInputStream.read(byte,int,int)int
java.io.PushbackInputStream.unread(int)void
java.io.PushbackInputStream.unread(byte,int,int)void
java.io.PushbackInputStream.unread(byte)void
java.io.PushbackInputStream.available)int
java.io.PushbackInputStream.skip(long)long
java.io.PushbackInputStream.markSupported)boolean
java.io.PushbackReader.read)int
java.io.PushbackReader.read(char,int,int)int
java.io.PushbackReader.unread(int)void
java.io.PushbackReader.unread(char,int,int)void
java.io.PushbackReader.unread(char)void
java.io.PushbackReader.ready)boolean
java.io.PushbackReader.mark(int)void
java.io.PushbackReader.reset)void
java.io.PushbackReader.markSupported)boolean
java.io.PushbackReader.close)void
java.io.PushbackReader.skip(long)long
java.io.RandomAccessFile.getFD)java.io.FileDescriptor
java.io.RandomAccessFile.getChannel)java.nio.channels.FileChannel
java.io.RandomAccessFile.read)int
java.io.RandomAccessFile.read(byte,int,int)int
java.io.RandomAccessFile.read(byte)int
java.io.RandomAccessFile.readFully(byte)void
java.io.RandomAccessFile.readFully(byte,int,int)void
java.io.RandomAccessFile.skipBytes(int)int
java.io.RandomAccessFile.write(int)void
java.io.RandomAccessFile.write(byte)void
java.io.RandomAccessFile.write(byte,int,int)void
java.io.RandomAccessFile.getFilePointer)long
java.io.RandomAccessFile.seek(long)void
java.io.RandomAccessFile.length)long
java.io.RandomAccessFile.setLength(long)void
java.io.RandomAccessFile.close)void
java.io.RandomAccessFile.readBoolean)boolean
java.io.RandomAccessFile.readByte)byte
java.io.RandomAccessFile.readUnsignedByte)int
java.io.RandomAccessFile.readShort)short
java.io.RandomAccessFile.readUnsignedShort)int
java.io.RandomAccessFile.readChar)char
java.io.RandomAccessFile.readInt)int
java.io.RandomAccessFile.readLong)long
java.io.RandomAccessFile.readFloat)float
java.io.RandomAccessFile.readDouble)double
java.io.RandomAccessFile.readLine)String
java.io.RandomAccessFile.readUTF)String
java.io.RandomAccessFile.writeBoolean(boolean)void
java.io.RandomAccessFile.writeByte(int)void
java.io.RandomAccessFile.writeShort(int)void
java.io.RandomAccessFile.writeChar(int)void
java.io.RandomAccessFile.writeInt(int)void
java.io.RandomAccessFile.writeLong(long)void
java.io.RandomAccessFile.writeFloat(float)void
java.io.RandomAccessFile.writeDouble(double)void
java.io.RandomAccessFile.writeBytes(String)void
java.io.RandomAccessFile.writeChars(String)void
java.io.RandomAccessFile.writeUTF(String)void
java.io.RandomAccessFile.finalize)void
java.io.Reader.read(java.nio.CharBuffer)int
java.io.Reader.read)int
java.io.Reader.read(char)int
java.io.Reader.read(char,int,int)int
java.io.Reader.skip(long)long
java.io.Reader.ready)boolean
java.io.Reader.markSupported)boolean
java.io.Reader.mark(int)void
java.io.Reader.reset)void
java.io.Reader.close)void
java.io.SequenceInputStream.available)int
java.io.SequenceInputStream.read)int
java.io.SequenceInputStream.read(byte,int,int)int
java.io.SequenceInputStream.close)void
java.io.StreamTokenizer.resetSyntax)void
java.io.StreamTokenizer.wordChars(int,int)void
java.io.StreamTokenizer.whitespaceChars(int,int)void
java.io.StreamTokenizer.ordinaryChars(int,int)void
java.io.StreamTokenizer.ordinaryChar(int)void
java.io.StreamTokenizer.commentChar(int)void
java.io.StreamTokenizer.quoteChar(int)void
java.io.StreamTokenizer.parseNumbers)void
java.io.StreamTokenizer.eolIsSignificant(boolean)void
java.io.StreamTokenizer.slashStarComments(boolean)void
java.io.StreamTokenizer.slashSlashComments(boolean)void
java.io.StreamTokenizer.lowerCaseMode(boolean)void
java.io.StreamTokenizer.nextToken)int
java.io.StreamTokenizer.pushBack)void
java.io.StreamTokenizer.lineno)int
java.io.StreamTokenizer.toString)String
java.io.StringReader.read)int
java.io.StringReader.read(char,int,int)int
java.io.StringReader.skip(long)long
java.io.StringReader.ready)boolean
java.io.StringReader.markSupported)boolean
java.io.StringReader.mark(int)void
java.io.StringReader.reset)void
java.io.StringReader.close)void
java.io.StringWriter.write(int)void
java.io.StringWriter.write(char,int,int)void
java.io.StringWriter.write(String)void
java.io.StringWriter.write(String,int,int)void
java.io.StringWriter.append(CharSequence)java.io.StringWriter
java.io.StringWriter.append(CharSequence,int,int)java.io.StringWriter
java.io.StringWriter.append(char)java.io.StringWriter
java.io.StringWriter.toString)String
java.io.StringWriter.getBuffer)StringBuffer
java.io.StringWriter.flush)void
java.io.StringWriter.close)void
java.io.UncheckedIOException.getCause)java.io.IOException
java.io.WriteAbortedException.getMessage)String
java.io.WriteAbortedException.getCause)Throwable
java.io.Writer.write(int)void
java.io.Writer.write(char)void
java.io.Writer.write(char,int,int)void
java.io.Writer.write(String)void
java.io.Writer.write(String,int,int)void
java.io.Writer.append(CharSequence)java.io.Writer
java.io.Writer.append(CharSequence,int,int)java.io.Writer
java.io.Writer.append(char)java.io.Writer
java.io.Writer.flush)void
java.io.Writer.close)void
java.lang.Appendable.append(java.lang.CharSequence)java.lang.Appendable
java.lang.Appendable.append(java.lang.CharSequence,int,int)java.lang.Appendable
java.lang.Appendable.append(char)java.lang.Appendable
java.lang.AutoCloseable.close)void
java.lang.Boolean.parseBoolean(java.lang.String)boolean
java.lang.Boolean.booleanValue)boolean
java.lang.Boolean.valueOf(boolean)java.lang.Boolean
java.lang.Boolean.valueOf(java.lang.String)java.lang.Boolean
java.lang.Boolean.toString(boolean)java.lang.String
java.lang.Boolean.toString)java.lang.String
java.lang.Boolean.hashCode)int
java.lang.Boolean.hashCode(boolean)int
java.lang.Boolean.equals(java.lang.Object)boolean
java.lang.Boolean.getBoolean(java.lang.String)boolean
java.lang.Boolean.compareTo(java.lang.Boolean)int
java.lang.Boolean.compare(boolean,boolean)int
java.lang.Boolean.logicalAnd(boolean,boolean)boolean
java.lang.Boolean.logicalOr(boolean,boolean)boolean
java.lang.Boolean.logicalXor(boolean,boolean)boolean
java.lang.Byte.toString(byte)java.lang.String
java.lang.Byte.valueOf(byte)java.lang.Byte
java.lang.Byte.parseByte(java.lang.String,int)byte
java.lang.Byte.parseByte(java.lang.String)byte
java.lang.Byte.valueOf(java.lang.String,int)java.lang.Byte
java.lang.Byte.valueOf(java.lang.String)java.lang.Byte
java.lang.Byte.decode(java.lang.String)java.lang.Byte
java.lang.Byte.byteValue)byte
java.lang.Byte.shortValue)short
java.lang.Byte.intValue)int
java.lang.Byte.longValue)long
java.lang.Byte.floatValue)float
java.lang.Byte.doubleValue)double
java.lang.Byte.toString)java.lang.String
java.lang.Byte.hashCode)int
java.lang.Byte.hashCode(byte)int
java.lang.Byte.equals(java.lang.Object)boolean
java.lang.Byte.compareTo(java.lang.Byte)int
java.lang.Byte.compare(byte,byte)int
java.lang.Byte.toUnsignedInt(byte)int
java.lang.Byte.toUnsignedLong(byte)long
java.lang.Character.valueOf(java.lang.String)UnicodeScript
java.lang.Character.of(int)UnicodeScript
java.lang.Character.forName(java.lang.String)UnicodeScript
java.lang.Character.of(char)UnicodeBlock
java.lang.Character.of(int)UnicodeBlock
java.lang.Character.forName(java.lang.String)UnicodeBlock
java.lang.Character.equals(java.lang.Object)boolean
java.lang.Character.hashCode)int
java.lang.Character.toString)java.lang.String
java.lang.Character.valueOf(char)java.lang.Character
java.lang.Character.charValue)char
java.lang.Character.hashCode)int
java.lang.Character.hashCode(char)int
java.lang.Character.equals(java.lang.Object)boolean
java.lang.Character.toString)java.lang.String
java.lang.Character.toString(char)java.lang.String
java.lang.Character.isValidCodePoint(int)boolean
java.lang.Character.isBmpCodePoint(int)boolean
java.lang.Character.isSupplementaryCodePoint(int)boolean
java.lang.Character.isHighSurrogate(char)boolean
java.lang.Character.isLowSurrogate(char)boolean
java.lang.Character.isSurrogate(char)boolean
java.lang.Character.isSurrogatePair(char,char)boolean
java.lang.Character.charCount(int)int
java.lang.Character.toCodePoint(char,char)int
java.lang.Character.codePointAt(java.lang.CharSequence,int)int
java.lang.Character.codePointAt(char,int)int
java.lang.Character.codePointAt(char,int,int)int
java.lang.Character.codePointBefore(java.lang.CharSequence,int)int
java.lang.Character.codePointBefore(char,int)int
java.lang.Character.codePointBefore(char,int,int)int
java.lang.Character.highSurrogate(int)char
java.lang.Character.lowSurrogate(int)char
java.lang.Character.toChars(int,char,int)int
java.lang.Character.codePointCount(java.lang.CharSequence,int,int)int
java.lang.Character.codePointCount(char,int,int)int
java.lang.Character.offsetByCodePoints(java.lang.CharSequence,int,int)int
java.lang.Character.offsetByCodePoints(char,int,int,int,int)int
java.lang.Character.isLowerCase(char)boolean
java.lang.Character.isLowerCase(int)boolean
java.lang.Character.isUpperCase(char)boolean
java.lang.Character.isUpperCase(int)boolean
java.lang.Character.isTitleCase(char)boolean
java.lang.Character.isTitleCase(int)boolean
java.lang.Character.isDigit(char)boolean
java.lang.Character.isDigit(int)boolean
java.lang.Character.isDefined(char)boolean
java.lang.Character.isDefined(int)boolean
java.lang.Character.isLetter(char)boolean
java.lang.Character.isLetter(int)boolean
java.lang.Character.isLetterOrDigit(char)boolean
java.lang.Character.isLetterOrDigit(int)boolean
java.lang.Character.isJavaLetter(char)boolean
java.lang.Character.isJavaLetterOrDigit(char)boolean
java.lang.Character.isAlphabetic(int)boolean
java.lang.Character.isIdeographic(int)boolean
java.lang.Character.isJavaIdentifierStart(char)boolean
java.lang.Character.isJavaIdentifierStart(int)boolean
java.lang.Character.isJavaIdentifierPart(char)boolean
java.lang.Character.isJavaIdentifierPart(int)boolean
java.lang.Character.isUnicodeIdentifierStart(char)boolean
java.lang.Character.isUnicodeIdentifierStart(int)boolean
java.lang.Character.isUnicodeIdentifierPart(char)boolean
java.lang.Character.isUnicodeIdentifierPart(int)boolean
java.lang.Character.isIdentifierIgnorable(char)boolean
java.lang.Character.isIdentifierIgnorable(int)boolean
java.lang.Character.toLowerCase(char)char
java.lang.Character.toLowerCase(int)int
java.lang.Character.toUpperCase(char)char
java.lang.Character.toUpperCase(int)int
java.lang.Character.toTitleCase(char)char
java.lang.Character.toTitleCase(int)int
java.lang.Character.digit(char,int)int
java.lang.Character.digit(int,int)int
java.lang.Character.getNumericValue(char)int
java.lang.Character.getNumericValue(int)int
java.lang.Character.isSpace(char)boolean
java.lang.Character.isSpaceChar(char)boolean
java.lang.Character.isSpaceChar(int)boolean
java.lang.Character.isWhitespace(char)boolean
java.lang.Character.isWhitespace(int)boolean
java.lang.Character.isISOControl(char)boolean
java.lang.Character.isISOControl(int)boolean
java.lang.Character.getType(char)int
java.lang.Character.getType(int)int
java.lang.Character.forDigit(int,int)char
java.lang.Character.getDirectionality(char)byte
java.lang.Character.getDirectionality(int)byte
java.lang.Character.isMirrored(char)boolean
java.lang.Character.isMirrored(int)boolean
java.lang.Character.compareTo(java.lang.Character)int
java.lang.Character.compare(char,char)int
java.lang.Character.reverseBytes(char)char
java.lang.Character.getName(int)java.lang.String
java.lang.CharSequence.chars)java.util.stream.IntStream
java.lang.CharSequence.codePoints)java.util.stream.IntStream
java.lang.Class.toString)java.lang.String
java.lang.Class.toGenericString)java.lang.String
java.lang.Class.forName(java.lang.String)java.lang.Class
java.lang.Class.forName(java.lang.String,boolean,java.lang.ClassLoader)java.lang.Class
java.lang.Class.isInstance(java.lang.Object)boolean
java.lang.Class.isAssignableFrom(java.lang.Class)boolean
java.lang.Class.isInterface)boolean
java.lang.Class.isArray)boolean
java.lang.Class.isPrimitive)boolean
java.lang.Class.isAnnotation)boolean
java.lang.Class.isSynthetic)boolean
java.lang.Class.getName)java.lang.String
java.lang.Class.getClassLoader)java.lang.ClassLoader
java.lang.Class.getSuperclass)java.lang.Class
java.lang.Class.getGenericSuperclass)java.lang.reflect.Type
java.lang.Class.getPackage)java.lang.Package
java.lang.Class.getComponentType)java.lang.Class
java.lang.Class.getModifiers)int
java.lang.Class.getEnclosingMethod)java.lang.reflect.Method
java.lang.Class.getEnclosingConstructor)java.lang.reflect.Constructor
java.lang.Class.getSimpleName)java.lang.String
java.lang.Class.getTypeName)java.lang.String
java.lang.Class.getCanonicalName)java.lang.String
java.lang.Class.isLocalClass)boolean
java.lang.Class.isMemberClass)boolean
java.lang.Class.getField(java.lang.String)java.lang.reflect.Field
java.lang.Class.getResourceAsStream(java.lang.String)java.io.InputStream
java.lang.Class.getResource(java.lang.String)java.net.URL
java.lang.Class.getProtectionDomain)java.security.ProtectionDomain
java.lang.Class.desiredAssertionStatus)boolean
java.lang.Class.isEnum)boolean
java.lang.Class.cast(java.lang.Object)java.lang.Object
java.lang.Class.asSubclass(java.lang.Class)java.lang.Class
java.lang.Class.getAnnotation(java.lang.Class)java.lang.annotation.Annotation
java.lang.Class.isAnnotationPresent(java.lang.Class)boolean
java.lang.ClassLoader.loadClass(java.lang.String)java.lang.Class
java.lang.ClassLoader.loadClass(java.lang.String,boolean)java.lang.Class
java.lang.ClassLoader.findClass(java.lang.String)java.lang.Class
java.lang.ClassLoader.defineClass(byte,int,int)java.lang.Class
java.lang.ClassLoader.defineClass(java.lang.String,byte,int,int)java.lang.Class
java.lang.ClassLoader.defineClass(java.lang.String,byte,int,int,java.security.ProtectionDomain)java.lang.Class
java.lang.ClassLoader.defineClass(java.lang.String,java.nio.ByteBuffer,java.security.ProtectionDomain)java.lang.Class
java.lang.ClassLoader.resolveClass(java.lang.Class)void
java.lang.ClassLoader.findSystemClass(java.lang.String)java.lang.Class
java.lang.ClassLoader.findLoadedClass(java.lang.String)java.lang.Class
java.lang.ClassLoader.setSigners(java.lang.Class,java.lang.Object)void
java.lang.ClassLoader.getResource(java.lang.String)java.net.URL
java.lang.ClassLoader.getResources(java.lang.String)java.util.Enumeration
java.lang.ClassLoader.findResource(java.lang.String)java.net.URL
java.lang.ClassLoader.findResources(java.lang.String)java.util.Enumeration
java.lang.ClassLoader.registerAsParallelCapable)boolean
java.lang.ClassLoader.getSystemResource(java.lang.String)java.net.URL
java.lang.ClassLoader.getSystemResources(java.lang.String)java.util.Enumeration
java.lang.ClassLoader.getResourceAsStream(java.lang.String)java.io.InputStream
java.lang.ClassLoader.getSystemResourceAsStream(java.lang.String)java.io.InputStream
java.lang.ClassLoader.getParent)java.lang.ClassLoader
java.lang.ClassLoader.getSystemClassLoader)java.lang.ClassLoader
java.lang.ClassLoader.getPackage(java.lang.String)java.lang.Package
java.lang.ClassLoader.findLibrary(java.lang.String)java.lang.String
java.lang.ClassLoader.setDefaultAssertionStatus(boolean)void
java.lang.ClassLoader.setPackageAssertionStatus(java.lang.String,boolean)void
java.lang.ClassLoader.setClassAssertionStatus(java.lang.String,boolean)void
java.lang.ClassLoader.clearAssertionStatus)void
java.lang.ClassNotFoundException.getException)java.lang.Throwable
java.lang.ClassNotFoundException.getCause)java.lang.Throwable
java.lang.Compiler.compileClass(java.lang.Class)boolean
java.lang.Compiler.compileClasses(java.lang.String)boolean
java.lang.Compiler.command(java.lang.Object)java.lang.Object
java.lang.Compiler.enable)void
java.lang.Compiler.disable)void
java.lang.Double.toString(double)java.lang.String
java.lang.Double.toHexString(double)java.lang.String
java.lang.Double.valueOf(java.lang.String)java.lang.Double
java.lang.Double.valueOf(double)java.lang.Double
java.lang.Double.parseDouble(java.lang.String)double
java.lang.Double.isNaN(double)boolean
java.lang.Double.isInfinite(double)boolean
java.lang.Double.isFinite(double)boolean
java.lang.Double.isNaN)boolean
java.lang.Double.isInfinite)boolean
java.lang.Double.toString)java.lang.String
java.lang.Double.byteValue)byte
java.lang.Double.shortValue)short
java.lang.Double.intValue)int
java.lang.Double.longValue)long
java.lang.Double.floatValue)float
java.lang.Double.doubleValue)double
java.lang.Double.hashCode)int
java.lang.Double.hashCode(double)int
java.lang.Double.equals(java.lang.Object)boolean
java.lang.Double.doubleToLongBits(double)long
java.lang.Double.compareTo(java.lang.Double)int
java.lang.Double.compare(double,double)int
java.lang.Double.sum(double,double)double
java.lang.Double.max(double,double)double
java.lang.Double.min(double,double)double
java.lang.Enum.name)java.lang.String
java.lang.Enum.ordinal)int
java.lang.Enum.toString)java.lang.String
java.lang.Enum.equals(java.lang.Object)boolean
java.lang.Enum.hashCode)int
java.lang.Enum.clone)java.lang.Object
java.lang.Enum.compareTo(java.lang.Enum)int
java.lang.Enum.getDeclaringClass)java.lang.Class
java.lang.Enum.valueOf(java.lang.Class,java.lang.String)java.lang.Enum
java.lang.Enum.finalize)void
java.lang.EnumConstantNotPresentException.enumType)java.lang.Class
java.lang.EnumConstantNotPresentException.constantName)java.lang.String
java.lang.ExceptionInInitializerError.getException)java.lang.Throwable
java.lang.ExceptionInInitializerError.getCause)java.lang.Throwable
java.lang.Float.toString(float)java.lang.String
java.lang.Float.toHexString(float)java.lang.String
java.lang.Float.valueOf(java.lang.String)java.lang.Float
java.lang.Float.valueOf(float)java.lang.Float
java.lang.Float.parseFloat(java.lang.String)float
java.lang.Float.isNaN(float)boolean
java.lang.Float.isInfinite(float)boolean
java.lang.Float.isFinite(float)boolean
java.lang.Float.isNaN)boolean
java.lang.Float.isInfinite)boolean
java.lang.Float.toString)java.lang.String
java.lang.Float.byteValue)byte
java.lang.Float.shortValue)short
java.lang.Float.intValue)int
java.lang.Float.longValue)long
java.lang.Float.floatValue)float
java.lang.Float.doubleValue)double
java.lang.Float.hashCode)int
java.lang.Float.hashCode(float)int
java.lang.Float.equals(java.lang.Object)boolean
java.lang.Float.floatToIntBits(float)int
java.lang.Float.compareTo(java.lang.Float)int
java.lang.Float.compare(float,float)int
java.lang.Float.sum(float,float)float
java.lang.Float.max(float,float)float
java.lang.Float.min(float,float)float
java.lang.InheritableThreadLocal.childValue(java.lang.Object)java.lang.Object
java.lang.Integer.toString(int,int)java.lang.String
java.lang.Integer.toUnsignedString(int,int)java.lang.String
java.lang.Integer.toHexString(int)java.lang.String
java.lang.Integer.toOctalString(int)java.lang.String
java.lang.Integer.toBinaryString(int)java.lang.String
java.lang.Integer.toString(int)java.lang.String
java.lang.Integer.toUnsignedString(int)java.lang.String
java.lang.Integer.parseInt(java.lang.String,int)int
java.lang.Integer.parseInt(java.lang.String)int
java.lang.Integer.parseUnsignedInt(java.lang.String,int)int
java.lang.Integer.parseUnsignedInt(java.lang.String)int
java.lang.Integer.valueOf(java.lang.String,int)java.lang.Integer
java.lang.Integer.valueOf(java.lang.String)java.lang.Integer
java.lang.Integer.valueOf(int)java.lang.Integer
java.lang.Integer.byteValue)byte
java.lang.Integer.shortValue)short
java.lang.Integer.intValue)int
java.lang.Integer.longValue)long
java.lang.Integer.floatValue)float
java.lang.Integer.doubleValue)double
java.lang.Integer.toString)java.lang.String
java.lang.Integer.hashCode)int
java.lang.Integer.hashCode(int)int
java.lang.Integer.equals(java.lang.Object)boolean
java.lang.Integer.getInteger(java.lang.String)java.lang.Integer
java.lang.Integer.getInteger(java.lang.String,int)java.lang.Integer
java.lang.Integer.getInteger(java.lang.String,java.lang.Integer)java.lang.Integer
java.lang.Integer.decode(java.lang.String)java.lang.Integer
java.lang.Integer.compareTo(java.lang.Integer)int
java.lang.Integer.compare(int,int)int
java.lang.Integer.compareUnsigned(int,int)int
java.lang.Integer.toUnsignedLong(int)long
java.lang.Integer.divideUnsigned(int,int)int
java.lang.Integer.remainderUnsigned(int,int)int
java.lang.Integer.highestOneBit(int)int
java.lang.Integer.lowestOneBit(int)int
java.lang.Integer.numberOfLeadingZeros(int)int
java.lang.Integer.numberOfTrailingZeros(int)int
java.lang.Integer.bitCount(int)int
java.lang.Integer.rotateLeft(int,int)int
java.lang.Integer.rotateRight(int,int)int
java.lang.Integer.reverse(int)int
java.lang.Integer.signum(int)int
java.lang.Integer.reverseBytes(int)int
java.lang.Integer.sum(int,int)int
java.lang.Integer.max(int,int)int
java.lang.Integer.min(int,int)int
java.lang.Iterable.forEach(java.util.function.Consumer)void
java.lang.Iterable.spliterator)java.util.Spliterator
java.lang.Long.toString(long,int)java.lang.String
java.lang.Long.toUnsignedString(long,int)java.lang.String
java.lang.Long.toHexString(long)java.lang.String
java.lang.Long.toOctalString(long)java.lang.String
java.lang.Long.toBinaryString(long)java.lang.String
java.lang.Long.toString(long)java.lang.String
java.lang.Long.toUnsignedString(long)java.lang.String
java.lang.Long.parseLong(java.lang.String,int)long
java.lang.Long.parseLong(java.lang.String)long
java.lang.Long.parseUnsignedLong(java.lang.String,int)long
java.lang.Long.parseUnsignedLong(java.lang.String)long
java.lang.Long.valueOf(java.lang.String,int)java.lang.Long
java.lang.Long.valueOf(java.lang.String)java.lang.Long
java.lang.Long.valueOf(long)java.lang.Long
java.lang.Long.decode(java.lang.String)java.lang.Long
java.lang.Long.byteValue)byte
java.lang.Long.shortValue)short
java.lang.Long.intValue)int
java.lang.Long.longValue)long
java.lang.Long.floatValue)float
java.lang.Long.doubleValue)double
java.lang.Long.toString)java.lang.String
java.lang.Long.hashCode)int
java.lang.Long.hashCode(long)int
java.lang.Long.equals(java.lang.Object)boolean
java.lang.Long.getLong(java.lang.String)java.lang.Long
java.lang.Long.getLong(java.lang.String,long)java.lang.Long
java.lang.Long.getLong(java.lang.String,java.lang.Long)java.lang.Long
java.lang.Long.compareTo(java.lang.Long)int
java.lang.Long.compare(long,long)int
java.lang.Long.compareUnsigned(long,long)int
java.lang.Long.divideUnsigned(long,long)long
java.lang.Long.remainderUnsigned(long,long)long
java.lang.Long.highestOneBit(long)long
java.lang.Long.lowestOneBit(long)long
java.lang.Long.numberOfLeadingZeros(long)int
java.lang.Long.numberOfTrailingZeros(long)int
java.lang.Long.bitCount(long)int
java.lang.Long.rotateLeft(long,int)long
java.lang.Long.rotateRight(long,int)long
java.lang.Long.reverse(long)long
java.lang.Long.signum(long)int
java.lang.Long.reverseBytes(long)long
java.lang.Long.sum(long,long)long
java.lang.Long.max(long,long)long
java.lang.Long.min(long,long)long
java.lang.Math.toRadians(double)double
java.lang.Math.toDegrees(double)double
java.lang.Math.round(float)int
java.lang.Math.round(double)long
java.lang.Math.random)double
java.lang.Math.addExact(int,int)int
java.lang.Math.addExact(long,long)long
java.lang.Math.subtractExact(int,int)int
java.lang.Math.subtractExact(long,long)long
java.lang.Math.multiplyExact(int,int)int
java.lang.Math.multiplyExact(long,long)long
java.lang.Math.incrementExact(int)int
java.lang.Math.incrementExact(long)long
java.lang.Math.decrementExact(int)int
java.lang.Math.decrementExact(long)long
java.lang.Math.negateExact(int)int
java.lang.Math.negateExact(long)long
java.lang.Math.toIntExact(long)int
java.lang.Math.floorDiv(int,int)int
java.lang.Math.floorDiv(long,long)long
java.lang.Math.floorMod(int,int)int
java.lang.Math.floorMod(long,long)long
java.lang.Math.abs(int)int
java.lang.Math.abs(long)long
java.lang.Math.abs(float)float
java.lang.Math.abs(double)double
java.lang.Math.max(int,int)int
java.lang.Math.max(long,long)long
java.lang.Math.max(float,float)float
java.lang.Math.max(double,double)double
java.lang.Math.min(int,int)int
java.lang.Math.min(long,long)long
java.lang.Math.min(float,float)float
java.lang.Math.min(double,double)double
java.lang.Math.ulp(double)double
java.lang.Math.ulp(float)float
java.lang.Math.signum(double)double
java.lang.Math.signum(float)float
java.lang.Math.copySign(double,double)double
java.lang.Math.copySign(float,float)float
java.lang.Math.getExponent(float)int
java.lang.Math.getExponent(double)int
java.lang.Math.nextAfter(double,double)double
java.lang.Math.nextAfter(float,double)float
java.lang.Math.nextUp(double)double
java.lang.Math.nextUp(float)float
java.lang.Math.nextDown(double)double
java.lang.Math.nextDown(float)float
java.lang.Math.scalb(double,int)double
java.lang.Math.scalb(float,int)float
java.lang.Number.byteValue)byte
java.lang.Number.shortValue)short
java.lang.Object.getClass)java.lang.Class
java.lang.Object.hashCode)int
java.lang.Object.equals(java.lang.Object)boolean
java.lang.Object.clone)java.lang.Object
java.lang.Object.toString)java.lang.String
java.lang.Object.wait(long)void
java.lang.Object.wait)void
java.lang.Object.finalize)void
java.lang.Package.getName)java.lang.String
java.lang.Package.getSpecificationTitle)java.lang.String
java.lang.Package.getSpecificationVersion)java.lang.String
java.lang.Package.getSpecificationVendor)java.lang.String
java.lang.Package.getImplementationTitle)java.lang.String
java.lang.Package.getImplementationVersion)java.lang.String
java.lang.Package.getImplementationVendor)java.lang.String
java.lang.Package.isSealed)boolean
java.lang.Package.isSealed(java.net.URL)boolean
java.lang.Package.isCompatibleWith(java.lang.String)boolean
java.lang.Package.getPackage(java.lang.String)java.lang.Package
java.lang.Package.hashCode)int
java.lang.Package.toString)java.lang.String
java.lang.Package.getAnnotation(java.lang.Class)java.lang.annotation.Annotation
java.lang.Package.isAnnotationPresent(java.lang.Class)boolean
java.lang.Package.getDeclaredAnnotation(java.lang.Class)java.lang.annotation.Annotation
java.lang.Process.waitFor)int
java.lang.Process.waitFor(long,java.util.concurrent.TimeUnit)boolean
java.lang.Process.destroyForcibly)java.lang.Process
java.lang.Process.isAlive)boolean
java.lang.ProcessBuilder.valueOf(java.lang.String)java.lang.reflect.Type
java.lang.ProcessBuilder.file)java.io.File
java.lang.ProcessBuilder.from(java.io.File)Redirect
java.lang.ProcessBuilder.to(java.io.File)Redirect
java.lang.ProcessBuilder.appendTo(java.io.File)Redirect
java.lang.ProcessBuilder.equals(java.lang.Object)boolean
java.lang.ProcessBuilder.hashCode)int
java.lang.ProcessBuilder.ProcessBuilder(java.lang.String)transient
java.lang.ProcessBuilder.command(java.util.List)java.lang.ProcessBuilder
java.lang.ProcessBuilder.command)java.util.List
java.lang.ProcessBuilder.environment)java.util.Map
java.lang.ProcessBuilder.directory)java.io.File
java.lang.ProcessBuilder.directory(java.io.File)java.lang.ProcessBuilder
java.lang.ProcessBuilder.redirectInput(Redirect)java.lang.ProcessBuilder
java.lang.ProcessBuilder.redirectOutput(Redirect)java.lang.ProcessBuilder
java.lang.ProcessBuilder.redirectError(Redirect)java.lang.ProcessBuilder
java.lang.ProcessBuilder.redirectInput(java.io.File)java.lang.ProcessBuilder
java.lang.ProcessBuilder.redirectOutput(java.io.File)java.lang.ProcessBuilder
java.lang.ProcessBuilder.redirectError(java.io.File)java.lang.ProcessBuilder
java.lang.ProcessBuilder.redirectInput)Redirect
java.lang.ProcessBuilder.redirectOutput)Redirect
java.lang.ProcessBuilder.redirectError)Redirect
java.lang.ProcessBuilder.inheritIO)java.lang.ProcessBuilder
java.lang.ProcessBuilder.redirectErrorStream)boolean
java.lang.ProcessBuilder.redirectErrorStream(boolean)java.lang.ProcessBuilder
java.lang.ProcessBuilder.start)java.lang.Process
java.lang.Readable.read(java.nio.CharBuffer)int
java.lang.Runtime.getRuntime)java.lang.Runtime
java.lang.Runtime.exit(int)void
java.lang.Runtime.addShutdownHook(java.lang.Thread)void
java.lang.Runtime.removeShutdownHook(java.lang.Thread)boolean
java.lang.Runtime.halt(int)void
java.lang.Runtime.runFinalizersOnExit(boolean)void
java.lang.Runtime.exec(java.lang.String)java.lang.Process
java.lang.Runtime.exec(java.lang.String,java.lang.String)java.lang.Process
java.lang.Runtime.exec(java.lang.String,java.lang.String,File)java.lang.Process
java.lang.Runtime.exec(java.lang.String)java.lang.Process
java.lang.Runtime.exec(java.lang.String,java.lang.String)java.lang.Process
java.lang.Runtime.exec(java.lang.String,java.lang.String,File)java.lang.Process
java.lang.Runtime.availableProcessors)int
java.lang.Runtime.gc)void
java.lang.Runtime.runFinalization)void
java.lang.Runtime.traceInstructions(boolean)void
java.lang.Runtime.traceMethodCalls(boolean)void
java.lang.Runtime.load(java.lang.String)void
java.lang.Runtime.loadLibrary(java.lang.String)void
java.lang.Runtime.getLocalizedInputStream(InputStream)InputStream
java.lang.Runtime.getLocalizedOutputStream(OutputStream)OutputStream
java.lang.SecurityManager.getInCheck)boolean
java.lang.SecurityManager.currentClassLoader)java.lang.ClassLoader
java.lang.SecurityManager.currentLoadedClass)java.lang.Class
java.lang.SecurityManager.classDepth(java.lang.String)int
java.lang.SecurityManager.classLoaderDepth)int
java.lang.SecurityManager.inClass(java.lang.String)boolean
java.lang.SecurityManager.inClassLoader)boolean
java.lang.SecurityManager.getSecurityContext)java.lang.Object
java.lang.SecurityManager.checkPermission(java.security.Permission)void
java.lang.SecurityManager.checkPermission(java.security.Permission,java.lang.Object)void
java.lang.SecurityManager.checkCreateClassLoader)void
java.lang.SecurityManager.checkAccess(java.lang.Thread)void
java.lang.SecurityManager.checkAccess(java.lang.ThreadGroup)void
java.lang.SecurityManager.checkExit(int)void
java.lang.SecurityManager.checkExec(java.lang.String)void
java.lang.SecurityManager.checkLink(java.lang.String)void
java.lang.SecurityManager.checkRead(java.io.FileDescriptor)void
java.lang.SecurityManager.checkRead(java.lang.String)void
java.lang.SecurityManager.checkRead(java.lang.String,java.lang.Object)void
java.lang.SecurityManager.checkWrite(java.io.FileDescriptor)void
java.lang.SecurityManager.checkWrite(java.lang.String)void
java.lang.SecurityManager.checkDelete(java.lang.String)void
java.lang.SecurityManager.checkConnect(java.lang.String,int)void
java.lang.SecurityManager.checkConnect(java.lang.String,int,java.lang.Object)void
java.lang.SecurityManager.checkListen(int)void
java.lang.SecurityManager.checkAccept(java.lang.String,int)void
java.lang.SecurityManager.checkMulticast(java.net.InetAddress)void
java.lang.SecurityManager.checkMulticast(java.net.InetAddress,byte)void
java.lang.SecurityManager.checkPropertiesAccess)void
java.lang.SecurityManager.checkPropertyAccess(java.lang.String)void
java.lang.SecurityManager.checkTopLevelWindow(java.lang.Object)boolean
java.lang.SecurityManager.checkPrintJobAccess)void
java.lang.SecurityManager.checkSystemClipboardAccess)void
java.lang.SecurityManager.checkAwtEventQueueAccess)void
java.lang.SecurityManager.checkPackageAccess(java.lang.String)void
java.lang.SecurityManager.checkPackageDefinition(java.lang.String)void
java.lang.SecurityManager.checkSetFactory)void
java.lang.SecurityManager.checkMemberAccess(java.lang.Class,int)void
java.lang.SecurityManager.checkSecurityAccess(java.lang.String)void
java.lang.SecurityManager.getThreadGroup)java.lang.ThreadGroup
java.lang.Short.toString(short)java.lang.String
java.lang.Short.parseShort(java.lang.String,int)short
java.lang.Short.parseShort(java.lang.String)short
java.lang.Short.valueOf(java.lang.String,int)java.lang.Short
java.lang.Short.valueOf(java.lang.String)java.lang.Short
java.lang.Short.valueOf(short)java.lang.Short
java.lang.Short.decode(java.lang.String)java.lang.Short
java.lang.Short.byteValue)byte
java.lang.Short.shortValue)short
java.lang.Short.intValue)int
java.lang.Short.longValue)long
java.lang.Short.floatValue)float
java.lang.Short.doubleValue)double
java.lang.Short.toString)java.lang.String
java.lang.Short.hashCode)int
java.lang.Short.hashCode(short)int
java.lang.Short.equals(java.lang.Object)boolean
java.lang.Short.compareTo(java.lang.Short)int
java.lang.Short.compare(short,short)int
java.lang.Short.reverseBytes(short)short
java.lang.Short.toUnsignedInt(short)int
java.lang.Short.toUnsignedLong(short)long
java.lang.StackTraceElement.getFileName)java.lang.String
java.lang.StackTraceElement.getLineNumber)int
java.lang.StackTraceElement.getClassName)java.lang.String
java.lang.StackTraceElement.getMethodName)java.lang.String
java.lang.StackTraceElement.isNativeMethod)boolean
java.lang.StackTraceElement.toString)java.lang.String
java.lang.StackTraceElement.equals(java.lang.Object)boolean
java.lang.StackTraceElement.hashCode)int
java.lang.StrictMath.toRadians(double)double
java.lang.StrictMath.toDegrees(double)double
java.lang.StrictMath.ceil(double)double
java.lang.StrictMath.floor(double)double
java.lang.StrictMath.rint(double)double
java.lang.StrictMath.round(float)int
java.lang.StrictMath.round(double)long
java.lang.StrictMath.random)double
java.lang.StrictMath.addExact(int,int)int
java.lang.StrictMath.addExact(long,long)long
java.lang.StrictMath.subtractExact(int,int)int
java.lang.StrictMath.subtractExact(long,long)long
java.lang.StrictMath.multiplyExact(int,int)int
java.lang.StrictMath.multiplyExact(long,long)long
java.lang.StrictMath.toIntExact(long)int
java.lang.StrictMath.floorDiv(int,int)int
java.lang.StrictMath.floorDiv(long,long)long
java.lang.StrictMath.floorMod(int,int)int
java.lang.StrictMath.floorMod(long,long)long
java.lang.StrictMath.abs(int)int
java.lang.StrictMath.abs(long)long
java.lang.StrictMath.abs(float)float
java.lang.StrictMath.abs(double)double
java.lang.StrictMath.max(int,int)int
java.lang.StrictMath.max(long,long)long
java.lang.StrictMath.max(float,float)float
java.lang.StrictMath.max(double,double)double
java.lang.StrictMath.min(int,int)int
java.lang.StrictMath.min(long,long)long
java.lang.StrictMath.min(float,float)float
java.lang.StrictMath.min(double,double)double
java.lang.StrictMath.ulp(double)double
java.lang.StrictMath.ulp(float)float
java.lang.StrictMath.signum(double)double
java.lang.StrictMath.signum(float)float
java.lang.StrictMath.copySign(double,double)double
java.lang.StrictMath.copySign(float,float)float
java.lang.StrictMath.getExponent(float)int
java.lang.StrictMath.getExponent(double)int
java.lang.StrictMath.nextAfter(double,double)double
java.lang.StrictMath.nextAfter(float,double)float
java.lang.StrictMath.nextUp(double)double
java.lang.StrictMath.nextUp(float)float
java.lang.StrictMath.nextDown(double)double
java.lang.StrictMath.nextDown(float)float
java.lang.StrictMath.scalb(double,int)double
java.lang.StrictMath.scalb(float,int)float
java.lang.String.length)int
java.lang.String.isEmpty)boolean
java.lang.String.codePointAt(int)int
java.lang.String.codePointBefore(int)int
java.lang.String.codePointCount(int,int)int
java.lang.String.offsetByCodePoints(int,int)int
java.lang.String.getChars(int,int,char,int)void
java.lang.String.getBytes(int,int,byte,int)void
java.lang.String.equals(java.lang.Object)boolean
java.lang.String.contentEquals(java.lang.StringBuffer)boolean
java.lang.String.contentEquals(java.lang.CharSequence)boolean
java.lang.String.equalsIgnoreCase(java.lang.String)boolean
java.lang.String.compareToIgnoreCase(java.lang.String)int
java.lang.String.regionMatches(int,java.lang.String,int,int)boolean
java.lang.String.regionMatches(boolean,int,java.lang.String,int,int)boolean
java.lang.String.startsWith(java.lang.String,int)boolean
java.lang.String.startsWith(java.lang.String)boolean
java.lang.String.endsWith(java.lang.String)boolean
java.lang.String.hashCode)int
java.lang.String.indexOf(int)int
java.lang.String.indexOf(int,int)int
java.lang.String.lastIndexOf(int)int
java.lang.String.lastIndexOf(int,int)int
java.lang.String.indexOf(java.lang.String)int
java.lang.String.indexOf(java.lang.String,int)int
java.lang.String.lastIndexOf(java.lang.String)int
java.lang.String.lastIndexOf(java.lang.String,int)int
java.lang.String.substring(int)java.lang.String
java.lang.String.substring(int,int)java.lang.String
java.lang.String.subSequence(int,int)java.lang.CharSequence
java.lang.String.replace(char,char)java.lang.String
java.lang.String.matches(java.lang.String)boolean
java.lang.String.contains(java.lang.CharSequence)boolean
java.lang.String.replaceFirst(java.lang.String,java.lang.String)java.lang.String
java.lang.String.replaceAll(java.lang.String,java.lang.String)java.lang.String
java.lang.String.replace(java.lang.CharSequence,java.lang.CharSequence)java.lang.String
java.lang.String.join(java.lang.CharSequence,java.lang.Iterable)java.lang.String
java.lang.String.toLowerCase(java.util.Locale)java.lang.String
java.lang.String.toLowerCase)java.lang.String
java.lang.String.toUpperCase(java.util.Locale)java.lang.String
java.lang.String.toUpperCase)java.lang.String
java.lang.String.trim)java.lang.String
java.lang.String.toString)java.lang.String
java.lang.String.valueOf(java.lang.Object)java.lang.String
java.lang.String.valueOf(char)java.lang.String
java.lang.String.valueOf(char,int,int)java.lang.String
java.lang.String.copyValueOf(char,int,int)java.lang.String
java.lang.String.copyValueOf(char)java.lang.String
java.lang.String.valueOf(boolean)java.lang.String
java.lang.String.valueOf(char)java.lang.String
java.lang.String.valueOf(int)java.lang.String
java.lang.String.valueOf(long)java.lang.String
java.lang.String.valueOf(float)java.lang.String
java.lang.String.valueOf(double)java.lang.String
java.lang.StringBuffer.insert(int,java.lang.CharSequence)java.lang.StringBuffer
java.lang.StringBuffer.insert(int,boolean)java.lang.StringBuffer
java.lang.StringBuffer.insert(int,int)java.lang.StringBuffer
java.lang.StringBuffer.insert(int,long)java.lang.StringBuffer
java.lang.StringBuffer.insert(int,float)java.lang.StringBuffer
java.lang.StringBuffer.insert(int,double)java.lang.StringBuffer
java.lang.StringBuffer.indexOf(java.lang.String)int
java.lang.StringBuffer.lastIndexOf(java.lang.String)int
java.lang.StringBuilder.append(java.lang.Object)java.lang.StringBuilder
java.lang.StringBuilder.append(java.lang.String)java.lang.StringBuilder
java.lang.StringBuilder.append(java.lang.StringBuffer)java.lang.StringBuilder
java.lang.StringBuilder.append(java.lang.CharSequence)java.lang.StringBuilder
java.lang.StringBuilder.append(java.lang.CharSequence,int,int)java.lang.StringBuilder
java.lang.StringBuilder.append(char)java.lang.StringBuilder
java.lang.StringBuilder.append(char,int,int)java.lang.StringBuilder
java.lang.StringBuilder.append(boolean)java.lang.StringBuilder
java.lang.StringBuilder.append(char)java.lang.StringBuilder
java.lang.StringBuilder.append(int)java.lang.StringBuilder
java.lang.StringBuilder.append(long)java.lang.StringBuilder
java.lang.StringBuilder.append(float)java.lang.StringBuilder
java.lang.StringBuilder.append(double)java.lang.StringBuilder
java.lang.StringBuilder.appendCodePoint(int)java.lang.StringBuilder
java.lang.StringBuilder.delete(int,int)java.lang.StringBuilder
java.lang.StringBuilder.deleteCharAt(int)java.lang.StringBuilder
java.lang.StringBuilder.replace(int,int,java.lang.String)java.lang.StringBuilder
java.lang.StringBuilder.insert(int,char,int,int)java.lang.StringBuilder
java.lang.StringBuilder.insert(int,java.lang.Object)java.lang.StringBuilder
java.lang.StringBuilder.insert(int,java.lang.String)java.lang.StringBuilder
java.lang.StringBuilder.insert(int,char)java.lang.StringBuilder
java.lang.StringBuilder.insert(int,java.lang.CharSequence)java.lang.StringBuilder
java.lang.StringBuilder.insert(int,java.lang.CharSequence,int,int)java.lang.StringBuilder
java.lang.StringBuilder.insert(int,boolean)java.lang.StringBuilder
java.lang.StringBuilder.insert(int,char)java.lang.StringBuilder
java.lang.StringBuilder.insert(int,int)java.lang.StringBuilder
java.lang.StringBuilder.insert(int,long)java.lang.StringBuilder
java.lang.StringBuilder.insert(int,float)java.lang.StringBuilder
java.lang.StringBuilder.insert(int,double)java.lang.StringBuilder
java.lang.StringBuilder.indexOf(java.lang.String)int
java.lang.StringBuilder.indexOf(java.lang.String,int)int
java.lang.StringBuilder.lastIndexOf(java.lang.String)int
java.lang.StringBuilder.lastIndexOf(java.lang.String,int)int
java.lang.StringBuilder.reverse)java.lang.StringBuilder
java.lang.StringBuilder.toString)java.lang.String
java.lang.StringBuilder.trimToSize)void
java.lang.StringBuilder.codePointAt(int)int
java.lang.StringBuilder.getChars(int,int,char,int)void
java.lang.StringBuilder.length)int
java.lang.StringBuilder.setCharAt(int,char)void
java.lang.StringBuilder.subSequence(int,int)java.lang.CharSequence
java.lang.StringBuilder.substring(int)java.lang.String
java.lang.StringBuilder.substring(int,int)java.lang.String
java.lang.StringBuilder.capacity)int
java.lang.StringBuilder.setLength(int)void
java.lang.StringBuilder.ensureCapacity(int)void
java.lang.StringBuilder.codePointBefore(int)int
java.lang.StringBuilder.charAt(int)char
java.lang.StringBuilder.codePointCount(int,int)int
java.lang.StringBuilder.offsetByCodePoints(int,int)int
java.lang.System.setIn(InputStream)void
java.lang.System.setOut(PrintStream)void
java.lang.System.setErr(PrintStream)void
java.lang.System.console)Console
java.lang.System.inheritedChannel)java.nio.channels.Channel
java.lang.System.setSecurityManager(java.lang.SecurityManager)void
java.lang.System.getSecurityManager)java.lang.SecurityManager
java.lang.System.identityHashCode(java.lang.Object)int
java.lang.System.getProperties)java.util.Properties
java.lang.System.lineSeparator)java.lang.String
java.lang.System.setProperties(java.util.Properties)void
java.lang.System.getProperty(java.lang.String)java.lang.String
java.lang.System.getProperty(java.lang.String,java.lang.String)java.lang.String
java.lang.System.setProperty(java.lang.String,java.lang.String)java.lang.String
java.lang.System.clearProperty(java.lang.String)java.lang.String
java.lang.System.getenv(java.lang.String)java.lang.String
java.lang.System.getenv)java.util.Map
java.lang.System.exit(int)void
java.lang.System.gc)void
java.lang.System.runFinalization)void
java.lang.System.runFinalizersOnExit(boolean)void
java.lang.System.load(java.lang.String)void
java.lang.System.loadLibrary(java.lang.String)void
java.lang.Thread.valueOf(java.lang.String)State
java.lang.Thread.sleep(long)void
java.lang.Thread.sleep(long,int)void
java.lang.Thread.clone)java.lang.Object
java.lang.Thread.run)void
java.lang.Thread.stop)void
java.lang.Thread.interrupt)void
java.lang.Thread.destroy)void
java.lang.Thread.isAlive)boolean
java.lang.Thread.suspend)void
java.lang.Thread.resume)void
java.lang.Thread.setPriority(int)void
java.lang.Thread.getPriority)int
java.lang.Thread.getName)java.lang.String
java.lang.Thread.getThreadGroup)java.lang.ThreadGroup
java.lang.Thread.activeCount)int
java.lang.Thread.enumerate(java.lang.Thread)int
java.lang.Thread.countStackFrames)int
java.lang.Thread.join(long)void
java.lang.Thread.join(long,int)void
java.lang.Thread.join)void
java.lang.Thread.dumpStack)void
java.lang.Thread.setDaemon(boolean)void
java.lang.Thread.isDaemon)boolean
java.lang.Thread.checkAccess)void
java.lang.Thread.toString)java.lang.String
java.lang.Thread.getContextClassLoader)java.lang.ClassLoader
java.lang.Thread.setContextClassLoader(java.lang.ClassLoader)void
java.lang.Thread.getAllStackTraces)java.util.Map
java.lang.Thread.getId)long
java.lang.Thread.getState)State
java.lang.Thread.setDefaultUncaughtExceptionHandler(java.lang.Thread.UncaughtExceptionHandler)void
java.lang.Thread.getDefaultUncaughtExceptionHandler)java.lang.Thread.UncaughtExceptionHandler
java.lang.Thread.getUncaughtExceptionHandler)java.lang.Thread.UncaughtExceptionHandler
java.lang.Thread.setUncaughtExceptionHandler(java.lang.Thread.UncaughtExceptionHandler)void
java.lang.ThreadGroup.getName)java.lang.String
java.lang.ThreadGroup.getParent)java.lang.ThreadGroup
java.lang.ThreadGroup.getMaxPriority)int
java.lang.ThreadGroup.isDaemon)boolean
java.lang.ThreadGroup.setDaemon(boolean)void
java.lang.ThreadGroup.setMaxPriority(int)void
java.lang.ThreadGroup.parentOf(java.lang.ThreadGroup)boolean
java.lang.ThreadGroup.checkAccess)void
java.lang.ThreadGroup.activeCount)int
java.lang.ThreadGroup.enumerate(java.lang.Thread)int
java.lang.ThreadGroup.enumerate(java.lang.Thread,boolean)int
java.lang.ThreadGroup.activeGroupCount)int
java.lang.ThreadGroup.enumerate(java.lang.ThreadGroup)int
java.lang.ThreadGroup.enumerate(java.lang.ThreadGroup,boolean)int
java.lang.ThreadGroup.stop)void
java.lang.ThreadGroup.interrupt)void
java.lang.ThreadGroup.suspend)void
java.lang.ThreadGroup.resume)void
java.lang.ThreadGroup.destroy)void
java.lang.ThreadGroup.list)void
java.lang.ThreadGroup.uncaughtException(java.lang.Thread,java.lang.Throwable)void
java.lang.ThreadGroup.allowThreadSuspension(boolean)boolean
java.lang.ThreadGroup.toString)java.lang.String
java.lang.ThreadLocal.initialValue)java.lang.Object
java.lang.ThreadLocal.withInitial(java.util.function.Supplier)java.lang.ThreadLocal
java.lang.ThreadLocal.get)java.lang.Object
java.lang.ThreadLocal.set(java.lang.Object)void
java.lang.ThreadLocal.remove)void
java.lang.Throwable.getMessage)java.lang.String
java.lang.Throwable.getLocalizedMessage)java.lang.String
java.lang.Throwable.toString)java.lang.String
java.lang.Throwable.printStackTrace)void
java.lang.Throwable.printStackTrace(PrintStream)void
java.lang.Throwable.printStackTrace(PrintWriter)void
java.lang.Throwable.setStackTrace(java.lang.StackTraceElement)void
java.lang.TypeNotPresentException.typeName)java.lang.String
java.lang.annotation.AnnotationTypeMismatchException.element)java.lang.reflect.Method
java.lang.annotation.AnnotationTypeMismatchException.foundType)String
java.lang.annotation.ElementType.valueOf(String)java.lang.annotation.ElementType
java.lang.annotation.IncompleteAnnotationException.annotationType)Class
java.lang.annotation.IncompleteAnnotationException.elementName)String
java.lang.annotation.RetentionPolicy.valueOf(String)java.lang.annotation.RetentionPolicy
java.lang.invoke.CallSite.type)java.lang.invoke.MethodType
java.lang.invoke.ConstantCallSite.getTarget)java.lang.invoke.MethodHandle
java.lang.invoke.ConstantCallSite.setTarget(java.lang.invoke.MethodHandle)void
java.lang.invoke.ConstantCallSite.dynamicInvoker)java.lang.invoke.MethodHandle
java.lang.invoke.MethodHandle.type)java.lang.invoke.MethodType
java.lang.invoke.MethodHandle.invokeWithArguments(java.util.List)Object
java.lang.invoke.MethodHandle.asType(java.lang.invoke.MethodType)java.lang.invoke.MethodHandle
java.lang.invoke.MethodHandle.asSpreader(Class,int)java.lang.invoke.MethodHandle
java.lang.invoke.MethodHandle.asCollector(Class,int)java.lang.invoke.MethodHandle
java.lang.invoke.MethodHandle.asVarargsCollector(Class)java.lang.invoke.MethodHandle
java.lang.invoke.MethodHandle.isVarargsCollector)boolean
java.lang.invoke.MethodHandle.asFixedArity)java.lang.invoke.MethodHandle
java.lang.invoke.MethodHandle.bindTo(Object)java.lang.invoke.MethodHandle
java.lang.invoke.MethodHandle.toString)String
java.lang.invoke.MethodHandleInfo.isVarArgs)boolean
java.lang.invoke.MethodHandleInfo.referenceKindToString(int)String
java.lang.invoke.MethodHandleInfo.toString(int,Class,String,java.lang.invoke.MethodType)String
java.lang.invoke.MethodHandleInfo.refKindIsValid(int)boolean
java.lang.invoke.MethodHandleInfo.refKindIsField(int)boolean
java.lang.invoke.MethodHandleInfo.refKindName(int)String
java.lang.invoke.MethodHandles.lookupClass)Class
java.lang.invoke.MethodHandles.lookupModes)int
java.lang.invoke.MethodHandles.in(Class)Lookup
java.lang.invoke.MethodHandles.toString)String
java.lang.invoke.MethodHandles.findStatic(Class,String,java.lang.invoke.MethodType)java.lang.invoke.MethodHandle
java.lang.invoke.MethodHandles.findVirtual(Class,String,java.lang.invoke.MethodType)java.lang.invoke.MethodHandle
java.lang.invoke.MethodHandles.findConstructor(Class,java.lang.invoke.MethodType)java.lang.invoke.MethodHandle
java.lang.invoke.MethodHandles.findSpecial(Class,String,java.lang.invoke.MethodType,Class)java.lang.invoke.MethodHandle
java.lang.invoke.MethodHandles.findGetter(Class,String,Class)java.lang.invoke.MethodHandle
java.lang.invoke.MethodHandles.findSetter(Class,String,Class)java.lang.invoke.MethodHandle
java.lang.invoke.MethodHandles.findStaticGetter(Class,String,Class)java.lang.invoke.MethodHandle
java.lang.invoke.MethodHandles.findStaticSetter(Class,String,Class)java.lang.invoke.MethodHandle
java.lang.invoke.MethodHandles.bind(Object,String,java.lang.invoke.MethodType)java.lang.invoke.MethodHandle
java.lang.invoke.MethodHandles.unreflect(Method)java.lang.invoke.MethodHandle
java.lang.invoke.MethodHandles.unreflectSpecial(Method,Class)java.lang.invoke.MethodHandle
java.lang.invoke.MethodHandles.unreflectConstructor(Constructor)java.lang.invoke.MethodHandle
java.lang.invoke.MethodHandles.unreflectGetter(Field)java.lang.invoke.MethodHandle
java.lang.invoke.MethodHandles.unreflectSetter(Field)java.lang.invoke.MethodHandle
java.lang.invoke.MethodHandles.revealDirect(java.lang.invoke.MethodHandle)java.lang.invoke.MethodHandleInfo
java.lang.invoke.MethodHandles.lookup)Lookup
java.lang.invoke.MethodHandles.publicLookup)Lookup
java.lang.invoke.MethodHandles.reflectAs(Class,java.lang.invoke.MethodHandle)Member
java.lang.invoke.MethodHandles.arrayElementGetter(Class)java.lang.invoke.MethodHandle
java.lang.invoke.MethodHandles.arrayElementSetter(Class)java.lang.invoke.MethodHandle
java.lang.invoke.MethodHandles.spreadInvoker(java.lang.invoke.MethodType,int)java.lang.invoke.MethodHandle
java.lang.invoke.MethodHandles.exactInvoker(java.lang.invoke.MethodType)java.lang.invoke.MethodHandle
java.lang.invoke.MethodHandles.invoker(java.lang.invoke.MethodType)java.lang.invoke.MethodHandle
java.lang.invoke.MethodHandles.explicitCastArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)java.lang.invoke.MethodHandle
java.lang.invoke.MethodHandles.constant(Class,Object)java.lang.invoke.MethodHandle
java.lang.invoke.MethodHandles.identity(Class)java.lang.invoke.MethodHandle
java.lang.invoke.MethodHandles.dropArguments(java.lang.invoke.MethodHandle,int,java.util.List)java.lang.invoke.MethodHandle
java.lang.invoke.MethodHandles.collectArguments(java.lang.invoke.MethodHandle,int,java.lang.invoke.MethodHandle)java.lang.invoke.MethodHandle
java.lang.invoke.MethodHandles.filterReturnValue(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)java.lang.invoke.MethodHandle
java.lang.invoke.MethodHandles.foldArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)java.lang.invoke.MethodHandle
java.lang.invoke.MethodHandles.guardWithTest(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)java.lang.invoke.MethodHandle
java.lang.invoke.MethodHandles.catchException(java.lang.invoke.MethodHandle,Class,java.lang.invoke.MethodHandle)java.lang.invoke.MethodHandle
java.lang.invoke.MethodHandles.throwException(Class,Class)java.lang.invoke.MethodHandle
java.lang.invoke.MethodType.methodType(Class,Class)java.lang.invoke.MethodType
java.lang.invoke.MethodType.methodType(Class,java.util.List)java.lang.invoke.MethodType
java.lang.invoke.MethodType.methodType(Class)java.lang.invoke.MethodType
java.lang.invoke.MethodType.methodType(Class,Class)java.lang.invoke.MethodType
java.lang.invoke.MethodType.methodType(Class,java.lang.invoke.MethodType)java.lang.invoke.MethodType
java.lang.invoke.MethodType.genericMethodType(int,boolean)java.lang.invoke.MethodType
java.lang.invoke.MethodType.genericMethodType(int)java.lang.invoke.MethodType
java.lang.invoke.MethodType.changeParameterType(int,Class)java.lang.invoke.MethodType
java.lang.invoke.MethodType.insertParameterTypes(int,java.util.List)java.lang.invoke.MethodType
java.lang.invoke.MethodType.appendParameterTypes(java.util.List)java.lang.invoke.MethodType
java.lang.invoke.MethodType.dropParameterTypes(int,int)java.lang.invoke.MethodType
java.lang.invoke.MethodType.changeReturnType(Class)java.lang.invoke.MethodType
java.lang.invoke.MethodType.hasPrimitives)boolean
java.lang.invoke.MethodType.hasWrappers)boolean
java.lang.invoke.MethodType.erase)java.lang.invoke.MethodType
java.lang.invoke.MethodType.generic)java.lang.invoke.MethodType
java.lang.invoke.MethodType.wrap)java.lang.invoke.MethodType
java.lang.invoke.MethodType.unwrap)java.lang.invoke.MethodType
java.lang.invoke.MethodType.parameterType(int)Class
java.lang.invoke.MethodType.parameterCount)int
java.lang.invoke.MethodType.returnType)Class
java.lang.invoke.MethodType.parameterList)java.util.List
java.lang.invoke.MethodType.equals(Object)boolean
java.lang.invoke.MethodType.hashCode)int
java.lang.invoke.MethodType.toString)String
java.lang.invoke.MethodType.fromMethodDescriptorString(String,ClassLoader)java.lang.invoke.MethodType
java.lang.invoke.MethodType.toMethodDescriptorString)String
java.lang.invoke.MutableCallSite.getTarget)java.lang.invoke.MethodHandle
java.lang.invoke.MutableCallSite.setTarget(java.lang.invoke.MethodHandle)void
java.lang.invoke.MutableCallSite.dynamicInvoker)java.lang.invoke.MethodHandle
java.lang.invoke.VolatileCallSite.getTarget)java.lang.invoke.MethodHandle
java.lang.invoke.VolatileCallSite.setTarget(java.lang.invoke.MethodHandle)void
java.lang.invoke.VolatileCallSite.dynamicInvoker)java.lang.invoke.MethodHandle
java.lang.ref.PhantomReference.get)Object
java.lang.ref.Reference.get)Object
java.lang.ref.Reference.clear)void
java.lang.ref.Reference.isEnqueued)boolean
java.lang.ref.Reference.enqueue)boolean
java.lang.ref.Reference.reachabilityFence(Object)void
java.lang.ref.ReferenceQueue.poll)java.lang.ref.Reference
java.lang.ref.ReferenceQueue.remove(long)java.lang.ref.Reference
java.lang.ref.ReferenceQueue.remove)java.lang.ref.Reference
java.lang.ref.SoftReference.get)Object
java.lang.reflect.AccessibleObject.setAccessible(java.lang.reflect.AccessibleObject,boolean)void
java.lang.reflect.AccessibleObject.setAccessible(boolean)void
java.lang.reflect.AccessibleObject.isAccessible)boolean
java.lang.reflect.AccessibleObject.getAnnotation(Class)java.lang.annotation.Annotation
java.lang.reflect.AccessibleObject.isAnnotationPresent(Class)boolean
java.lang.reflect.AccessibleObject.getDeclaredAnnotation(Class)java.lang.annotation.Annotation
java.lang.reflect.AnnotatedElement.isAnnotationPresent(Class)boolean
java.lang.reflect.AnnotatedElement.getDeclaredAnnotation(Class)java.lang.annotation.Annotation
java.lang.reflect.Array.newInstance(Class,int)Object
java.lang.reflect.Array.getLength(Object)int
java.lang.reflect.Array.get(Object,int)Object
java.lang.reflect.Array.getBoolean(Object,int)boolean
java.lang.reflect.Array.getByte(Object,int)byte
java.lang.reflect.Array.getChar(Object,int)char
java.lang.reflect.Array.getShort(Object,int)short
java.lang.reflect.Array.getInt(Object,int)int
java.lang.reflect.Array.getLong(Object,int)long
java.lang.reflect.Array.getFloat(Object,int)float
java.lang.reflect.Array.getDouble(Object,int)double
java.lang.reflect.Array.set(Object,int,Object)void
java.lang.reflect.Array.setBoolean(Object,int,boolean)void
java.lang.reflect.Array.setByte(Object,int,byte)void
java.lang.reflect.Array.setChar(Object,int,char)void
java.lang.reflect.Array.setShort(Object,int,short)void
java.lang.reflect.Array.setInt(Object,int,int)void
java.lang.reflect.Array.setLong(Object,int,long)void
java.lang.reflect.Array.setFloat(Object,int,float)void
java.lang.reflect.Array.setDouble(Object,int,double)void
java.lang.reflect.Constructor.getDeclaringClass)Class
java.lang.reflect.Constructor.getName)String
java.lang.reflect.Constructor.getModifiers)int
java.lang.reflect.Constructor.getParameterCount)int
java.lang.reflect.Constructor.equals(Object)boolean
java.lang.reflect.Constructor.hashCode)int
java.lang.reflect.Constructor.toString)String
java.lang.reflect.Constructor.toGenericString)String
java.lang.reflect.Constructor.isVarArgs)boolean
java.lang.reflect.Constructor.isSynthetic)boolean
java.lang.reflect.Constructor.getAnnotation(Class)java.lang.annotation.Annotation
java.lang.reflect.Executable.getParameterCount)int
java.lang.reflect.Executable.isVarArgs)boolean
java.lang.reflect.Executable.isSynthetic)boolean
java.lang.reflect.Executable.getAnnotation(Class)java.lang.annotation.Annotation
java.lang.reflect.Executable.isAnnotationPresent(Class)boolean
java.lang.reflect.Field.getDeclaringClass)Class
java.lang.reflect.Field.getName)String
java.lang.reflect.Field.getModifiers)int
java.lang.reflect.Field.isEnumConstant)boolean
java.lang.reflect.Field.isSynthetic)boolean
java.lang.reflect.Field.getType)Class
java.lang.reflect.Field.getGenericType)java.lang.reflect.Type
java.lang.reflect.Field.equals(Object)boolean
java.lang.reflect.Field.hashCode)int
java.lang.reflect.Field.toString)String
java.lang.reflect.Field.toGenericString)String
java.lang.reflect.Field.getAnnotation(Class)java.lang.annotation.Annotation
java.lang.reflect.Field.isAnnotationPresent(Class)boolean
java.lang.reflect.InvocationHandler.invoke(Object,java.lang.reflect.Method,Object)Object
java.lang.reflect.InvocationTargetException.getTargetException)Throwable
java.lang.reflect.InvocationTargetException.getCause)Throwable
java.lang.reflect.Method.getDeclaringClass)Class
java.lang.reflect.Method.getName)String
java.lang.reflect.Method.getModifiers)int
java.lang.reflect.Method.getReturnType)Class
java.lang.reflect.Method.getGenericReturnType)java.lang.reflect.Type
java.lang.reflect.Method.getParameterCount)int
java.lang.reflect.Method.equals(Object)boolean
java.lang.reflect.Method.hashCode)int
java.lang.reflect.Method.toString)String
java.lang.reflect.Method.toGenericString)String
java.lang.reflect.Method.isBridge)boolean
java.lang.reflect.Method.isVarArgs)boolean
java.lang.reflect.Method.isSynthetic)boolean
java.lang.reflect.Method.isDefault)boolean
java.lang.reflect.Method.getAnnotation(Class)java.lang.annotation.Annotation
java.lang.reflect.Modifier.isPublic(int)boolean
java.lang.reflect.Modifier.isPrivate(int)boolean
java.lang.reflect.Modifier.isProtected(int)boolean
java.lang.reflect.Modifier.isStatic(int)boolean
java.lang.reflect.Modifier.isFinal(int)boolean
java.lang.reflect.Modifier.isSynchronized(int)boolean
java.lang.reflect.Modifier.isVolatile(int)boolean
java.lang.reflect.Modifier.isTransient(int)boolean
java.lang.reflect.Modifier.isNative(int)boolean
java.lang.reflect.Modifier.isInterface(int)boolean
java.lang.reflect.Modifier.isAbstract(int)boolean
java.lang.reflect.Modifier.isStrict(int)boolean
java.lang.reflect.Modifier.toString(int)String
java.lang.reflect.Modifier.classModifiers)int
java.lang.reflect.Modifier.interfaceModifiers)int
java.lang.reflect.Modifier.constructorModifiers)int
java.lang.reflect.Modifier.methodModifiers)int
java.lang.reflect.Modifier.fieldModifiers)int
java.lang.reflect.Modifier.parameterModifiers)int
java.lang.reflect.Parameter.equals(Object)boolean
java.lang.reflect.Parameter.hashCode)int
java.lang.reflect.Parameter.isNamePresent)boolean
java.lang.reflect.Parameter.toString)String
java.lang.reflect.Parameter.getDeclaringExecutable)java.lang.reflect.Executable
java.lang.reflect.Parameter.getModifiers)int
java.lang.reflect.Parameter.getName)String
java.lang.reflect.Parameter.getParameterizedType)java.lang.reflect.Type
java.lang.reflect.Parameter.getType)Class
java.lang.reflect.Parameter.isImplicit)boolean
java.lang.reflect.Parameter.isSynthetic)boolean
java.lang.reflect.Parameter.isVarArgs)boolean
java.lang.reflect.Parameter.getAnnotation(Class)java.lang.annotation.Annotation
java.lang.reflect.Parameter.getDeclaredAnnotation(Class)java.lang.annotation.Annotation
java.lang.reflect.Proxy.newProxyInstance(ClassLoader,Class,java.lang.reflect.InvocationHandler)Object
java.lang.reflect.Proxy.isProxyClass(Class)boolean
java.lang.reflect.Proxy.getInvocationHandler(Object)java.lang.reflect.InvocationHandler
java.lang.reflect.Type.getTypeName)String
java.lang.reflect.UndeclaredThrowableException.getUndeclaredThrowable)Throwable
java.lang.reflect.UndeclaredThrowableException.getCause)Throwable
java.math.BigDecimal.valueOf(long,int)java.math.BigDecimal
java.math.BigDecimal.valueOf(long)java.math.BigDecimal
java.math.BigDecimal.valueOf(double)java.math.BigDecimal
java.math.BigDecimal.add(java.math.BigDecimal)java.math.BigDecimal
java.math.BigDecimal.add(java.math.BigDecimal,java.math.MathContext)java.math.BigDecimal
java.math.BigDecimal.subtract(java.math.BigDecimal)java.math.BigDecimal
java.math.BigDecimal.subtract(java.math.BigDecimal,java.math.MathContext)java.math.BigDecimal
java.math.BigDecimal.multiply(java.math.BigDecimal)java.math.BigDecimal
java.math.BigDecimal.multiply(java.math.BigDecimal,java.math.MathContext)java.math.BigDecimal
java.math.BigDecimal.divide(java.math.BigDecimal,int,int)java.math.BigDecimal
java.math.BigDecimal.divide(java.math.BigDecimal,int,java.math.RoundingMode)java.math.BigDecimal
java.math.BigDecimal.divide(java.math.BigDecimal,int)java.math.BigDecimal
java.math.BigDecimal.divide(java.math.BigDecimal,java.math.RoundingMode)java.math.BigDecimal
java.math.BigDecimal.divide(java.math.BigDecimal)java.math.BigDecimal
java.math.BigDecimal.divide(java.math.BigDecimal,java.math.MathContext)java.math.BigDecimal
java.math.BigDecimal.divideToIntegralValue(java.math.BigDecimal)java.math.BigDecimal
java.math.BigDecimal.divideToIntegralValue(java.math.BigDecimal,java.math.MathContext)java.math.BigDecimal
java.math.BigDecimal.remainder(java.math.BigDecimal)java.math.BigDecimal
java.math.BigDecimal.remainder(java.math.BigDecimal,java.math.MathContext)java.math.BigDecimal
java.math.BigDecimal.pow(int)java.math.BigDecimal
java.math.BigDecimal.pow(int,java.math.MathContext)java.math.BigDecimal
java.math.BigDecimal.abs)java.math.BigDecimal
java.math.BigDecimal.abs(java.math.MathContext)java.math.BigDecimal
java.math.BigDecimal.negate)java.math.BigDecimal
java.math.BigDecimal.negate(java.math.MathContext)java.math.BigDecimal
java.math.BigDecimal.plus)java.math.BigDecimal
java.math.BigDecimal.plus(java.math.MathContext)java.math.BigDecimal
java.math.BigDecimal.signum)int
java.math.BigDecimal.scale)int
java.math.BigDecimal.precision)int
java.math.BigDecimal.unscaledValue)java.math.BigInteger
java.math.BigDecimal.round(java.math.MathContext)java.math.BigDecimal
java.math.BigDecimal.setScale(int,java.math.RoundingMode)java.math.BigDecimal
java.math.BigDecimal.setScale(int,int)java.math.BigDecimal
java.math.BigDecimal.setScale(int)java.math.BigDecimal
java.math.BigDecimal.movePointLeft(int)java.math.BigDecimal
java.math.BigDecimal.movePointRight(int)java.math.BigDecimal
java.math.BigDecimal.scaleByPowerOfTen(int)java.math.BigDecimal
java.math.BigDecimal.stripTrailingZeros)java.math.BigDecimal
java.math.BigDecimal.compareTo(java.math.BigDecimal)int
java.math.BigDecimal.equals(Object)boolean
java.math.BigDecimal.min(java.math.BigDecimal)java.math.BigDecimal
java.math.BigDecimal.max(java.math.BigDecimal)java.math.BigDecimal
java.math.BigDecimal.hashCode)int
java.math.BigDecimal.toString)String
java.math.BigDecimal.toEngineeringString)String
java.math.BigDecimal.toPlainString)String
java.math.BigDecimal.toBigInteger)java.math.BigInteger
java.math.BigDecimal.toBigIntegerExact)java.math.BigInteger
java.math.BigDecimal.longValue)long
java.math.BigDecimal.longValueExact)long
java.math.BigDecimal.intValue)int
java.math.BigDecimal.intValueExact)int
java.math.BigDecimal.shortValueExact)short
java.math.BigDecimal.byteValueExact)byte
java.math.BigDecimal.floatValue)float
java.math.BigDecimal.doubleValue)double
java.math.BigDecimal.ulp)java.math.BigDecimal
java.math.BigInteger.valueOf(long)java.math.BigInteger
java.math.BigInteger.abs)java.math.BigInteger
java.math.BigInteger.negate)java.math.BigInteger
java.math.BigInteger.add(java.math.BigInteger)java.math.BigInteger
java.math.BigInteger.subtract(java.math.BigInteger)java.math.BigInteger
java.math.BigInteger.signum)int
java.math.BigInteger.shiftRight(int)java.math.BigInteger
java.math.BigInteger.shiftLeft(int)java.math.BigInteger
java.math.BigInteger.bitLength)int
java.math.BigInteger.testBit(int)boolean
java.math.BigInteger.setBit(int)java.math.BigInteger
java.math.BigInteger.clearBit(int)java.math.BigInteger
java.math.BigInteger.flipBit(int)java.math.BigInteger
java.math.BigInteger.getLowestSetBit)int
java.math.BigInteger.bitCount)int
java.math.BigInteger.not)java.math.BigInteger
java.math.BigInteger.and(java.math.BigInteger)java.math.BigInteger
java.math.BigInteger.or(java.math.BigInteger)java.math.BigInteger
java.math.BigInteger.xor(java.math.BigInteger)java.math.BigInteger
java.math.BigInteger.andNot(java.math.BigInteger)java.math.BigInteger
java.math.BigInteger.intValue)int
java.math.BigInteger.longValue)long
java.math.BigInteger.floatValue)float
java.math.BigInteger.doubleValue)double
java.math.BigInteger.compareTo(java.math.BigInteger)int
java.math.BigInteger.min(java.math.BigInteger)java.math.BigInteger
java.math.BigInteger.max(java.math.BigInteger)java.math.BigInteger
java.math.BigInteger.hashCode)int
java.math.BigInteger.equals(Object)boolean
java.math.BigInteger.toString)String
java.math.BigInteger.toString(int)String
java.math.BigInteger.gcd(java.math.BigInteger)java.math.BigInteger
java.math.BigInteger.multiply(java.math.BigInteger)java.math.BigInteger
java.math.BigInteger.pow(int)java.math.BigInteger
java.math.BigInteger.divide(java.math.BigInteger)java.math.BigInteger
java.math.BigInteger.remainder(java.math.BigInteger)java.math.BigInteger
java.math.BigInteger.modInverse(java.math.BigInteger)java.math.BigInteger
java.math.BigInteger.modPow(java.math.BigInteger,java.math.BigInteger)java.math.BigInteger
java.math.BigInteger.mod(java.math.BigInteger)java.math.BigInteger
java.math.BigInteger.isProbablePrime(int)boolean
java.math.BigInteger.nextProbablePrime)java.math.BigInteger
java.math.BigInteger.probablePrime(int,java.util.Random)java.math.BigInteger
java.math.MathContext.getPrecision)int
java.math.MathContext.getRoundingMode)java.math.RoundingMode
java.math.MathContext.equals(Object)boolean
java.math.MathContext.hashCode)int
java.math.MathContext.toString)String
java.math.RoundingMode.valueOf(String)java.math.RoundingMode
java.math.RoundingMode.valueOf(int)java.math.RoundingMode
java.net.Authenticator.valueOf(String)RequestorType
java.net.Authenticator.requestPasswordAuthentication(java.net.InetAddress,int,String,String,String)java.net.PasswordAuthentication
java.net.Authenticator.requestPasswordAuthentication(String,java.net.InetAddress,int,String,String,String)java.net.PasswordAuthentication
java.net.Authenticator.requestPasswordAuthentication(String,java.net.InetAddress,int,String,String,String,java.net.URL,RequestorType)java.net.PasswordAuthentication
java.net.Authenticator.getRequestingHost)String
java.net.Authenticator.getRequestingSite)java.net.InetAddress
java.net.Authenticator.getRequestingPort)int
java.net.Authenticator.getRequestingProtocol)String
java.net.Authenticator.getRequestingPrompt)String
java.net.Authenticator.getRequestingScheme)String
java.net.Authenticator.getPasswordAuthentication)java.net.PasswordAuthentication
java.net.Authenticator.getRequestingURL)java.net.URL
java.net.Authenticator.getRequestorType)RequestorType
java.net.CacheRequest.getBody)java.io.OutputStream
java.net.CacheResponse.getHeaders)java.util.Map
java.net.CacheResponse.getBody)java.io.InputStream
java.net.ContentHandler.getContent(java.net.URLConnection)Object
java.net.ContentHandler.getContent(java.net.URLConnection,Class)Object
java.net.CookieHandler.get(java.net.URI,java.util.Map)java.util.Map
java.net.CookieHandler.put(java.net.URI,java.util.Map)void
java.net.CookieManager.setCookiePolicy(java.net.CookiePolicy)void
java.net.CookieManager.getCookieStore)java.net.CookieStore
java.net.CookieManager.get(java.net.URI,java.util.Map)java.util.Map
java.net.CookieManager.put(java.net.URI,java.util.Map)void
java.net.DatagramSocket.connect(java.net.InetAddress,int)void
java.net.DatagramSocket.connect(java.net.SocketAddress)void
java.net.DatagramSocket.disconnect)void
java.net.DatagramSocket.isBound)boolean
java.net.DatagramSocket.isConnected)boolean
java.net.DatagramSocket.getInetAddress)java.net.InetAddress
java.net.DatagramSocket.getPort)int
java.net.DatagramSocket.getRemoteSocketAddress)java.net.SocketAddress
java.net.DatagramSocket.getLocalSocketAddress)java.net.SocketAddress
java.net.DatagramSocket.send(java.net.DatagramPacket)void
java.net.DatagramSocket.getLocalAddress)java.net.InetAddress
java.net.DatagramSocket.getLocalPort)int
java.net.DatagramSocket.close)void
java.net.DatagramSocket.isClosed)boolean
java.net.DatagramSocket.getChannel)java.nio.channels.DatagramChannel
java.net.DatagramSocketImpl.create)void
java.net.DatagramSocketImpl.bind(int,java.net.InetAddress)void
java.net.DatagramSocketImpl.send(java.net.DatagramPacket)void
java.net.DatagramSocketImpl.connect(java.net.InetAddress,int)void
java.net.DatagramSocketImpl.disconnect)void
java.net.DatagramSocketImpl.peek(java.net.InetAddress)int
java.net.DatagramSocketImpl.peekData(java.net.DatagramPacket)int
java.net.DatagramSocketImpl.receive(java.net.DatagramPacket)void
java.net.DatagramSocketImpl.setTTL(byte)void
java.net.DatagramSocketImpl.getTTL)byte
java.net.DatagramSocketImpl.setTimeToLive(int)void
java.net.DatagramSocketImpl.getTimeToLive)int
java.net.DatagramSocketImpl.join(java.net.InetAddress)void
java.net.DatagramSocketImpl.leave(java.net.InetAddress)void
java.net.DatagramSocketImpl.joinGroup(java.net.SocketAddress,java.net.NetworkInterface)void
java.net.DatagramSocketImpl.leaveGroup(java.net.SocketAddress,java.net.NetworkInterface)void
java.net.DatagramSocketImpl.getLocalPort)int
java.net.DatagramSocketImpl.getFileDescriptor)java.io.FileDescriptor
java.net.HttpCookie.parse(String)java.util.List
java.net.HttpCookie.hasExpired)boolean
java.net.HttpCookie.setComment(String)void
java.net.HttpCookie.getComment)String
java.net.HttpCookie.setCommentURL(String)void
java.net.HttpCookie.getCommentURL)String
java.net.HttpCookie.setDiscard(boolean)void
java.net.HttpCookie.getDiscard)boolean
java.net.HttpCookie.setPortlist(String)void
java.net.HttpCookie.getPortlist)String
java.net.HttpCookie.setDomain(String)void
java.net.HttpCookie.getDomain)String
java.net.HttpCookie.setMaxAge(long)void
java.net.HttpCookie.getMaxAge)long
java.net.HttpCookie.setPath(String)void
java.net.HttpCookie.getPath)String
java.net.HttpCookie.setSecure(boolean)void
java.net.HttpCookie.getSecure)boolean
java.net.HttpCookie.getName)String
java.net.HttpCookie.setValue(String)void
java.net.HttpCookie.getValue)String
java.net.HttpCookie.getVersion)int
java.net.HttpCookie.setVersion(int)void
java.net.HttpCookie.isHttpOnly)boolean
java.net.HttpCookie.setHttpOnly(boolean)void
java.net.HttpCookie.domainMatches(String,String)boolean
java.net.HttpCookie.toString)String
java.net.HttpCookie.equals(Object)boolean
java.net.HttpCookie.hashCode)int
java.net.HttpCookie.clone)Object
java.net.HttpRetryException.responseCode)int
java.net.HttpRetryException.getReason)String
java.net.HttpRetryException.getLocation)String
java.net.HttpURLConnection.getHeaderFieldKey(int)String
java.net.HttpURLConnection.setFixedLengthStreamingMode(int)void
java.net.HttpURLConnection.setFixedLengthStreamingMode(long)void
java.net.HttpURLConnection.setChunkedStreamingMode(int)void
java.net.HttpURLConnection.getHeaderField(int)String
java.net.HttpURLConnection.setFollowRedirects(boolean)void
java.net.HttpURLConnection.getFollowRedirects)boolean
java.net.HttpURLConnection.setInstanceFollowRedirects(boolean)void
java.net.HttpURLConnection.getInstanceFollowRedirects)boolean
java.net.HttpURLConnection.setRequestMethod(String)void
java.net.HttpURLConnection.getRequestMethod)String
java.net.HttpURLConnection.getResponseCode)int
java.net.HttpURLConnection.getResponseMessage)String
java.net.HttpURLConnection.getHeaderFieldDate(String,long)long
java.net.HttpURLConnection.getPermission)java.security.Permission
java.net.HttpURLConnection.getErrorStream)java.io.InputStream
java.net.IDN.toASCII(String,int)String
java.net.IDN.toASCII(String)String
java.net.IDN.toUnicode(String,int)String
java.net.IDN.toUnicode(String)String
java.net.Inet4Address.isMulticastAddress)boolean
java.net.Inet4Address.isAnyLocalAddress)boolean
java.net.Inet4Address.isLoopbackAddress)boolean
java.net.Inet4Address.isLinkLocalAddress)boolean
java.net.Inet4Address.isSiteLocalAddress)boolean
java.net.Inet4Address.isMCGlobal)boolean
java.net.Inet4Address.isMCNodeLocal)boolean
java.net.Inet4Address.isMCLinkLocal)boolean
java.net.Inet4Address.isMCSiteLocal)boolean
java.net.Inet4Address.isMCOrgLocal)boolean
java.net.Inet4Address.getHostAddress)String
java.net.Inet4Address.hashCode)int
java.net.Inet4Address.equals(Object)boolean
java.net.Inet6Address.getByAddress(String,byte,java.net.NetworkInterface)java.net.Inet6Address
java.net.Inet6Address.getByAddress(String,byte,int)java.net.Inet6Address
java.net.Inet6Address.isMulticastAddress)boolean
java.net.Inet6Address.isAnyLocalAddress)boolean
java.net.Inet6Address.isLoopbackAddress)boolean
java.net.Inet6Address.isLinkLocalAddress)boolean
java.net.Inet6Address.isSiteLocalAddress)boolean
java.net.Inet6Address.isMCGlobal)boolean
java.net.Inet6Address.isMCNodeLocal)boolean
java.net.Inet6Address.isMCLinkLocal)boolean
java.net.Inet6Address.isMCSiteLocal)boolean
java.net.Inet6Address.isMCOrgLocal)boolean
java.net.Inet6Address.getScopeId)int
java.net.Inet6Address.getScopedInterface)java.net.NetworkInterface
java.net.Inet6Address.getHostAddress)String
java.net.Inet6Address.hashCode)int
java.net.Inet6Address.equals(Object)boolean
java.net.Inet6Address.isIPv4CompatibleAddress)boolean
java.net.InetAddress.isMulticastAddress)boolean
java.net.InetAddress.isAnyLocalAddress)boolean
java.net.InetAddress.isLoopbackAddress)boolean
java.net.InetAddress.isLinkLocalAddress)boolean
java.net.InetAddress.isSiteLocalAddress)boolean
java.net.InetAddress.isMCGlobal)boolean
java.net.InetAddress.isMCNodeLocal)boolean
java.net.InetAddress.isMCLinkLocal)boolean
java.net.InetAddress.isMCSiteLocal)boolean
java.net.InetAddress.isMCOrgLocal)boolean
java.net.InetAddress.isReachable(int)boolean
java.net.InetAddress.isReachable(java.net.NetworkInterface,int,int)boolean
java.net.InetAddress.getHostName)String
java.net.InetAddress.getCanonicalHostName)String
java.net.InetAddress.getHostAddress)String
java.net.InetAddress.hashCode)int
java.net.InetAddress.equals(Object)boolean
java.net.InetAddress.toString)String
java.net.InetAddress.getByAddress(String,byte)java.net.InetAddress
java.net.InetAddress.getByName(String)java.net.InetAddress
java.net.InetAddress.getLoopbackAddress)java.net.InetAddress
java.net.InetAddress.getByAddress(byte)java.net.InetAddress
java.net.InetAddress.getLocalHost)java.net.InetAddress
java.net.InetSocketAddress.createUnresolved(String,int)java.net.InetSocketAddress
java.net.InetSocketAddress.getPort)int
java.net.InetSocketAddress.getAddress)java.net.InetAddress
java.net.InetSocketAddress.getHostName)String
java.net.InetSocketAddress.getHostString)String
java.net.InetSocketAddress.isUnresolved)boolean
java.net.InetSocketAddress.toString)String
java.net.InetSocketAddress.equals(Object)boolean
java.net.InetSocketAddress.hashCode)int
java.net.InterfaceAddress.getAddress)java.net.InetAddress
java.net.InterfaceAddress.getBroadcast)java.net.InetAddress
java.net.InterfaceAddress.getNetworkPrefixLength)short
java.net.InterfaceAddress.equals(Object)boolean
java.net.InterfaceAddress.hashCode)int
java.net.InterfaceAddress.toString)String
java.net.JarURLConnection.getJarFileURL)java.net.URL
java.net.JarURLConnection.getEntryName)String
java.net.JarURLConnection.getJarFile)JarFile
java.net.JarURLConnection.getManifest)Manifest
java.net.JarURLConnection.getJarEntry)JarEntry
java.net.JarURLConnection.getAttributes)Attributes
java.net.JarURLConnection.getMainAttributes)Attributes
java.net.MulticastSocket.setTTL(byte)void
java.net.MulticastSocket.setTimeToLive(int)void
java.net.MulticastSocket.getTTL)byte
java.net.MulticastSocket.getTimeToLive)int
java.net.MulticastSocket.joinGroup(java.net.InetAddress)void
java.net.MulticastSocket.leaveGroup(java.net.InetAddress)void
java.net.MulticastSocket.joinGroup(java.net.SocketAddress,java.net.NetworkInterface)void
java.net.MulticastSocket.leaveGroup(java.net.SocketAddress,java.net.NetworkInterface)void
java.net.MulticastSocket.setInterface(java.net.InetAddress)void
java.net.MulticastSocket.getInterface)java.net.InetAddress
java.net.MulticastSocket.setNetworkInterface(java.net.NetworkInterface)void
java.net.MulticastSocket.getNetworkInterface)java.net.NetworkInterface
java.net.MulticastSocket.setLoopbackMode(boolean)void
java.net.MulticastSocket.getLoopbackMode)boolean
java.net.MulticastSocket.send(java.net.DatagramPacket,byte)void
java.net.NetworkInterface.getName)String
java.net.NetworkInterface.getInetAddresses)java.util.Enumeration
java.net.NetworkInterface.getInterfaceAddresses)java.util.List
java.net.NetworkInterface.getSubInterfaces)java.util.Enumeration
java.net.NetworkInterface.getParent)java.net.NetworkInterface
java.net.NetworkInterface.getIndex)int
java.net.NetworkInterface.getDisplayName)String
java.net.NetworkInterface.getByName(String)java.net.NetworkInterface
java.net.NetworkInterface.getByIndex(int)java.net.NetworkInterface
java.net.NetworkInterface.getByInetAddress(java.net.InetAddress)java.net.NetworkInterface
java.net.NetworkInterface.getNetworkInterfaces)java.util.Enumeration
java.net.NetworkInterface.isUp)boolean
java.net.NetworkInterface.isLoopback)boolean
java.net.NetworkInterface.isPointToPoint)boolean
java.net.NetworkInterface.supportsMulticast)boolean
java.net.NetworkInterface.getMTU)int
java.net.NetworkInterface.isVirtual)boolean
java.net.NetworkInterface.equals(Object)boolean
java.net.NetworkInterface.hashCode)int
java.net.NetworkInterface.toString)String
java.net.PasswordAuthentication.getUserName)String
java.net.Proxy.valueOf(String)Type
java.net.Proxy.type)Type
java.net.Proxy.address)java.net.SocketAddress
java.net.Proxy.toString)String
java.net.Proxy.equals(Object)boolean
java.net.Proxy.hashCode)int
java.net.ProxySelector.getDefault)java.net.ProxySelector
java.net.ProxySelector.setDefault(java.net.ProxySelector)void
java.net.ResponseCache.get(java.net.URI,String,java.util.Map)java.net.CacheResponse
java.net.ResponseCache.put(java.net.URI,java.net.URLConnection)java.net.CacheRequest
java.net.SecureCacheResponse.getServerCertificateChain)java.util.List
java.net.SecureCacheResponse.getPeerPrincipal)java.security.Principal
java.net.ServerSocket.bind(java.net.SocketAddress)void
java.net.ServerSocket.bind(java.net.SocketAddress,int)void
java.net.ServerSocket.getInetAddress)java.net.InetAddress
java.net.ServerSocket.getLocalPort)int
java.net.ServerSocket.getLocalSocketAddress)java.net.SocketAddress
java.net.ServerSocket.accept)java.net.Socket
java.net.ServerSocket.implAccept(java.net.Socket)void
java.net.ServerSocket.close)void
java.net.ServerSocket.getChannel)java.nio.channels.ServerSocketChannel
java.net.ServerSocket.isBound)boolean
java.net.ServerSocket.isClosed)boolean
java.net.ServerSocket.setReuseAddress(boolean)void
java.net.ServerSocket.getReuseAddress)boolean
java.net.ServerSocket.toString)String
java.net.ServerSocket.setPerformancePreferences(int,int,int)void
java.net.Socket.connect(java.net.SocketAddress)void
java.net.Socket.connect(java.net.SocketAddress,int)void
java.net.Socket.bind(java.net.SocketAddress)void
java.net.Socket.getInetAddress)java.net.InetAddress
java.net.Socket.getLocalAddress)java.net.InetAddress
java.net.Socket.getPort)int
java.net.Socket.getLocalPort)int
java.net.Socket.getRemoteSocketAddress)java.net.SocketAddress
java.net.Socket.getLocalSocketAddress)java.net.SocketAddress
java.net.Socket.getChannel)java.nio.channels.SocketChannel
java.net.Socket.getInputStream)InputStream
java.net.Socket.getOutputStream)OutputStream
java.net.Socket.setTcpNoDelay(boolean)void
java.net.Socket.getTcpNoDelay)boolean
java.net.Socket.setSoLinger(boolean,int)void
java.net.Socket.getSoLinger)int
java.net.Socket.sendUrgentData(int)void
java.net.Socket.setOOBInline(boolean)void
java.net.Socket.getOOBInline)boolean
java.net.Socket.setKeepAlive(boolean)void
java.net.Socket.getKeepAlive)boolean
java.net.Socket.setTrafficClass(int)void
java.net.Socket.getTrafficClass)int
java.net.Socket.setReuseAddress(boolean)void
java.net.Socket.getReuseAddress)boolean
java.net.Socket.shutdownInput)void
java.net.Socket.shutdownOutput)void
java.net.Socket.toString)String
java.net.Socket.isConnected)boolean
java.net.Socket.isBound)boolean
java.net.Socket.isClosed)boolean
java.net.Socket.isInputShutdown)boolean
java.net.Socket.isOutputShutdown)boolean
java.net.Socket.setPerformancePreferences(int,int,int)void
java.net.SocketImpl.create(boolean)void
java.net.SocketImpl.connect(String,int)void
java.net.SocketImpl.connect(java.net.InetAddress,int)void
java.net.SocketImpl.connect(java.net.SocketAddress,int)void
java.net.SocketImpl.bind(java.net.InetAddress,int)void
java.net.SocketImpl.listen(int)void
java.net.SocketImpl.accept(java.net.SocketImpl)void
java.net.SocketImpl.getInputStream)InputStream
java.net.SocketImpl.getOutputStream)OutputStream
java.net.SocketImpl.available)int
java.net.SocketImpl.close)void
java.net.SocketImpl.shutdownInput)void
java.net.SocketImpl.shutdownOutput)void
java.net.SocketImpl.getFileDescriptor)FileDescriptor
java.net.SocketImpl.getInetAddress)java.net.InetAddress
java.net.SocketImpl.getPort)int
java.net.SocketImpl.supportsUrgentData)boolean
java.net.SocketImpl.sendUrgentData(int)void
java.net.SocketImpl.getLocalPort)int
java.net.SocketImpl.toString)String
java.net.SocketImpl.setPerformancePreferences(int,int,int)void
java.net.SocketOptions.setOption(int,Object)void
java.net.SocketOptions.getOption(int)Object
java.net.SocketPermission.implies(java.security.Permission)boolean
java.net.SocketPermission.getActions)String
java.net.StandardProtocolFamily.valueOf(String)java.net.StandardProtocolFamily
java.net.URI.create(String)java.net.URI
java.net.URI.parseServerAuthority)java.net.URI
java.net.URI.normalize)java.net.URI
java.net.URI.resolve(java.net.URI)java.net.URI
java.net.URI.resolve(String)java.net.URI
java.net.URI.relativize(java.net.URI)java.net.URI
java.net.URI.toURL)java.net.URL
java.net.URI.getScheme)String
java.net.URI.isAbsolute)boolean
java.net.URI.isOpaque)boolean
java.net.URI.getRawSchemeSpecificPart)String
java.net.URI.getSchemeSpecificPart)String
java.net.URI.getRawAuthority)String
java.net.URI.getAuthority)String
java.net.URI.getRawUserInfo)String
java.net.URI.getUserInfo)String
java.net.URI.getHost)String
java.net.URI.getPort)int
java.net.URI.getRawPath)String
java.net.URI.getPath)String
java.net.URI.getRawQuery)String
java.net.URI.getQuery)String
java.net.URI.getRawFragment)String
java.net.URI.getFragment)String
java.net.URI.equals(Object)boolean
java.net.URI.hashCode)int
java.net.URI.compareTo(java.net.URI)int
java.net.URI.toString)String
java.net.URI.toASCIIString)String
java.net.URISyntaxException.getInput)String
java.net.URISyntaxException.getReason)String
java.net.URISyntaxException.getIndex)int
java.net.URISyntaxException.getMessage)String
java.net.URL.getQuery)String
java.net.URL.getPath)String
java.net.URL.getUserInfo)String
java.net.URL.getAuthority)String
java.net.URL.getPort)int
java.net.URL.getDefaultPort)int
java.net.URL.getProtocol)String
java.net.URL.getHost)String
java.net.URL.getFile)String
java.net.URL.getRef)String
java.net.URL.equals(Object)boolean
java.net.URL.sameFile(java.net.URL)boolean
java.net.URL.toString)String
java.net.URL.toExternalForm)String
java.net.URL.toURI)java.net.URI
java.net.URL.openConnection)java.net.URLConnection
java.net.URL.openConnection(java.net.Proxy)java.net.URLConnection
java.net.URL.openStream)InputStream
java.net.URL.getContent)Object
java.net.URL.getContent(Class)Object
java.net.URL.setURLStreamHandlerFactory(java.net.URLStreamHandlerFactory)void
java.net.URLClassLoader.getResourceAsStream(String)InputStream
java.net.URLClassLoader.close)void
java.net.URLClassLoader.addURL(java.net.URL)void
java.net.URLClassLoader.findClass(String)Class
java.net.URLClassLoader.definePackage(String,java.util.jar.Manifest,java.net.URL)Package
java.net.URLClassLoader.findResource(String)java.net.URL
java.net.URLClassLoader.findResources(String)java.util.Enumeration
java.net.URLClassLoader.getPermissions(CodeSource)PermissionCollection
java.net.URLClassLoader.newInstance(java.net.URL,ClassLoader)java.net.URLClassLoader
java.net.URLClassLoader.newInstance(java.net.URL)java.net.URLClassLoader
java.net.URLConnection.setFileNameMap(java.net.FileNameMap)void
java.net.URLConnection.connect)void
java.net.URLConnection.setConnectTimeout(int)void
java.net.URLConnection.getConnectTimeout)int
java.net.URLConnection.setReadTimeout(int)void
java.net.URLConnection.getReadTimeout)int
java.net.URLConnection.getURL)java.net.URL
java.net.URLConnection.getContentLength)int
java.net.URLConnection.getContentLengthLong)long
java.net.URLConnection.getContentType)String
java.net.URLConnection.getContentEncoding)String
java.net.URLConnection.getExpiration)long
java.net.URLConnection.getDate)long
java.net.URLConnection.getLastModified)long
java.net.URLConnection.getHeaderField(String)String
java.net.URLConnection.getHeaderFields)java.util.Map
java.net.URLConnection.getHeaderFieldInt(String,int)int
java.net.URLConnection.getHeaderFieldLong(String,long)long
java.net.URLConnection.getHeaderFieldDate(String,long)long
java.net.URLConnection.getHeaderFieldKey(int)String
java.net.URLConnection.getHeaderField(int)String
java.net.URLConnection.getContent)Object
java.net.URLConnection.getContent(Class)Object
java.net.URLConnection.getPermission)java.security.Permission
java.net.URLConnection.getInputStream)InputStream
java.net.URLConnection.getOutputStream)OutputStream
java.net.URLConnection.toString)String
java.net.URLConnection.setDoInput(boolean)void
java.net.URLConnection.getDoInput)boolean
java.net.URLConnection.setDoOutput(boolean)void
java.net.URLConnection.getDoOutput)boolean
java.net.URLConnection.setAllowUserInteraction(boolean)void
java.net.URLConnection.getAllowUserInteraction)boolean
java.net.URLConnection.setDefaultAllowUserInteraction(boolean)void
java.net.URLConnection.getDefaultAllowUserInteraction)boolean
java.net.URLConnection.setUseCaches(boolean)void
java.net.URLConnection.getUseCaches)boolean
java.net.URLConnection.setIfModifiedSince(long)void
java.net.URLConnection.getIfModifiedSince)long
java.net.URLConnection.getDefaultUseCaches)boolean
java.net.URLConnection.setDefaultUseCaches(boolean)void
java.net.URLConnection.setRequestProperty(String,String)void
java.net.URLConnection.addRequestProperty(String,String)void
java.net.URLConnection.getRequestProperty(String)String
java.net.URLConnection.getRequestProperties)java.util.Map
java.net.URLConnection.setDefaultRequestProperty(String,String)void
java.net.URLConnection.getDefaultRequestProperty(String)String
java.net.URLConnection.guessContentTypeFromName(String)String
java.net.URLConnection.guessContentTypeFromStream(InputStream)String
java.net.URLDecoder.decode(String)String
java.net.URLDecoder.decode(String,String)String
java.net.URLEncoder.encode(String)String
java.net.URLEncoder.encode(String,String)String
java.net.URLStreamHandler.openConnection(java.net.URL)java.net.URLConnection
java.net.URLStreamHandler.openConnection(java.net.URL,java.net.Proxy)java.net.URLConnection
java.net.URLStreamHandler.parseURL(java.net.URL,String,int,int)void
java.net.URLStreamHandler.getDefaultPort)int
java.net.URLStreamHandler.equals(java.net.URL,java.net.URL)boolean
java.net.URLStreamHandler.hashCode(java.net.URL)int
java.net.URLStreamHandler.sameFile(java.net.URL,java.net.URL)boolean
java.net.URLStreamHandler.hostsEqual(java.net.URL,java.net.URL)boolean
java.net.URLStreamHandler.toExternalForm(java.net.URL)String
java.net.URLStreamHandler.setURL(java.net.URL,String,String,int,String,String)void
java.nio.Buffer.capacity)int
java.nio.Buffer.position)int
java.nio.Buffer.position(int)java.nio.Buffer
java.nio.Buffer.limit)int
java.nio.Buffer.limit(int)java.nio.Buffer
java.nio.Buffer.mark)java.nio.Buffer
java.nio.Buffer.reset)java.nio.Buffer
java.nio.Buffer.clear)java.nio.Buffer
java.nio.Buffer.flip)java.nio.Buffer
java.nio.Buffer.rewind)java.nio.Buffer
java.nio.Buffer.remaining)int
java.nio.Buffer.hasRemaining)boolean
java.nio.ByteBuffer.allocateDirect(int)java.nio.ByteBuffer
java.nio.ByteBuffer.allocate(int)java.nio.ByteBuffer
java.nio.ByteBuffer.wrap(byte,int,int)java.nio.ByteBuffer
java.nio.ByteBuffer.wrap(byte)java.nio.ByteBuffer
java.nio.ByteBuffer.get(byte,int,int)java.nio.ByteBuffer
java.nio.ByteBuffer.get(byte)java.nio.ByteBuffer
java.nio.ByteBuffer.put(java.nio.ByteBuffer)java.nio.ByteBuffer
java.nio.ByteBuffer.put(byte,int,int)java.nio.ByteBuffer
java.nio.ByteBuffer.put(byte)java.nio.ByteBuffer
java.nio.ByteBuffer.hasArray)boolean
java.nio.ByteBuffer.arrayOffset)int
java.nio.ByteBuffer.position(int)java.nio.Buffer
java.nio.ByteBuffer.limit(int)java.nio.Buffer
java.nio.ByteBuffer.mark)java.nio.Buffer
java.nio.ByteBuffer.reset)java.nio.Buffer
java.nio.ByteBuffer.clear)java.nio.Buffer
java.nio.ByteBuffer.flip)java.nio.Buffer
java.nio.ByteBuffer.rewind)java.nio.Buffer
java.nio.ByteBuffer.toString)String
java.nio.ByteBuffer.hashCode)int
java.nio.ByteBuffer.equals(Object)boolean
java.nio.ByteBuffer.compareTo(java.nio.ByteBuffer)int
java.nio.ByteBuffer.order)java.nio.ByteOrder
java.nio.ByteBuffer.order(java.nio.ByteOrder)java.nio.ByteBuffer
java.nio.ByteOrder.nativeOrder)java.nio.ByteOrder
java.nio.ByteOrder.toString)String
java.nio.CharBuffer.allocate(int)java.nio.CharBuffer
java.nio.CharBuffer.wrap(char,int,int)java.nio.CharBuffer
java.nio.CharBuffer.wrap(char)java.nio.CharBuffer
java.nio.CharBuffer.read(java.nio.CharBuffer)int
java.nio.CharBuffer.wrap(CharSequence,int,int)java.nio.CharBuffer
java.nio.CharBuffer.wrap(CharSequence)java.nio.CharBuffer
java.nio.CharBuffer.get(char,int,int)java.nio.CharBuffer
java.nio.CharBuffer.get(char)java.nio.CharBuffer
java.nio.CharBuffer.put(java.nio.CharBuffer)java.nio.CharBuffer
java.nio.CharBuffer.put(char,int,int)java.nio.CharBuffer
java.nio.CharBuffer.put(char)java.nio.CharBuffer
java.nio.CharBuffer.put(String,int,int)java.nio.CharBuffer
java.nio.CharBuffer.put(String)java.nio.CharBuffer
java.nio.CharBuffer.hasArray)boolean
java.nio.CharBuffer.arrayOffset)int
java.nio.CharBuffer.position(int)java.nio.Buffer
java.nio.CharBuffer.limit(int)java.nio.Buffer
java.nio.CharBuffer.mark)java.nio.Buffer
java.nio.CharBuffer.reset)java.nio.Buffer
java.nio.CharBuffer.clear)java.nio.Buffer
java.nio.CharBuffer.flip)java.nio.Buffer
java.nio.CharBuffer.rewind)java.nio.Buffer
java.nio.CharBuffer.hashCode)int
java.nio.CharBuffer.equals(Object)boolean
java.nio.CharBuffer.compareTo(java.nio.CharBuffer)int
java.nio.CharBuffer.toString)String
java.nio.CharBuffer.length)int
java.nio.CharBuffer.charAt(int)char
java.nio.CharBuffer.append(CharSequence)java.nio.CharBuffer
java.nio.CharBuffer.append(CharSequence,int,int)java.nio.CharBuffer
java.nio.CharBuffer.append(char)java.nio.CharBuffer
java.nio.CharBuffer.chars)java.util.stream.IntStream
java.nio.DoubleBuffer.allocate(int)java.nio.DoubleBuffer
java.nio.DoubleBuffer.wrap(double,int,int)java.nio.DoubleBuffer
java.nio.DoubleBuffer.wrap(double)java.nio.DoubleBuffer
java.nio.DoubleBuffer.get(double,int,int)java.nio.DoubleBuffer
java.nio.DoubleBuffer.get(double)java.nio.DoubleBuffer
java.nio.DoubleBuffer.put(java.nio.DoubleBuffer)java.nio.DoubleBuffer
java.nio.DoubleBuffer.put(double,int,int)java.nio.DoubleBuffer
java.nio.DoubleBuffer.put(double)java.nio.DoubleBuffer
java.nio.DoubleBuffer.hasArray)boolean
java.nio.DoubleBuffer.arrayOffset)int
java.nio.DoubleBuffer.position(int)java.nio.Buffer
java.nio.DoubleBuffer.limit(int)java.nio.Buffer
java.nio.DoubleBuffer.mark)java.nio.Buffer
java.nio.DoubleBuffer.reset)java.nio.Buffer
java.nio.DoubleBuffer.clear)java.nio.Buffer
java.nio.DoubleBuffer.flip)java.nio.Buffer
java.nio.DoubleBuffer.rewind)java.nio.Buffer
java.nio.DoubleBuffer.toString)String
java.nio.DoubleBuffer.hashCode)int
java.nio.DoubleBuffer.equals(Object)boolean
java.nio.DoubleBuffer.compareTo(java.nio.DoubleBuffer)int
java.nio.FloatBuffer.allocate(int)java.nio.FloatBuffer
java.nio.FloatBuffer.wrap(float,int,int)java.nio.FloatBuffer
java.nio.FloatBuffer.wrap(float)java.nio.FloatBuffer
java.nio.FloatBuffer.get(float,int,int)java.nio.FloatBuffer
java.nio.FloatBuffer.get(float)java.nio.FloatBuffer
java.nio.FloatBuffer.put(java.nio.FloatBuffer)java.nio.FloatBuffer
java.nio.FloatBuffer.put(float,int,int)java.nio.FloatBuffer
java.nio.FloatBuffer.put(float)java.nio.FloatBuffer
java.nio.FloatBuffer.hasArray)boolean
java.nio.FloatBuffer.arrayOffset)int
java.nio.FloatBuffer.position(int)java.nio.Buffer
java.nio.FloatBuffer.limit(int)java.nio.Buffer
java.nio.FloatBuffer.mark)java.nio.Buffer
java.nio.FloatBuffer.reset)java.nio.Buffer
java.nio.FloatBuffer.clear)java.nio.Buffer
java.nio.FloatBuffer.flip)java.nio.Buffer
java.nio.FloatBuffer.rewind)java.nio.Buffer
java.nio.FloatBuffer.toString)String
java.nio.FloatBuffer.hashCode)int
java.nio.FloatBuffer.equals(Object)boolean
java.nio.FloatBuffer.compareTo(java.nio.FloatBuffer)int
java.nio.IntBuffer.allocate(int)java.nio.IntBuffer
java.nio.IntBuffer.wrap(int,int,int)java.nio.IntBuffer
java.nio.IntBuffer.wrap(int)java.nio.IntBuffer
java.nio.IntBuffer.get(int,int,int)java.nio.IntBuffer
java.nio.IntBuffer.get(int)java.nio.IntBuffer
java.nio.IntBuffer.put(java.nio.IntBuffer)java.nio.IntBuffer
java.nio.IntBuffer.put(int,int,int)java.nio.IntBuffer
java.nio.IntBuffer.put(int)java.nio.IntBuffer
java.nio.IntBuffer.hasArray)boolean
java.nio.IntBuffer.arrayOffset)int
java.nio.IntBuffer.position(int)java.nio.Buffer
java.nio.IntBuffer.limit(int)java.nio.Buffer
java.nio.IntBuffer.mark)java.nio.Buffer
java.nio.IntBuffer.reset)java.nio.Buffer
java.nio.IntBuffer.clear)java.nio.Buffer
java.nio.IntBuffer.flip)java.nio.Buffer
java.nio.IntBuffer.rewind)java.nio.Buffer
java.nio.IntBuffer.toString)String
java.nio.IntBuffer.hashCode)int
java.nio.IntBuffer.equals(Object)boolean
java.nio.IntBuffer.compareTo(java.nio.IntBuffer)int
java.nio.LongBuffer.allocate(int)java.nio.LongBuffer
java.nio.LongBuffer.wrap(long,int,int)java.nio.LongBuffer
java.nio.LongBuffer.wrap(long)java.nio.LongBuffer
java.nio.LongBuffer.get(long,int,int)java.nio.LongBuffer
java.nio.LongBuffer.get(long)java.nio.LongBuffer
java.nio.LongBuffer.put(java.nio.LongBuffer)java.nio.LongBuffer
java.nio.LongBuffer.put(long,int,int)java.nio.LongBuffer
java.nio.LongBuffer.put(long)java.nio.LongBuffer
java.nio.LongBuffer.hasArray)boolean
java.nio.LongBuffer.arrayOffset)int
java.nio.LongBuffer.position(int)java.nio.Buffer
java.nio.LongBuffer.limit(int)java.nio.Buffer
java.nio.LongBuffer.mark)java.nio.Buffer
java.nio.LongBuffer.reset)java.nio.Buffer
java.nio.LongBuffer.clear)java.nio.Buffer
java.nio.LongBuffer.flip)java.nio.Buffer
java.nio.LongBuffer.rewind)java.nio.Buffer
java.nio.LongBuffer.toString)String
java.nio.LongBuffer.hashCode)int
java.nio.LongBuffer.equals(Object)boolean
java.nio.LongBuffer.compareTo(java.nio.LongBuffer)int
java.nio.MappedByteBuffer.isLoaded)boolean
java.nio.MappedByteBuffer.load)java.nio.MappedByteBuffer
java.nio.MappedByteBuffer.force)java.nio.MappedByteBuffer
java.nio.ShortBuffer.allocate(int)java.nio.ShortBuffer
java.nio.ShortBuffer.wrap(short,int,int)java.nio.ShortBuffer
java.nio.ShortBuffer.wrap(short)java.nio.ShortBuffer
java.nio.ShortBuffer.get(short,int,int)java.nio.ShortBuffer
java.nio.ShortBuffer.get(short)java.nio.ShortBuffer
java.nio.ShortBuffer.put(java.nio.ShortBuffer)java.nio.ShortBuffer
java.nio.ShortBuffer.put(short,int,int)java.nio.ShortBuffer
java.nio.ShortBuffer.put(short)java.nio.ShortBuffer
java.nio.ShortBuffer.hasArray)boolean
java.nio.ShortBuffer.arrayOffset)int
java.nio.ShortBuffer.position(int)java.nio.Buffer
java.nio.ShortBuffer.limit(int)java.nio.Buffer
java.nio.ShortBuffer.mark)java.nio.Buffer
java.nio.ShortBuffer.reset)java.nio.Buffer
java.nio.ShortBuffer.clear)java.nio.Buffer
java.nio.ShortBuffer.flip)java.nio.Buffer
java.nio.ShortBuffer.rewind)java.nio.Buffer
java.nio.ShortBuffer.toString)String
java.nio.ShortBuffer.hashCode)int
java.nio.ShortBuffer.equals(Object)boolean
java.nio.ShortBuffer.compareTo(java.nio.ShortBuffer)int
java.nio.channels.AsynchronousChannel.close)void
java.nio.channels.AsynchronousChannelGroup.provider)java.nio.channels.spi.AsynchronousChannelProvider
java.nio.channels.AsynchronousChannelGroup.withFixedThreadPool(int,ThreadFactory)java.nio.channels.AsynchronousChannelGroup
java.nio.channels.AsynchronousChannelGroup.withCachedThreadPool(ExecutorService,int)java.nio.channels.AsynchronousChannelGroup
java.nio.channels.AsynchronousChannelGroup.withThreadPool(ExecutorService)java.nio.channels.AsynchronousChannelGroup
java.nio.channels.AsynchronousChannelGroup.shutdownNow)void
java.nio.channels.AsynchronousChannelGroup.awaitTermination(long,TimeUnit)boolean
java.nio.channels.AsynchronousFileChannel.size)long
java.nio.channels.AsynchronousFileChannel.truncate(long)java.nio.channels.AsynchronousFileChannel
java.nio.channels.AsynchronousFileChannel.force(boolean)void
java.nio.channels.AsynchronousFileChannel.lock(Object,java.nio.channels.CompletionHandler)void
java.nio.channels.AsynchronousFileChannel.lock)java.util.concurrent.Future
java.nio.channels.AsynchronousFileChannel.tryLock(long,long,boolean)java.nio.channels.FileLock
java.nio.channels.AsynchronousFileChannel.tryLock)java.nio.channels.FileLock
java.nio.channels.AsynchronousServerSocketChannel.provider)java.nio.channels.spi.AsynchronousChannelProvider
java.nio.channels.AsynchronousServerSocketChannel.open(java.nio.channels.AsynchronousChannelGroup)java.nio.channels.AsynchronousServerSocketChannel
java.nio.channels.AsynchronousServerSocketChannel.open)java.nio.channels.AsynchronousServerSocketChannel
java.nio.channels.AsynchronousServerSocketChannel.bind(java.net.SocketAddress)java.nio.channels.AsynchronousServerSocketChannel
java.nio.channels.AsynchronousServerSocketChannel.bind(java.net.SocketAddress,int)java.nio.channels.AsynchronousServerSocketChannel
java.nio.channels.AsynchronousServerSocketChannel.setOption(java.net.SocketOption,Object)java.nio.channels.AsynchronousServerSocketChannel
java.nio.channels.AsynchronousServerSocketChannel.getLocalAddress)java.net.SocketAddress
java.nio.channels.AsynchronousSocketChannel.provider)java.nio.channels.spi.AsynchronousChannelProvider
java.nio.channels.AsynchronousSocketChannel.open(java.nio.channels.AsynchronousChannelGroup)java.nio.channels.AsynchronousSocketChannel
java.nio.channels.AsynchronousSocketChannel.open)java.nio.channels.AsynchronousSocketChannel
java.nio.channels.AsynchronousSocketChannel.bind(java.net.SocketAddress)java.nio.channels.AsynchronousSocketChannel
java.nio.channels.AsynchronousSocketChannel.setOption(java.net.SocketOption,Object)java.nio.channels.AsynchronousSocketChannel
java.nio.channels.AsynchronousSocketChannel.shutdownInput)java.nio.channels.AsynchronousSocketChannel
java.nio.channels.AsynchronousSocketChannel.shutdownOutput)java.nio.channels.AsynchronousSocketChannel
java.nio.channels.AsynchronousSocketChannel.getRemoteAddress)java.net.SocketAddress
java.nio.channels.AsynchronousSocketChannel.read(java.nio.ByteBuffer,Object,java.nio.channels.CompletionHandler)void
java.nio.channels.AsynchronousSocketChannel.write(java.nio.ByteBuffer,Object,java.nio.channels.CompletionHandler)void
java.nio.channels.AsynchronousSocketChannel.getLocalAddress)java.net.SocketAddress
java.nio.channels.Channel.close)void
java.nio.channels.Channels.newInputStream(java.nio.channels.ReadableByteChannel)InputStream
java.nio.channels.Channels.newOutputStream(java.nio.channels.WritableByteChannel)OutputStream
java.nio.channels.Channels.newInputStream(java.nio.channels.AsynchronousByteChannel)InputStream
java.nio.channels.Channels.newOutputStream(java.nio.channels.AsynchronousByteChannel)OutputStream
java.nio.channels.Channels.newChannel(InputStream)java.nio.channels.ReadableByteChannel
java.nio.channels.Channels.newChannel(OutputStream)java.nio.channels.WritableByteChannel
java.nio.channels.Channels.newReader(java.nio.channels.ReadableByteChannel,java.nio.charset.CharsetDecoder,int)Reader
java.nio.channels.Channels.newReader(java.nio.channels.ReadableByteChannel,String)Reader
java.nio.channels.Channels.newWriter(java.nio.channels.WritableByteChannel,java.nio.charset.CharsetEncoder,int)Writer
java.nio.channels.Channels.newWriter(java.nio.channels.WritableByteChannel,String)Writer
java.nio.channels.DatagramChannel.open)java.nio.channels.DatagramChannel
java.nio.channels.DatagramChannel.open(ProtocolFamily)java.nio.channels.DatagramChannel
java.nio.channels.DatagramChannel.validOps)int
java.nio.channels.DatagramChannel.bind(SocketAddress)java.nio.channels.DatagramChannel
java.nio.channels.DatagramChannel.setOption(SocketOption,Object)java.nio.channels.DatagramChannel
java.nio.channels.DatagramChannel.connect(SocketAddress)java.nio.channels.DatagramChannel
java.nio.channels.DatagramChannel.disconnect)java.nio.channels.DatagramChannel
java.nio.channels.DatagramChannel.getRemoteAddress)SocketAddress
java.nio.channels.DatagramChannel.receive(java.nio.ByteBuffer)SocketAddress
java.nio.channels.DatagramChannel.send(java.nio.ByteBuffer,SocketAddress)int
java.nio.channels.DatagramChannel.read(java.nio.ByteBuffer)int
java.nio.channels.DatagramChannel.read(java.nio.ByteBuffer,int,int)long
java.nio.channels.DatagramChannel.read(java.nio.ByteBuffer)long
java.nio.channels.DatagramChannel.write(java.nio.ByteBuffer)int
java.nio.channels.DatagramChannel.write(java.nio.ByteBuffer,int,int)long
java.nio.channels.DatagramChannel.write(java.nio.ByteBuffer)long
java.nio.channels.DatagramChannel.getLocalAddress)SocketAddress
java.nio.channels.FileChannel.toString)String
java.nio.channels.FileChannel.read(java.nio.ByteBuffer)int
java.nio.channels.FileChannel.read(java.nio.ByteBuffer,int,int)long
java.nio.channels.FileChannel.read(java.nio.ByteBuffer)long
java.nio.channels.FileChannel.write(java.nio.ByteBuffer)int
java.nio.channels.FileChannel.write(java.nio.ByteBuffer,int,int)long
java.nio.channels.FileChannel.write(java.nio.ByteBuffer)long
java.nio.channels.FileChannel.position)long
java.nio.channels.FileChannel.position(long)java.nio.channels.FileChannel
java.nio.channels.FileChannel.size)long
java.nio.channels.FileChannel.truncate(long)java.nio.channels.FileChannel
java.nio.channels.FileChannel.force(boolean)void
java.nio.channels.FileChannel.transferTo(long,long,java.nio.channels.WritableByteChannel)long
java.nio.channels.FileChannel.transferFrom(java.nio.channels.ReadableByteChannel,long,long)long
java.nio.channels.FileChannel.read(java.nio.ByteBuffer,long)int
java.nio.channels.FileChannel.write(java.nio.ByteBuffer,long)int
java.nio.channels.FileChannel.map(java.nio.channels.FileChannel.MapMode,long,long)java.nio.MappedByteBuffer
java.nio.channels.FileChannel.lock(long,long,boolean)java.nio.channels.FileLock
java.nio.channels.FileChannel.lock)java.nio.channels.FileLock
java.nio.channels.FileChannel.tryLock(long,long,boolean)java.nio.channels.FileLock
java.nio.channels.FileChannel.tryLock)java.nio.channels.FileLock
java.nio.channels.FileLock.channel)java.nio.channels.FileChannel
java.nio.channels.FileLock.acquiredBy)java.nio.channels.Channel
java.nio.channels.FileLock.position)long
java.nio.channels.FileLock.size)long
java.nio.channels.FileLock.isShared)boolean
java.nio.channels.FileLock.overlaps(long,long)boolean
java.nio.channels.FileLock.release)void
java.nio.channels.FileLock.close)void
java.nio.channels.FileLock.toString)String
java.nio.channels.GatheringByteChannel.write(java.nio.ByteBuffer,int,int)long
java.nio.channels.GatheringByteChannel.write(java.nio.ByteBuffer)long
java.nio.channels.InterruptibleChannel.close)void
java.nio.channels.MembershipKey.block(java.net.InetAddress)java.nio.channels.MembershipKey
java.nio.channels.MulticastChannel.close)void
java.nio.channels.MulticastChannel.join(java.net.InetAddress,java.net.NetworkInterface)java.nio.channels.MembershipKey
java.nio.channels.MulticastChannel.join(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress)java.nio.channels.MembershipKey
java.nio.channels.NetworkChannel.bind(java.net.SocketAddress)java.nio.channels.NetworkChannel
java.nio.channels.NetworkChannel.getLocalAddress)java.net.SocketAddress
java.nio.channels.NetworkChannel.setOption(java.net.SocketOption,Object)java.nio.channels.NetworkChannel
java.nio.channels.NetworkChannel.getOption(java.net.SocketOption)Object
java.nio.channels.Pipe.validOps)int
java.nio.channels.Pipe.validOps)int
java.nio.channels.Pipe.open)java.nio.channels.Pipe
java.nio.channels.ReadableByteChannel.read(java.nio.ByteBuffer)int
java.nio.channels.ScatteringByteChannel.read(java.nio.ByteBuffer,int,int)long
java.nio.channels.ScatteringByteChannel.read(java.nio.ByteBuffer)long
java.nio.channels.SeekableByteChannel.read(java.nio.ByteBuffer)int
java.nio.channels.SeekableByteChannel.write(java.nio.ByteBuffer)int
java.nio.channels.SeekableByteChannel.position)long
java.nio.channels.SeekableByteChannel.position(long)java.nio.channels.SeekableByteChannel
java.nio.channels.SeekableByteChannel.size)long
java.nio.channels.SeekableByteChannel.truncate(long)java.nio.channels.SeekableByteChannel
java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int,Object)java.nio.channels.SelectionKey
java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int)java.nio.channels.SelectionKey
java.nio.channels.SelectableChannel.configureBlocking(boolean)java.nio.channels.SelectableChannel
java.nio.channels.SelectionKey.isReadable)boolean
java.nio.channels.SelectionKey.isWritable)boolean
java.nio.channels.SelectionKey.isConnectable)boolean
java.nio.channels.SelectionKey.isAcceptable)boolean
java.nio.channels.SelectionKey.attach(Object)Object
java.nio.channels.SelectionKey.attachment)Object
java.nio.channels.Selector.open)java.nio.channels.Selector
java.nio.channels.Selector.selectNow)int
java.nio.channels.Selector.select(long)int
java.nio.channels.Selector.select)int
java.nio.channels.Selector.close)void
java.nio.channels.ServerSocketChannel.open)java.nio.channels.ServerSocketChannel
java.nio.channels.ServerSocketChannel.validOps)int
java.nio.channels.ServerSocketChannel.bind(SocketAddress)java.nio.channels.ServerSocketChannel
java.nio.channels.ServerSocketChannel.bind(SocketAddress,int)java.nio.channels.ServerSocketChannel
java.nio.channels.ServerSocketChannel.setOption(SocketOption,Object)java.nio.channels.ServerSocketChannel
java.nio.channels.ServerSocketChannel.accept)java.nio.channels.SocketChannel
java.nio.channels.ServerSocketChannel.getLocalAddress)SocketAddress
java.nio.channels.SocketChannel.open)java.nio.channels.SocketChannel
java.nio.channels.SocketChannel.open(SocketAddress)java.nio.channels.SocketChannel
java.nio.channels.SocketChannel.validOps)int
java.nio.channels.SocketChannel.bind(SocketAddress)java.nio.channels.SocketChannel
java.nio.channels.SocketChannel.setOption(SocketOption,Object)java.nio.channels.SocketChannel
java.nio.channels.SocketChannel.shutdownInput)java.nio.channels.SocketChannel
java.nio.channels.SocketChannel.shutdownOutput)java.nio.channels.SocketChannel
java.nio.channels.SocketChannel.connect(SocketAddress)boolean
java.nio.channels.SocketChannel.finishConnect)boolean
java.nio.channels.SocketChannel.getRemoteAddress)SocketAddress
java.nio.channels.SocketChannel.read(java.nio.ByteBuffer)int
java.nio.channels.SocketChannel.read(java.nio.ByteBuffer,int,int)long
java.nio.channels.SocketChannel.read(java.nio.ByteBuffer)long
java.nio.channels.SocketChannel.write(java.nio.ByteBuffer)int
java.nio.channels.SocketChannel.write(java.nio.ByteBuffer,int,int)long
java.nio.channels.SocketChannel.write(java.nio.ByteBuffer)long
java.nio.channels.SocketChannel.getLocalAddress)SocketAddress
java.nio.channels.WritableByteChannel.write(java.nio.ByteBuffer)int
java.nio.channels.spi.AbstractInterruptibleChannel.close)void
java.nio.channels.spi.AbstractInterruptibleChannel.implCloseChannel)void
java.nio.channels.spi.AbstractInterruptibleChannel.isOpen)boolean
java.nio.channels.spi.AbstractInterruptibleChannel.begin)void
java.nio.channels.spi.AbstractInterruptibleChannel.end(boolean)void
java.nio.channels.spi.AbstractSelectableChannel.provider)java.nio.channels.spi.SelectorProvider
java.nio.channels.spi.AbstractSelectableChannel.isRegistered)boolean
java.nio.channels.spi.AbstractSelectableChannel.keyFor(Selector)SelectionKey
java.nio.channels.spi.AbstractSelectableChannel.register(Selector,int,Object)SelectionKey
java.nio.channels.spi.AbstractSelectableChannel.implCloseChannel)void
java.nio.channels.spi.AbstractSelectableChannel.implCloseSelectableChannel)void
java.nio.channels.spi.AbstractSelectableChannel.isBlocking)boolean
java.nio.channels.spi.AbstractSelectableChannel.blockingLock)Object
java.nio.channels.spi.AbstractSelectableChannel.configureBlocking(boolean)SelectableChannel
java.nio.channels.spi.AbstractSelectableChannel.implConfigureBlocking(boolean)void
java.nio.channels.spi.AbstractSelectionKey.isValid)boolean
java.nio.channels.spi.AbstractSelectionKey.cancel)void
java.nio.channels.spi.AbstractSelector.close)void
java.nio.channels.spi.AbstractSelector.implCloseSelector)void
java.nio.channels.spi.AbstractSelector.isOpen)boolean
java.nio.channels.spi.AbstractSelector.provider)java.nio.channels.spi.SelectorProvider
java.nio.channels.spi.AbstractSelector.cancelledKeys)java.util.Set
java.nio.channels.spi.AbstractSelector.deregister(java.nio.channels.spi.AbstractSelectionKey)void
java.nio.channels.spi.AbstractSelector.begin)void
java.nio.channels.spi.AbstractSelector.end)void
java.nio.channels.spi.AsynchronousChannelProvider.provider)java.nio.channels.spi.AsynchronousChannelProvider
java.nio.channels.spi.AsynchronousChannelProvider.openAsynchronousChannelGroup(int,java.util.concurrent.ThreadFactory)AsynchronousChannelGroup
java.nio.channels.spi.AsynchronousChannelProvider.openAsynchronousChannelGroup(java.util.concurrent.ExecutorService,int)AsynchronousChannelGroup
java.nio.channels.spi.AsynchronousChannelProvider.openAsynchronousServerSocketChannel(AsynchronousChannelGroup)AsynchronousServerSocketChannel
java.nio.channels.spi.AsynchronousChannelProvider.openAsynchronousSocketChannel(AsynchronousChannelGroup)AsynchronousSocketChannel
java.nio.channels.spi.SelectorProvider.provider)java.nio.channels.spi.SelectorProvider
java.nio.channels.spi.SelectorProvider.openDatagramChannel)DatagramChannel
java.nio.channels.spi.SelectorProvider.openDatagramChannel(java.net.ProtocolFamily)DatagramChannel
java.nio.channels.spi.SelectorProvider.openPipe)Pipe
java.nio.channels.spi.SelectorProvider.openSelector)java.nio.channels.spi.AbstractSelector
java.nio.channels.spi.SelectorProvider.openServerSocketChannel)ServerSocketChannel
java.nio.channels.spi.SelectorProvider.openSocketChannel)SocketChannel
java.nio.channels.spi.SelectorProvider.inheritedChannel)Channel
java.nio.charset.Charset.isSupported(String)boolean
java.nio.charset.Charset.forName(String)java.nio.charset.Charset
java.nio.charset.Charset.availableCharsets)SortedMap
java.nio.charset.Charset.defaultCharset)java.nio.charset.Charset
java.nio.charset.Charset.name)String
java.nio.charset.Charset.aliases)Set
java.nio.charset.Charset.displayName)String
java.nio.charset.Charset.isRegistered)boolean
java.nio.charset.Charset.displayName(Locale)String
java.nio.charset.Charset.canEncode)boolean
java.nio.charset.Charset.decode(java.nio.ByteBuffer)java.nio.CharBuffer
java.nio.charset.Charset.encode(java.nio.CharBuffer)java.nio.ByteBuffer
java.nio.charset.Charset.encode(String)java.nio.ByteBuffer
java.nio.charset.Charset.compareTo(java.nio.charset.Charset)int
java.nio.charset.Charset.hashCode)int
java.nio.charset.Charset.equals(Object)boolean
java.nio.charset.Charset.toString)String
java.nio.charset.CharsetDecoder.charset)java.nio.charset.Charset
java.nio.charset.CharsetDecoder.replacement)String
java.nio.charset.CharsetDecoder.replaceWith(String)java.nio.charset.CharsetDecoder
java.nio.charset.CharsetDecoder.implReplaceWith(String)void
java.nio.charset.CharsetDecoder.malformedInputAction)java.nio.charset.CodingErrorAction
java.nio.charset.CharsetDecoder.onMalformedInput(java.nio.charset.CodingErrorAction)java.nio.charset.CharsetDecoder
java.nio.charset.CharsetDecoder.implOnMalformedInput(java.nio.charset.CodingErrorAction)void
java.nio.charset.CharsetDecoder.unmappableCharacterAction)java.nio.charset.CodingErrorAction
java.nio.charset.CharsetDecoder.onUnmappableCharacter(java.nio.charset.CodingErrorAction)java.nio.charset.CharsetDecoder
java.nio.charset.CharsetDecoder.implOnUnmappableCharacter(java.nio.charset.CodingErrorAction)void
java.nio.charset.CharsetDecoder.averageCharsPerByte)float
java.nio.charset.CharsetDecoder.maxCharsPerByte)float
java.nio.charset.CharsetDecoder.decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)java.nio.charset.CoderResult
java.nio.charset.CharsetDecoder.flush(java.nio.CharBuffer)java.nio.charset.CoderResult
java.nio.charset.CharsetDecoder.implFlush(java.nio.CharBuffer)java.nio.charset.CoderResult
java.nio.charset.CharsetDecoder.reset)java.nio.charset.CharsetDecoder
java.nio.charset.CharsetDecoder.implReset)void
java.nio.charset.CharsetDecoder.decode(java.nio.ByteBuffer)java.nio.CharBuffer
java.nio.charset.CharsetDecoder.isAutoDetecting)boolean
java.nio.charset.CharsetDecoder.isCharsetDetected)boolean
java.nio.charset.CharsetDecoder.detectedCharset)java.nio.charset.Charset
java.nio.charset.CharsetEncoder.charset)java.nio.charset.Charset
java.nio.charset.CharsetEncoder.replaceWith(byte)java.nio.charset.CharsetEncoder
java.nio.charset.CharsetEncoder.implReplaceWith(byte)void
java.nio.charset.CharsetEncoder.isLegalReplacement(byte)boolean
java.nio.charset.CharsetEncoder.malformedInputAction)java.nio.charset.CodingErrorAction
java.nio.charset.CharsetEncoder.onMalformedInput(java.nio.charset.CodingErrorAction)java.nio.charset.CharsetEncoder
java.nio.charset.CharsetEncoder.implOnMalformedInput(java.nio.charset.CodingErrorAction)void
java.nio.charset.CharsetEncoder.unmappableCharacterAction)java.nio.charset.CodingErrorAction
java.nio.charset.CharsetEncoder.onUnmappableCharacter(java.nio.charset.CodingErrorAction)java.nio.charset.CharsetEncoder
java.nio.charset.CharsetEncoder.implOnUnmappableCharacter(java.nio.charset.CodingErrorAction)void
java.nio.charset.CharsetEncoder.averageBytesPerChar)float
java.nio.charset.CharsetEncoder.maxBytesPerChar)float
java.nio.charset.CharsetEncoder.encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)java.nio.charset.CoderResult
java.nio.charset.CharsetEncoder.flush(java.nio.ByteBuffer)java.nio.charset.CoderResult
java.nio.charset.CharsetEncoder.implFlush(java.nio.ByteBuffer)java.nio.charset.CoderResult
java.nio.charset.CharsetEncoder.reset)java.nio.charset.CharsetEncoder
java.nio.charset.CharsetEncoder.implReset)void
java.nio.charset.CharsetEncoder.encode(java.nio.CharBuffer)java.nio.ByteBuffer
java.nio.charset.CharsetEncoder.canEncode(char)boolean
java.nio.charset.CharsetEncoder.canEncode(CharSequence)boolean
java.nio.charset.CoderResult.toString)String
java.nio.charset.CoderResult.isUnderflow)boolean
java.nio.charset.CoderResult.isOverflow)boolean
java.nio.charset.CoderResult.isError)boolean
java.nio.charset.CoderResult.isMalformed)boolean
java.nio.charset.CoderResult.isUnmappable)boolean
java.nio.charset.CoderResult.length)int
java.nio.charset.CoderResult.malformedForLength(int)java.nio.charset.CoderResult
java.nio.charset.CoderResult.unmappableForLength(int)java.nio.charset.CoderResult
java.nio.charset.CoderResult.throwException)void
java.nio.charset.CodingErrorAction.toString)String
java.nio.charset.IllegalCharsetNameException.getCharsetName)String
java.nio.charset.MalformedInputException.getInputLength)int
java.nio.charset.MalformedInputException.getMessage)String
java.nio.charset.UnmappableCharacterException.getInputLength)int
java.nio.charset.UnmappableCharacterException.getMessage)String
java.nio.charset.UnsupportedCharsetException.getCharsetName)String
java.nio.file.AccessMode.valueOf(String)java.nio.file.AccessMode
java.nio.file.DirectoryIteratorException.getCause)java.io.IOException
java.nio.file.DirectoryStream.accept(Object)boolean
java.nio.file.Files.newDirectoryStream(java.nio.file.Path)java.nio.file.DirectoryStream
java.nio.file.Files.newDirectoryStream(java.nio.file.Path,String)java.nio.file.DirectoryStream
java.nio.file.Files.newDirectoryStream(java.nio.file.Path,DirectoryStream.Filter)java.nio.file.DirectoryStream
java.nio.file.Files.createLink(java.nio.file.Path,java.nio.file.Path)java.nio.file.Path
java.nio.file.Files.delete(java.nio.file.Path)void
java.nio.file.Files.deleteIfExists(java.nio.file.Path)boolean
java.nio.file.Files.readSymbolicLink(java.nio.file.Path)java.nio.file.Path
java.nio.file.Files.getFileStore(java.nio.file.Path)java.nio.file.FileStore
java.nio.file.Files.isSameFile(java.nio.file.Path,java.nio.file.Path)boolean
java.nio.file.Files.isHidden(java.nio.file.Path)boolean
java.nio.file.Files.probeContentType(java.nio.file.Path)String
java.nio.file.Files.setPosixFilePermissions(java.nio.file.Path,Set)java.nio.file.Path
java.nio.file.Files.setOwner(java.nio.file.Path,java.nio.file.attribute.UserPrincipal)java.nio.file.Path
java.nio.file.Files.isSymbolicLink(java.nio.file.Path)boolean
java.nio.file.Files.setLastModifiedTime(java.nio.file.Path,java.nio.file.attribute.FileTime)java.nio.file.Path
java.nio.file.Files.size(java.nio.file.Path)long
java.nio.file.Files.isReadable(java.nio.file.Path)boolean
java.nio.file.Files.isWritable(java.nio.file.Path)boolean
java.nio.file.Files.isExecutable(java.nio.file.Path)boolean
java.nio.file.Files.walkFileTree(java.nio.file.Path,Set,int,java.nio.file.FileVisitor)java.nio.file.Path
java.nio.file.Files.walkFileTree(java.nio.file.Path,java.nio.file.FileVisitor)java.nio.file.Path
java.nio.file.Files.newBufferedReader(java.nio.file.Path,java.nio.charset.Charset)BufferedReader
java.nio.file.Files.newBufferedReader(java.nio.file.Path)BufferedReader
java.nio.file.Files.copy(java.nio.file.Path,OutputStream)long
java.nio.file.Files.readAllLines(java.nio.file.Path,java.nio.charset.Charset)List
java.nio.file.Files.readAllLines(java.nio.file.Path)List
java.nio.file.Files.list(java.nio.file.Path)java.util.stream.Stream
java.nio.file.Files.lines(java.nio.file.Path,java.nio.charset.Charset)java.util.stream.Stream
java.nio.file.Files.lines(java.nio.file.Path)java.util.stream.Stream
java.nio.file.FileStore.getTotalSpace)long
java.nio.file.FileStore.getUsableSpace)long
java.nio.file.FileStore.getUnallocatedSpace)long
java.nio.file.FileStore.getAttribute(String)Object
java.nio.file.FileSystem.close)void
java.nio.file.FileSystem.newWatchService)java.nio.file.WatchService
java.nio.file.FileSystemException.getFile)String
java.nio.file.FileSystemException.getOtherFile)String
java.nio.file.FileSystemException.getReason)String
java.nio.file.FileSystemException.getMessage)String
java.nio.file.FileSystems.getDefault)java.nio.file.FileSystem
java.nio.file.FileSystems.getFileSystem(java.net.URI)java.nio.file.FileSystem
java.nio.file.FileSystems.newFileSystem(java.net.URI,java.util.Map)java.nio.file.FileSystem
java.nio.file.FileSystems.newFileSystem(java.net.URI,java.util.Map,ClassLoader)java.nio.file.FileSystem
java.nio.file.FileSystems.newFileSystem(java.nio.file.Path,ClassLoader)java.nio.file.FileSystem
java.nio.file.FileVisitOption.valueOf(String)java.nio.file.FileVisitOption
java.nio.file.FileVisitor.preVisitDirectory(Object,java.nio.file.attribute.BasicFileAttributes)java.nio.file.FileVisitResult
java.nio.file.FileVisitor.visitFile(Object,java.nio.file.attribute.BasicFileAttributes)java.nio.file.FileVisitResult
java.nio.file.FileVisitor.visitFileFailed(Object,java.io.IOException)java.nio.file.FileVisitResult
java.nio.file.FileVisitor.postVisitDirectory(Object,java.io.IOException)java.nio.file.FileVisitResult
java.nio.file.FileVisitResult.valueOf(String)java.nio.file.FileVisitResult
java.nio.file.InvalidPathException.getInput)String
java.nio.file.InvalidPathException.getReason)String
java.nio.file.InvalidPathException.getIndex)int
java.nio.file.InvalidPathException.getMessage)String
java.nio.file.LinkOption.valueOf(String)java.nio.file.LinkOption
java.nio.file.Paths.get(java.net.URI)java.nio.file.Path
java.nio.file.SecureDirectoryStream.deleteFile(Object)void
java.nio.file.SecureDirectoryStream.deleteDirectory(Object)void
java.nio.file.SecureDirectoryStream.move(Object,java.nio.file.SecureDirectoryStream,Object)void
java.nio.file.SimpleFileVisitor.preVisitDirectory(Object,java.nio.file.attribute.BasicFileAttributes)java.nio.file.FileVisitResult
java.nio.file.SimpleFileVisitor.visitFile(Object,java.nio.file.attribute.BasicFileAttributes)java.nio.file.FileVisitResult
java.nio.file.SimpleFileVisitor.visitFileFailed(Object,java.io.IOException)java.nio.file.FileVisitResult
java.nio.file.SimpleFileVisitor.postVisitDirectory(Object,java.io.IOException)java.nio.file.FileVisitResult
java.nio.file.StandardCopyOption.valueOf(String)java.nio.file.StandardCopyOption
java.nio.file.StandardOpenOption.valueOf(String)java.nio.file.StandardOpenOption
java.nio.file.WatchService.close)void
java.nio.file.WatchService.poll(long,java.util.concurrent.TimeUnit)java.nio.file.WatchKey
java.nio.file.WatchService.take)java.nio.file.WatchKey
java.nio.file.attribute.AclEntry.build)java.nio.file.attribute.AclEntry
java.nio.file.attribute.AclEntry.setType(java.nio.file.attribute.AclEntryType)Builder
java.nio.file.attribute.AclEntry.setPrincipal(java.nio.file.attribute.UserPrincipal)Builder
java.nio.file.attribute.AclEntry.setPermissions(java.util.Set)Builder
java.nio.file.attribute.AclEntry.setFlags(java.util.Set)Builder
java.nio.file.attribute.AclEntry.newBuilder)Builder
java.nio.file.attribute.AclEntry.newBuilder(java.nio.file.attribute.AclEntry)Builder
java.nio.file.attribute.AclEntry.type)java.nio.file.attribute.AclEntryType
java.nio.file.attribute.AclEntry.principal)java.nio.file.attribute.UserPrincipal
java.nio.file.attribute.AclEntry.permissions)java.util.Set
java.nio.file.attribute.AclEntry.flags)java.util.Set
java.nio.file.attribute.AclEntry.equals(Object)boolean
java.nio.file.attribute.AclEntry.hashCode)int
java.nio.file.attribute.AclEntry.toString)String
java.nio.file.attribute.AclEntryFlag.valueOf(String)java.nio.file.attribute.AclEntryFlag
java.nio.file.attribute.AclEntryPermission.valueOf(String)java.nio.file.attribute.AclEntryPermission
java.nio.file.attribute.AclEntryType.valueOf(String)java.nio.file.attribute.AclEntryType
java.nio.file.attribute.AclFileAttributeView.getAcl)java.util.List
java.nio.file.attribute.AclFileAttributeView.setAcl(java.util.List)void
java.nio.file.attribute.BasicFileAttributeView.readAttributes)java.nio.file.attribute.BasicFileAttributes
java.nio.file.attribute.BasicFileAttributeView.setTimes(java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime)void
java.nio.file.attribute.DosFileAttributeView.readAttributes)java.nio.file.attribute.DosFileAttributes
java.nio.file.attribute.DosFileAttributeView.setReadOnly(boolean)void
java.nio.file.attribute.DosFileAttributeView.setHidden(boolean)void
java.nio.file.attribute.DosFileAttributeView.setSystem(boolean)void
java.nio.file.attribute.DosFileAttributeView.setArchive(boolean)void
java.nio.file.attribute.FileOwnerAttributeView.getOwner)java.nio.file.attribute.UserPrincipal
java.nio.file.attribute.FileOwnerAttributeView.setOwner(java.nio.file.attribute.UserPrincipal)void
java.nio.file.attribute.FileTime.from(long,java.util.concurrent.TimeUnit)java.nio.file.attribute.FileTime
java.nio.file.attribute.FileTime.fromMillis(long)java.nio.file.attribute.FileTime
java.nio.file.attribute.FileTime.from(java.time.Instant)java.nio.file.attribute.FileTime
java.nio.file.attribute.FileTime.to(java.util.concurrent.TimeUnit)long
java.nio.file.attribute.FileTime.toMillis)long
java.nio.file.attribute.FileTime.toInstant)java.time.Instant
java.nio.file.attribute.FileTime.equals(Object)boolean
java.nio.file.attribute.FileTime.hashCode)int
java.nio.file.attribute.FileTime.compareTo(java.nio.file.attribute.FileTime)int
java.nio.file.attribute.FileTime.toString)String
java.nio.file.attribute.PosixFileAttributeView.readAttributes)java.nio.file.attribute.PosixFileAttributes
java.nio.file.attribute.PosixFileAttributeView.setPermissions(java.util.Set)void
java.nio.file.attribute.PosixFileAttributeView.setGroup(java.nio.file.attribute.GroupPrincipal)void
java.nio.file.attribute.PosixFilePermission.valueOf(String)java.nio.file.attribute.PosixFilePermission
java.nio.file.attribute.PosixFilePermissions.toString(java.util.Set)String
java.nio.file.attribute.PosixFilePermissions.fromString(String)java.util.Set
java.nio.file.attribute.PosixFilePermissions.asFileAttribute(java.util.Set)java.nio.file.attribute.FileAttribute
java.nio.file.attribute.UserDefinedFileAttributeView.list)java.util.List
java.nio.file.attribute.UserDefinedFileAttributeView.size(String)int
java.nio.file.attribute.UserDefinedFileAttributeView.read(String,java.nio.ByteBuffer)int
java.nio.file.attribute.UserDefinedFileAttributeView.write(String,java.nio.ByteBuffer)int
java.nio.file.attribute.UserDefinedFileAttributeView.delete(String)void
java.nio.file.attribute.UserPrincipalLookupService.lookupPrincipalByName(String)java.nio.file.attribute.UserPrincipal
java.nio.file.attribute.UserPrincipalLookupService.lookupPrincipalByGroupName(String)java.nio.file.attribute.GroupPrincipal
java.nio.file.attribute.UserPrincipalNotFoundException.getName)String
java.nio.file.spi.FileSystemProvider.installedProviders)List
java.nio.file.spi.FileSystemProvider.newFileSystem(java.net.URI,Map)FileSystem
java.nio.file.spi.FileSystemProvider.newFileSystem(Path,Map)FileSystem
java.nio.file.spi.FileSystemProvider.newDirectoryStream(Path,java.nio.file.DirectoryStream.Filter)DirectoryStream
java.nio.file.spi.FileSystemProvider.createLink(Path,Path)void
java.nio.file.spi.FileSystemProvider.delete(Path)void
java.nio.file.spi.FileSystemProvider.deleteIfExists(Path)boolean
java.nio.file.spi.FileSystemProvider.readSymbolicLink(Path)Path
java.nio.file.spi.FileSystemProvider.isSameFile(Path,Path)boolean
java.nio.file.spi.FileSystemProvider.isHidden(Path)boolean
java.nio.file.spi.FileSystemProvider.getFileStore(Path)FileStore
java.nio.file.spi.FileTypeDetector.probeContentType(java.nio.file.Path)String
java.security.AccessControlContext.getDomainCombiner)java.security.DomainCombiner
java.security.AccessControlContext.checkPermission(java.security.acl.Permission)void
java.security.AccessControlException.getPermission)java.security.acl.Permission
java.security.AccessController.doPrivileged(java.security.PrivilegedAction)Object
java.security.AccessController.doPrivilegedWithCombiner(java.security.PrivilegedAction)Object
java.security.AccessController.doPrivileged(java.security.PrivilegedAction,java.security.AccessControlContext)Object
java.security.AccessController.doPrivileged(java.security.PrivilegedExceptionAction)Object
java.security.AccessController.doPrivilegedWithCombiner(java.security.PrivilegedExceptionAction)Object
java.security.AccessController.doPrivileged(java.security.PrivilegedExceptionAction,java.security.AccessControlContext)Object
java.security.AccessController.getContext)java.security.AccessControlContext
java.security.AccessController.checkPermission(java.security.acl.Permission)void
java.security.AlgorithmParameterGenerator.getAlgorithm)String
java.security.AlgorithmParameterGenerator.getInstance(String)java.security.AlgorithmParameterGenerator
java.security.AlgorithmParameterGenerator.getInstance(String,String)java.security.AlgorithmParameterGenerator
java.security.AlgorithmParameterGenerator.getInstance(String,java.security.Provider)java.security.AlgorithmParameterGenerator
java.security.AlgorithmParameterGenerator.getProvider)java.security.Provider
java.security.AlgorithmParameterGenerator.init(int)void
java.security.AlgorithmParameterGenerator.init(int,java.security.SecureRandom)void
java.security.AlgorithmParameterGenerator.init(java.security.spec.AlgorithmParameterSpec)void
java.security.AlgorithmParameterGenerator.init(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)void
java.security.AlgorithmParameterGenerator.generateParameters)java.security.AlgorithmParameters
java.security.AlgorithmParameterGeneratorSpi.engineInit(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)void
java.security.AlgorithmParameters.getAlgorithm)String
java.security.AlgorithmParameters.getInstance(String)java.security.AlgorithmParameters
java.security.AlgorithmParameters.getInstance(String,String)java.security.AlgorithmParameters
java.security.AlgorithmParameters.getInstance(String,java.security.Provider)java.security.AlgorithmParameters
java.security.AlgorithmParameters.getProvider)java.security.Provider
java.security.AlgorithmParameters.init(java.security.spec.AlgorithmParameterSpec)void
java.security.AlgorithmParameters.init(byte)void
java.security.AlgorithmParameters.init(byte,String)void
java.security.AlgorithmParameters.getParameterSpec(Class)java.security.spec.AlgorithmParameterSpec
java.security.AlgorithmParameters.toString)String
java.security.AlgorithmParametersSpi.engineInit(java.security.spec.AlgorithmParameterSpec)void
java.security.AlgorithmParametersSpi.engineInit(byte)void
java.security.AlgorithmParametersSpi.engineInit(byte,String)void
java.security.AlgorithmParametersSpi.engineGetParameterSpec(Class)java.security.spec.AlgorithmParameterSpec
java.security.AllPermission.implies(java.security.acl.Permission)boolean
java.security.AllPermission.getActions)String
java.security.AuthProvider.login(javax.security.auth.Subject,javax.security.auth.callback.CallbackHandler)void
java.security.AuthProvider.logout)void
java.security.BasicPermission.implies(java.security.acl.Permission)boolean
java.security.BasicPermission.getActions)String
java.security.Certificate.encode(OutputStream)void
java.security.Certificate.decode(InputStream)void
java.security.CodeSigner.getSignerCertPath)java.security.cert.CertPath
java.security.CodeSigner.getTimestamp)java.security.Timestamp
java.security.CodeSigner.hashCode)int
java.security.CodeSigner.equals(Object)boolean
java.security.CodeSigner.toString)String
java.security.CodeSource.getLocation)java.net.URL
java.security.CodeSource.implies(java.security.CodeSource)boolean
java.security.CryptoPrimitive.valueOf(String)java.security.CryptoPrimitive
java.security.DigestInputStream.getMessageDigest)java.security.MessageDigest
java.security.DigestInputStream.setMessageDigest(java.security.MessageDigest)void
java.security.DigestInputStream.read)int
java.security.DigestInputStream.read(byte,int,int)int
java.security.DigestInputStream.on(boolean)void
java.security.DigestInputStream.toString)String
java.security.DigestOutputStream.getMessageDigest)java.security.MessageDigest
java.security.DigestOutputStream.setMessageDigest(java.security.MessageDigest)void
java.security.DigestOutputStream.write(int)void
java.security.DigestOutputStream.write(byte,int,int)void
java.security.DigestOutputStream.on(boolean)void
java.security.DigestOutputStream.toString)String
java.security.DomainLoadStoreParameter.getConfiguration)java.net.URI
java.security.DomainLoadStoreParameter.getProtectionParams)java.util.Map
java.security.Guard.checkGuard(Object)void
java.security.GuardedObject.getObject)Object
java.security.Identity.getName)String
java.security.Identity.getScope)java.security.IdentityScope
java.security.Identity.getPublicKey)java.security.PublicKey
java.security.Identity.setPublicKey(java.security.PublicKey)void
java.security.Identity.setInfo(String)void
java.security.Identity.getInfo)String
java.security.Identity.addCertificate(java.security.cert.Certificate)void
java.security.Identity.removeCertificate(java.security.cert.Certificate)void
java.security.Identity.equals(Object)boolean
java.security.Identity.identityEquals(java.security.Identity)boolean
java.security.Identity.toString)String
java.security.Identity.toString(boolean)String
java.security.Identity.hashCode)int
java.security.IdentityScope.getSystemScope)java.security.IdentityScope
java.security.IdentityScope.setSystemScope(java.security.IdentityScope)void
java.security.IdentityScope.getIdentity(java.security.Principal)java.security.Identity
java.security.IdentityScope.addIdentity(java.security.Identity)void
java.security.IdentityScope.removeIdentity(java.security.Identity)void
java.security.IdentityScope.toString)String
java.security.KeyFactory.getInstance(String)java.security.KeyFactory
java.security.KeyFactory.getInstance(String,String)java.security.KeyFactory
java.security.KeyFactory.getInstance(String,java.security.Provider)java.security.KeyFactory
java.security.KeyFactory.getProvider)java.security.Provider
java.security.KeyFactory.getAlgorithm)String
java.security.KeyFactory.generatePublic(java.security.spec.KeySpec)java.security.PublicKey
java.security.KeyFactory.generatePrivate(java.security.spec.KeySpec)java.security.PrivateKey
java.security.KeyFactory.getKeySpec(java.security.Key,Class)java.security.spec.KeySpec
java.security.KeyFactory.translateKey(java.security.Key)java.security.Key
java.security.KeyFactorySpi.engineGeneratePublic(java.security.spec.KeySpec)java.security.PublicKey
java.security.KeyFactorySpi.engineGeneratePrivate(java.security.spec.KeySpec)java.security.PrivateKey
java.security.KeyFactorySpi.engineGetKeySpec(java.security.Key,Class)java.security.spec.KeySpec
java.security.KeyFactorySpi.engineTranslateKey(java.security.Key)java.security.Key
java.security.KeyPair.getPublic)java.security.PublicKey
java.security.KeyPair.getPrivate)java.security.PrivateKey
java.security.KeyPairGenerator.getAlgorithm)String
java.security.KeyPairGenerator.getInstance(String)java.security.KeyPairGenerator
java.security.KeyPairGenerator.getInstance(String,String)java.security.KeyPairGenerator
java.security.KeyPairGenerator.getInstance(String,java.security.Provider)java.security.KeyPairGenerator
java.security.KeyPairGenerator.getProvider)java.security.Provider
java.security.KeyPairGenerator.initialize(int)void
java.security.KeyPairGenerator.initialize(int,java.security.SecureRandom)void
java.security.KeyPairGenerator.initialize(java.security.spec.AlgorithmParameterSpec)void
java.security.KeyPairGenerator.initialize(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)void
java.security.KeyPairGenerator.genKeyPair)java.security.KeyPair
java.security.KeyPairGenerator.generateKeyPair)java.security.KeyPair
java.security.KeyPairGeneratorSpi.initialize(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)void
java.security.KeyRep.valueOf(String)Type
java.security.KeyRep.readResolve)Object
java.security.KeyStore.getTrustedCertificate)java.security.cert.Certificate
java.security.KeyStore.getAttributes)Set
java.security.KeyStore.toString)String
java.security.KeyStore.getSecretKey)javax.crypto.SecretKey
java.security.KeyStore.getAttributes)Set
java.security.KeyStore.toString)String
java.security.KeyStore.getPrivateKey)java.security.PrivateKey
java.security.KeyStore.getCertificate)java.security.cert.Certificate
java.security.KeyStore.getAttributes)Set
java.security.KeyStore.toString)String
java.security.KeyStore.getProtectionAlgorithm)String
java.security.KeyStore.getProtectionParameters)java.security.spec.AlgorithmParameterSpec
java.security.KeyStore.getAttributes)Set
java.security.KeyStore.getCallbackHandler)javax.security.auth.callback.CallbackHandler
java.security.KeyStore.getKeyStore)java.security.KeyStore
java.security.KeyStore.getProtectionParameter(String)java.security.KeyStore.ProtectionParameter
java.security.KeyStore.newInstance(java.security.KeyStore,java.security.KeyStore.ProtectionParameter)Builder
java.security.KeyStore.newInstance(String,java.security.Provider,File,java.security.KeyStore.ProtectionParameter)Builder
java.security.KeyStore.newInstance(String,java.security.Provider,java.security.KeyStore.ProtectionParameter)Builder
java.security.KeyStore.getInstance(String)java.security.KeyStore
java.security.KeyStore.getInstance(String,String)java.security.KeyStore
java.security.KeyStore.getInstance(String,java.security.Provider)java.security.KeyStore
java.security.KeyStore.getDefaultType)String
java.security.KeyStore.getProvider)java.security.Provider
java.security.KeyStore.getType)String
java.security.KeyStore.getKey(String,char)java.security.Key
java.security.KeyStore.getCertificate(String)java.security.cert.Certificate
java.security.KeyStore.getCreationDate(String)Date
java.security.KeyStore.setKeyEntry(String,java.security.Key,char,java.security.cert.Certificate)void
java.security.KeyStore.setKeyEntry(String,byte,java.security.cert.Certificate)void
java.security.KeyStore.setCertificateEntry(String,java.security.cert.Certificate)void
java.security.KeyStore.deleteEntry(String)void
java.security.KeyStore.aliases)Enumeration
java.security.KeyStore.containsAlias(String)boolean
java.security.KeyStore.size)int
java.security.KeyStore.isKeyEntry(String)boolean
java.security.KeyStore.isCertificateEntry(String)boolean
java.security.KeyStore.getCertificateAlias(java.security.cert.Certificate)String
java.security.KeyStore.store(OutputStream,char)void
java.security.KeyStore.store(java.security.KeyStore.LoadStoreParameter)void
java.security.KeyStore.load(InputStream,char)void
java.security.KeyStore.load(java.security.KeyStore.LoadStoreParameter)void
java.security.KeyStore.getEntry(String,java.security.KeyStore.ProtectionParameter)java.security.KeyStore.Entry
java.security.KeyStore.setEntry(String,java.security.KeyStore.Entry,java.security.KeyStore.ProtectionParameter)void
java.security.KeyStore.entryInstanceOf(String,Class)boolean
java.security.KeyStoreSpi.engineGetKey(String,char)java.security.Key
java.security.KeyStoreSpi.engineSetKeyEntry(String,java.security.Key,char,java.security.cert.Certificate)void
java.security.KeyStoreSpi.engineSetKeyEntry(String,byte,java.security.cert.Certificate)void
java.security.KeyStoreSpi.engineSetCertificateEntry(String,java.security.cert.Certificate)void
java.security.KeyStoreSpi.engineDeleteEntry(String)void
java.security.KeyStoreSpi.engineStore(OutputStream,char)void
java.security.KeyStoreSpi.engineStore(KeyStore.LoadStoreParameter)void
java.security.KeyStoreSpi.engineLoad(InputStream,char)void
java.security.KeyStoreSpi.engineLoad(KeyStore.LoadStoreParameter)void
java.security.KeyStoreSpi.engineSetEntry(String,KeyStore.Entry,KeyStore.ProtectionParameter)void
java.security.KeyStoreSpi.engineEntryInstanceOf(String,Class)boolean
java.security.MessageDigest.getInstance(String)java.security.MessageDigest
java.security.MessageDigest.getInstance(String,String)java.security.MessageDigest
java.security.MessageDigest.getInstance(String,java.security.Provider)java.security.MessageDigest
java.security.MessageDigest.getProvider)java.security.Provider
java.security.MessageDigest.update(byte)void
java.security.MessageDigest.update(byte,int,int)void
java.security.MessageDigest.update(byte)void
java.security.MessageDigest.update(java.nio.ByteBuffer)void
java.security.MessageDigest.digest(byte,int,int)int
java.security.MessageDigest.toString)String
java.security.MessageDigest.isEqual(byte,byte)boolean
java.security.MessageDigest.reset)void
java.security.MessageDigest.getAlgorithm)String
java.security.MessageDigest.getDigestLength)int
java.security.MessageDigest.clone)Object
java.security.MessageDigestSpi.engineGetDigestLength)int
java.security.MessageDigestSpi.engineUpdate(java.nio.ByteBuffer)void
java.security.MessageDigestSpi.engineDigest(byte,int,int)int
java.security.MessageDigestSpi.clone)Object
java.security.Permission.checkGuard(Object)void
java.security.Permission.getName)String
java.security.Permission.newPermissionCollection)java.security.PermissionCollection
java.security.PermissionCollection.setReadOnly)void
java.security.PermissionCollection.isReadOnly)boolean
java.security.Permissions.add(java.security.acl.Permission)void
java.security.Permissions.implies(java.security.acl.Permission)boolean
java.security.Permissions.elements)java.util.Enumeration
java.security.PKCS12Attribute.getName)String
java.security.PKCS12Attribute.getValue)String
java.security.PKCS12Attribute.equals(Object)boolean
java.security.PKCS12Attribute.hashCode)int
java.security.PKCS12Attribute.toString)String
java.security.Policy.getPolicy)java.security.Policy
java.security.Policy.setPolicy(java.security.Policy)void
java.security.Policy.getInstance(String,java.security.Policy.Parameters)java.security.Policy
java.security.Policy.getInstance(String,java.security.Policy.Parameters,String)java.security.Policy
java.security.Policy.getInstance(String,java.security.Policy.Parameters,java.security.Provider)java.security.Policy
java.security.Policy.getProvider)java.security.Provider
java.security.Policy.getType)String
java.security.Policy.getParameters)java.security.Policy.Parameters
java.security.Policy.getPermissions(java.security.CodeSource)java.security.PermissionCollection
java.security.Policy.getPermissions(java.security.ProtectionDomain)java.security.PermissionCollection
java.security.Policy.implies(java.security.ProtectionDomain,java.security.acl.Permission)boolean
java.security.Policy.refresh)void
java.security.PolicySpi.engineRefresh)void
java.security.PolicySpi.engineGetPermissions(java.security.CodeSource)java.security.PermissionCollection
java.security.PolicySpi.engineGetPermissions(java.security.ProtectionDomain)java.security.PermissionCollection
java.security.Principal.implies(javax.security.auth.Subject)boolean
java.security.PrivilegedActionException.getException)Exception
java.security.PrivilegedActionException.getCause)Throwable
java.security.PrivilegedActionException.toString)String
java.security.PrivilegedExceptionAction.run)Object
java.security.ProtectionDomain.getCodeSource)java.security.CodeSource
java.security.ProtectionDomain.getClassLoader)ClassLoader
java.security.ProtectionDomain.getPermissions)java.security.PermissionCollection
java.security.ProtectionDomain.implies(java.security.acl.Permission)boolean
java.security.Provider.getType)String
java.security.Provider.getAlgorithm)String
java.security.Provider.getProvider)java.security.Provider
java.security.Provider.getClassName)String
java.security.Provider.getAttribute(String)String
java.security.Provider.newInstance(Object)Object
java.security.Provider.supportsParameter(Object)boolean
java.security.Provider.toString)String
java.security.Provider.getName)String
java.security.Provider.getVersion)double
java.security.Provider.getInfo)String
java.security.Provider.toString)String
java.security.Provider.keySet)Set
java.security.Provider.values)Collection
java.security.Provider.get(Object)Object
java.security.Provider.keys)Enumeration
java.security.Provider.elements)Enumeration
java.security.Provider.getProperty(String)String
java.security.SecureClassLoader.defineClass(String,byte,int,int,java.security.CodeSource)Class
java.security.SecureClassLoader.defineClass(String,java.nio.ByteBuffer,java.security.CodeSource)Class
java.security.SecureClassLoader.getPermissions(java.security.CodeSource)java.security.PermissionCollection
java.security.SecureRandom.getInstance(String)java.security.SecureRandom
java.security.SecureRandom.getInstance(String,String)java.security.SecureRandom
java.security.SecureRandom.getInstance(String,java.security.Provider)java.security.SecureRandom
java.security.SecureRandom.getProvider)java.security.Provider
java.security.SecureRandom.getAlgorithm)String
java.security.SecureRandom.setSeed(long)void
java.security.SecureRandom.next(int)int
java.security.SecureRandom.getInstanceStrong)java.security.SecureRandom
java.security.Security.getAlgorithmProperty(String,String)String
java.security.Security.addProvider(java.security.Provider)int
java.security.Security.getProvider(String)java.security.Provider
java.security.Security.getProperty(String)String
java.security.Security.setProperty(String,String)void
java.security.Security.getAlgorithms(String)java.util.Set
java.security.Signature.getInstance(String)java.security.Signature
java.security.Signature.getInstance(String,String)java.security.Signature
java.security.Signature.getInstance(String,java.security.Provider)java.security.Signature
java.security.Signature.getProvider)java.security.Provider
java.security.Signature.initVerify(java.security.PublicKey)void
java.security.Signature.initVerify(java.security.cert.Certificate)void
java.security.Signature.initSign(java.security.PrivateKey)void
java.security.Signature.initSign(java.security.PrivateKey,java.security.SecureRandom)void
java.security.Signature.sign(byte,int,int)int
java.security.Signature.verify(byte)boolean
java.security.Signature.verify(byte,int,int)boolean
java.security.Signature.update(byte)void
java.security.Signature.update(byte)void
java.security.Signature.update(byte,int,int)void
java.security.Signature.update(java.nio.ByteBuffer)void
java.security.Signature.getAlgorithm)String
java.security.Signature.toString)String
java.security.Signature.setParameter(String,Object)void
java.security.Signature.setParameter(java.security.spec.AlgorithmParameterSpec)void
java.security.Signature.getParameters)java.security.AlgorithmParameters
java.security.Signature.getParameter(String)Object
java.security.Signature.clone)Object
java.security.SignatureSpi.engineInitVerify(java.security.PublicKey)void
java.security.SignatureSpi.engineInitSign(java.security.PrivateKey)void
java.security.SignatureSpi.engineInitSign(java.security.PrivateKey,java.security.SecureRandom)void
java.security.SignatureSpi.engineUpdate(byte)void
java.security.SignatureSpi.engineUpdate(byte,int,int)void
java.security.SignatureSpi.engineUpdate(java.nio.ByteBuffer)void
java.security.SignatureSpi.engineSign(byte,int,int)int
java.security.SignatureSpi.engineVerify(byte)boolean
java.security.SignatureSpi.engineVerify(byte,int,int)boolean
java.security.SignatureSpi.engineSetParameter(String,Object)void
java.security.SignatureSpi.engineSetParameter(java.security.spec.AlgorithmParameterSpec)void
java.security.SignatureSpi.engineGetParameters)java.security.AlgorithmParameters
java.security.SignatureSpi.engineGetParameter(String)Object
java.security.SignatureSpi.clone)Object
java.security.SignedObject.getObject)Object
java.security.SignedObject.getAlgorithm)String
java.security.SignedObject.verify(java.security.PublicKey,java.security.Signature)boolean
java.security.Signer.getPrivateKey)java.security.PrivateKey
java.security.Signer.setKeyPair(java.security.KeyPair)void
java.security.Signer.toString)String
java.security.Timestamp.getTimestamp)java.util.Date
java.security.Timestamp.getSignerCertPath)java.security.cert.CertPath
java.security.Timestamp.hashCode)int
java.security.Timestamp.equals(Object)boolean
java.security.Timestamp.toString)String
java.security.UnresolvedPermission.implies(java.security.acl.Permission)boolean
java.security.UnresolvedPermission.getActions)String
java.security.UnresolvedPermission.getUnresolvedType)String
java.security.UnresolvedPermission.getUnresolvedName)String
java.security.UnresolvedPermission.getUnresolvedActions)String
java.security.acl.Acl.setName(java.security.Principal,String)void
java.security.acl.Acl.addEntry(java.security.Principal,java.security.acl.AclEntry)boolean
java.security.acl.Acl.removeEntry(java.security.Principal,java.security.acl.AclEntry)boolean
java.security.acl.Owner.addOwner(java.security.Principal,java.security.Principal)boolean
java.security.acl.Owner.deleteOwner(java.security.Principal,java.security.Principal)boolean
java.security.cert.Certificate.readResolve)Object
java.security.cert.Certificate.getType)String
java.security.cert.Certificate.equals(Object)boolean
java.security.cert.Certificate.hashCode)int
java.security.cert.Certificate.verify(PublicKey)void
java.security.cert.Certificate.verify(PublicKey,String)void
java.security.cert.Certificate.verify(PublicKey,Provider)void
java.security.cert.Certificate.writeReplace)Object
java.security.cert.CertificateFactory.getInstance(String)java.security.cert.CertificateFactory
java.security.cert.CertificateFactory.getInstance(String,String)java.security.cert.CertificateFactory
java.security.cert.CertificateFactory.getInstance(String,java.security.Provider)java.security.cert.CertificateFactory
java.security.cert.CertificateFactory.getProvider)java.security.Provider
java.security.cert.CertificateFactory.getType)String
java.security.cert.CertificateFactory.generateCertificate(java.io.InputStream)java.security.cert.Certificate
java.security.cert.CertificateFactory.getCertPathEncodings)Iterator
java.security.cert.CertificateFactory.generateCertPath(java.io.InputStream)java.security.cert.CertPath
java.security.cert.CertificateFactory.generateCertPath(java.io.InputStream,String)java.security.cert.CertPath
java.security.cert.CertificateFactory.generateCertPath(List)java.security.cert.CertPath
java.security.cert.CertificateFactory.generateCertificates(java.io.InputStream)Collection
java.security.cert.CertificateFactory.generateCRL(java.io.InputStream)java.security.cert.CRL
java.security.cert.CertificateFactory.generateCRLs(java.io.InputStream)Collection
java.security.cert.CertificateFactorySpi.engineGenerateCertificate(java.io.InputStream)java.security.cert.Certificate
java.security.cert.CertificateFactorySpi.engineGenerateCertPath(java.io.InputStream)java.security.cert.CertPath
java.security.cert.CertificateFactorySpi.engineGenerateCertPath(java.io.InputStream,String)java.security.cert.CertPath
java.security.cert.CertificateFactorySpi.engineGenerateCertPath(List)java.security.cert.CertPath
java.security.cert.CertificateFactorySpi.engineGetCertPathEncodings)Iterator
java.security.cert.CertificateFactorySpi.engineGenerateCertificates(java.io.InputStream)Collection
java.security.cert.CertificateFactorySpi.engineGenerateCRL(java.io.InputStream)java.security.cert.CRL
java.security.cert.CertificateFactorySpi.engineGenerateCRLs(java.io.InputStream)Collection
java.security.cert.CertificateRevokedException.getRevocationDate)java.util.Date
java.security.cert.CertificateRevokedException.getRevocationReason)java.security.cert.CRLReason
java.security.cert.CertificateRevokedException.getAuthorityName)javax.security.auth.x500.X500Principal
java.security.cert.CertificateRevokedException.getInvalidityDate)java.util.Date
java.security.cert.CertificateRevokedException.getExtensions)java.util.Map
java.security.cert.CertificateRevokedException.getMessage)String
java.security.cert.CertPath.readResolve)Object
java.security.cert.CertPath.getType)String
java.security.cert.CertPath.equals(Object)boolean
java.security.cert.CertPath.hashCode)int
java.security.cert.CertPath.toString)String
java.security.cert.CertPath.writeReplace)Object
java.security.cert.CertPathBuilder.getInstance(String)java.security.cert.CertPathBuilder
java.security.cert.CertPathBuilder.getInstance(String,String)java.security.cert.CertPathBuilder
java.security.cert.CertPathBuilder.getInstance(String,Provider)java.security.cert.CertPathBuilder
java.security.cert.CertPathBuilder.getProvider)Provider
java.security.cert.CertPathBuilder.getAlgorithm)String
java.security.cert.CertPathBuilder.build(java.security.cert.CertPathParameters)java.security.cert.CertPathBuilderResult
java.security.cert.CertPathBuilder.getDefaultType)String
java.security.cert.CertPathBuilder.getRevocationChecker)java.security.cert.CertPathChecker
java.security.cert.CertPathBuilderSpi.engineBuild(java.security.cert.CertPathParameters)java.security.cert.CertPathBuilderResult
java.security.cert.CertPathBuilderSpi.engineGetRevocationChecker)java.security.cert.CertPathChecker
java.security.cert.CertPathChecker.init(boolean)void
java.security.cert.CertPathChecker.check(java.security.cert.Certificate)void
java.security.cert.CertPathValidator.getInstance(String)java.security.cert.CertPathValidator
java.security.cert.CertPathValidator.getInstance(String,String)java.security.cert.CertPathValidator
java.security.cert.CertPathValidator.getInstance(String,Provider)java.security.cert.CertPathValidator
java.security.cert.CertPathValidator.getProvider)Provider
java.security.cert.CertPathValidator.getAlgorithm)String
java.security.cert.CertPathValidator.validate(java.security.cert.CertPath,java.security.cert.CertPathParameters)java.security.cert.CertPathValidatorResult
java.security.cert.CertPathValidator.getDefaultType)String
java.security.cert.CertPathValidator.getRevocationChecker)java.security.cert.CertPathChecker
java.security.cert.CertPathValidatorException.valueOf(String)BasicReason
java.security.cert.CertPathValidatorException.getCertPath)java.security.cert.CertPath
java.security.cert.CertPathValidatorException.getIndex)int
java.security.cert.CertPathValidatorException.getReason)java.security.cert.CertPathValidatorException.Reason
java.security.cert.CertPathValidatorSpi.engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)java.security.cert.CertPathValidatorResult
java.security.cert.CertPathValidatorSpi.engineGetRevocationChecker)java.security.cert.CertPathChecker
java.security.cert.CertStore.getCertificates(java.security.cert.CertSelector)java.util.Collection
java.security.cert.CertStore.getCRLs(java.security.cert.CRLSelector)java.util.Collection
java.security.cert.CertStore.getInstance(String,java.security.cert.CertStoreParameters)java.security.cert.CertStore
java.security.cert.CertStore.getInstance(String,java.security.cert.CertStoreParameters,String)java.security.cert.CertStore
java.security.cert.CertStore.getInstance(String,java.security.cert.CertStoreParameters,Provider)java.security.cert.CertStore
java.security.cert.CertStore.getCertStoreParameters)java.security.cert.CertStoreParameters
java.security.cert.CertStore.getType)String
java.security.cert.CertStore.getProvider)Provider
java.security.cert.CertStore.getDefaultType)String
java.security.cert.CertStoreSpi.engineGetCertificates(java.security.cert.CertSelector)java.util.Collection
java.security.cert.CertStoreSpi.engineGetCRLs(java.security.cert.CRLSelector)java.util.Collection
java.security.cert.CollectionCertStoreParameters.getCollection)java.util.Collection
java.security.cert.CollectionCertStoreParameters.clone)Object
java.security.cert.CollectionCertStoreParameters.toString)String
java.security.cert.CRL.getType)String
java.security.cert.CRLReason.valueOf(String)java.security.cert.CRLReason
java.security.cert.Extension.encode(java.io.OutputStream)void
java.security.cert.LDAPCertStoreParameters.getServerName)String
java.security.cert.LDAPCertStoreParameters.getPort)int
java.security.cert.LDAPCertStoreParameters.clone)Object
java.security.cert.LDAPCertStoreParameters.toString)String
java.security.cert.PKIXBuilderParameters.setMaxPathLength(int)void
java.security.cert.PKIXBuilderParameters.getMaxPathLength)int
java.security.cert.PKIXBuilderParameters.toString)String
java.security.cert.PKIXCertPathBuilderResult.getCertPath)java.security.cert.CertPath
java.security.cert.PKIXCertPathBuilderResult.toString)String
java.security.cert.PKIXCertPathChecker.init(boolean)void
java.security.cert.PKIXCertPathChecker.check(java.security.cert.Certificate,java.util.Collection)void
java.security.cert.PKIXCertPathChecker.check(java.security.cert.Certificate)void
java.security.cert.PKIXCertPathChecker.clone)Object
java.security.cert.PKIXCertPathValidatorResult.getTrustAnchor)java.security.cert.TrustAnchor
java.security.cert.PKIXCertPathValidatorResult.getPolicyTree)java.security.cert.PolicyNode
java.security.cert.PKIXCertPathValidatorResult.getPublicKey)java.security.PublicKey
java.security.cert.PKIXCertPathValidatorResult.clone)Object
java.security.cert.PKIXCertPathValidatorResult.toString)String
java.security.cert.PKIXParameters.getTrustAnchors)Set
java.security.cert.PKIXParameters.setTrustAnchors(Set)void
java.security.cert.PKIXParameters.getInitialPolicies)Set
java.security.cert.PKIXParameters.setInitialPolicies(Set)void
java.security.cert.PKIXParameters.setCertStores(List)void
java.security.cert.PKIXParameters.addCertStore(java.security.cert.CertStore)void
java.security.cert.PKIXParameters.getCertStores)List
java.security.cert.PKIXParameters.setRevocationEnabled(boolean)void
java.security.cert.PKIXParameters.isRevocationEnabled)boolean
java.security.cert.PKIXParameters.setExplicitPolicyRequired(boolean)void
java.security.cert.PKIXParameters.isExplicitPolicyRequired)boolean
java.security.cert.PKIXParameters.setPolicyMappingInhibited(boolean)void
java.security.cert.PKIXParameters.isPolicyMappingInhibited)boolean
java.security.cert.PKIXParameters.setAnyPolicyInhibited(boolean)void
java.security.cert.PKIXParameters.isAnyPolicyInhibited)boolean
java.security.cert.PKIXParameters.setPolicyQualifiersRejected(boolean)void
java.security.cert.PKIXParameters.getPolicyQualifiersRejected)boolean
java.security.cert.PKIXParameters.getDate)Date
java.security.cert.PKIXParameters.setDate(Date)void
java.security.cert.PKIXParameters.setCertPathCheckers(List)void
java.security.cert.PKIXParameters.getCertPathCheckers)List
java.security.cert.PKIXParameters.addCertPathChecker(java.security.cert.PKIXCertPathChecker)void
java.security.cert.PKIXParameters.getSigProvider)String
java.security.cert.PKIXParameters.setSigProvider(String)void
java.security.cert.PKIXParameters.getTargetCertConstraints)java.security.cert.CertSelector
java.security.cert.PKIXParameters.setTargetCertConstraints(java.security.cert.CertSelector)void
java.security.cert.PKIXParameters.clone)Object
java.security.cert.PKIXParameters.toString)String
java.security.cert.PKIXReason.valueOf(String)java.security.cert.PKIXReason
java.security.cert.PKIXRevocationChecker.valueOf(String)Option
java.security.cert.PKIXRevocationChecker.setOcspResponder(java.net.URI)void
java.security.cert.PKIXRevocationChecker.getOcspResponder)java.net.URI
java.security.cert.PKIXRevocationChecker.setOcspResponderCert(java.security.cert.X509Certificate)void
java.security.cert.PKIXRevocationChecker.getOcspResponderCert)java.security.cert.X509Certificate
java.security.cert.PKIXRevocationChecker.setOcspExtensions(List)void
java.security.cert.PKIXRevocationChecker.getOcspExtensions)List
java.security.cert.PKIXRevocationChecker.setOcspResponses(Map)void
java.security.cert.PKIXRevocationChecker.getOcspResponses)Map
java.security.cert.PKIXRevocationChecker.setOptions(Set)void
java.security.cert.PKIXRevocationChecker.getOptions)Set
java.security.cert.PKIXRevocationChecker.clone)java.security.cert.PKIXRevocationChecker
java.security.cert.PolicyQualifierInfo.getPolicyQualifierId)String
java.security.cert.PolicyQualifierInfo.toString)String
java.security.cert.TrustAnchor.getTrustedCert)java.security.cert.X509Certificate
java.security.cert.TrustAnchor.getCA)javax.security.auth.x500.X500Principal
java.security.cert.TrustAnchor.getCAName)String
java.security.cert.TrustAnchor.getCAPublicKey)java.security.PublicKey
java.security.cert.TrustAnchor.toString)String
java.security.cert.X509Certificate.checkValidity)void
java.security.cert.X509Certificate.checkValidity(Date)void
java.security.cert.X509Certificate.getIssuerX500Principal)javax.security.auth.x500.X500Principal
java.security.cert.X509Certificate.getSubjectX500Principal)javax.security.auth.x500.X500Principal
java.security.cert.X509Certificate.getExtendedKeyUsage)List
java.security.cert.X509Certificate.getSubjectAlternativeNames)Collection
java.security.cert.X509Certificate.getIssuerAlternativeNames)Collection
java.security.cert.X509Certificate.verify(PublicKey,Provider)void
java.security.cert.X509CertSelector.setCertificate(java.security.cert.X509Certificate)void
java.security.cert.X509CertSelector.setSerialNumber(java.math.BigInteger)void
java.security.cert.X509CertSelector.setIssuer(javax.security.auth.x500.X500Principal)void
java.security.cert.X509CertSelector.setIssuer(String)void
java.security.cert.X509CertSelector.setIssuer(byte)void
java.security.cert.X509CertSelector.setSubject(javax.security.auth.x500.X500Principal)void
java.security.cert.X509CertSelector.setSubject(String)void
java.security.cert.X509CertSelector.setSubject(byte)void
java.security.cert.X509CertSelector.setSubjectKeyIdentifier(byte)void
java.security.cert.X509CertSelector.setAuthorityKeyIdentifier(byte)void
java.security.cert.X509CertSelector.setCertificateValid(Date)void
java.security.cert.X509CertSelector.setPrivateKeyValid(Date)void
java.security.cert.X509CertSelector.setSubjectPublicKeyAlgID(String)void
java.security.cert.X509CertSelector.setSubjectPublicKey(java.security.PublicKey)void
java.security.cert.X509CertSelector.setSubjectPublicKey(byte)void
java.security.cert.X509CertSelector.setKeyUsage(boolean)void
java.security.cert.X509CertSelector.setExtendedKeyUsage(Set)void
java.security.cert.X509CertSelector.setMatchAllSubjectAltNames(boolean)void
java.security.cert.X509CertSelector.setSubjectAlternativeNames(Collection)void
java.security.cert.X509CertSelector.addSubjectAlternativeName(int,String)void
java.security.cert.X509CertSelector.addSubjectAlternativeName(int,byte)void
java.security.cert.X509CertSelector.setNameConstraints(byte)void
java.security.cert.X509CertSelector.setBasicConstraints(int)void
java.security.cert.X509CertSelector.setPolicy(Set)void
java.security.cert.X509CertSelector.setPathToNames(Collection)void
java.security.cert.X509CertSelector.addPathToName(int,String)void
java.security.cert.X509CertSelector.addPathToName(int,byte)void
java.security.cert.X509CertSelector.getCertificate)java.security.cert.X509Certificate
java.security.cert.X509CertSelector.getSerialNumber)java.math.BigInteger
java.security.cert.X509CertSelector.getIssuer)javax.security.auth.x500.X500Principal
java.security.cert.X509CertSelector.getIssuerAsString)String
java.security.cert.X509CertSelector.getSubject)javax.security.auth.x500.X500Principal
java.security.cert.X509CertSelector.getSubjectAsString)String
java.security.cert.X509CertSelector.getCertificateValid)Date
java.security.cert.X509CertSelector.getPrivateKeyValid)Date
java.security.cert.X509CertSelector.getSubjectPublicKeyAlgID)String
java.security.cert.X509CertSelector.getSubjectPublicKey)java.security.PublicKey
java.security.cert.X509CertSelector.getExtendedKeyUsage)Set
java.security.cert.X509CertSelector.getMatchAllSubjectAltNames)boolean
java.security.cert.X509CertSelector.getSubjectAlternativeNames)Collection
java.security.cert.X509CertSelector.getBasicConstraints)int
java.security.cert.X509CertSelector.getPolicy)Set
java.security.cert.X509CertSelector.getPathToNames)Collection
java.security.cert.X509CertSelector.toString)String
java.security.cert.X509CertSelector.match(java.security.cert.Certificate)boolean
java.security.cert.X509CertSelector.clone)Object
java.security.cert.X509CRL.equals(Object)boolean
java.security.cert.X509CRL.hashCode)int
java.security.cert.X509CRL.verify(PublicKey)void
java.security.cert.X509CRL.verify(PublicKey,String)void
java.security.cert.X509CRL.verify(PublicKey,Provider)void
java.security.cert.X509CRL.getIssuerX500Principal)javax.security.auth.x500.X500Principal
java.security.cert.X509CRL.getRevokedCertificate(java.security.cert.X509Certificate)java.security.cert.X509CRLEntry
java.security.cert.X509CRLEntry.equals(Object)boolean
java.security.cert.X509CRLEntry.hashCode)int
java.security.cert.X509CRLEntry.getCertificateIssuer)javax.security.auth.x500.X500Principal
java.security.cert.X509CRLEntry.getRevocationReason)java.security.cert.CRLReason
java.security.cert.X509CRLSelector.setIssuers(java.util.Collection)void
java.security.cert.X509CRLSelector.setIssuerNames(java.util.Collection)void
java.security.cert.X509CRLSelector.addIssuer(javax.security.auth.x500.X500Principal)void
java.security.cert.X509CRLSelector.addIssuerName(String)void
java.security.cert.X509CRLSelector.addIssuerName(byte)void
java.security.cert.X509CRLSelector.setMinCRLNumber(java.math.BigInteger)void
java.security.cert.X509CRLSelector.setMaxCRLNumber(java.math.BigInteger)void
java.security.cert.X509CRLSelector.setDateAndTime(java.util.Date)void
java.security.cert.X509CRLSelector.setCertificateChecking(java.security.cert.X509Certificate)void
java.security.cert.X509CRLSelector.getIssuers)java.util.Collection
java.security.cert.X509CRLSelector.getIssuerNames)java.util.Collection
java.security.cert.X509CRLSelector.getMinCRL)java.math.BigInteger
java.security.cert.X509CRLSelector.getMaxCRL)java.math.BigInteger
java.security.cert.X509CRLSelector.getDateAndTime)java.util.Date
java.security.cert.X509CRLSelector.getCertificateChecking)java.security.cert.X509Certificate
java.security.cert.X509CRLSelector.toString)String
java.security.cert.X509CRLSelector.match(java.security.cert.CRL)boolean
java.security.cert.X509CRLSelector.clone)Object
java.security.interfaces.DSAKeyPairGenerator.initialize(java.security.interfaces.DSAParams,java.security.SecureRandom)void
java.security.interfaces.DSAKeyPairGenerator.initialize(int,boolean,java.security.SecureRandom)void
java.security.spec.DSAParameterSpec.getP)java.math.BigInteger
java.security.spec.DSAParameterSpec.getQ)java.math.BigInteger
java.security.spec.DSAParameterSpec.getG)java.math.BigInteger
java.security.spec.DSAPrivateKeySpec.getX)java.math.BigInteger
java.security.spec.DSAPrivateKeySpec.getP)java.math.BigInteger
java.security.spec.DSAPrivateKeySpec.getQ)java.math.BigInteger
java.security.spec.DSAPrivateKeySpec.getG)java.math.BigInteger
java.security.spec.DSAPublicKeySpec.getY)java.math.BigInteger
java.security.spec.DSAPublicKeySpec.getP)java.math.BigInteger
java.security.spec.DSAPublicKeySpec.getQ)java.math.BigInteger
java.security.spec.DSAPublicKeySpec.getG)java.math.BigInteger
java.security.spec.ECFieldF2m.getFieldSize)int
java.security.spec.ECFieldF2m.getM)int
java.security.spec.ECFieldF2m.getReductionPolynomial)java.math.BigInteger
java.security.spec.ECFieldF2m.equals(Object)boolean
java.security.spec.ECFieldF2m.hashCode)int
java.security.spec.ECFieldFp.getFieldSize)int
java.security.spec.ECFieldFp.getP)java.math.BigInteger
java.security.spec.ECFieldFp.equals(Object)boolean
java.security.spec.ECFieldFp.hashCode)int
java.security.spec.ECGenParameterSpec.getName)String
java.security.spec.ECParameterSpec.getCurve)java.security.spec.EllipticCurve
java.security.spec.ECParameterSpec.getGenerator)java.security.spec.ECPoint
java.security.spec.ECParameterSpec.getOrder)java.math.BigInteger
java.security.spec.ECParameterSpec.getCofactor)int
java.security.spec.ECPoint.getAffineX)java.math.BigInteger
java.security.spec.ECPoint.getAffineY)java.math.BigInteger
java.security.spec.ECPoint.equals(Object)boolean
java.security.spec.ECPoint.hashCode)int
java.security.spec.ECPrivateKeySpec.getS)java.math.BigInteger
java.security.spec.ECPrivateKeySpec.getParams)java.security.spec.ECParameterSpec
java.security.spec.ECPublicKeySpec.getW)java.security.spec.ECPoint
java.security.spec.ECPublicKeySpec.getParams)java.security.spec.ECParameterSpec
java.security.spec.EllipticCurve.getField)java.security.spec.ECField
java.security.spec.EllipticCurve.getA)java.math.BigInteger
java.security.spec.EllipticCurve.getB)java.math.BigInteger
java.security.spec.EllipticCurve.equals(Object)boolean
java.security.spec.EllipticCurve.hashCode)int
java.security.spec.MGF1ParameterSpec.getDigestAlgorithm)String
java.security.spec.PKCS8EncodedKeySpec.getFormat)String
java.security.spec.PSSParameterSpec.getDigestAlgorithm)String
java.security.spec.PSSParameterSpec.getMGFAlgorithm)String
java.security.spec.PSSParameterSpec.getMGFParameters)java.security.spec.AlgorithmParameterSpec
java.security.spec.PSSParameterSpec.getSaltLength)int
java.security.spec.PSSParameterSpec.getTrailerField)int
java.security.spec.RSAKeyGenParameterSpec.getKeysize)int
java.security.spec.RSAKeyGenParameterSpec.getPublicExponent)java.math.BigInteger
java.security.spec.RSAMultiPrimePrivateCrtKeySpec.getPublicExponent)java.math.BigInteger
java.security.spec.RSAMultiPrimePrivateCrtKeySpec.getPrimeP)java.math.BigInteger
java.security.spec.RSAMultiPrimePrivateCrtKeySpec.getPrimeQ)java.math.BigInteger
java.security.spec.RSAMultiPrimePrivateCrtKeySpec.getPrimeExponentP)java.math.BigInteger
java.security.spec.RSAMultiPrimePrivateCrtKeySpec.getPrimeExponentQ)java.math.BigInteger
java.security.spec.RSAMultiPrimePrivateCrtKeySpec.getCrtCoefficient)java.math.BigInteger
java.security.spec.RSAOtherPrimeInfo.getPrime)java.math.BigInteger
java.security.spec.RSAOtherPrimeInfo.getExponent)java.math.BigInteger
java.security.spec.RSAOtherPrimeInfo.getCrtCoefficient)java.math.BigInteger
java.security.spec.RSAPrivateCrtKeySpec.getPublicExponent)java.math.BigInteger
java.security.spec.RSAPrivateCrtKeySpec.getPrimeP)java.math.BigInteger
java.security.spec.RSAPrivateCrtKeySpec.getPrimeQ)java.math.BigInteger
java.security.spec.RSAPrivateCrtKeySpec.getPrimeExponentP)java.math.BigInteger
java.security.spec.RSAPrivateCrtKeySpec.getPrimeExponentQ)java.math.BigInteger
java.security.spec.RSAPrivateCrtKeySpec.getCrtCoefficient)java.math.BigInteger
java.security.spec.RSAPrivateKeySpec.getModulus)java.math.BigInteger
java.security.spec.RSAPrivateKeySpec.getPrivateExponent)java.math.BigInteger
java.security.spec.RSAPublicKeySpec.getModulus)java.math.BigInteger
java.security.spec.RSAPublicKeySpec.getPublicExponent)java.math.BigInteger
java.security.spec.X509EncodedKeySpec.getFormat)String
java.sql.Array.getBaseTypeName)String
java.sql.Array.getBaseType)int
java.sql.Array.getArray)Object
java.sql.Array.getArray(java.util.Map)Object
java.sql.Array.getArray(long,int)Object
java.sql.Array.getArray(long,int,java.util.Map)Object
java.sql.Array.getResultSet)java.sql.ResultSet
java.sql.Array.getResultSet(java.util.Map)java.sql.ResultSet
java.sql.Array.getResultSet(long,int)java.sql.ResultSet
java.sql.Array.getResultSet(long,int,java.util.Map)java.sql.ResultSet
java.sql.Array.free)void
java.sql.Blob.length)long
java.sql.Blob.getBinaryStream)java.io.InputStream
java.sql.Blob.position(byte,long)long
java.sql.Blob.position(java.sql.Blob,long)long
java.sql.Blob.setBytes(long,byte)int
java.sql.Blob.setBytes(long,byte,int,int)int
java.sql.Blob.setBinaryStream(long)java.io.OutputStream
java.sql.Blob.truncate(long)void
java.sql.Blob.free)void
java.sql.Blob.getBinaryStream(long,long)java.io.InputStream
java.sql.CallableStatement.registerOutParameter(int,int)void
java.sql.CallableStatement.registerOutParameter(int,int,int)void
java.sql.CallableStatement.wasNull)boolean
java.sql.CallableStatement.getString(int)String
java.sql.CallableStatement.getBoolean(int)boolean
java.sql.CallableStatement.getByte(int)byte
java.sql.CallableStatement.getShort(int)short
java.sql.CallableStatement.getInt(int)int
java.sql.CallableStatement.getLong(int)long
java.sql.CallableStatement.getFloat(int)float
java.sql.CallableStatement.getDouble(int)double
java.sql.CallableStatement.getBigDecimal(int,int)java.math.BigDecimal
java.sql.CallableStatement.getDate(int)java.sql.Date
java.sql.CallableStatement.getTime(int)java.sql.Time
java.sql.CallableStatement.getTimestamp(int)java.sql.Timestamp
java.sql.CallableStatement.getObject(int)Object
java.sql.CallableStatement.getBigDecimal(int)java.math.BigDecimal
java.sql.CallableStatement.getObject(int,java.util.Map)Object
java.sql.CallableStatement.getRef(int)java.sql.Ref
java.sql.CallableStatement.getBlob(int)java.sql.Blob
java.sql.CallableStatement.getClob(int)java.sql.Clob
java.sql.CallableStatement.getArray(int)java.sql.Array
java.sql.CallableStatement.getDate(int,java.util.Calendar)java.sql.Date
java.sql.CallableStatement.getTime(int,java.util.Calendar)java.sql.Time
java.sql.CallableStatement.getTimestamp(int,java.util.Calendar)java.sql.Timestamp
java.sql.CallableStatement.registerOutParameter(int,int,String)void
java.sql.CallableStatement.registerOutParameter(String,int)void
java.sql.CallableStatement.registerOutParameter(String,int,int)void
java.sql.CallableStatement.registerOutParameter(String,int,String)void
java.sql.CallableStatement.getURL(int)java.net.URL
java.sql.CallableStatement.setURL(String,java.net.URL)void
java.sql.CallableStatement.setNull(String,int)void
java.sql.CallableStatement.setBoolean(String,boolean)void
java.sql.CallableStatement.setByte(String,byte)void
java.sql.CallableStatement.setShort(String,short)void
java.sql.CallableStatement.setInt(String,int)void
java.sql.CallableStatement.setLong(String,long)void
java.sql.CallableStatement.setFloat(String,float)void
java.sql.CallableStatement.setDouble(String,double)void
java.sql.CallableStatement.setBigDecimal(String,java.math.BigDecimal)void
java.sql.CallableStatement.setString(String,String)void
java.sql.CallableStatement.setBytes(String,byte)void
java.sql.CallableStatement.setDate(String,java.sql.Date)void
java.sql.CallableStatement.setTime(String,java.sql.Time)void
java.sql.CallableStatement.setTimestamp(String,java.sql.Timestamp)void
java.sql.CallableStatement.setAsciiStream(String,java.io.InputStream,int)void
java.sql.CallableStatement.setBinaryStream(String,java.io.InputStream,int)void
java.sql.CallableStatement.setObject(String,Object,int,int)void
java.sql.CallableStatement.setObject(String,Object,int)void
java.sql.CallableStatement.setObject(String,Object)void
java.sql.CallableStatement.setCharacterStream(String,java.io.Reader,int)void
java.sql.CallableStatement.setDate(String,java.sql.Date,java.util.Calendar)void
java.sql.CallableStatement.setTime(String,java.sql.Time,java.util.Calendar)void
java.sql.CallableStatement.setTimestamp(String,java.sql.Timestamp,java.util.Calendar)void
java.sql.CallableStatement.setNull(String,int,String)void
java.sql.CallableStatement.getString(String)String
java.sql.CallableStatement.getBoolean(String)boolean
java.sql.CallableStatement.getByte(String)byte
java.sql.CallableStatement.getShort(String)short
java.sql.CallableStatement.getInt(String)int
java.sql.CallableStatement.getLong(String)long
java.sql.CallableStatement.getFloat(String)float
java.sql.CallableStatement.getDouble(String)double
java.sql.CallableStatement.getDate(String)java.sql.Date
java.sql.CallableStatement.getTime(String)java.sql.Time
java.sql.CallableStatement.getTimestamp(String)java.sql.Timestamp
java.sql.CallableStatement.getObject(String)Object
java.sql.CallableStatement.getBigDecimal(String)java.math.BigDecimal
java.sql.CallableStatement.getObject(String,java.util.Map)Object
java.sql.CallableStatement.getRef(String)java.sql.Ref
java.sql.CallableStatement.getBlob(String)java.sql.Blob
java.sql.CallableStatement.getClob(String)java.sql.Clob
java.sql.CallableStatement.getArray(String)java.sql.Array
java.sql.CallableStatement.getDate(String,java.util.Calendar)java.sql.Date
java.sql.CallableStatement.getTime(String,java.util.Calendar)java.sql.Time
java.sql.CallableStatement.getTimestamp(String,java.util.Calendar)java.sql.Timestamp
java.sql.CallableStatement.getURL(String)java.net.URL
java.sql.CallableStatement.getRowId(int)java.sql.RowId
java.sql.CallableStatement.getRowId(String)java.sql.RowId
java.sql.CallableStatement.setRowId(String,java.sql.RowId)void
java.sql.CallableStatement.setNString(String,String)void
java.sql.CallableStatement.setNCharacterStream(String,java.io.Reader,long)void
java.sql.CallableStatement.setNClob(String,java.sql.NClob)void
java.sql.CallableStatement.setClob(String,java.io.Reader,long)void
java.sql.CallableStatement.setBlob(String,java.io.InputStream,long)void
java.sql.CallableStatement.setNClob(String,java.io.Reader,long)void
java.sql.CallableStatement.getNClob(int)java.sql.NClob
java.sql.CallableStatement.getNClob(String)java.sql.NClob
java.sql.CallableStatement.setSQLXML(String,java.sql.SQLXML)void
java.sql.CallableStatement.getSQLXML(int)java.sql.SQLXML
java.sql.CallableStatement.getSQLXML(String)java.sql.SQLXML
java.sql.CallableStatement.getNString(int)String
java.sql.CallableStatement.getNString(String)String
java.sql.CallableStatement.getNCharacterStream(int)java.io.Reader
java.sql.CallableStatement.getNCharacterStream(String)java.io.Reader
java.sql.CallableStatement.getCharacterStream(int)java.io.Reader
java.sql.CallableStatement.getCharacterStream(String)java.io.Reader
java.sql.CallableStatement.setBlob(String,java.sql.Blob)void
java.sql.CallableStatement.setClob(String,java.sql.Clob)void
java.sql.CallableStatement.setAsciiStream(String,java.io.InputStream,long)void
java.sql.CallableStatement.setBinaryStream(String,java.io.InputStream,long)void
java.sql.CallableStatement.setCharacterStream(String,java.io.Reader,long)void
java.sql.CallableStatement.setAsciiStream(String,java.io.InputStream)void
java.sql.CallableStatement.setBinaryStream(String,java.io.InputStream)void
java.sql.CallableStatement.setCharacterStream(String,java.io.Reader)void
java.sql.CallableStatement.setNCharacterStream(String,java.io.Reader)void
java.sql.CallableStatement.setClob(String,java.io.Reader)void
java.sql.CallableStatement.setBlob(String,java.io.InputStream)void
java.sql.CallableStatement.setNClob(String,java.io.Reader)void
java.sql.ClientInfoStatus.valueOf(String)java.sql.ClientInfoStatus
java.sql.Clob.length)long
java.sql.Clob.getSubString(long,int)String
java.sql.Clob.getCharacterStream)Reader
java.sql.Clob.getAsciiStream)InputStream
java.sql.Clob.position(String,long)long
java.sql.Clob.position(java.sql.Clob,long)long
java.sql.Clob.setString(long,String)int
java.sql.Clob.setString(long,String,int,int)int
java.sql.Clob.setAsciiStream(long)OutputStream
java.sql.Clob.setCharacterStream(long)Writer
java.sql.Clob.truncate(long)void
java.sql.Clob.free)void
java.sql.Clob.getCharacterStream(long,long)Reader
java.sql.Connection.createStatement)java.sql.Statement
java.sql.Connection.prepareStatement(String)java.sql.PreparedStatement
java.sql.Connection.prepareCall(String)java.sql.CallableStatement
java.sql.Connection.nativeSQL(String)String
java.sql.Connection.setAutoCommit(boolean)void
java.sql.Connection.getAutoCommit)boolean
java.sql.Connection.commit)void
java.sql.Connection.rollback)void
java.sql.Connection.close)void
java.sql.Connection.isClosed)boolean
java.sql.Connection.getMetaData)java.sql.DatabaseMetaData
java.sql.Connection.setReadOnly(boolean)void
java.sql.Connection.isReadOnly)boolean
java.sql.Connection.setCatalog(String)void
java.sql.Connection.getCatalog)String
java.sql.Connection.setTransactionIsolation(int)void
java.sql.Connection.getTransactionIsolation)int
java.sql.Connection.getWarnings)java.sql.SQLWarning
java.sql.Connection.clearWarnings)void
java.sql.Connection.createStatement(int,int)java.sql.Statement
java.sql.Connection.prepareStatement(String,int,int)java.sql.PreparedStatement
java.sql.Connection.prepareCall(String,int,int)java.sql.CallableStatement
java.sql.Connection.getTypeMap)java.util.Map
java.sql.Connection.setTypeMap(java.util.Map)void
java.sql.Connection.setHoldability(int)void
java.sql.Connection.getHoldability)int
java.sql.Connection.setSavepoint)java.sql.Savepoint
java.sql.Connection.setSavepoint(String)java.sql.Savepoint
java.sql.Connection.rollback(java.sql.Savepoint)void
java.sql.Connection.releaseSavepoint(java.sql.Savepoint)void
java.sql.Connection.createStatement(int,int,int)java.sql.Statement
java.sql.Connection.prepareStatement(String,int,int,int)java.sql.PreparedStatement
java.sql.Connection.prepareCall(String,int,int,int)java.sql.CallableStatement
java.sql.Connection.prepareStatement(String,int)java.sql.PreparedStatement
java.sql.Connection.prepareStatement(String,int)java.sql.PreparedStatement
java.sql.Connection.prepareStatement(String,String)java.sql.PreparedStatement
java.sql.Connection.createClob)java.sql.Clob
java.sql.Connection.createBlob)java.sql.Blob
java.sql.Connection.createNClob)java.sql.NClob
java.sql.Connection.createSQLXML)java.sql.SQLXML
java.sql.Connection.isValid(int)boolean
java.sql.Connection.setClientInfo(String,String)void
java.sql.Connection.setClientInfo(java.util.Properties)void
java.sql.Connection.getClientInfo(String)String
java.sql.Connection.getClientInfo)java.util.Properties
java.sql.Connection.createArrayOf(String,Object)java.sql.Array
java.sql.Connection.createStruct(String,Object)java.sql.Struct
java.sql.DatabaseMetaData.allProceduresAreCallable)boolean
java.sql.DatabaseMetaData.allTablesAreSelectable)boolean
java.sql.DatabaseMetaData.getURL)String
java.sql.DatabaseMetaData.getUserName)String
java.sql.DatabaseMetaData.isReadOnly)boolean
java.sql.DatabaseMetaData.nullsAreSortedHigh)boolean
java.sql.DatabaseMetaData.nullsAreSortedLow)boolean
java.sql.DatabaseMetaData.nullsAreSortedAtStart)boolean
java.sql.DatabaseMetaData.nullsAreSortedAtEnd)boolean
java.sql.DatabaseMetaData.getDatabaseProductName)String
java.sql.DatabaseMetaData.getDatabaseProductVersion)String
java.sql.DatabaseMetaData.getDriverName)String
java.sql.DatabaseMetaData.getDriverVersion)String
java.sql.DatabaseMetaData.usesLocalFiles)boolean
java.sql.DatabaseMetaData.usesLocalFilePerTable)boolean
java.sql.DatabaseMetaData.supportsMixedCaseIdentifiers)boolean
java.sql.DatabaseMetaData.storesUpperCaseIdentifiers)boolean
java.sql.DatabaseMetaData.storesLowerCaseIdentifiers)boolean
java.sql.DatabaseMetaData.storesMixedCaseIdentifiers)boolean
java.sql.DatabaseMetaData.supportsMixedCaseQuotedIdentifiers)boolean
java.sql.DatabaseMetaData.storesUpperCaseQuotedIdentifiers)boolean
java.sql.DatabaseMetaData.storesLowerCaseQuotedIdentifiers)boolean
java.sql.DatabaseMetaData.storesMixedCaseQuotedIdentifiers)boolean
java.sql.DatabaseMetaData.getIdentifierQuoteString)String
java.sql.DatabaseMetaData.getSQLKeywords)String
java.sql.DatabaseMetaData.getNumericFunctions)String
java.sql.DatabaseMetaData.getStringFunctions)String
java.sql.DatabaseMetaData.getSystemFunctions)String
java.sql.DatabaseMetaData.getTimeDateFunctions)String
java.sql.DatabaseMetaData.getSearchStringEscape)String
java.sql.DatabaseMetaData.getExtraNameCharacters)String
java.sql.DatabaseMetaData.supportsAlterTableWithAddColumn)boolean
java.sql.DatabaseMetaData.supportsAlterTableWithDropColumn)boolean
java.sql.DatabaseMetaData.supportsColumnAliasing)boolean
java.sql.DatabaseMetaData.nullPlusNonNullIsNull)boolean
java.sql.DatabaseMetaData.supportsConvert)boolean
java.sql.DatabaseMetaData.supportsConvert(int,int)boolean
java.sql.DatabaseMetaData.supportsTableCorrelationNames)boolean
java.sql.DatabaseMetaData.supportsDifferentTableCorrelationNames)boolean
java.sql.DatabaseMetaData.supportsExpressionsInOrderBy)boolean
java.sql.DatabaseMetaData.supportsOrderByUnrelated)boolean
java.sql.DatabaseMetaData.supportsGroupBy)boolean
java.sql.DatabaseMetaData.supportsGroupByUnrelated)boolean
java.sql.DatabaseMetaData.supportsGroupByBeyondSelect)boolean
java.sql.DatabaseMetaData.supportsLikeEscapeClause)boolean
java.sql.DatabaseMetaData.supportsMultipleResultSets)boolean
java.sql.DatabaseMetaData.supportsMultipleTransactions)boolean
java.sql.DatabaseMetaData.supportsNonNullableColumns)boolean
java.sql.DatabaseMetaData.supportsMinimumSQLGrammar)boolean
java.sql.DatabaseMetaData.supportsCoreSQLGrammar)boolean
java.sql.DatabaseMetaData.supportsExtendedSQLGrammar)boolean
java.sql.DatabaseMetaData.supportsANSI92EntryLevelSQL)boolean
java.sql.DatabaseMetaData.supportsANSI92IntermediateSQL)boolean
java.sql.DatabaseMetaData.supportsANSI92FullSQL)boolean
java.sql.DatabaseMetaData.supportsIntegrityEnhancementFacility)boolean
java.sql.DatabaseMetaData.supportsOuterJoins)boolean
java.sql.DatabaseMetaData.supportsFullOuterJoins)boolean
java.sql.DatabaseMetaData.supportsLimitedOuterJoins)boolean
java.sql.DatabaseMetaData.getSchemaTerm)String
java.sql.DatabaseMetaData.getProcedureTerm)String
java.sql.DatabaseMetaData.getCatalogTerm)String
java.sql.DatabaseMetaData.isCatalogAtStart)boolean
java.sql.DatabaseMetaData.getCatalogSeparator)String
java.sql.DatabaseMetaData.supportsSchemasInDataManipulation)boolean
java.sql.DatabaseMetaData.supportsSchemasInProcedureCalls)boolean
java.sql.DatabaseMetaData.supportsSchemasInTableDefinitions)boolean
java.sql.DatabaseMetaData.supportsSchemasInIndexDefinitions)boolean
java.sql.DatabaseMetaData.supportsSchemasInPrivilegeDefinitions)boolean
java.sql.DatabaseMetaData.supportsCatalogsInDataManipulation)boolean
java.sql.DatabaseMetaData.supportsCatalogsInProcedureCalls)boolean
java.sql.DatabaseMetaData.supportsCatalogsInTableDefinitions)boolean
java.sql.DatabaseMetaData.supportsCatalogsInIndexDefinitions)boolean
java.sql.DatabaseMetaData.supportsCatalogsInPrivilegeDefinitions)boolean
java.sql.DatabaseMetaData.supportsPositionedDelete)boolean
java.sql.DatabaseMetaData.supportsPositionedUpdate)boolean
java.sql.DatabaseMetaData.supportsSelectForUpdate)boolean
java.sql.DatabaseMetaData.supportsStoredProcedures)boolean
java.sql.DatabaseMetaData.supportsSubqueriesInComparisons)boolean
java.sql.DatabaseMetaData.supportsSubqueriesInExists)boolean
java.sql.DatabaseMetaData.supportsSubqueriesInIns)boolean
java.sql.DatabaseMetaData.supportsSubqueriesInQuantifieds)boolean
java.sql.DatabaseMetaData.supportsCorrelatedSubqueries)boolean
java.sql.DatabaseMetaData.supportsUnion)boolean
java.sql.DatabaseMetaData.supportsUnionAll)boolean
java.sql.DatabaseMetaData.supportsOpenCursorsAcrossCommit)boolean
java.sql.DatabaseMetaData.supportsOpenCursorsAcrossRollback)boolean
java.sql.DatabaseMetaData.supportsOpenStatementsAcrossCommit)boolean
java.sql.DatabaseMetaData.supportsOpenStatementsAcrossRollback)boolean
java.sql.DatabaseMetaData.getMaxBinaryLiteralLength)int
java.sql.DatabaseMetaData.getMaxCharLiteralLength)int
java.sql.DatabaseMetaData.getMaxColumnNameLength)int
java.sql.DatabaseMetaData.getMaxColumnsInGroupBy)int
java.sql.DatabaseMetaData.getMaxColumnsInIndex)int
java.sql.DatabaseMetaData.getMaxColumnsInOrderBy)int
java.sql.DatabaseMetaData.getMaxColumnsInSelect)int
java.sql.DatabaseMetaData.getMaxColumnsInTable)int
java.sql.DatabaseMetaData.getMaxConnections)int
java.sql.DatabaseMetaData.getMaxCursorNameLength)int
java.sql.DatabaseMetaData.getMaxIndexLength)int
java.sql.DatabaseMetaData.getMaxSchemaNameLength)int
java.sql.DatabaseMetaData.getMaxProcedureNameLength)int
java.sql.DatabaseMetaData.getMaxCatalogNameLength)int
java.sql.DatabaseMetaData.getMaxRowSize)int
java.sql.DatabaseMetaData.doesMaxRowSizeIncludeBlobs)boolean
java.sql.DatabaseMetaData.getMaxStatementLength)int
java.sql.DatabaseMetaData.getMaxStatements)int
java.sql.DatabaseMetaData.getMaxTableNameLength)int
java.sql.DatabaseMetaData.getMaxTablesInSelect)int
java.sql.DatabaseMetaData.getMaxUserNameLength)int
java.sql.DatabaseMetaData.getDefaultTransactionIsolation)int
java.sql.DatabaseMetaData.supportsTransactions)boolean
java.sql.DatabaseMetaData.supportsTransactionIsolationLevel(int)boolean
java.sql.DatabaseMetaData.supportsDataDefinitionAndDataManipulationTransactions)boolean
java.sql.DatabaseMetaData.supportsDataManipulationTransactionsOnly)boolean
java.sql.DatabaseMetaData.dataDefinitionCausesTransactionCommit)boolean
java.sql.DatabaseMetaData.dataDefinitionIgnoredInTransactions)boolean
java.sql.DatabaseMetaData.getProcedures(String,String,String)java.sql.ResultSet
java.sql.DatabaseMetaData.getProcedureColumns(String,String,String,String)java.sql.ResultSet
java.sql.DatabaseMetaData.getTables(String,String,String,String)java.sql.ResultSet
java.sql.DatabaseMetaData.getSchemas)java.sql.ResultSet
java.sql.DatabaseMetaData.getCatalogs)java.sql.ResultSet
java.sql.DatabaseMetaData.getTableTypes)java.sql.ResultSet
java.sql.DatabaseMetaData.getColumns(String,String,String,String)java.sql.ResultSet
java.sql.DatabaseMetaData.getColumnPrivileges(String,String,String,String)java.sql.ResultSet
java.sql.DatabaseMetaData.getTablePrivileges(String,String,String)java.sql.ResultSet
java.sql.DatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean)java.sql.ResultSet
java.sql.DatabaseMetaData.getVersionColumns(String,String,String)java.sql.ResultSet
java.sql.DatabaseMetaData.getPrimaryKeys(String,String,String)java.sql.ResultSet
java.sql.DatabaseMetaData.getImportedKeys(String,String,String)java.sql.ResultSet
java.sql.DatabaseMetaData.getExportedKeys(String,String,String)java.sql.ResultSet
java.sql.DatabaseMetaData.getCrossReference(String,String,String,String,String,String)java.sql.ResultSet
java.sql.DatabaseMetaData.getTypeInfo)java.sql.ResultSet
java.sql.DatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean)java.sql.ResultSet
java.sql.DatabaseMetaData.supportsResultSetType(int)boolean
java.sql.DatabaseMetaData.supportsResultSetConcurrency(int,int)boolean
java.sql.DatabaseMetaData.ownUpdatesAreVisible(int)boolean
java.sql.DatabaseMetaData.ownDeletesAreVisible(int)boolean
java.sql.DatabaseMetaData.ownInsertsAreVisible(int)boolean
java.sql.DatabaseMetaData.othersUpdatesAreVisible(int)boolean
java.sql.DatabaseMetaData.othersDeletesAreVisible(int)boolean
java.sql.DatabaseMetaData.othersInsertsAreVisible(int)boolean
java.sql.DatabaseMetaData.updatesAreDetected(int)boolean
java.sql.DatabaseMetaData.deletesAreDetected(int)boolean
java.sql.DatabaseMetaData.insertsAreDetected(int)boolean
java.sql.DatabaseMetaData.supportsBatchUpdates)boolean
java.sql.DatabaseMetaData.getUDTs(String,String,String,int)java.sql.ResultSet
java.sql.DatabaseMetaData.getConnection)java.sql.Connection
java.sql.DatabaseMetaData.supportsSavepoints)boolean
java.sql.DatabaseMetaData.supportsNamedParameters)boolean
java.sql.DatabaseMetaData.supportsMultipleOpenResults)boolean
java.sql.DatabaseMetaData.supportsGetGeneratedKeys)boolean
java.sql.DatabaseMetaData.getSuperTypes(String,String,String)java.sql.ResultSet
java.sql.DatabaseMetaData.getSuperTables(String,String,String)java.sql.ResultSet
java.sql.DatabaseMetaData.getAttributes(String,String,String,String)java.sql.ResultSet
java.sql.DatabaseMetaData.supportsResultSetHoldability(int)boolean
java.sql.DatabaseMetaData.getResultSetHoldability)int
java.sql.DatabaseMetaData.getDatabaseMajorVersion)int
java.sql.DatabaseMetaData.getDatabaseMinorVersion)int
java.sql.DatabaseMetaData.getJDBCMajorVersion)int
java.sql.DatabaseMetaData.getJDBCMinorVersion)int
java.sql.DatabaseMetaData.getSQLStateType)int
java.sql.DatabaseMetaData.locatorsUpdateCopy)boolean
java.sql.DatabaseMetaData.supportsStatementPooling)boolean
java.sql.DatabaseMetaData.getRowIdLifetime)java.sql.RowIdLifetime
java.sql.DatabaseMetaData.getSchemas(String,String)java.sql.ResultSet
java.sql.DatabaseMetaData.supportsStoredFunctionsUsingCallSyntax)boolean
java.sql.DatabaseMetaData.autoCommitFailureClosesAllResultSets)boolean
java.sql.DatabaseMetaData.getClientInfoProperties)java.sql.ResultSet
java.sql.DatabaseMetaData.getFunctions(String,String,String)java.sql.ResultSet
java.sql.DatabaseMetaData.getFunctionColumns(String,String,String,String)java.sql.ResultSet
java.sql.DataTruncation.getIndex)int
java.sql.DataTruncation.getParameter)boolean
java.sql.DataTruncation.getRead)boolean
java.sql.DataTruncation.getDataSize)int
java.sql.DataTruncation.getTransferSize)int
java.sql.Date.setTime(long)void
java.sql.Date.valueOf(String)java.sql.Date
java.sql.Date.toString)String
java.sql.Date.getHours)int
java.sql.Date.getMinutes)int
java.sql.Date.getSeconds)int
java.sql.Date.setHours(int)void
java.sql.Date.setMinutes(int)void
java.sql.Date.setSeconds(int)void
java.sql.Driver.connect(String,java.util.Properties)java.sql.Connection
java.sql.Driver.acceptsURL(String)boolean
java.sql.DriverManager.getLogWriter)java.io.PrintWriter
java.sql.DriverManager.setLogWriter(java.io.PrintWriter)void
java.sql.DriverManager.getConnection(String,java.util.Properties)java.sql.Connection
java.sql.DriverManager.getConnection(String,String,String)java.sql.Connection
java.sql.DriverManager.getConnection(String)java.sql.Connection
java.sql.DriverManager.getDriver(String)java.sql.Driver
java.sql.DriverManager.getDrivers)java.util.Enumeration
java.sql.DriverManager.setLoginTimeout(int)void
java.sql.DriverManager.getLoginTimeout)int
java.sql.DriverManager.setLogStream(java.io.PrintStream)void
java.sql.DriverManager.getLogStream)java.io.PrintStream
java.sql.DriverManager.println(String)void
java.sql.ParameterMetaData.getParameterCount)int
java.sql.ParameterMetaData.isNullable(int)int
java.sql.ParameterMetaData.isSigned(int)boolean
java.sql.ParameterMetaData.getPrecision(int)int
java.sql.ParameterMetaData.getScale(int)int
java.sql.ParameterMetaData.getParameterType(int)int
java.sql.ParameterMetaData.getParameterTypeName(int)String
java.sql.ParameterMetaData.getParameterClassName(int)String
java.sql.ParameterMetaData.getParameterMode(int)int
java.sql.PreparedStatement.executeQuery)java.sql.ResultSet
java.sql.PreparedStatement.executeUpdate)int
java.sql.PreparedStatement.setNull(int,int)void
java.sql.PreparedStatement.setBoolean(int,boolean)void
java.sql.PreparedStatement.setByte(int,byte)void
java.sql.PreparedStatement.setShort(int,short)void
java.sql.PreparedStatement.setInt(int,int)void
java.sql.PreparedStatement.setLong(int,long)void
java.sql.PreparedStatement.setFloat(int,float)void
java.sql.PreparedStatement.setDouble(int,double)void
java.sql.PreparedStatement.setBigDecimal(int,java.math.BigDecimal)void
java.sql.PreparedStatement.setString(int,String)void
java.sql.PreparedStatement.setBytes(int,byte)void
java.sql.PreparedStatement.setDate(int,java.sql.Date)void
java.sql.PreparedStatement.setTime(int,java.sql.Time)void
java.sql.PreparedStatement.setTimestamp(int,java.sql.Timestamp)void
java.sql.PreparedStatement.setAsciiStream(int,java.io.InputStream,int)void
java.sql.PreparedStatement.setUnicodeStream(int,java.io.InputStream,int)void
java.sql.PreparedStatement.setBinaryStream(int,java.io.InputStream,int)void
java.sql.PreparedStatement.clearParameters)void
java.sql.PreparedStatement.setObject(int,Object,int)void
java.sql.PreparedStatement.setObject(int,Object)void
java.sql.PreparedStatement.execute)boolean
java.sql.PreparedStatement.addBatch)void
java.sql.PreparedStatement.setCharacterStream(int,java.io.Reader,int)void
java.sql.PreparedStatement.setRef(int,java.sql.Ref)void
java.sql.PreparedStatement.setBlob(int,java.sql.Blob)void
java.sql.PreparedStatement.setClob(int,java.sql.Clob)void
java.sql.PreparedStatement.setArray(int,java.sql.Array)void
java.sql.PreparedStatement.getMetaData)java.sql.ResultSetMetaData
java.sql.PreparedStatement.setDate(int,java.sql.Date,java.util.Calendar)void
java.sql.PreparedStatement.setTime(int,java.sql.Time,java.util.Calendar)void
java.sql.PreparedStatement.setTimestamp(int,java.sql.Timestamp,java.util.Calendar)void
java.sql.PreparedStatement.setNull(int,int,String)void
java.sql.PreparedStatement.setURL(int,java.net.URL)void
java.sql.PreparedStatement.getParameterMetaData)java.sql.ParameterMetaData
java.sql.PreparedStatement.setRowId(int,java.sql.RowId)void
java.sql.PreparedStatement.setNString(int,String)void
java.sql.PreparedStatement.setNCharacterStream(int,java.io.Reader,long)void
java.sql.PreparedStatement.setNClob(int,java.sql.NClob)void
java.sql.PreparedStatement.setClob(int,java.io.Reader,long)void
java.sql.PreparedStatement.setBlob(int,java.io.InputStream,long)void
java.sql.PreparedStatement.setNClob(int,java.io.Reader,long)void
java.sql.PreparedStatement.setSQLXML(int,java.sql.SQLXML)void
java.sql.PreparedStatement.setObject(int,Object,int,int)void
java.sql.PreparedStatement.setAsciiStream(int,java.io.InputStream,long)void
java.sql.PreparedStatement.setBinaryStream(int,java.io.InputStream,long)void
java.sql.PreparedStatement.setCharacterStream(int,java.io.Reader,long)void
java.sql.PreparedStatement.setAsciiStream(int,java.io.InputStream)void
java.sql.PreparedStatement.setBinaryStream(int,java.io.InputStream)void
java.sql.PreparedStatement.setCharacterStream(int,java.io.Reader)void
java.sql.PreparedStatement.setNCharacterStream(int,java.io.Reader)void
java.sql.PreparedStatement.setClob(int,java.io.Reader)void
java.sql.PreparedStatement.setBlob(int,java.io.InputStream)void
java.sql.PreparedStatement.setNClob(int,java.io.Reader)void
java.sql.Ref.getBaseTypeName)String
java.sql.Ref.getObject(java.util.Map)Object
java.sql.Ref.getObject)Object
java.sql.Ref.setObject(Object)void
java.sql.ResultSet.next)boolean
java.sql.ResultSet.close)void
java.sql.ResultSet.wasNull)boolean
java.sql.ResultSet.getString(int)String
java.sql.ResultSet.getBoolean(int)boolean
java.sql.ResultSet.getByte(int)byte
java.sql.ResultSet.getShort(int)short
java.sql.ResultSet.getInt(int)int
java.sql.ResultSet.getLong(int)long
java.sql.ResultSet.getFloat(int)float
java.sql.ResultSet.getDouble(int)double
java.sql.ResultSet.getBigDecimal(int,int)java.math.BigDecimal
java.sql.ResultSet.getDate(int)java.sql.Date
java.sql.ResultSet.getTime(int)java.sql.Time
java.sql.ResultSet.getTimestamp(int)java.sql.Timestamp
java.sql.ResultSet.getAsciiStream(int)java.io.InputStream
java.sql.ResultSet.getUnicodeStream(int)java.io.InputStream
java.sql.ResultSet.getBinaryStream(int)java.io.InputStream
java.sql.ResultSet.getString(String)String
java.sql.ResultSet.getBoolean(String)boolean
java.sql.ResultSet.getByte(String)byte
java.sql.ResultSet.getShort(String)short
java.sql.ResultSet.getInt(String)int
java.sql.ResultSet.getLong(String)long
java.sql.ResultSet.getFloat(String)float
java.sql.ResultSet.getDouble(String)double
java.sql.ResultSet.getBigDecimal(String,int)java.math.BigDecimal
java.sql.ResultSet.getDate(String)java.sql.Date
java.sql.ResultSet.getTime(String)java.sql.Time
java.sql.ResultSet.getTimestamp(String)java.sql.Timestamp
java.sql.ResultSet.getAsciiStream(String)java.io.InputStream
java.sql.ResultSet.getUnicodeStream(String)java.io.InputStream
java.sql.ResultSet.getBinaryStream(String)java.io.InputStream
java.sql.ResultSet.getWarnings)java.sql.SQLWarning
java.sql.ResultSet.clearWarnings)void
java.sql.ResultSet.getCursorName)String
java.sql.ResultSet.getMetaData)java.sql.ResultSetMetaData
java.sql.ResultSet.getObject(int)Object
java.sql.ResultSet.getObject(String)Object
java.sql.ResultSet.findColumn(String)int
java.sql.ResultSet.getCharacterStream(int)java.io.Reader
java.sql.ResultSet.getCharacterStream(String)java.io.Reader
java.sql.ResultSet.getBigDecimal(int)java.math.BigDecimal
java.sql.ResultSet.getBigDecimal(String)java.math.BigDecimal
java.sql.ResultSet.isBeforeFirst)boolean
java.sql.ResultSet.isAfterLast)boolean
java.sql.ResultSet.isFirst)boolean
java.sql.ResultSet.isLast)boolean
java.sql.ResultSet.beforeFirst)void
java.sql.ResultSet.afterLast)void
java.sql.ResultSet.first)boolean
java.sql.ResultSet.last)boolean
java.sql.ResultSet.getRow)int
java.sql.ResultSet.absolute(int)boolean
java.sql.ResultSet.relative(int)boolean
java.sql.ResultSet.previous)boolean
java.sql.ResultSet.setFetchDirection(int)void
java.sql.ResultSet.getFetchDirection)int
java.sql.ResultSet.setFetchSize(int)void
java.sql.ResultSet.getFetchSize)int
java.sql.ResultSet.getType)int
java.sql.ResultSet.getConcurrency)int
java.sql.ResultSet.rowUpdated)boolean
java.sql.ResultSet.rowInserted)boolean
java.sql.ResultSet.rowDeleted)boolean
java.sql.ResultSet.updateNull(int)void
java.sql.ResultSet.updateBoolean(int,boolean)void
java.sql.ResultSet.updateByte(int,byte)void
java.sql.ResultSet.updateShort(int,short)void
java.sql.ResultSet.updateInt(int,int)void
java.sql.ResultSet.updateLong(int,long)void
java.sql.ResultSet.updateFloat(int,float)void
java.sql.ResultSet.updateDouble(int,double)void
java.sql.ResultSet.updateBigDecimal(int,java.math.BigDecimal)void
java.sql.ResultSet.updateString(int,String)void
java.sql.ResultSet.updateBytes(int,byte)void
java.sql.ResultSet.updateDate(int,java.sql.Date)void
java.sql.ResultSet.updateTime(int,java.sql.Time)void
java.sql.ResultSet.updateTimestamp(int,java.sql.Timestamp)void
java.sql.ResultSet.updateAsciiStream(int,java.io.InputStream,int)void
java.sql.ResultSet.updateBinaryStream(int,java.io.InputStream,int)void
java.sql.ResultSet.updateCharacterStream(int,java.io.Reader,int)void
java.sql.ResultSet.updateObject(int,Object,int)void
java.sql.ResultSet.updateObject(int,Object)void
java.sql.ResultSet.updateNull(String)void
java.sql.ResultSet.updateBoolean(String,boolean)void
java.sql.ResultSet.updateByte(String,byte)void
java.sql.ResultSet.updateShort(String,short)void
java.sql.ResultSet.updateInt(String,int)void
java.sql.ResultSet.updateLong(String,long)void
java.sql.ResultSet.updateFloat(String,float)void
java.sql.ResultSet.updateDouble(String,double)void
java.sql.ResultSet.updateBigDecimal(String,java.math.BigDecimal)void
java.sql.ResultSet.updateString(String,String)void
java.sql.ResultSet.updateBytes(String,byte)void
java.sql.ResultSet.updateDate(String,java.sql.Date)void
java.sql.ResultSet.updateTime(String,java.sql.Time)void
java.sql.ResultSet.updateTimestamp(String,java.sql.Timestamp)void
java.sql.ResultSet.updateAsciiStream(String,java.io.InputStream,int)void
java.sql.ResultSet.updateBinaryStream(String,java.io.InputStream,int)void
java.sql.ResultSet.updateCharacterStream(String,java.io.Reader,int)void
java.sql.ResultSet.updateObject(String,Object,int)void
java.sql.ResultSet.updateObject(String,Object)void
java.sql.ResultSet.insertRow)void
java.sql.ResultSet.updateRow)void
java.sql.ResultSet.deleteRow)void
java.sql.ResultSet.refreshRow)void
java.sql.ResultSet.cancelRowUpdates)void
java.sql.ResultSet.moveToInsertRow)void
java.sql.ResultSet.moveToCurrentRow)void
java.sql.ResultSet.getStatement)java.sql.Statement
java.sql.ResultSet.getObject(int,java.util.Map)Object
java.sql.ResultSet.getRef(int)java.sql.Ref
java.sql.ResultSet.getBlob(int)java.sql.Blob
java.sql.ResultSet.getClob(int)java.sql.Clob
java.sql.ResultSet.getArray(int)java.sql.Array
java.sql.ResultSet.getObject(String,java.util.Map)Object
java.sql.ResultSet.getRef(String)java.sql.Ref
java.sql.ResultSet.getBlob(String)java.sql.Blob
java.sql.ResultSet.getClob(String)java.sql.Clob
java.sql.ResultSet.getArray(String)java.sql.Array
java.sql.ResultSet.getDate(int,java.util.Calendar)java.sql.Date
java.sql.ResultSet.getDate(String,java.util.Calendar)java.sql.Date
java.sql.ResultSet.getTime(int,java.util.Calendar)java.sql.Time
java.sql.ResultSet.getTime(String,java.util.Calendar)java.sql.Time
java.sql.ResultSet.getTimestamp(int,java.util.Calendar)java.sql.Timestamp
java.sql.ResultSet.getTimestamp(String,java.util.Calendar)java.sql.Timestamp
java.sql.ResultSet.getURL(int)java.net.URL
java.sql.ResultSet.getURL(String)java.net.URL
java.sql.ResultSet.updateRef(int,java.sql.Ref)void
java.sql.ResultSet.updateRef(String,java.sql.Ref)void
java.sql.ResultSet.updateBlob(int,java.sql.Blob)void
java.sql.ResultSet.updateBlob(String,java.sql.Blob)void
java.sql.ResultSet.updateClob(int,java.sql.Clob)void
java.sql.ResultSet.updateClob(String,java.sql.Clob)void
java.sql.ResultSet.updateArray(int,java.sql.Array)void
java.sql.ResultSet.updateArray(String,java.sql.Array)void
java.sql.ResultSet.getRowId(int)java.sql.RowId
java.sql.ResultSet.getRowId(String)java.sql.RowId
java.sql.ResultSet.updateRowId(int,java.sql.RowId)void
java.sql.ResultSet.updateRowId(String,java.sql.RowId)void
java.sql.ResultSet.getHoldability)int
java.sql.ResultSet.isClosed)boolean
java.sql.ResultSet.updateNString(int,String)void
java.sql.ResultSet.updateNString(String,String)void
java.sql.ResultSet.updateNClob(int,java.sql.NClob)void
java.sql.ResultSet.updateNClob(String,java.sql.NClob)void
java.sql.ResultSet.getNClob(int)java.sql.NClob
java.sql.ResultSet.getNClob(String)java.sql.NClob
java.sql.ResultSet.getSQLXML(int)java.sql.SQLXML
java.sql.ResultSet.getSQLXML(String)java.sql.SQLXML
java.sql.ResultSet.updateSQLXML(int,java.sql.SQLXML)void
java.sql.ResultSet.updateSQLXML(String,java.sql.SQLXML)void
java.sql.ResultSet.getNString(int)String
java.sql.ResultSet.getNString(String)String
java.sql.ResultSet.getNCharacterStream(int)java.io.Reader
java.sql.ResultSet.getNCharacterStream(String)java.io.Reader
java.sql.ResultSet.updateNCharacterStream(int,java.io.Reader,long)void
java.sql.ResultSet.updateNCharacterStream(String,java.io.Reader,long)void
java.sql.ResultSet.updateAsciiStream(int,java.io.InputStream,long)void
java.sql.ResultSet.updateBinaryStream(int,java.io.InputStream,long)void
java.sql.ResultSet.updateCharacterStream(int,java.io.Reader,long)void
java.sql.ResultSet.updateAsciiStream(String,java.io.InputStream,long)void
java.sql.ResultSet.updateBinaryStream(String,java.io.InputStream,long)void
java.sql.ResultSet.updateCharacterStream(String,java.io.Reader,long)void
java.sql.ResultSet.updateBlob(int,java.io.InputStream,long)void
java.sql.ResultSet.updateBlob(String,java.io.InputStream,long)void
java.sql.ResultSet.updateClob(int,java.io.Reader,long)void
java.sql.ResultSet.updateClob(String,java.io.Reader,long)void
java.sql.ResultSet.updateNClob(int,java.io.Reader,long)void
java.sql.ResultSet.updateNClob(String,java.io.Reader,long)void
java.sql.ResultSet.updateNCharacterStream(int,java.io.Reader)void
java.sql.ResultSet.updateNCharacterStream(String,java.io.Reader)void
java.sql.ResultSet.updateAsciiStream(int,java.io.InputStream)void
java.sql.ResultSet.updateBinaryStream(int,java.io.InputStream)void
java.sql.ResultSet.updateCharacterStream(int,java.io.Reader)void
java.sql.ResultSet.updateAsciiStream(String,java.io.InputStream)void
java.sql.ResultSet.updateBinaryStream(String,java.io.InputStream)void
java.sql.ResultSet.updateCharacterStream(String,java.io.Reader)void
java.sql.ResultSet.updateBlob(int,java.io.InputStream)void
java.sql.ResultSet.updateBlob(String,java.io.InputStream)void
java.sql.ResultSet.updateClob(int,java.io.Reader)void
java.sql.ResultSet.updateClob(String,java.io.Reader)void
java.sql.ResultSet.updateNClob(int,java.io.Reader)void
java.sql.ResultSet.updateNClob(String,java.io.Reader)void
java.sql.ResultSetMetaData.getColumnCount)int
java.sql.ResultSetMetaData.isAutoIncrement(int)boolean
java.sql.ResultSetMetaData.isCaseSensitive(int)boolean
java.sql.ResultSetMetaData.isSearchable(int)boolean
java.sql.ResultSetMetaData.isCurrency(int)boolean
java.sql.ResultSetMetaData.isNullable(int)int
java.sql.ResultSetMetaData.isSigned(int)boolean
java.sql.ResultSetMetaData.getColumnDisplaySize(int)int
java.sql.ResultSetMetaData.getColumnLabel(int)String
java.sql.ResultSetMetaData.getColumnName(int)String
java.sql.ResultSetMetaData.getSchemaName(int)String
java.sql.ResultSetMetaData.getPrecision(int)int
java.sql.ResultSetMetaData.getScale(int)int
java.sql.ResultSetMetaData.getTableName(int)String
java.sql.ResultSetMetaData.getCatalogName(int)String
java.sql.ResultSetMetaData.getColumnType(int)int
java.sql.ResultSetMetaData.getColumnTypeName(int)String
java.sql.ResultSetMetaData.isReadOnly(int)boolean
java.sql.ResultSetMetaData.isWritable(int)boolean
java.sql.ResultSetMetaData.isDefinitelyWritable(int)boolean
java.sql.ResultSetMetaData.getColumnClassName(int)String
java.sql.RowIdLifetime.valueOf(String)java.sql.RowIdLifetime
java.sql.Savepoint.getSavepointId)int
java.sql.Savepoint.getSavepointName)String
java.sql.SQLClientInfoException.getFailedProperties)java.util.Map
java.sql.SQLData.getSQLTypeName)String
java.sql.SQLData.readSQL(java.sql.SQLInput,String)void
java.sql.SQLData.writeSQL(java.sql.SQLOutput)void
java.sql.SQLException.getSQLState)String
java.sql.SQLException.getErrorCode)int
java.sql.SQLException.getNextException)java.sql.SQLException
java.sql.SQLException.setNextException(java.sql.SQLException)void
java.sql.SQLException.iterator)java.util.Iterator
java.sql.SQLInput.readString)String
java.sql.SQLInput.readBoolean)boolean
java.sql.SQLInput.readByte)byte
java.sql.SQLInput.readShort)short
java.sql.SQLInput.readInt)int
java.sql.SQLInput.readLong)long
java.sql.SQLInput.readFloat)float
java.sql.SQLInput.readDouble)double
java.sql.SQLInput.readBigDecimal)java.math.BigDecimal
java.sql.SQLInput.readDate)java.sql.Date
java.sql.SQLInput.readTime)java.sql.Time
java.sql.SQLInput.readTimestamp)java.sql.Timestamp
java.sql.SQLInput.readCharacterStream)java.io.Reader
java.sql.SQLInput.readAsciiStream)java.io.InputStream
java.sql.SQLInput.readBinaryStream)java.io.InputStream
java.sql.SQLInput.readObject)Object
java.sql.SQLInput.readRef)java.sql.Ref
java.sql.SQLInput.readBlob)java.sql.Blob
java.sql.SQLInput.readClob)java.sql.Clob
java.sql.SQLInput.readArray)java.sql.Array
java.sql.SQLInput.wasNull)boolean
java.sql.SQLInput.readURL)java.net.URL
java.sql.SQLInput.readNClob)java.sql.NClob
java.sql.SQLInput.readNString)String
java.sql.SQLInput.readSQLXML)java.sql.SQLXML
java.sql.SQLInput.readRowId)java.sql.RowId
java.sql.SQLOutput.writeString(String)void
java.sql.SQLOutput.writeBoolean(boolean)void
java.sql.SQLOutput.writeByte(byte)void
java.sql.SQLOutput.writeShort(short)void
java.sql.SQLOutput.writeInt(int)void
java.sql.SQLOutput.writeLong(long)void
java.sql.SQLOutput.writeFloat(float)void
java.sql.SQLOutput.writeDouble(double)void
java.sql.SQLOutput.writeBigDecimal(java.math.BigDecimal)void
java.sql.SQLOutput.writeBytes(byte)void
java.sql.SQLOutput.writeDate(java.sql.Date)void
java.sql.SQLOutput.writeTime(java.sql.Time)void
java.sql.SQLOutput.writeTimestamp(java.sql.Timestamp)void
java.sql.SQLOutput.writeCharacterStream(java.io.Reader)void
java.sql.SQLOutput.writeAsciiStream(java.io.InputStream)void
java.sql.SQLOutput.writeBinaryStream(java.io.InputStream)void
java.sql.SQLOutput.writeObject(java.sql.SQLData)void
java.sql.SQLOutput.writeRef(java.sql.Ref)void
java.sql.SQLOutput.writeBlob(java.sql.Blob)void
java.sql.SQLOutput.writeClob(java.sql.Clob)void
java.sql.SQLOutput.writeStruct(java.sql.Struct)void
java.sql.SQLOutput.writeArray(java.sql.Array)void
java.sql.SQLOutput.writeURL(java.net.URL)void
java.sql.SQLOutput.writeNString(String)void
java.sql.SQLOutput.writeNClob(java.sql.NClob)void
java.sql.SQLOutput.writeRowId(java.sql.RowId)void
java.sql.SQLOutput.writeSQLXML(java.sql.SQLXML)void
java.sql.SQLWarning.getNextWarning)java.sql.SQLWarning
java.sql.SQLWarning.setNextWarning(java.sql.SQLWarning)void
java.sql.SQLXML.free)void
java.sql.SQLXML.getBinaryStream)InputStream
java.sql.SQLXML.setBinaryStream)OutputStream
java.sql.SQLXML.getCharacterStream)Reader
java.sql.SQLXML.setCharacterStream)Writer
java.sql.SQLXML.getString)String
java.sql.SQLXML.setString(String)void
java.sql.SQLXML.getSource(Class)javax.xml.transform.Source
java.sql.SQLXML.setResult(Class)javax.xml.transform.Result
java.sql.Statement.executeQuery(String)java.sql.ResultSet
java.sql.Statement.executeUpdate(String)int
java.sql.Statement.close)void
java.sql.Statement.getMaxFieldSize)int
java.sql.Statement.setMaxFieldSize(int)void
java.sql.Statement.getMaxRows)int
java.sql.Statement.setMaxRows(int)void
java.sql.Statement.setEscapeProcessing(boolean)void
java.sql.Statement.getQueryTimeout)int
java.sql.Statement.setQueryTimeout(int)void
java.sql.Statement.cancel)void
java.sql.Statement.getWarnings)java.sql.SQLWarning
java.sql.Statement.clearWarnings)void
java.sql.Statement.setCursorName(String)void
java.sql.Statement.execute(String)boolean
java.sql.Statement.getResultSet)java.sql.ResultSet
java.sql.Statement.getUpdateCount)int
java.sql.Statement.getMoreResults)boolean
java.sql.Statement.setFetchDirection(int)void
java.sql.Statement.getFetchDirection)int
java.sql.Statement.setFetchSize(int)void
java.sql.Statement.getFetchSize)int
java.sql.Statement.getResultSetConcurrency)int
java.sql.Statement.getResultSetType)int
java.sql.Statement.addBatch(String)void
java.sql.Statement.clearBatch)void
java.sql.Statement.getConnection)java.sql.Connection
java.sql.Statement.getMoreResults(int)boolean
java.sql.Statement.getGeneratedKeys)java.sql.ResultSet
java.sql.Statement.executeUpdate(String,int)int
java.sql.Statement.executeUpdate(String,int)int
java.sql.Statement.executeUpdate(String,String)int
java.sql.Statement.execute(String,int)boolean
java.sql.Statement.execute(String,int)boolean
java.sql.Statement.execute(String,String)boolean
java.sql.Statement.getResultSetHoldability)int
java.sql.Statement.isClosed)boolean
java.sql.Statement.setPoolable(boolean)void
java.sql.Statement.isPoolable)boolean
java.sql.Struct.getSQLTypeName)String
java.sql.Time.setTime(long)void
java.sql.Time.valueOf(String)java.sql.Time
java.sql.Time.toString)String
java.sql.Time.getYear)int
java.sql.Time.getMonth)int
java.sql.Time.getDay)int
java.sql.Time.getDate)int
java.sql.Time.setYear(int)void
java.sql.Time.setMonth(int)void
java.sql.Time.setDate(int)void
java.sql.Timestamp.setTime(long)void
java.sql.Timestamp.getTime)long
java.sql.Timestamp.valueOf(String)java.sql.Timestamp
java.sql.Timestamp.toString)String
java.sql.Timestamp.getNanos)int
java.sql.Timestamp.setNanos(int)void
java.sql.Timestamp.equals(java.sql.Timestamp)boolean
java.sql.Timestamp.equals(Object)boolean
java.sql.Timestamp.before(java.sql.Timestamp)boolean
java.sql.Timestamp.after(java.sql.Timestamp)boolean
java.sql.Timestamp.compareTo(java.sql.Timestamp)int
java.sql.Timestamp.compareTo(java.sql.Date)int
java.sql.Timestamp.hashCode)int
java.sql.Wrapper.unwrap(Class)Object
java.sql.Wrapper.isWrapperFor(Class)boolean
java.text.Annotation.getValue)Object
java.text.Annotation.toString)String
java.text.AttributedCharacterIterator.equals(Object)boolean
java.text.AttributedCharacterIterator.hashCode)int
java.text.AttributedCharacterIterator.toString)String
java.text.AttributedCharacterIterator.getName)String
java.text.AttributedCharacterIterator.readResolve)Object
java.text.AttributedString.addAttribute(AttributedCharacterIterator.Attribute,Object)void
java.text.AttributedString.addAttribute(AttributedCharacterIterator.Attribute,Object,int,int)void
java.text.AttributedString.addAttributes(java.util.Map,int,int)void
java.text.AttributedString.getIterator)java.text.AttributedCharacterIterator
java.text.AttributedString.getIterator(AttributedCharacterIterator.Attribute)java.text.AttributedCharacterIterator
java.text.AttributedString.getIterator(AttributedCharacterIterator.Attribute,int,int)java.text.AttributedCharacterIterator
java.text.Bidi.createLineBidi(int,int)java.text.Bidi
java.text.Bidi.isMixed)boolean
java.text.Bidi.isLeftToRight)boolean
java.text.Bidi.isRightToLeft)boolean
java.text.Bidi.getLength)int
java.text.Bidi.baseIsLeftToRight)boolean
java.text.Bidi.getBaseLevel)int
java.text.Bidi.getLevelAt(int)int
java.text.Bidi.getRunCount)int
java.text.Bidi.getRunLevel(int)int
java.text.Bidi.getRunStart(int)int
java.text.Bidi.getRunLimit(int)int
java.text.Bidi.requiresBidi(char,int,int)boolean
java.text.Bidi.reorderVisually(byte,int,Object,int,int)void
java.text.Bidi.toString)String
java.text.BreakIterator.clone)Object
java.text.BreakIterator.preceding(int)int
java.text.BreakIterator.isBoundary(int)boolean
java.text.BreakIterator.setText(String)void
java.text.BreakIterator.getWordInstance)java.text.BreakIterator
java.text.BreakIterator.getWordInstance(java.util.Locale)java.text.BreakIterator
java.text.BreakIterator.getLineInstance)java.text.BreakIterator
java.text.BreakIterator.getLineInstance(java.util.Locale)java.text.BreakIterator
java.text.BreakIterator.getCharacterInstance)java.text.BreakIterator
java.text.BreakIterator.getCharacterInstance(java.util.Locale)java.text.BreakIterator
java.text.BreakIterator.getSentenceInstance)java.text.BreakIterator
java.text.BreakIterator.getSentenceInstance(java.util.Locale)java.text.BreakIterator
java.text.ChoiceFormat.applyPattern(String)void
java.text.ChoiceFormat.toPattern)String
java.text.ChoiceFormat.setChoices(double,String)void
java.text.ChoiceFormat.format(long,StringBuffer,java.text.FieldPosition)StringBuffer
java.text.ChoiceFormat.format(double,StringBuffer,java.text.FieldPosition)StringBuffer
java.text.ChoiceFormat.parse(String,java.text.ParsePosition)Number
java.text.ChoiceFormat.nextDouble(double)double
java.text.ChoiceFormat.previousDouble(double)double
java.text.ChoiceFormat.clone)Object
java.text.ChoiceFormat.hashCode)int
java.text.ChoiceFormat.equals(Object)boolean
java.text.ChoiceFormat.nextDouble(double,boolean)double
java.text.CollationElementIterator.reset)void
java.text.CollationElementIterator.next)int
java.text.CollationElementIterator.previous)int
java.text.CollationElementIterator.primaryOrder(int)int
java.text.CollationElementIterator.secondaryOrder(int)short
java.text.CollationElementIterator.tertiaryOrder(int)short
java.text.CollationElementIterator.setOffset(int)void
java.text.CollationElementIterator.getOffset)int
java.text.CollationElementIterator.getMaxExpansion(int)int
java.text.CollationElementIterator.setText(String)void
java.text.CollationElementIterator.setText(java.text.CharacterIterator)void
java.text.CollationKey.getSourceString)String
java.text.Collator.compare(Object,Object)int
java.text.Collator.equals(String,String)boolean
java.text.Collator.clone)Object
java.text.Collator.equals(Object)boolean
java.text.DateFormat.ofCalendarField(int)java.text.DateFormat.Field
java.text.DateFormat.getCalendarField)int
java.text.DateFormat.readResolve)Object
java.text.DateFormat.format(Object,StringBuffer,java.text.FieldPosition)StringBuffer
java.text.DateFormat.format(Date)String
java.text.DateFormat.parse(String)Date
java.text.DateFormat.parseObject(String,java.text.ParsePosition)Object
java.text.DateFormat.getTimeInstance)java.text.DateFormat
java.text.DateFormat.getTimeInstance(int)java.text.DateFormat
java.text.DateFormat.getTimeInstance(int,Locale)java.text.DateFormat
java.text.DateFormat.getDateInstance)java.text.DateFormat
java.text.DateFormat.getDateInstance(int)java.text.DateFormat
java.text.DateFormat.getDateInstance(int,Locale)java.text.DateFormat
java.text.DateFormat.getDateTimeInstance)java.text.DateFormat
java.text.DateFormat.getDateTimeInstance(int,int)java.text.DateFormat
java.text.DateFormat.getDateTimeInstance(int,int,Locale)java.text.DateFormat
java.text.DateFormat.getInstance)java.text.DateFormat
java.text.DateFormat.setCalendar(Calendar)void
java.text.DateFormat.getCalendar)Calendar
java.text.DateFormat.setNumberFormat(java.text.NumberFormat)void
java.text.DateFormat.getNumberFormat)java.text.NumberFormat
java.text.DateFormat.setTimeZone(TimeZone)void
java.text.DateFormat.getTimeZone)TimeZone
java.text.DateFormat.setLenient(boolean)void
java.text.DateFormat.isLenient)boolean
java.text.DateFormat.hashCode)int
java.text.DateFormat.equals(Object)boolean
java.text.DateFormat.clone)Object
java.text.DateFormatSymbols.getInstance)java.text.DateFormatSymbols
java.text.DateFormatSymbols.getInstance(java.util.Locale)java.text.DateFormatSymbols
java.text.DateFormatSymbols.setEras(String)void
java.text.DateFormatSymbols.setMonths(String)void
java.text.DateFormatSymbols.setShortMonths(String)void
java.text.DateFormatSymbols.setWeekdays(String)void
java.text.DateFormatSymbols.setShortWeekdays(String)void
java.text.DateFormatSymbols.setAmPmStrings(String)void
java.text.DateFormatSymbols.setZoneStrings(String)void
java.text.DateFormatSymbols.getLocalPatternChars)String
java.text.DateFormatSymbols.setLocalPatternChars(String)void
java.text.DateFormatSymbols.clone)Object
java.text.DateFormatSymbols.hashCode)int
java.text.DateFormatSymbols.equals(Object)boolean
java.text.DecimalFormat.format(Object,StringBuffer,java.text.FieldPosition)StringBuffer
java.text.DecimalFormat.format(double,StringBuffer,java.text.FieldPosition)StringBuffer
java.text.DecimalFormat.format(long,StringBuffer,java.text.FieldPosition)StringBuffer
java.text.DecimalFormat.formatToCharacterIterator(Object)java.text.AttributedCharacterIterator
java.text.DecimalFormat.parse(String,java.text.ParsePosition)Number
java.text.DecimalFormat.getDecimalFormatSymbols)java.text.DecimalFormatSymbols
java.text.DecimalFormat.setDecimalFormatSymbols(java.text.DecimalFormatSymbols)void
java.text.DecimalFormat.getPositivePrefix)String
java.text.DecimalFormat.setPositivePrefix(String)void
java.text.DecimalFormat.getNegativePrefix)String
java.text.DecimalFormat.setNegativePrefix(String)void
java.text.DecimalFormat.getPositiveSuffix)String
java.text.DecimalFormat.setPositiveSuffix(String)void
java.text.DecimalFormat.getNegativeSuffix)String
java.text.DecimalFormat.setNegativeSuffix(String)void
java.text.DecimalFormat.getMultiplier)int
java.text.DecimalFormat.setMultiplier(int)void
java.text.DecimalFormat.setGroupingUsed(boolean)void
java.text.DecimalFormat.isGroupingUsed)boolean
java.text.DecimalFormat.getGroupingSize)int
java.text.DecimalFormat.setGroupingSize(int)void
java.text.DecimalFormat.isDecimalSeparatorAlwaysShown)boolean
java.text.DecimalFormat.setDecimalSeparatorAlwaysShown(boolean)void
java.text.DecimalFormat.isParseBigDecimal)boolean
java.text.DecimalFormat.setParseBigDecimal(boolean)void
java.text.DecimalFormat.isParseIntegerOnly)boolean
java.text.DecimalFormat.setParseIntegerOnly(boolean)void
java.text.DecimalFormat.clone)Object
java.text.DecimalFormat.equals(Object)boolean
java.text.DecimalFormat.hashCode)int
java.text.DecimalFormat.toPattern)String
java.text.DecimalFormat.toLocalizedPattern)String
java.text.DecimalFormat.applyPattern(String)void
java.text.DecimalFormat.applyLocalizedPattern(String)void
java.text.DecimalFormat.setMaximumIntegerDigits(int)void
java.text.DecimalFormat.setMinimumIntegerDigits(int)void
java.text.DecimalFormat.setMaximumFractionDigits(int)void
java.text.DecimalFormat.setMinimumFractionDigits(int)void
java.text.DecimalFormat.getMaximumIntegerDigits)int
java.text.DecimalFormat.getMinimumIntegerDigits)int
java.text.DecimalFormat.getMaximumFractionDigits)int
java.text.DecimalFormat.getMinimumFractionDigits)int
java.text.DecimalFormat.getCurrency)java.util.Currency
java.text.DecimalFormat.setCurrency(java.util.Currency)void
java.text.DecimalFormat.getRoundingMode)java.math.RoundingMode
java.text.DecimalFormat.setRoundingMode(java.math.RoundingMode)void
java.text.DecimalFormatSymbols.getInstance)java.text.DecimalFormatSymbols
java.text.DecimalFormatSymbols.getInstance(java.util.Locale)java.text.DecimalFormatSymbols
java.text.DecimalFormatSymbols.getZeroDigit)char
java.text.DecimalFormatSymbols.setZeroDigit(char)void
java.text.DecimalFormatSymbols.getGroupingSeparator)char
java.text.DecimalFormatSymbols.setGroupingSeparator(char)void
java.text.DecimalFormatSymbols.getDecimalSeparator)char
java.text.DecimalFormatSymbols.setDecimalSeparator(char)void
java.text.DecimalFormatSymbols.getPerMill)char
java.text.DecimalFormatSymbols.setPerMill(char)void
java.text.DecimalFormatSymbols.getPercent)char
java.text.DecimalFormatSymbols.setPercent(char)void
java.text.DecimalFormatSymbols.getDigit)char
java.text.DecimalFormatSymbols.setDigit(char)void
java.text.DecimalFormatSymbols.getPatternSeparator)char
java.text.DecimalFormatSymbols.setPatternSeparator(char)void
java.text.DecimalFormatSymbols.getInfinity)String
java.text.DecimalFormatSymbols.setInfinity(String)void
java.text.DecimalFormatSymbols.getNaN)String
java.text.DecimalFormatSymbols.setNaN(String)void
java.text.DecimalFormatSymbols.getMinusSign)char
java.text.DecimalFormatSymbols.setMinusSign(char)void
java.text.DecimalFormatSymbols.getCurrencySymbol)String
java.text.DecimalFormatSymbols.setCurrencySymbol(String)void
java.text.DecimalFormatSymbols.getInternationalCurrencySymbol)String
java.text.DecimalFormatSymbols.setInternationalCurrencySymbol(String)void
java.text.DecimalFormatSymbols.getCurrency)java.util.Currency
java.text.DecimalFormatSymbols.setCurrency(java.util.Currency)void
java.text.DecimalFormatSymbols.getMonetaryDecimalSeparator)char
java.text.DecimalFormatSymbols.setMonetaryDecimalSeparator(char)void
java.text.DecimalFormatSymbols.getExponentSeparator)String
java.text.DecimalFormatSymbols.setExponentSeparator(String)void
java.text.DecimalFormatSymbols.clone)Object
java.text.DecimalFormatSymbols.equals(Object)boolean
java.text.DecimalFormatSymbols.hashCode)int
java.text.FieldPosition.getField)int
java.text.FieldPosition.getBeginIndex)int
java.text.FieldPosition.getEndIndex)int
java.text.FieldPosition.setBeginIndex(int)void
java.text.FieldPosition.setEndIndex(int)void
java.text.FieldPosition.equals(Object)boolean
java.text.FieldPosition.hashCode)int
java.text.FieldPosition.toString)String
java.text.Format.format(Object)String
java.text.Format.formatToCharacterIterator(Object)java.text.AttributedCharacterIterator
java.text.Format.parseObject(String)Object
java.text.Format.clone)Object
java.text.MessageFormat.readResolve)Object
java.text.MessageFormat.setLocale(java.util.Locale)void
java.text.MessageFormat.getLocale)java.util.Locale
java.text.MessageFormat.applyPattern(String)void
java.text.MessageFormat.toPattern)String
java.text.MessageFormat.setFormatsByArgumentIndex(java.text.Format)void
java.text.MessageFormat.setFormats(java.text.Format)void
java.text.MessageFormat.setFormatByArgumentIndex(int,java.text.Format)void
java.text.MessageFormat.setFormat(int,java.text.Format)void
java.text.MessageFormat.format(Object,StringBuffer,java.text.FieldPosition)StringBuffer
java.text.MessageFormat.format(Object,StringBuffer,java.text.FieldPosition)StringBuffer
java.text.MessageFormat.formatToCharacterIterator(Object)java.text.AttributedCharacterIterator
java.text.MessageFormat.parseObject(String,java.text.ParsePosition)Object
java.text.MessageFormat.clone)Object
java.text.MessageFormat.equals(Object)boolean
java.text.MessageFormat.hashCode)int
java.text.Normalizer.valueOf(String)Form
java.text.Normalizer.normalize(CharSequence,Form)String
java.text.Normalizer.isNormalized(CharSequence,Form)boolean
java.text.NumberFormat.readResolve)Object
java.text.NumberFormat.format(Object,StringBuffer,java.text.FieldPosition)StringBuffer
java.text.NumberFormat.parseObject(String,java.text.ParsePosition)Object
java.text.NumberFormat.format(double)String
java.text.NumberFormat.format(long)String
java.text.NumberFormat.parse(String)Number
java.text.NumberFormat.isParseIntegerOnly)boolean
java.text.NumberFormat.setParseIntegerOnly(boolean)void
java.text.NumberFormat.getInstance)java.text.NumberFormat
java.text.NumberFormat.getInstance(java.util.Locale)java.text.NumberFormat
java.text.NumberFormat.getNumberInstance)java.text.NumberFormat
java.text.NumberFormat.getNumberInstance(java.util.Locale)java.text.NumberFormat
java.text.NumberFormat.getIntegerInstance)java.text.NumberFormat
java.text.NumberFormat.getIntegerInstance(java.util.Locale)java.text.NumberFormat
java.text.NumberFormat.getCurrencyInstance)java.text.NumberFormat
java.text.NumberFormat.getCurrencyInstance(java.util.Locale)java.text.NumberFormat
java.text.NumberFormat.getPercentInstance)java.text.NumberFormat
java.text.NumberFormat.getPercentInstance(java.util.Locale)java.text.NumberFormat
java.text.NumberFormat.hashCode)int
java.text.NumberFormat.equals(Object)boolean
java.text.NumberFormat.clone)Object
java.text.NumberFormat.isGroupingUsed)boolean
java.text.NumberFormat.setGroupingUsed(boolean)void
java.text.NumberFormat.getMaximumIntegerDigits)int
java.text.NumberFormat.setMaximumIntegerDigits(int)void
java.text.NumberFormat.getMinimumIntegerDigits)int
java.text.NumberFormat.setMinimumIntegerDigits(int)void
java.text.NumberFormat.getMaximumFractionDigits)int
java.text.NumberFormat.setMaximumFractionDigits(int)void
java.text.NumberFormat.getMinimumFractionDigits)int
java.text.NumberFormat.setMinimumFractionDigits(int)void
java.text.NumberFormat.getCurrency)java.util.Currency
java.text.NumberFormat.setCurrency(java.util.Currency)void
java.text.NumberFormat.getRoundingMode)java.math.RoundingMode
java.text.NumberFormat.setRoundingMode(java.math.RoundingMode)void
java.text.ParseException.getErrorOffset)int
java.text.ParsePosition.getIndex)int
java.text.ParsePosition.setIndex(int)void
java.text.ParsePosition.setErrorIndex(int)void
java.text.ParsePosition.getErrorIndex)int
java.text.ParsePosition.equals(Object)boolean
java.text.ParsePosition.hashCode)int
java.text.ParsePosition.toString)String
java.text.RuleBasedCollator.getRules)String
java.text.RuleBasedCollator.getCollationElementIterator(String)java.text.CollationElementIterator
java.text.RuleBasedCollator.getCollationElementIterator(java.text.CharacterIterator)java.text.CollationElementIterator
java.text.RuleBasedCollator.clone)Object
java.text.RuleBasedCollator.equals(Object)boolean
java.text.RuleBasedCollator.hashCode)int
java.text.SimpleDateFormat.set2DigitYearStart(java.util.Date)void
java.text.SimpleDateFormat.get2DigitYearStart)java.util.Date
java.text.SimpleDateFormat.format(java.util.Date,StringBuffer,java.text.FieldPosition)StringBuffer
java.text.SimpleDateFormat.formatToCharacterIterator(Object)java.text.AttributedCharacterIterator
java.text.SimpleDateFormat.parse(String,java.text.ParsePosition)java.util.Date
java.text.SimpleDateFormat.toPattern)String
java.text.SimpleDateFormat.toLocalizedPattern)String
java.text.SimpleDateFormat.applyPattern(String)void
java.text.SimpleDateFormat.applyLocalizedPattern(String)void
java.text.SimpleDateFormat.getDateFormatSymbols)java.text.DateFormatSymbols
java.text.SimpleDateFormat.setDateFormatSymbols(java.text.DateFormatSymbols)void
java.text.SimpleDateFormat.clone)Object
java.text.SimpleDateFormat.hashCode)int
java.text.SimpleDateFormat.equals(Object)boolean
java.text.StringCharacterIterator.setText(String)void
java.text.StringCharacterIterator.first)char
java.text.StringCharacterIterator.last)char
java.text.StringCharacterIterator.setIndex(int)char
java.text.StringCharacterIterator.current)char
java.text.StringCharacterIterator.next)char
java.text.StringCharacterIterator.previous)char
java.text.StringCharacterIterator.getBeginIndex)int
java.text.StringCharacterIterator.getEndIndex)int
java.text.StringCharacterIterator.getIndex)int
java.text.StringCharacterIterator.equals(Object)boolean
java.text.StringCharacterIterator.hashCode)int
java.text.StringCharacterIterator.clone)Object
java.time.Clock.systemUTC)java.time.Clock
java.time.Clock.systemDefaultZone)java.time.Clock
java.time.Clock.system(java.time.ZoneId)java.time.Clock
java.time.Clock.tickSeconds(java.time.ZoneId)java.time.Clock
java.time.Clock.tickMinutes(java.time.ZoneId)java.time.Clock
java.time.Clock.tick(java.time.Clock,java.time.Duration)java.time.Clock
java.time.Clock.fixed(java.time.Instant,java.time.ZoneId)java.time.Clock
java.time.Clock.offset(java.time.Clock,java.time.Duration)java.time.Clock
java.time.Clock.millis)long
java.time.Clock.equals(Object)boolean
java.time.Clock.hashCode)int
java.time.DayOfWeek.valueOf(String)java.time.DayOfWeek
java.time.DayOfWeek.of(int)java.time.DayOfWeek
java.time.DayOfWeek.from(java.time.temporal.TemporalAccessor)java.time.DayOfWeek
java.time.DayOfWeek.getValue)int
java.time.DayOfWeek.getDisplayName(java.time.format.TextStyle,java.util.Locale)String
java.time.DayOfWeek.isSupported(java.time.temporal.TemporalField)boolean
java.time.DayOfWeek.range(java.time.temporal.TemporalField)java.time.temporal.ValueRange
java.time.DayOfWeek.get(java.time.temporal.TemporalField)int
java.time.DayOfWeek.getLong(java.time.temporal.TemporalField)long
java.time.DayOfWeek.plus(long)java.time.DayOfWeek
java.time.DayOfWeek.minus(long)java.time.DayOfWeek
java.time.DayOfWeek.query(java.time.temporal.TemporalQuery)Object
java.time.DayOfWeek.adjustInto(java.time.temporal.Temporal)java.time.temporal.Temporal
java.time.Duration.ofDays(long)java.time.Duration
java.time.Duration.ofHours(long)java.time.Duration
java.time.Duration.ofMinutes(long)java.time.Duration
java.time.Duration.ofSeconds(long)java.time.Duration
java.time.Duration.ofSeconds(long,long)java.time.Duration
java.time.Duration.ofMillis(long)java.time.Duration
java.time.Duration.ofNanos(long)java.time.Duration
java.time.Duration.of(long,java.time.temporal.TemporalUnit)java.time.Duration
java.time.Duration.from(java.time.temporal.TemporalAmount)java.time.Duration
java.time.Duration.parse(CharSequence)java.time.Duration
java.time.Duration.between(java.time.temporal.Temporal,java.time.temporal.Temporal)java.time.Duration
java.time.Duration.get(java.time.temporal.TemporalUnit)long
java.time.Duration.getUnits)java.util.List
java.time.Duration.isZero)boolean
java.time.Duration.isNegative)boolean
java.time.Duration.getSeconds)long
java.time.Duration.getNano)int
java.time.Duration.withSeconds(long)java.time.Duration
java.time.Duration.withNanos(int)java.time.Duration
java.time.Duration.plus(java.time.Duration)java.time.Duration
java.time.Duration.plus(long,java.time.temporal.TemporalUnit)java.time.Duration
java.time.Duration.plusDays(long)java.time.Duration
java.time.Duration.plusHours(long)java.time.Duration
java.time.Duration.plusMinutes(long)java.time.Duration
java.time.Duration.plusSeconds(long)java.time.Duration
java.time.Duration.plusMillis(long)java.time.Duration
java.time.Duration.plusNanos(long)java.time.Duration
java.time.Duration.minus(java.time.Duration)java.time.Duration
java.time.Duration.minus(long,java.time.temporal.TemporalUnit)java.time.Duration
java.time.Duration.minusDays(long)java.time.Duration
java.time.Duration.minusHours(long)java.time.Duration
java.time.Duration.minusMinutes(long)java.time.Duration
java.time.Duration.minusSeconds(long)java.time.Duration
java.time.Duration.minusMillis(long)java.time.Duration
java.time.Duration.minusNanos(long)java.time.Duration
java.time.Duration.multipliedBy(long)java.time.Duration
java.time.Duration.dividedBy(long)java.time.Duration
java.time.Duration.negated)java.time.Duration
java.time.Duration.abs)java.time.Duration
java.time.Duration.addTo(java.time.temporal.Temporal)java.time.temporal.Temporal
java.time.Duration.subtractFrom(java.time.temporal.Temporal)java.time.temporal.Temporal
java.time.Duration.toDays)long
java.time.Duration.toHours)long
java.time.Duration.toMinutes)long
java.time.Duration.toMillis)long
java.time.Duration.toNanos)long
java.time.Duration.compareTo(java.time.Duration)int
java.time.Duration.equals(Object)boolean
java.time.Duration.hashCode)int
java.time.Duration.toString)String
java.time.Instant.now)java.time.Instant
java.time.Instant.now(java.time.Clock)java.time.Instant
java.time.Instant.ofEpochSecond(long)java.time.Instant
java.time.Instant.ofEpochSecond(long,long)java.time.Instant
java.time.Instant.ofEpochMilli(long)java.time.Instant
java.time.Instant.from(java.time.temporal.TemporalAccessor)java.time.Instant
java.time.Instant.parse(CharSequence)java.time.Instant
java.time.Instant.isSupported(java.time.temporal.TemporalField)boolean
java.time.Instant.isSupported(java.time.temporal.TemporalUnit)boolean
java.time.Instant.range(java.time.temporal.TemporalField)java.time.temporal.ValueRange
java.time.Instant.get(java.time.temporal.TemporalField)int
java.time.Instant.getLong(java.time.temporal.TemporalField)long
java.time.Instant.getEpochSecond)long
java.time.Instant.getNano)int
java.time.Instant.with(java.time.temporal.TemporalAdjuster)java.time.Instant
java.time.Instant.with(java.time.temporal.TemporalField,long)java.time.Instant
java.time.Instant.truncatedTo(java.time.temporal.TemporalUnit)java.time.Instant
java.time.Instant.plus(java.time.temporal.TemporalAmount)java.time.Instant
java.time.Instant.plus(long,java.time.temporal.TemporalUnit)java.time.Instant
java.time.Instant.plusSeconds(long)java.time.Instant
java.time.Instant.plusMillis(long)java.time.Instant
java.time.Instant.plusNanos(long)java.time.Instant
java.time.Instant.minus(java.time.temporal.TemporalAmount)java.time.Instant
java.time.Instant.minus(long,java.time.temporal.TemporalUnit)java.time.Instant
java.time.Instant.minusSeconds(long)java.time.Instant
java.time.Instant.minusMillis(long)java.time.Instant
java.time.Instant.minusNanos(long)java.time.Instant
java.time.Instant.query(java.time.temporal.TemporalQuery)Object
java.time.Instant.adjustInto(java.time.temporal.Temporal)java.time.temporal.Temporal
java.time.Instant.until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)long
java.time.Instant.atOffset(java.time.ZoneOffset)java.time.OffsetDateTime
java.time.Instant.atZone(java.time.ZoneId)java.time.ZonedDateTime
java.time.Instant.toEpochMilli)long
java.time.Instant.compareTo(java.time.Instant)int
java.time.Instant.isAfter(java.time.Instant)boolean
java.time.Instant.isBefore(java.time.Instant)boolean
java.time.Instant.equals(Object)boolean
java.time.Instant.hashCode)int
java.time.Instant.toString)String
java.time.LocalDate.now)java.time.LocalDate
java.time.LocalDate.now(java.time.ZoneId)java.time.LocalDate
java.time.LocalDate.now(java.time.Clock)java.time.LocalDate
java.time.LocalDate.of(int,java.time.Month,int)java.time.LocalDate
java.time.LocalDate.of(int,int,int)java.time.LocalDate
java.time.LocalDate.ofYearDay(int,int)java.time.LocalDate
java.time.LocalDate.ofEpochDay(long)java.time.LocalDate
java.time.LocalDate.from(java.time.temporal.TemporalAccessor)java.time.LocalDate
java.time.LocalDate.parse(CharSequence)java.time.LocalDate
java.time.LocalDate.parse(CharSequence,java.time.format.DateTimeFormatter)java.time.LocalDate
java.time.LocalDate.isSupported(java.time.temporal.TemporalField)boolean
java.time.LocalDate.isSupported(java.time.temporal.TemporalUnit)boolean
java.time.LocalDate.range(java.time.temporal.TemporalField)java.time.temporal.ValueRange
java.time.LocalDate.get(java.time.temporal.TemporalField)int
java.time.LocalDate.getLong(java.time.temporal.TemporalField)long
java.time.LocalDate.getChronology)java.time.chrono.IsoChronology
java.time.LocalDate.getEra)java.time.chrono.Era
java.time.LocalDate.getYear)int
java.time.LocalDate.getMonthValue)int
java.time.LocalDate.getMonth)java.time.Month
java.time.LocalDate.getDayOfMonth)int
java.time.LocalDate.getDayOfYear)int
java.time.LocalDate.getDayOfWeek)java.time.DayOfWeek
java.time.LocalDate.isLeapYear)boolean
java.time.LocalDate.lengthOfMonth)int
java.time.LocalDate.lengthOfYear)int
java.time.LocalDate.with(java.time.temporal.TemporalAdjuster)java.time.LocalDate
java.time.LocalDate.with(java.time.temporal.TemporalField,long)java.time.LocalDate
java.time.LocalDate.withYear(int)java.time.LocalDate
java.time.LocalDate.withMonth(int)java.time.LocalDate
java.time.LocalDate.withDayOfMonth(int)java.time.LocalDate
java.time.LocalDate.withDayOfYear(int)java.time.LocalDate
java.time.LocalDate.plus(java.time.temporal.TemporalAmount)java.time.LocalDate
java.time.LocalDate.plus(long,java.time.temporal.TemporalUnit)java.time.LocalDate
java.time.LocalDate.plusYears(long)java.time.LocalDate
java.time.LocalDate.plusMonths(long)java.time.LocalDate
java.time.LocalDate.plusWeeks(long)java.time.LocalDate
java.time.LocalDate.plusDays(long)java.time.LocalDate
java.time.LocalDate.minus(java.time.temporal.TemporalAmount)java.time.LocalDate
java.time.LocalDate.minus(long,java.time.temporal.TemporalUnit)java.time.LocalDate
java.time.LocalDate.minusYears(long)java.time.LocalDate
java.time.LocalDate.minusMonths(long)java.time.LocalDate
java.time.LocalDate.minusWeeks(long)java.time.LocalDate
java.time.LocalDate.minusDays(long)java.time.LocalDate
java.time.LocalDate.query(java.time.temporal.TemporalQuery)Object
java.time.LocalDate.adjustInto(java.time.temporal.Temporal)java.time.temporal.Temporal
java.time.LocalDate.until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)long
java.time.LocalDate.until(java.time.chrono.ChronoLocalDate)java.time.Period
java.time.LocalDate.format(java.time.format.DateTimeFormatter)String
java.time.LocalDate.atTime(java.time.LocalTime)java.time.LocalDateTime
java.time.LocalDate.atTime(int,int)java.time.LocalDateTime
java.time.LocalDate.atTime(int,int,int)java.time.LocalDateTime
java.time.LocalDate.atTime(int,int,int,int)java.time.LocalDateTime
java.time.LocalDate.atTime(java.time.OffsetTime)java.time.OffsetDateTime
java.time.LocalDate.atStartOfDay)java.time.LocalDateTime
java.time.LocalDate.atStartOfDay(java.time.ZoneId)java.time.ZonedDateTime
java.time.LocalDate.toEpochDay)long
java.time.LocalDate.compareTo(java.time.chrono.ChronoLocalDate)int
java.time.LocalDate.isAfter(java.time.chrono.ChronoLocalDate)boolean
java.time.LocalDate.isBefore(java.time.chrono.ChronoLocalDate)boolean
java.time.LocalDate.isEqual(java.time.chrono.ChronoLocalDate)boolean
java.time.LocalDate.equals(Object)boolean
java.time.LocalDate.hashCode)int
java.time.LocalDate.toString)String
java.time.LocalDateTime.now)java.time.LocalDateTime
java.time.LocalDateTime.now(java.time.ZoneId)java.time.LocalDateTime
java.time.LocalDateTime.now(java.time.Clock)java.time.LocalDateTime
java.time.LocalDateTime.of(int,java.time.Month,int,int,int)java.time.LocalDateTime
java.time.LocalDateTime.of(int,java.time.Month,int,int,int,int)java.time.LocalDateTime
java.time.LocalDateTime.of(int,java.time.Month,int,int,int,int,int)java.time.LocalDateTime
java.time.LocalDateTime.of(int,int,int,int,int)java.time.LocalDateTime
java.time.LocalDateTime.of(int,int,int,int,int,int)java.time.LocalDateTime
java.time.LocalDateTime.of(int,int,int,int,int,int,int)java.time.LocalDateTime
java.time.LocalDateTime.of(java.time.LocalDate,java.time.LocalTime)java.time.LocalDateTime
java.time.LocalDateTime.ofInstant(java.time.Instant,java.time.ZoneId)java.time.LocalDateTime
java.time.LocalDateTime.ofEpochSecond(long,int,java.time.ZoneOffset)java.time.LocalDateTime
java.time.LocalDateTime.from(java.time.temporal.TemporalAccessor)java.time.LocalDateTime
java.time.LocalDateTime.parse(CharSequence)java.time.LocalDateTime
java.time.LocalDateTime.parse(CharSequence,java.time.format.DateTimeFormatter)java.time.LocalDateTime
java.time.LocalDateTime.isSupported(java.time.temporal.TemporalField)boolean
java.time.LocalDateTime.isSupported(java.time.temporal.TemporalUnit)boolean
java.time.LocalDateTime.range(java.time.temporal.TemporalField)java.time.temporal.ValueRange
java.time.LocalDateTime.get(java.time.temporal.TemporalField)int
java.time.LocalDateTime.getLong(java.time.temporal.TemporalField)long
java.time.LocalDateTime.toLocalDate)java.time.LocalDate
java.time.LocalDateTime.getYear)int
java.time.LocalDateTime.getMonthValue)int
java.time.LocalDateTime.getMonth)java.time.Month
java.time.LocalDateTime.getDayOfMonth)int
java.time.LocalDateTime.getDayOfYear)int
java.time.LocalDateTime.getDayOfWeek)java.time.DayOfWeek
java.time.LocalDateTime.toLocalTime)java.time.LocalTime
java.time.LocalDateTime.getHour)int
java.time.LocalDateTime.getMinute)int
java.time.LocalDateTime.getSecond)int
java.time.LocalDateTime.getNano)int
java.time.LocalDateTime.with(java.time.temporal.TemporalAdjuster)java.time.LocalDateTime
java.time.LocalDateTime.with(java.time.temporal.TemporalField,long)java.time.LocalDateTime
java.time.LocalDateTime.withYear(int)java.time.LocalDateTime
java.time.LocalDateTime.withMonth(int)java.time.LocalDateTime
java.time.LocalDateTime.withDayOfMonth(int)java.time.LocalDateTime
java.time.LocalDateTime.withDayOfYear(int)java.time.LocalDateTime
java.time.LocalDateTime.withHour(int)java.time.LocalDateTime
java.time.LocalDateTime.withMinute(int)java.time.LocalDateTime
java.time.LocalDateTime.withSecond(int)java.time.LocalDateTime
java.time.LocalDateTime.withNano(int)java.time.LocalDateTime
java.time.LocalDateTime.truncatedTo(java.time.temporal.TemporalUnit)java.time.LocalDateTime
java.time.LocalDateTime.plus(java.time.temporal.TemporalAmount)java.time.LocalDateTime
java.time.LocalDateTime.plus(long,java.time.temporal.TemporalUnit)java.time.LocalDateTime
java.time.LocalDateTime.plusYears(long)java.time.LocalDateTime
java.time.LocalDateTime.plusMonths(long)java.time.LocalDateTime
java.time.LocalDateTime.plusWeeks(long)java.time.LocalDateTime
java.time.LocalDateTime.plusDays(long)java.time.LocalDateTime
java.time.LocalDateTime.plusHours(long)java.time.LocalDateTime
java.time.LocalDateTime.plusMinutes(long)java.time.LocalDateTime
java.time.LocalDateTime.plusSeconds(long)java.time.LocalDateTime
java.time.LocalDateTime.plusNanos(long)java.time.LocalDateTime
java.time.LocalDateTime.minus(java.time.temporal.TemporalAmount)java.time.LocalDateTime
java.time.LocalDateTime.minus(long,java.time.temporal.TemporalUnit)java.time.LocalDateTime
java.time.LocalDateTime.minusYears(long)java.time.LocalDateTime
java.time.LocalDateTime.minusMonths(long)java.time.LocalDateTime
java.time.LocalDateTime.minusWeeks(long)java.time.LocalDateTime
java.time.LocalDateTime.minusDays(long)java.time.LocalDateTime
java.time.LocalDateTime.minusHours(long)java.time.LocalDateTime
java.time.LocalDateTime.minusMinutes(long)java.time.LocalDateTime
java.time.LocalDateTime.minusSeconds(long)java.time.LocalDateTime
java.time.LocalDateTime.minusNanos(long)java.time.LocalDateTime
java.time.LocalDateTime.query(java.time.temporal.TemporalQuery)Object
java.time.LocalDateTime.adjustInto(java.time.temporal.Temporal)java.time.temporal.Temporal
java.time.LocalDateTime.until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)long
java.time.LocalDateTime.format(java.time.format.DateTimeFormatter)String
java.time.LocalDateTime.atOffset(java.time.ZoneOffset)java.time.OffsetDateTime
java.time.LocalDateTime.atZone(java.time.ZoneId)java.time.ZonedDateTime
java.time.LocalDateTime.compareTo(java.time.chrono.ChronoLocalDateTime)int
java.time.LocalDateTime.isAfter(java.time.chrono.ChronoLocalDateTime)boolean
java.time.LocalDateTime.isBefore(java.time.chrono.ChronoLocalDateTime)boolean
java.time.LocalDateTime.isEqual(java.time.chrono.ChronoLocalDateTime)boolean
java.time.LocalDateTime.equals(Object)boolean
java.time.LocalDateTime.hashCode)int
java.time.LocalDateTime.toString)String
java.time.LocalTime.now)java.time.LocalTime
java.time.LocalTime.now(java.time.ZoneId)java.time.LocalTime
java.time.LocalTime.now(java.time.Clock)java.time.LocalTime
java.time.LocalTime.of(int,int)java.time.LocalTime
java.time.LocalTime.of(int,int,int)java.time.LocalTime
java.time.LocalTime.of(int,int,int,int)java.time.LocalTime
java.time.LocalTime.ofSecondOfDay(long)java.time.LocalTime
java.time.LocalTime.ofNanoOfDay(long)java.time.LocalTime
java.time.LocalTime.from(java.time.temporal.TemporalAccessor)java.time.LocalTime
java.time.LocalTime.parse(CharSequence)java.time.LocalTime
java.time.LocalTime.parse(CharSequence,java.time.format.DateTimeFormatter)java.time.LocalTime
java.time.LocalTime.isSupported(java.time.temporal.TemporalField)boolean
java.time.LocalTime.isSupported(java.time.temporal.TemporalUnit)boolean
java.time.LocalTime.range(java.time.temporal.TemporalField)java.time.temporal.ValueRange
java.time.LocalTime.get(java.time.temporal.TemporalField)int
java.time.LocalTime.getLong(java.time.temporal.TemporalField)long
java.time.LocalTime.getHour)int
java.time.LocalTime.getMinute)int
java.time.LocalTime.getSecond)int
java.time.LocalTime.getNano)int
java.time.LocalTime.with(java.time.temporal.TemporalAdjuster)java.time.LocalTime
java.time.LocalTime.with(java.time.temporal.TemporalField,long)java.time.LocalTime
java.time.LocalTime.withHour(int)java.time.LocalTime
java.time.LocalTime.withMinute(int)java.time.LocalTime
java.time.LocalTime.withSecond(int)java.time.LocalTime
java.time.LocalTime.withNano(int)java.time.LocalTime
java.time.LocalTime.truncatedTo(java.time.temporal.TemporalUnit)java.time.LocalTime
java.time.LocalTime.plus(java.time.temporal.TemporalAmount)java.time.LocalTime
java.time.LocalTime.plus(long,java.time.temporal.TemporalUnit)java.time.LocalTime
java.time.LocalTime.plusHours(long)java.time.LocalTime
java.time.LocalTime.plusMinutes(long)java.time.LocalTime
java.time.LocalTime.plusSeconds(long)java.time.LocalTime
java.time.LocalTime.plusNanos(long)java.time.LocalTime
java.time.LocalTime.minus(java.time.temporal.TemporalAmount)java.time.LocalTime
java.time.LocalTime.minus(long,java.time.temporal.TemporalUnit)java.time.LocalTime
java.time.LocalTime.minusHours(long)java.time.LocalTime
java.time.LocalTime.minusMinutes(long)java.time.LocalTime
java.time.LocalTime.minusSeconds(long)java.time.LocalTime
java.time.LocalTime.minusNanos(long)java.time.LocalTime
java.time.LocalTime.query(java.time.temporal.TemporalQuery)Object
java.time.LocalTime.adjustInto(java.time.temporal.Temporal)java.time.temporal.Temporal
java.time.LocalTime.until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)long
java.time.LocalTime.format(java.time.format.DateTimeFormatter)String
java.time.LocalTime.atDate(java.time.LocalDate)java.time.LocalDateTime
java.time.LocalTime.atOffset(java.time.ZoneOffset)java.time.OffsetTime
java.time.LocalTime.toSecondOfDay)int
java.time.LocalTime.toNanoOfDay)long
java.time.LocalTime.compareTo(java.time.LocalTime)int
java.time.LocalTime.isAfter(java.time.LocalTime)boolean
java.time.LocalTime.isBefore(java.time.LocalTime)boolean
java.time.LocalTime.equals(Object)boolean
java.time.LocalTime.hashCode)int
java.time.LocalTime.toString)String
java.time.Month.valueOf(String)java.time.Month
java.time.Month.of(int)java.time.Month
java.time.Month.from(java.time.temporal.TemporalAccessor)java.time.Month
java.time.Month.getValue)int
java.time.Month.getDisplayName(java.time.format.TextStyle,java.util.Locale)String
java.time.Month.isSupported(java.time.temporal.TemporalField)boolean
java.time.Month.range(java.time.temporal.TemporalField)java.time.temporal.ValueRange
java.time.Month.get(java.time.temporal.TemporalField)int
java.time.Month.getLong(java.time.temporal.TemporalField)long
java.time.Month.plus(long)java.time.Month
java.time.Month.minus(long)java.time.Month
java.time.Month.length(boolean)int
java.time.Month.minLength)int
java.time.Month.maxLength)int
java.time.Month.firstDayOfYear(boolean)int
java.time.Month.firstMonthOfQuarter)java.time.Month
java.time.Month.query(java.time.temporal.TemporalQuery)Object
java.time.Month.adjustInto(java.time.temporal.Temporal)java.time.temporal.Temporal
java.time.MonthDay.now)java.time.MonthDay
java.time.MonthDay.now(java.time.ZoneId)java.time.MonthDay
java.time.MonthDay.now(java.time.Clock)java.time.MonthDay
java.time.MonthDay.of(java.time.Month,int)java.time.MonthDay
java.time.MonthDay.of(int,int)java.time.MonthDay
java.time.MonthDay.from(java.time.temporal.TemporalAccessor)java.time.MonthDay
java.time.MonthDay.parse(CharSequence)java.time.MonthDay
java.time.MonthDay.parse(CharSequence,java.time.format.DateTimeFormatter)java.time.MonthDay
java.time.MonthDay.isSupported(java.time.temporal.TemporalField)boolean
java.time.MonthDay.range(java.time.temporal.TemporalField)java.time.temporal.ValueRange
java.time.MonthDay.get(java.time.temporal.TemporalField)int
java.time.MonthDay.getLong(java.time.temporal.TemporalField)long
java.time.MonthDay.getMonthValue)int
java.time.MonthDay.getMonth)java.time.Month
java.time.MonthDay.getDayOfMonth)int
java.time.MonthDay.isValidYear(int)boolean
java.time.MonthDay.withMonth(int)java.time.MonthDay
java.time.MonthDay.with(java.time.Month)java.time.MonthDay
java.time.MonthDay.withDayOfMonth(int)java.time.MonthDay
java.time.MonthDay.query(java.time.temporal.TemporalQuery)Object
java.time.MonthDay.adjustInto(java.time.temporal.Temporal)java.time.temporal.Temporal
java.time.MonthDay.format(java.time.format.DateTimeFormatter)String
java.time.MonthDay.atYear(int)java.time.LocalDate
java.time.MonthDay.compareTo(java.time.MonthDay)int
java.time.MonthDay.isAfter(java.time.MonthDay)boolean
java.time.MonthDay.isBefore(java.time.MonthDay)boolean
java.time.MonthDay.equals(Object)boolean
java.time.MonthDay.hashCode)int
java.time.MonthDay.toString)String
java.time.OffsetDateTime.timeLineOrder)java.util.Comparator
java.time.OffsetDateTime.now)java.time.OffsetDateTime
java.time.OffsetDateTime.now(java.time.ZoneId)java.time.OffsetDateTime
java.time.OffsetDateTime.now(java.time.Clock)java.time.OffsetDateTime
java.time.OffsetDateTime.of(java.time.LocalDate,java.time.LocalTime,java.time.ZoneOffset)java.time.OffsetDateTime
java.time.OffsetDateTime.of(java.time.LocalDateTime,java.time.ZoneOffset)java.time.OffsetDateTime
java.time.OffsetDateTime.of(int,int,int,int,int,int,int,java.time.ZoneOffset)java.time.OffsetDateTime
java.time.OffsetDateTime.ofInstant(java.time.Instant,java.time.ZoneId)java.time.OffsetDateTime
java.time.OffsetDateTime.from(java.time.temporal.TemporalAccessor)java.time.OffsetDateTime
java.time.OffsetDateTime.parse(CharSequence)java.time.OffsetDateTime
java.time.OffsetDateTime.parse(CharSequence,java.time.format.DateTimeFormatter)java.time.OffsetDateTime
java.time.OffsetDateTime.isSupported(java.time.temporal.TemporalField)boolean
java.time.OffsetDateTime.isSupported(java.time.temporal.TemporalUnit)boolean
java.time.OffsetDateTime.range(java.time.temporal.TemporalField)java.time.temporal.ValueRange
java.time.OffsetDateTime.get(java.time.temporal.TemporalField)int
java.time.OffsetDateTime.getLong(java.time.temporal.TemporalField)long
java.time.OffsetDateTime.getOffset)java.time.ZoneOffset
java.time.OffsetDateTime.withOffsetSameLocal(java.time.ZoneOffset)java.time.OffsetDateTime
java.time.OffsetDateTime.withOffsetSameInstant(java.time.ZoneOffset)java.time.OffsetDateTime
java.time.OffsetDateTime.toLocalDateTime)java.time.LocalDateTime
java.time.OffsetDateTime.toLocalDate)java.time.LocalDate
java.time.OffsetDateTime.getYear)int
java.time.OffsetDateTime.getMonthValue)int
java.time.OffsetDateTime.getMonth)java.time.Month
java.time.OffsetDateTime.getDayOfMonth)int
java.time.OffsetDateTime.getDayOfYear)int
java.time.OffsetDateTime.getDayOfWeek)java.time.DayOfWeek
java.time.OffsetDateTime.toLocalTime)java.time.LocalTime
java.time.OffsetDateTime.getHour)int
java.time.OffsetDateTime.getMinute)int
java.time.OffsetDateTime.getSecond)int
java.time.OffsetDateTime.getNano)int
java.time.OffsetDateTime.with(java.time.temporal.TemporalAdjuster)java.time.OffsetDateTime
java.time.OffsetDateTime.with(java.time.temporal.TemporalField,long)java.time.OffsetDateTime
java.time.OffsetDateTime.withYear(int)java.time.OffsetDateTime
java.time.OffsetDateTime.withMonth(int)java.time.OffsetDateTime
java.time.OffsetDateTime.withDayOfMonth(int)java.time.OffsetDateTime
java.time.OffsetDateTime.withDayOfYear(int)java.time.OffsetDateTime
java.time.OffsetDateTime.withHour(int)java.time.OffsetDateTime
java.time.OffsetDateTime.withMinute(int)java.time.OffsetDateTime
java.time.OffsetDateTime.withSecond(int)java.time.OffsetDateTime
java.time.OffsetDateTime.withNano(int)java.time.OffsetDateTime
java.time.OffsetDateTime.truncatedTo(java.time.temporal.TemporalUnit)java.time.OffsetDateTime
java.time.OffsetDateTime.plus(java.time.temporal.TemporalAmount)java.time.OffsetDateTime
java.time.OffsetDateTime.plus(long,java.time.temporal.TemporalUnit)java.time.OffsetDateTime
java.time.OffsetDateTime.plusYears(long)java.time.OffsetDateTime
java.time.OffsetDateTime.plusMonths(long)java.time.OffsetDateTime
java.time.OffsetDateTime.plusWeeks(long)java.time.OffsetDateTime
java.time.OffsetDateTime.plusDays(long)java.time.OffsetDateTime
java.time.OffsetDateTime.plusHours(long)java.time.OffsetDateTime
java.time.OffsetDateTime.plusMinutes(long)java.time.OffsetDateTime
java.time.OffsetDateTime.plusSeconds(long)java.time.OffsetDateTime
java.time.OffsetDateTime.plusNanos(long)java.time.OffsetDateTime
java.time.OffsetDateTime.minus(java.time.temporal.TemporalAmount)java.time.OffsetDateTime
java.time.OffsetDateTime.minus(long,java.time.temporal.TemporalUnit)java.time.OffsetDateTime
java.time.OffsetDateTime.minusYears(long)java.time.OffsetDateTime
java.time.OffsetDateTime.minusMonths(long)java.time.OffsetDateTime
java.time.OffsetDateTime.minusWeeks(long)java.time.OffsetDateTime
java.time.OffsetDateTime.minusDays(long)java.time.OffsetDateTime
java.time.OffsetDateTime.minusHours(long)java.time.OffsetDateTime
java.time.OffsetDateTime.minusMinutes(long)java.time.OffsetDateTime
java.time.OffsetDateTime.minusSeconds(long)java.time.OffsetDateTime
java.time.OffsetDateTime.minusNanos(long)java.time.OffsetDateTime
java.time.OffsetDateTime.query(java.time.temporal.TemporalQuery)Object
java.time.OffsetDateTime.adjustInto(java.time.temporal.Temporal)java.time.temporal.Temporal
java.time.OffsetDateTime.until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)long
java.time.OffsetDateTime.format(java.time.format.DateTimeFormatter)String
java.time.OffsetDateTime.atZoneSameInstant(java.time.ZoneId)java.time.ZonedDateTime
java.time.OffsetDateTime.atZoneSimilarLocal(java.time.ZoneId)java.time.ZonedDateTime
java.time.OffsetDateTime.toOffsetTime)java.time.OffsetTime
java.time.OffsetDateTime.toZonedDateTime)java.time.ZonedDateTime
java.time.OffsetDateTime.toInstant)java.time.Instant
java.time.OffsetDateTime.toEpochSecond)long
java.time.OffsetDateTime.compareTo(java.time.OffsetDateTime)int
java.time.OffsetDateTime.isAfter(java.time.OffsetDateTime)boolean
java.time.OffsetDateTime.isBefore(java.time.OffsetDateTime)boolean
java.time.OffsetDateTime.isEqual(java.time.OffsetDateTime)boolean
java.time.OffsetDateTime.equals(Object)boolean
java.time.OffsetDateTime.hashCode)int
java.time.OffsetDateTime.toString)String
java.time.OffsetTime.now)java.time.OffsetTime
java.time.OffsetTime.now(java.time.ZoneId)java.time.OffsetTime
java.time.OffsetTime.now(java.time.Clock)java.time.OffsetTime
java.time.OffsetTime.of(java.time.LocalTime,java.time.ZoneOffset)java.time.OffsetTime
java.time.OffsetTime.of(int,int,int,int,java.time.ZoneOffset)java.time.OffsetTime
java.time.OffsetTime.ofInstant(java.time.Instant,java.time.ZoneId)java.time.OffsetTime
java.time.OffsetTime.from(java.time.temporal.TemporalAccessor)java.time.OffsetTime
java.time.OffsetTime.parse(CharSequence)java.time.OffsetTime
java.time.OffsetTime.parse(CharSequence,java.time.format.DateTimeFormatter)java.time.OffsetTime
java.time.OffsetTime.isSupported(java.time.temporal.TemporalField)boolean
java.time.OffsetTime.isSupported(java.time.temporal.TemporalUnit)boolean
java.time.OffsetTime.range(java.time.temporal.TemporalField)java.time.temporal.ValueRange
java.time.OffsetTime.get(java.time.temporal.TemporalField)int
java.time.OffsetTime.getLong(java.time.temporal.TemporalField)long
java.time.OffsetTime.getOffset)java.time.ZoneOffset
java.time.OffsetTime.withOffsetSameLocal(java.time.ZoneOffset)java.time.OffsetTime
java.time.OffsetTime.withOffsetSameInstant(java.time.ZoneOffset)java.time.OffsetTime
java.time.OffsetTime.toLocalTime)java.time.LocalTime
java.time.OffsetTime.getHour)int
java.time.OffsetTime.getMinute)int
java.time.OffsetTime.getSecond)int
java.time.OffsetTime.getNano)int
java.time.OffsetTime.with(java.time.temporal.TemporalAdjuster)java.time.OffsetTime
java.time.OffsetTime.with(java.time.temporal.TemporalField,long)java.time.OffsetTime
java.time.OffsetTime.withHour(int)java.time.OffsetTime
java.time.OffsetTime.withMinute(int)java.time.OffsetTime
java.time.OffsetTime.withSecond(int)java.time.OffsetTime
java.time.OffsetTime.withNano(int)java.time.OffsetTime
java.time.OffsetTime.truncatedTo(java.time.temporal.TemporalUnit)java.time.OffsetTime
java.time.OffsetTime.plus(java.time.temporal.TemporalAmount)java.time.OffsetTime
java.time.OffsetTime.plus(long,java.time.temporal.TemporalUnit)java.time.OffsetTime
java.time.OffsetTime.plusHours(long)java.time.OffsetTime
java.time.OffsetTime.plusMinutes(long)java.time.OffsetTime
java.time.OffsetTime.plusSeconds(long)java.time.OffsetTime
java.time.OffsetTime.plusNanos(long)java.time.OffsetTime
java.time.OffsetTime.minus(java.time.temporal.TemporalAmount)java.time.OffsetTime
java.time.OffsetTime.minus(long,java.time.temporal.TemporalUnit)java.time.OffsetTime
java.time.OffsetTime.minusHours(long)java.time.OffsetTime
java.time.OffsetTime.minusMinutes(long)java.time.OffsetTime
java.time.OffsetTime.minusSeconds(long)java.time.OffsetTime
java.time.OffsetTime.minusNanos(long)java.time.OffsetTime
java.time.OffsetTime.query(java.time.temporal.TemporalQuery)Object
java.time.OffsetTime.adjustInto(java.time.temporal.Temporal)java.time.temporal.Temporal
java.time.OffsetTime.until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)long
java.time.OffsetTime.format(java.time.format.DateTimeFormatter)String
java.time.OffsetTime.atDate(java.time.LocalDate)java.time.OffsetDateTime
java.time.OffsetTime.compareTo(java.time.OffsetTime)int
java.time.OffsetTime.isAfter(java.time.OffsetTime)boolean
java.time.OffsetTime.isBefore(java.time.OffsetTime)boolean
java.time.OffsetTime.isEqual(java.time.OffsetTime)boolean
java.time.OffsetTime.equals(Object)boolean
java.time.OffsetTime.hashCode)int
java.time.OffsetTime.toString)String
java.time.Period.ofYears(int)java.time.Period
java.time.Period.ofMonths(int)java.time.Period
java.time.Period.ofWeeks(int)java.time.Period
java.time.Period.ofDays(int)java.time.Period
java.time.Period.of(int,int,int)java.time.Period
java.time.Period.from(java.time.temporal.TemporalAmount)java.time.Period
java.time.Period.parse(CharSequence)java.time.Period
java.time.Period.between(java.time.LocalDate,java.time.LocalDate)java.time.Period
java.time.Period.get(java.time.temporal.TemporalUnit)long
java.time.Period.getUnits)java.util.List
java.time.Period.getChronology)java.time.chrono.IsoChronology
java.time.Period.isZero)boolean
java.time.Period.isNegative)boolean
java.time.Period.getYears)int
java.time.Period.getMonths)int
java.time.Period.getDays)int
java.time.Period.withYears(int)java.time.Period
java.time.Period.withMonths(int)java.time.Period
java.time.Period.withDays(int)java.time.Period
java.time.Period.plus(java.time.temporal.TemporalAmount)java.time.Period
java.time.Period.plusYears(long)java.time.Period
java.time.Period.plusMonths(long)java.time.Period
java.time.Period.plusDays(long)java.time.Period
java.time.Period.minus(java.time.temporal.TemporalAmount)java.time.Period
java.time.Period.minusYears(long)java.time.Period
java.time.Period.minusMonths(long)java.time.Period
java.time.Period.minusDays(long)java.time.Period
java.time.Period.multipliedBy(int)java.time.Period
java.time.Period.negated)java.time.Period
java.time.Period.normalized)java.time.Period
java.time.Period.toTotalMonths)long
java.time.Period.addTo(java.time.temporal.Temporal)java.time.temporal.Temporal
java.time.Period.subtractFrom(java.time.temporal.Temporal)java.time.temporal.Temporal
java.time.Period.equals(Object)boolean
java.time.Period.hashCode)int
java.time.Period.toString)String
java.time.Year.now)java.time.Year
java.time.Year.now(java.time.ZoneId)java.time.Year
java.time.Year.now(java.time.Clock)java.time.Year
java.time.Year.of(int)java.time.Year
java.time.Year.from(java.time.temporal.TemporalAccessor)java.time.Year
java.time.Year.parse(CharSequence)java.time.Year
java.time.Year.parse(CharSequence,java.time.format.DateTimeFormatter)java.time.Year
java.time.Year.isLeap(long)boolean
java.time.Year.getValue)int
java.time.Year.isSupported(java.time.temporal.TemporalField)boolean
java.time.Year.isSupported(java.time.temporal.TemporalUnit)boolean
java.time.Year.range(java.time.temporal.TemporalField)java.time.temporal.ValueRange
java.time.Year.get(java.time.temporal.TemporalField)int
java.time.Year.getLong(java.time.temporal.TemporalField)long
java.time.Year.isLeap)boolean
java.time.Year.isValidMonthDay(java.time.MonthDay)boolean
java.time.Year.length)int
java.time.Year.with(java.time.temporal.TemporalAdjuster)java.time.Year
java.time.Year.with(java.time.temporal.TemporalField,long)java.time.Year
java.time.Year.plus(java.time.temporal.TemporalAmount)java.time.Year
java.time.Year.plus(long,java.time.temporal.TemporalUnit)java.time.Year
java.time.Year.plusYears(long)java.time.Year
java.time.Year.minus(java.time.temporal.TemporalAmount)java.time.Year
java.time.Year.minus(long,java.time.temporal.TemporalUnit)java.time.Year
java.time.Year.minusYears(long)java.time.Year
java.time.Year.query(java.time.temporal.TemporalQuery)Object
java.time.Year.adjustInto(java.time.temporal.Temporal)java.time.temporal.Temporal
java.time.Year.until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)long
java.time.Year.format(java.time.format.DateTimeFormatter)String
java.time.Year.atDay(int)java.time.LocalDate
java.time.Year.atMonth(java.time.Month)java.time.YearMonth
java.time.Year.atMonth(int)java.time.YearMonth
java.time.Year.atMonthDay(java.time.MonthDay)java.time.LocalDate
java.time.Year.compareTo(java.time.Year)int
java.time.Year.isAfter(java.time.Year)boolean
java.time.Year.isBefore(java.time.Year)boolean
java.time.Year.equals(Object)boolean
java.time.Year.hashCode)int
java.time.Year.toString)String
java.time.YearMonth.now)java.time.YearMonth
java.time.YearMonth.now(java.time.ZoneId)java.time.YearMonth
java.time.YearMonth.now(java.time.Clock)java.time.YearMonth
java.time.YearMonth.of(int,java.time.Month)java.time.YearMonth
java.time.YearMonth.of(int,int)java.time.YearMonth
java.time.YearMonth.from(java.time.temporal.TemporalAccessor)java.time.YearMonth
java.time.YearMonth.parse(CharSequence)java.time.YearMonth
java.time.YearMonth.parse(CharSequence,java.time.format.DateTimeFormatter)java.time.YearMonth
java.time.YearMonth.isSupported(java.time.temporal.TemporalField)boolean
java.time.YearMonth.isSupported(java.time.temporal.TemporalUnit)boolean
java.time.YearMonth.range(java.time.temporal.TemporalField)java.time.temporal.ValueRange
java.time.YearMonth.get(java.time.temporal.TemporalField)int
java.time.YearMonth.getLong(java.time.temporal.TemporalField)long
java.time.YearMonth.getYear)int
java.time.YearMonth.getMonthValue)int
java.time.YearMonth.getMonth)java.time.Month
java.time.YearMonth.isLeapYear)boolean
java.time.YearMonth.isValidDay(int)boolean
java.time.YearMonth.lengthOfMonth)int
java.time.YearMonth.lengthOfYear)int
java.time.YearMonth.with(java.time.temporal.TemporalAdjuster)java.time.YearMonth
java.time.YearMonth.with(java.time.temporal.TemporalField,long)java.time.YearMonth
java.time.YearMonth.withYear(int)java.time.YearMonth
java.time.YearMonth.withMonth(int)java.time.YearMonth
java.time.YearMonth.plus(java.time.temporal.TemporalAmount)java.time.YearMonth
java.time.YearMonth.plus(long,java.time.temporal.TemporalUnit)java.time.YearMonth
java.time.YearMonth.plusYears(long)java.time.YearMonth
java.time.YearMonth.plusMonths(long)java.time.YearMonth
java.time.YearMonth.minus(java.time.temporal.TemporalAmount)java.time.YearMonth
java.time.YearMonth.minus(long,java.time.temporal.TemporalUnit)java.time.YearMonth
java.time.YearMonth.minusYears(long)java.time.YearMonth
java.time.YearMonth.minusMonths(long)java.time.YearMonth
java.time.YearMonth.query(java.time.temporal.TemporalQuery)Object
java.time.YearMonth.adjustInto(java.time.temporal.Temporal)java.time.temporal.Temporal
java.time.YearMonth.until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)long
java.time.YearMonth.format(java.time.format.DateTimeFormatter)String
java.time.YearMonth.atDay(int)java.time.LocalDate
java.time.YearMonth.atEndOfMonth)java.time.LocalDate
java.time.YearMonth.compareTo(java.time.YearMonth)int
java.time.YearMonth.isAfter(java.time.YearMonth)boolean
java.time.YearMonth.isBefore(java.time.YearMonth)boolean
java.time.YearMonth.equals(Object)boolean
java.time.YearMonth.hashCode)int
java.time.YearMonth.toString)String
java.time.ZonedDateTime.now)java.time.ZonedDateTime
java.time.ZonedDateTime.now(java.time.ZoneId)java.time.ZonedDateTime
java.time.ZonedDateTime.now(java.time.Clock)java.time.ZonedDateTime
java.time.ZonedDateTime.of(java.time.LocalDate,java.time.LocalTime,java.time.ZoneId)java.time.ZonedDateTime
java.time.ZonedDateTime.of(java.time.LocalDateTime,java.time.ZoneId)java.time.ZonedDateTime
java.time.ZonedDateTime.of(int,int,int,int,int,int,int,java.time.ZoneId)java.time.ZonedDateTime
java.time.ZonedDateTime.ofLocal(java.time.LocalDateTime,java.time.ZoneId,java.time.ZoneOffset)java.time.ZonedDateTime
java.time.ZonedDateTime.ofInstant(java.time.Instant,java.time.ZoneId)java.time.ZonedDateTime
java.time.ZonedDateTime.ofInstant(java.time.LocalDateTime,java.time.ZoneOffset,java.time.ZoneId)java.time.ZonedDateTime
java.time.ZonedDateTime.ofStrict(java.time.LocalDateTime,java.time.ZoneOffset,java.time.ZoneId)java.time.ZonedDateTime
java.time.ZonedDateTime.from(java.time.temporal.TemporalAccessor)java.time.ZonedDateTime
java.time.ZonedDateTime.parse(CharSequence)java.time.ZonedDateTime
java.time.ZonedDateTime.parse(CharSequence,java.time.format.DateTimeFormatter)java.time.ZonedDateTime
java.time.ZonedDateTime.isSupported(java.time.temporal.TemporalField)boolean
java.time.ZonedDateTime.isSupported(java.time.temporal.TemporalUnit)boolean
java.time.ZonedDateTime.range(java.time.temporal.TemporalField)java.time.temporal.ValueRange
java.time.ZonedDateTime.get(java.time.temporal.TemporalField)int
java.time.ZonedDateTime.getLong(java.time.temporal.TemporalField)long
java.time.ZonedDateTime.getOffset)java.time.ZoneOffset
java.time.ZonedDateTime.withEarlierOffsetAtOverlap)java.time.ZonedDateTime
java.time.ZonedDateTime.withLaterOffsetAtOverlap)java.time.ZonedDateTime
java.time.ZonedDateTime.getZone)java.time.ZoneId
java.time.ZonedDateTime.withZoneSameLocal(java.time.ZoneId)java.time.ZonedDateTime
java.time.ZonedDateTime.withZoneSameInstant(java.time.ZoneId)java.time.ZonedDateTime
java.time.ZonedDateTime.withFixedOffsetZone)java.time.ZonedDateTime
java.time.ZonedDateTime.toLocalDateTime)java.time.LocalDateTime
java.time.ZonedDateTime.toLocalDate)java.time.LocalDate
java.time.ZonedDateTime.getYear)int
java.time.ZonedDateTime.getMonthValue)int
java.time.ZonedDateTime.getMonth)java.time.Month
java.time.ZonedDateTime.getDayOfMonth)int
java.time.ZonedDateTime.getDayOfYear)int
java.time.ZonedDateTime.getDayOfWeek)java.time.DayOfWeek
java.time.ZonedDateTime.toLocalTime)java.time.LocalTime
java.time.ZonedDateTime.getHour)int
java.time.ZonedDateTime.getMinute)int
java.time.ZonedDateTime.getSecond)int
java.time.ZonedDateTime.getNano)int
java.time.ZonedDateTime.with(java.time.temporal.TemporalAdjuster)java.time.ZonedDateTime
java.time.ZonedDateTime.with(java.time.temporal.TemporalField,long)java.time.ZonedDateTime
java.time.ZonedDateTime.withYear(int)java.time.ZonedDateTime
java.time.ZonedDateTime.withMonth(int)java.time.ZonedDateTime
java.time.ZonedDateTime.withDayOfMonth(int)java.time.ZonedDateTime
java.time.ZonedDateTime.withDayOfYear(int)java.time.ZonedDateTime
java.time.ZonedDateTime.withHour(int)java.time.ZonedDateTime
java.time.ZonedDateTime.withMinute(int)java.time.ZonedDateTime
java.time.ZonedDateTime.withSecond(int)java.time.ZonedDateTime
java.time.ZonedDateTime.withNano(int)java.time.ZonedDateTime
java.time.ZonedDateTime.truncatedTo(java.time.temporal.TemporalUnit)java.time.ZonedDateTime
java.time.ZonedDateTime.plus(java.time.temporal.TemporalAmount)java.time.ZonedDateTime
java.time.ZonedDateTime.plus(long,java.time.temporal.TemporalUnit)java.time.ZonedDateTime
java.time.ZonedDateTime.plusYears(long)java.time.ZonedDateTime
java.time.ZonedDateTime.plusMonths(long)java.time.ZonedDateTime
java.time.ZonedDateTime.plusWeeks(long)java.time.ZonedDateTime
java.time.ZonedDateTime.plusDays(long)java.time.ZonedDateTime
java.time.ZonedDateTime.plusHours(long)java.time.ZonedDateTime
java.time.ZonedDateTime.plusMinutes(long)java.time.ZonedDateTime
java.time.ZonedDateTime.plusSeconds(long)java.time.ZonedDateTime
java.time.ZonedDateTime.plusNanos(long)java.time.ZonedDateTime
java.time.ZonedDateTime.minus(java.time.temporal.TemporalAmount)java.time.ZonedDateTime
java.time.ZonedDateTime.minus(long,java.time.temporal.TemporalUnit)java.time.ZonedDateTime
java.time.ZonedDateTime.minusYears(long)java.time.ZonedDateTime
java.time.ZonedDateTime.minusMonths(long)java.time.ZonedDateTime
java.time.ZonedDateTime.minusWeeks(long)java.time.ZonedDateTime
java.time.ZonedDateTime.minusDays(long)java.time.ZonedDateTime
java.time.ZonedDateTime.minusHours(long)java.time.ZonedDateTime
java.time.ZonedDateTime.minusMinutes(long)java.time.ZonedDateTime
java.time.ZonedDateTime.minusSeconds(long)java.time.ZonedDateTime
java.time.ZonedDateTime.minusNanos(long)java.time.ZonedDateTime
java.time.ZonedDateTime.query(java.time.temporal.TemporalQuery)Object
java.time.ZonedDateTime.until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)long
java.time.ZonedDateTime.format(java.time.format.DateTimeFormatter)String
java.time.ZonedDateTime.toOffsetDateTime)java.time.OffsetDateTime
java.time.ZonedDateTime.equals(Object)boolean
java.time.ZonedDateTime.hashCode)int
java.time.ZonedDateTime.toString)String
java.time.ZoneId.systemDefault)java.time.ZoneId
java.time.ZoneId.getAvailableZoneIds)Set
java.time.ZoneId.of(String,Map)java.time.ZoneId
java.time.ZoneId.of(String)java.time.ZoneId
java.time.ZoneId.ofOffset(String,java.time.ZoneOffset)java.time.ZoneId
java.time.ZoneId.from(java.time.temporal.TemporalAccessor)java.time.ZoneId
java.time.ZoneId.getDisplayName(java.time.format.TextStyle,Locale)String
java.time.ZoneId.normalized)java.time.ZoneId
java.time.ZoneId.equals(Object)boolean
java.time.ZoneId.hashCode)int
java.time.ZoneId.toString)String
java.time.ZoneOffset.of(String)java.time.ZoneOffset
java.time.ZoneOffset.ofHours(int)java.time.ZoneOffset
java.time.ZoneOffset.ofHoursMinutes(int,int)java.time.ZoneOffset
java.time.ZoneOffset.ofHoursMinutesSeconds(int,int,int)java.time.ZoneOffset
java.time.ZoneOffset.from(java.time.temporal.TemporalAccessor)java.time.ZoneOffset
java.time.ZoneOffset.ofTotalSeconds(int)java.time.ZoneOffset
java.time.ZoneOffset.getTotalSeconds)int
java.time.ZoneOffset.getId)String
java.time.ZoneOffset.getRules)java.time.zone.ZoneRules
java.time.ZoneOffset.isSupported(java.time.temporal.TemporalField)boolean
java.time.ZoneOffset.range(java.time.temporal.TemporalField)java.time.temporal.ValueRange
java.time.ZoneOffset.get(java.time.temporal.TemporalField)int
java.time.ZoneOffset.getLong(java.time.temporal.TemporalField)long
java.time.ZoneOffset.query(java.time.temporal.TemporalQuery)Object
java.time.ZoneOffset.adjustInto(java.time.temporal.Temporal)java.time.temporal.Temporal
java.time.ZoneOffset.compareTo(java.time.ZoneOffset)int
java.time.ZoneOffset.equals(Object)boolean
java.time.ZoneOffset.hashCode)int
java.time.ZoneOffset.toString)String
java.time.chrono.AbstractChronology.resolveDate(java.util.Map,java.time.format.ResolverStyle)java.time.chrono.ChronoLocalDate
java.time.chrono.AbstractChronology.compareTo(java.time.chrono.Chronology)int
java.time.chrono.AbstractChronology.equals(Object)boolean
java.time.chrono.AbstractChronology.hashCode)int
java.time.chrono.AbstractChronology.toString)String
java.time.chrono.ChronoLocalDate.timeLineOrder)java.util.Comparator
java.time.chrono.ChronoLocalDate.from(TemporalAccessor)java.time.chrono.ChronoLocalDate
java.time.chrono.ChronoLocalDate.getEra)java.time.chrono.Era
java.time.chrono.ChronoLocalDate.isLeapYear)boolean
java.time.chrono.ChronoLocalDate.lengthOfYear)int
java.time.chrono.ChronoLocalDate.isSupported(TemporalField)boolean
java.time.chrono.ChronoLocalDate.isSupported(TemporalUnit)boolean
java.time.chrono.ChronoLocalDate.with(TemporalAdjuster)java.time.chrono.ChronoLocalDate
java.time.chrono.ChronoLocalDate.with(TemporalField,long)java.time.chrono.ChronoLocalDate
java.time.chrono.ChronoLocalDate.plus(TemporalAmount)java.time.chrono.ChronoLocalDate
java.time.chrono.ChronoLocalDate.plus(long,TemporalUnit)java.time.chrono.ChronoLocalDate
java.time.chrono.ChronoLocalDate.minus(TemporalAmount)java.time.chrono.ChronoLocalDate
java.time.chrono.ChronoLocalDate.minus(long,TemporalUnit)java.time.chrono.ChronoLocalDate
java.time.chrono.ChronoLocalDate.query(TemporalQuery)Object
java.time.chrono.ChronoLocalDate.adjustInto(Temporal)Temporal
java.time.chrono.ChronoLocalDate.format(java.time.format.DateTimeFormatter)String
java.time.chrono.ChronoLocalDate.atTime(java.time.LocalTime)java.time.chrono.ChronoLocalDateTime
java.time.chrono.ChronoLocalDate.toEpochDay)long
java.time.chrono.ChronoLocalDate.compareTo(java.time.chrono.ChronoLocalDate)int
java.time.chrono.ChronoLocalDate.isAfter(java.time.chrono.ChronoLocalDate)boolean
java.time.chrono.ChronoLocalDate.isBefore(java.time.chrono.ChronoLocalDate)boolean
java.time.chrono.ChronoLocalDate.isEqual(java.time.chrono.ChronoLocalDate)boolean
java.time.chrono.ChronoLocalDateTime.timeLineOrder)java.util.Comparator
java.time.chrono.ChronoLocalDateTime.from(TemporalAccessor)java.time.chrono.ChronoLocalDateTime
java.time.chrono.ChronoLocalDateTime.getChronology)java.time.chrono.Chronology
java.time.chrono.ChronoLocalDateTime.isSupported(TemporalUnit)boolean
java.time.chrono.ChronoLocalDateTime.with(TemporalAdjuster)java.time.chrono.ChronoLocalDateTime
java.time.chrono.ChronoLocalDateTime.plus(TemporalAmount)java.time.chrono.ChronoLocalDateTime
java.time.chrono.ChronoLocalDateTime.minus(TemporalAmount)java.time.chrono.ChronoLocalDateTime
java.time.chrono.ChronoLocalDateTime.minus(long,TemporalUnit)java.time.chrono.ChronoLocalDateTime
java.time.chrono.ChronoLocalDateTime.query(TemporalQuery)Object
java.time.chrono.ChronoLocalDateTime.adjustInto(Temporal)Temporal
java.time.chrono.ChronoLocalDateTime.format(java.time.format.DateTimeFormatter)String
java.time.chrono.ChronoLocalDateTime.toInstant(ZoneOffset)Instant
java.time.chrono.ChronoLocalDateTime.toEpochSecond(ZoneOffset)long
java.time.chrono.ChronoLocalDateTime.compareTo(java.time.chrono.ChronoLocalDateTime)int
java.time.chrono.ChronoLocalDateTime.isAfter(java.time.chrono.ChronoLocalDateTime)boolean
java.time.chrono.ChronoLocalDateTime.isBefore(java.time.chrono.ChronoLocalDateTime)boolean
java.time.chrono.ChronoLocalDateTime.isEqual(java.time.chrono.ChronoLocalDateTime)boolean
java.time.chrono.Chronology.from(TemporalAccessor)java.time.chrono.Chronology
java.time.chrono.Chronology.ofLocale(Locale)java.time.chrono.Chronology
java.time.chrono.Chronology.of(String)java.time.chrono.Chronology
java.time.chrono.Chronology.getAvailableChronologies)Set
java.time.chrono.Chronology.date(java.time.chrono.Era,int,int,int)java.time.chrono.ChronoLocalDate
java.time.chrono.Chronology.dateYearDay(java.time.chrono.Era,int,int)java.time.chrono.ChronoLocalDate
java.time.chrono.Chronology.dateNow)java.time.chrono.ChronoLocalDate
java.time.chrono.Chronology.dateNow(ZoneId)java.time.chrono.ChronoLocalDate
java.time.chrono.Chronology.dateNow(Clock)java.time.chrono.ChronoLocalDate
java.time.chrono.Chronology.localDateTime(TemporalAccessor)java.time.chrono.ChronoLocalDateTime
java.time.chrono.Chronology.zonedDateTime(TemporalAccessor)java.time.chrono.ChronoZonedDateTime
java.time.chrono.Chronology.zonedDateTime(Instant,ZoneId)java.time.chrono.ChronoZonedDateTime
java.time.chrono.Chronology.getDisplayName(java.time.format.TextStyle,Locale)String
java.time.chrono.Chronology.period(int,int,int)java.time.chrono.ChronoPeriod
java.time.chrono.ChronoPeriod.between(java.time.chrono.ChronoLocalDate,java.time.chrono.ChronoLocalDate)java.time.chrono.ChronoPeriod
java.time.chrono.ChronoPeriod.isZero)boolean
java.time.chrono.ChronoPeriod.isNegative)boolean
java.time.chrono.ChronoPeriod.negated)java.time.chrono.ChronoPeriod
java.time.chrono.ChronoZonedDateTime.timeLineOrder)java.util.Comparator
java.time.chrono.ChronoZonedDateTime.from(TemporalAccessor)java.time.chrono.ChronoZonedDateTime
java.time.chrono.ChronoZonedDateTime.range(TemporalField)ValueRange
java.time.chrono.ChronoZonedDateTime.get(TemporalField)int
java.time.chrono.ChronoZonedDateTime.getLong(TemporalField)long
java.time.chrono.ChronoZonedDateTime.toLocalDate)java.time.chrono.ChronoLocalDate
java.time.chrono.ChronoZonedDateTime.toLocalTime)LocalTime
java.time.chrono.ChronoZonedDateTime.getChronology)java.time.chrono.Chronology
java.time.chrono.ChronoZonedDateTime.isSupported(TemporalUnit)boolean
java.time.chrono.ChronoZonedDateTime.with(TemporalAdjuster)java.time.chrono.ChronoZonedDateTime
java.time.chrono.ChronoZonedDateTime.plus(TemporalAmount)java.time.chrono.ChronoZonedDateTime
java.time.chrono.ChronoZonedDateTime.minus(TemporalAmount)java.time.chrono.ChronoZonedDateTime
java.time.chrono.ChronoZonedDateTime.minus(long,TemporalUnit)java.time.chrono.ChronoZonedDateTime
java.time.chrono.ChronoZonedDateTime.query(TemporalQuery)Object
java.time.chrono.ChronoZonedDateTime.format(java.time.format.DateTimeFormatter)String
java.time.chrono.ChronoZonedDateTime.toInstant)Instant
java.time.chrono.ChronoZonedDateTime.toEpochSecond)long
java.time.chrono.ChronoZonedDateTime.compareTo(java.time.chrono.ChronoZonedDateTime)int
java.time.chrono.ChronoZonedDateTime.isBefore(java.time.chrono.ChronoZonedDateTime)boolean
java.time.chrono.ChronoZonedDateTime.isAfter(java.time.chrono.ChronoZonedDateTime)boolean
java.time.chrono.ChronoZonedDateTime.isEqual(java.time.chrono.ChronoZonedDateTime)boolean
java.time.chrono.Era.isSupported(TemporalField)boolean
java.time.chrono.Era.range(TemporalField)ValueRange
java.time.chrono.Era.get(TemporalField)int
java.time.chrono.Era.getLong(TemporalField)long
java.time.chrono.Era.query(TemporalQuery)Object
java.time.chrono.Era.adjustInto(Temporal)Temporal
java.time.chrono.Era.getDisplayName(java.time.format.TextStyle,java.util.Locale)String
java.time.chrono.HijrahChronology.getId)String
java.time.chrono.HijrahChronology.getCalendarType)String
java.time.chrono.HijrahChronology.date(java.time.chrono.Era,int,int,int)java.time.chrono.HijrahDate
java.time.chrono.HijrahChronology.date(int,int,int)java.time.chrono.HijrahDate
java.time.chrono.HijrahChronology.dateYearDay(java.time.chrono.Era,int,int)java.time.chrono.HijrahDate
java.time.chrono.HijrahChronology.dateYearDay(int,int)java.time.chrono.HijrahDate
java.time.chrono.HijrahChronology.dateEpochDay(long)java.time.chrono.HijrahDate
java.time.chrono.HijrahChronology.dateNow)java.time.chrono.HijrahDate
java.time.chrono.HijrahChronology.dateNow(ZoneId)java.time.chrono.HijrahDate
java.time.chrono.HijrahChronology.dateNow(Clock)java.time.chrono.HijrahDate
java.time.chrono.HijrahChronology.date(TemporalAccessor)java.time.chrono.HijrahDate
java.time.chrono.HijrahChronology.localDateTime(TemporalAccessor)java.time.chrono.ChronoLocalDateTime
java.time.chrono.HijrahChronology.zonedDateTime(TemporalAccessor)java.time.chrono.ChronoZonedDateTime
java.time.chrono.HijrahChronology.zonedDateTime(Instant,ZoneId)java.time.chrono.ChronoZonedDateTime
java.time.chrono.HijrahChronology.isLeapYear(long)boolean
java.time.chrono.HijrahChronology.prolepticYear(java.time.chrono.Era,int)int
java.time.chrono.HijrahChronology.eraOf(int)java.time.chrono.HijrahEra
java.time.chrono.HijrahChronology.eras)java.util.List
java.time.chrono.HijrahChronology.range(ChronoField)ValueRange
java.time.chrono.HijrahChronology.resolveDate(java.util.Map,java.time.format.ResolverStyle)java.time.chrono.HijrahDate
java.time.chrono.HijrahDate.now)java.time.chrono.HijrahDate
java.time.chrono.HijrahDate.now(ZoneId)java.time.chrono.HijrahDate
java.time.chrono.HijrahDate.now(Clock)java.time.chrono.HijrahDate
java.time.chrono.HijrahDate.of(int,int,int)java.time.chrono.HijrahDate
java.time.chrono.HijrahDate.from(TemporalAccessor)java.time.chrono.HijrahDate
java.time.chrono.HijrahDate.getChronology)java.time.chrono.HijrahChronology
java.time.chrono.HijrahDate.getEra)java.time.chrono.HijrahEra
java.time.chrono.HijrahDate.lengthOfMonth)int
java.time.chrono.HijrahDate.lengthOfYear)int
java.time.chrono.HijrahDate.range(TemporalField)ValueRange
java.time.chrono.HijrahDate.getLong(TemporalField)long
java.time.chrono.HijrahDate.with(TemporalField,long)java.time.chrono.HijrahDate
java.time.chrono.HijrahDate.with(TemporalAdjuster)java.time.chrono.HijrahDate
java.time.chrono.HijrahDate.withVariant(java.time.chrono.HijrahChronology)java.time.chrono.HijrahDate
java.time.chrono.HijrahDate.plus(TemporalAmount)java.time.chrono.HijrahDate
java.time.chrono.HijrahDate.minus(TemporalAmount)java.time.chrono.HijrahDate
java.time.chrono.HijrahDate.toEpochDay)long
java.time.chrono.HijrahDate.isLeapYear)boolean
java.time.chrono.HijrahDate.plus(long,TemporalUnit)java.time.chrono.HijrahDate
java.time.chrono.HijrahDate.minus(long,TemporalUnit)java.time.chrono.HijrahDate
java.time.chrono.HijrahDate.atTime(LocalTime)java.time.chrono.ChronoLocalDateTime
java.time.chrono.HijrahDate.until(java.time.chrono.ChronoLocalDate)java.time.chrono.ChronoPeriod
java.time.chrono.HijrahDate.equals(Object)boolean
java.time.chrono.HijrahDate.hashCode)int
java.time.chrono.HijrahDate.until(Temporal,TemporalUnit)long
java.time.chrono.HijrahDate.toString)String
java.time.chrono.HijrahEra.valueOf(String)java.time.chrono.HijrahEra
java.time.chrono.HijrahEra.of(int)java.time.chrono.HijrahEra
java.time.chrono.HijrahEra.getValue)int
java.time.chrono.HijrahEra.range(java.time.temporal.TemporalField)java.time.temporal.ValueRange
java.time.chrono.IsoChronology.getId)String
java.time.chrono.IsoChronology.getCalendarType)String
java.time.chrono.IsoChronology.date(java.time.chrono.Era,int,int,int)LocalDate
java.time.chrono.IsoChronology.date(int,int,int)LocalDate
java.time.chrono.IsoChronology.dateYearDay(java.time.chrono.Era,int,int)LocalDate
java.time.chrono.IsoChronology.dateYearDay(int,int)LocalDate
java.time.chrono.IsoChronology.dateEpochDay(long)LocalDate
java.time.chrono.IsoChronology.date(TemporalAccessor)LocalDate
java.time.chrono.IsoChronology.localDateTime(TemporalAccessor)LocalDateTime
java.time.chrono.IsoChronology.zonedDateTime(TemporalAccessor)ZonedDateTime
java.time.chrono.IsoChronology.zonedDateTime(Instant,ZoneId)ZonedDateTime
java.time.chrono.IsoChronology.dateNow)LocalDate
java.time.chrono.IsoChronology.dateNow(ZoneId)LocalDate
java.time.chrono.IsoChronology.dateNow(Clock)LocalDate
java.time.chrono.IsoChronology.isLeapYear(long)boolean
java.time.chrono.IsoChronology.prolepticYear(java.time.chrono.Era,int)int
java.time.chrono.IsoChronology.eraOf(int)java.time.chrono.IsoEra
java.time.chrono.IsoChronology.eras)java.util.List
java.time.chrono.IsoChronology.resolveDate(java.util.Map,java.time.format.ResolverStyle)LocalDate
java.time.chrono.IsoChronology.range(ChronoField)ValueRange
java.time.chrono.IsoChronology.period(int,int,int)Period
java.time.chrono.IsoEra.valueOf(String)java.time.chrono.IsoEra
java.time.chrono.IsoEra.of(int)java.time.chrono.IsoEra
java.time.chrono.IsoEra.getValue)int
java.time.chrono.JapaneseChronology.getId)String
java.time.chrono.JapaneseChronology.getCalendarType)String
java.time.chrono.JapaneseChronology.date(java.time.chrono.Era,int,int,int)java.time.chrono.JapaneseDate
java.time.chrono.JapaneseChronology.date(int,int,int)java.time.chrono.JapaneseDate
java.time.chrono.JapaneseChronology.dateYearDay(java.time.chrono.Era,int,int)java.time.chrono.JapaneseDate
java.time.chrono.JapaneseChronology.dateYearDay(int,int)java.time.chrono.JapaneseDate
java.time.chrono.JapaneseChronology.dateEpochDay(long)java.time.chrono.JapaneseDate
java.time.chrono.JapaneseChronology.dateNow)java.time.chrono.JapaneseDate
java.time.chrono.JapaneseChronology.dateNow(ZoneId)java.time.chrono.JapaneseDate
java.time.chrono.JapaneseChronology.dateNow(Clock)java.time.chrono.JapaneseDate
java.time.chrono.JapaneseChronology.date(TemporalAccessor)java.time.chrono.JapaneseDate
java.time.chrono.JapaneseChronology.localDateTime(TemporalAccessor)java.time.chrono.ChronoLocalDateTime
java.time.chrono.JapaneseChronology.zonedDateTime(TemporalAccessor)java.time.chrono.ChronoZonedDateTime
java.time.chrono.JapaneseChronology.zonedDateTime(Instant,ZoneId)java.time.chrono.ChronoZonedDateTime
java.time.chrono.JapaneseChronology.isLeapYear(long)boolean
java.time.chrono.JapaneseChronology.prolepticYear(java.time.chrono.Era,int)int
java.time.chrono.JapaneseChronology.eraOf(int)java.time.chrono.JapaneseEra
java.time.chrono.JapaneseChronology.eras)java.util.List
java.time.chrono.JapaneseChronology.range(ChronoField)ValueRange
java.time.chrono.JapaneseChronology.resolveDate(java.util.Map,java.time.format.ResolverStyle)java.time.chrono.JapaneseDate
java.time.chrono.JapaneseDate.now)java.time.chrono.JapaneseDate
java.time.chrono.JapaneseDate.now(ZoneId)java.time.chrono.JapaneseDate
java.time.chrono.JapaneseDate.now(Clock)java.time.chrono.JapaneseDate
java.time.chrono.JapaneseDate.of(java.time.chrono.JapaneseEra,int,int,int)java.time.chrono.JapaneseDate
java.time.chrono.JapaneseDate.of(int,int,int)java.time.chrono.JapaneseDate
java.time.chrono.JapaneseDate.from(TemporalAccessor)java.time.chrono.JapaneseDate
java.time.chrono.JapaneseDate.getChronology)java.time.chrono.JapaneseChronology
java.time.chrono.JapaneseDate.getEra)java.time.chrono.JapaneseEra
java.time.chrono.JapaneseDate.lengthOfMonth)int
java.time.chrono.JapaneseDate.lengthOfYear)int
java.time.chrono.JapaneseDate.isSupported(TemporalField)boolean
java.time.chrono.JapaneseDate.range(TemporalField)ValueRange
java.time.chrono.JapaneseDate.getLong(TemporalField)long
java.time.chrono.JapaneseDate.with(TemporalField,long)java.time.chrono.JapaneseDate
java.time.chrono.JapaneseDate.with(TemporalAdjuster)java.time.chrono.JapaneseDate
java.time.chrono.JapaneseDate.plus(TemporalAmount)java.time.chrono.JapaneseDate
java.time.chrono.JapaneseDate.minus(TemporalAmount)java.time.chrono.JapaneseDate
java.time.chrono.JapaneseDate.plus(long,TemporalUnit)java.time.chrono.JapaneseDate
java.time.chrono.JapaneseDate.minus(long,TemporalUnit)java.time.chrono.JapaneseDate
java.time.chrono.JapaneseDate.atTime(LocalTime)java.time.chrono.ChronoLocalDateTime
java.time.chrono.JapaneseDate.until(java.time.chrono.ChronoLocalDate)java.time.chrono.ChronoPeriod
java.time.chrono.JapaneseDate.toEpochDay)long
java.time.chrono.JapaneseDate.equals(Object)boolean
java.time.chrono.JapaneseDate.hashCode)int
java.time.chrono.JapaneseDate.until(Temporal,TemporalUnit)long
java.time.chrono.JapaneseDate.toString)String
java.time.chrono.JapaneseEra.of(int)java.time.chrono.JapaneseEra
java.time.chrono.JapaneseEra.valueOf(String)java.time.chrono.JapaneseEra
java.time.chrono.JapaneseEra.getDisplayName(java.time.format.TextStyle,java.util.Locale)String
java.time.chrono.JapaneseEra.getValue)int
java.time.chrono.JapaneseEra.range(java.time.temporal.TemporalField)java.time.temporal.ValueRange
java.time.chrono.JapaneseEra.toString)String
java.time.chrono.MinguoChronology.getId)String
java.time.chrono.MinguoChronology.getCalendarType)String
java.time.chrono.MinguoChronology.date(java.time.chrono.Era,int,int,int)java.time.chrono.MinguoDate
java.time.chrono.MinguoChronology.date(int,int,int)java.time.chrono.MinguoDate
java.time.chrono.MinguoChronology.dateYearDay(java.time.chrono.Era,int,int)java.time.chrono.MinguoDate
java.time.chrono.MinguoChronology.dateYearDay(int,int)java.time.chrono.MinguoDate
java.time.chrono.MinguoChronology.dateEpochDay(long)java.time.chrono.MinguoDate
java.time.chrono.MinguoChronology.dateNow)java.time.chrono.MinguoDate
java.time.chrono.MinguoChronology.dateNow(ZoneId)java.time.chrono.MinguoDate
java.time.chrono.MinguoChronology.dateNow(Clock)java.time.chrono.MinguoDate
java.time.chrono.MinguoChronology.date(TemporalAccessor)java.time.chrono.MinguoDate
java.time.chrono.MinguoChronology.localDateTime(TemporalAccessor)java.time.chrono.ChronoLocalDateTime
java.time.chrono.MinguoChronology.zonedDateTime(TemporalAccessor)java.time.chrono.ChronoZonedDateTime
java.time.chrono.MinguoChronology.zonedDateTime(Instant,ZoneId)java.time.chrono.ChronoZonedDateTime
java.time.chrono.MinguoChronology.isLeapYear(long)boolean
java.time.chrono.MinguoChronology.prolepticYear(java.time.chrono.Era,int)int
java.time.chrono.MinguoChronology.eraOf(int)java.time.chrono.MinguoEra
java.time.chrono.MinguoChronology.eras)java.util.List
java.time.chrono.MinguoChronology.range(ChronoField)ValueRange
java.time.chrono.MinguoChronology.resolveDate(java.util.Map,java.time.format.ResolverStyle)java.time.chrono.MinguoDate
java.time.chrono.MinguoDate.now)java.time.chrono.MinguoDate
java.time.chrono.MinguoDate.now(ZoneId)java.time.chrono.MinguoDate
java.time.chrono.MinguoDate.now(Clock)java.time.chrono.MinguoDate
java.time.chrono.MinguoDate.of(int,int,int)java.time.chrono.MinguoDate
java.time.chrono.MinguoDate.from(TemporalAccessor)java.time.chrono.MinguoDate
java.time.chrono.MinguoDate.getChronology)java.time.chrono.MinguoChronology
java.time.chrono.MinguoDate.getEra)java.time.chrono.MinguoEra
java.time.chrono.MinguoDate.lengthOfMonth)int
java.time.chrono.MinguoDate.range(TemporalField)ValueRange
java.time.chrono.MinguoDate.getLong(TemporalField)long
java.time.chrono.MinguoDate.with(TemporalField,long)java.time.chrono.MinguoDate
java.time.chrono.MinguoDate.with(TemporalAdjuster)java.time.chrono.MinguoDate
java.time.chrono.MinguoDate.plus(TemporalAmount)java.time.chrono.MinguoDate
java.time.chrono.MinguoDate.minus(TemporalAmount)java.time.chrono.MinguoDate
java.time.chrono.MinguoDate.plus(long,TemporalUnit)java.time.chrono.MinguoDate
java.time.chrono.MinguoDate.minus(long,TemporalUnit)java.time.chrono.MinguoDate
java.time.chrono.MinguoDate.atTime(LocalTime)java.time.chrono.ChronoLocalDateTime
java.time.chrono.MinguoDate.until(java.time.chrono.ChronoLocalDate)java.time.chrono.ChronoPeriod
java.time.chrono.MinguoDate.toEpochDay)long
java.time.chrono.MinguoDate.equals(Object)boolean
java.time.chrono.MinguoDate.hashCode)int
java.time.chrono.MinguoDate.until(Temporal,TemporalUnit)long
java.time.chrono.MinguoDate.toString)String
java.time.chrono.MinguoEra.valueOf(String)java.time.chrono.MinguoEra
java.time.chrono.MinguoEra.of(int)java.time.chrono.MinguoEra
java.time.chrono.MinguoEra.getValue)int
java.time.chrono.ThaiBuddhistChronology.getId)String
java.time.chrono.ThaiBuddhistChronology.getCalendarType)String
java.time.chrono.ThaiBuddhistChronology.date(java.time.chrono.Era,int,int,int)java.time.chrono.ThaiBuddhistDate
java.time.chrono.ThaiBuddhistChronology.date(int,int,int)java.time.chrono.ThaiBuddhistDate
java.time.chrono.ThaiBuddhistChronology.dateYearDay(java.time.chrono.Era,int,int)java.time.chrono.ThaiBuddhistDate
java.time.chrono.ThaiBuddhistChronology.dateYearDay(int,int)java.time.chrono.ThaiBuddhistDate
java.time.chrono.ThaiBuddhistChronology.dateEpochDay(long)java.time.chrono.ThaiBuddhistDate
java.time.chrono.ThaiBuddhistChronology.dateNow)java.time.chrono.ThaiBuddhistDate
java.time.chrono.ThaiBuddhistChronology.dateNow(ZoneId)java.time.chrono.ThaiBuddhistDate
java.time.chrono.ThaiBuddhistChronology.dateNow(Clock)java.time.chrono.ThaiBuddhistDate
java.time.chrono.ThaiBuddhistChronology.date(TemporalAccessor)java.time.chrono.ThaiBuddhistDate
java.time.chrono.ThaiBuddhistChronology.localDateTime(TemporalAccessor)java.time.chrono.ChronoLocalDateTime
java.time.chrono.ThaiBuddhistChronology.zonedDateTime(TemporalAccessor)java.time.chrono.ChronoZonedDateTime
java.time.chrono.ThaiBuddhistChronology.zonedDateTime(Instant,ZoneId)java.time.chrono.ChronoZonedDateTime
java.time.chrono.ThaiBuddhistChronology.isLeapYear(long)boolean
java.time.chrono.ThaiBuddhistChronology.prolepticYear(java.time.chrono.Era,int)int
java.time.chrono.ThaiBuddhistChronology.eraOf(int)java.time.chrono.ThaiBuddhistEra
java.time.chrono.ThaiBuddhistChronology.eras)java.util.List
java.time.chrono.ThaiBuddhistChronology.range(ChronoField)ValueRange
java.time.chrono.ThaiBuddhistChronology.resolveDate(java.util.Map,java.time.format.ResolverStyle)java.time.chrono.ThaiBuddhistDate
java.time.chrono.ThaiBuddhistDate.now)java.time.chrono.ThaiBuddhistDate
java.time.chrono.ThaiBuddhistDate.now(ZoneId)java.time.chrono.ThaiBuddhistDate
java.time.chrono.ThaiBuddhistDate.now(Clock)java.time.chrono.ThaiBuddhistDate
java.time.chrono.ThaiBuddhistDate.of(int,int,int)java.time.chrono.ThaiBuddhistDate
java.time.chrono.ThaiBuddhistDate.from(TemporalAccessor)java.time.chrono.ThaiBuddhistDate
java.time.chrono.ThaiBuddhistDate.getChronology)java.time.chrono.ThaiBuddhistChronology
java.time.chrono.ThaiBuddhistDate.getEra)java.time.chrono.ThaiBuddhistEra
java.time.chrono.ThaiBuddhistDate.lengthOfMonth)int
java.time.chrono.ThaiBuddhistDate.range(TemporalField)ValueRange
java.time.chrono.ThaiBuddhistDate.getLong(TemporalField)long
java.time.chrono.ThaiBuddhistDate.with(TemporalField,long)java.time.chrono.ThaiBuddhistDate
java.time.chrono.ThaiBuddhistDate.with(TemporalAdjuster)java.time.chrono.ThaiBuddhistDate
java.time.chrono.ThaiBuddhistDate.plus(TemporalAmount)java.time.chrono.ThaiBuddhistDate
java.time.chrono.ThaiBuddhistDate.minus(TemporalAmount)java.time.chrono.ThaiBuddhistDate
java.time.chrono.ThaiBuddhistDate.plus(long,TemporalUnit)java.time.chrono.ThaiBuddhistDate
java.time.chrono.ThaiBuddhistDate.minus(long,TemporalUnit)java.time.chrono.ThaiBuddhistDate
java.time.chrono.ThaiBuddhistDate.atTime(LocalTime)java.time.chrono.ChronoLocalDateTime
java.time.chrono.ThaiBuddhistDate.until(java.time.chrono.ChronoLocalDate)java.time.chrono.ChronoPeriod
java.time.chrono.ThaiBuddhistDate.toEpochDay)long
java.time.chrono.ThaiBuddhistDate.equals(Object)boolean
java.time.chrono.ThaiBuddhistDate.hashCode)int
java.time.chrono.ThaiBuddhistDate.until(Temporal,TemporalUnit)long
java.time.chrono.ThaiBuddhistDate.toString)String
java.time.chrono.ThaiBuddhistEra.valueOf(String)java.time.chrono.ThaiBuddhistEra
java.time.chrono.ThaiBuddhistEra.of(int)java.time.chrono.ThaiBuddhistEra
java.time.chrono.ThaiBuddhistEra.getValue)int
java.time.format.DateTimeFormatter.ofPattern(String)java.time.format.DateTimeFormatter
java.time.format.DateTimeFormatter.ofPattern(String,java.util.Locale)java.time.format.DateTimeFormatter
java.time.format.DateTimeFormatter.ofLocalizedDate(java.time.format.FormatStyle)java.time.format.DateTimeFormatter
java.time.format.DateTimeFormatter.ofLocalizedTime(java.time.format.FormatStyle)java.time.format.DateTimeFormatter
java.time.format.DateTimeFormatter.ofLocalizedDateTime(java.time.format.FormatStyle)java.time.format.DateTimeFormatter
java.time.format.DateTimeFormatter.ofLocalizedDateTime(java.time.format.FormatStyle,java.time.format.FormatStyle)java.time.format.DateTimeFormatter
java.time.format.DateTimeFormatter.parsedExcessDays)TemporalQuery
java.time.format.DateTimeFormatter.parsedLeapSecond)TemporalQuery
java.time.format.DateTimeFormatter.getLocale)java.util.Locale
java.time.format.DateTimeFormatter.withLocale(java.util.Locale)java.time.format.DateTimeFormatter
java.time.format.DateTimeFormatter.getDecimalStyle)java.time.format.DecimalStyle
java.time.format.DateTimeFormatter.withDecimalStyle(java.time.format.DecimalStyle)java.time.format.DateTimeFormatter
java.time.format.DateTimeFormatter.getChronology)java.time.chrono.Chronology
java.time.format.DateTimeFormatter.withChronology(java.time.chrono.Chronology)java.time.format.DateTimeFormatter
java.time.format.DateTimeFormatter.getZone)java.time.ZoneId
java.time.format.DateTimeFormatter.withZone(java.time.ZoneId)java.time.format.DateTimeFormatter
java.time.format.DateTimeFormatter.getResolverStyle)java.time.format.ResolverStyle
java.time.format.DateTimeFormatter.withResolverStyle(java.time.format.ResolverStyle)java.time.format.DateTimeFormatter
java.time.format.DateTimeFormatter.getResolverFields)java.util.Set
java.time.format.DateTimeFormatter.withResolverFields(java.util.Set)java.time.format.DateTimeFormatter
java.time.format.DateTimeFormatter.format(TemporalAccessor)String
java.time.format.DateTimeFormatter.formatTo(TemporalAccessor,Appendable)void
java.time.format.DateTimeFormatter.parse(CharSequence)TemporalAccessor
java.time.format.DateTimeFormatter.parse(CharSequence,java.text.ParsePosition)TemporalAccessor
java.time.format.DateTimeFormatter.parse(CharSequence,TemporalQuery)Object
java.time.format.DateTimeFormatter.parseUnresolved(CharSequence,java.text.ParsePosition)TemporalAccessor
java.time.format.DateTimeFormatter.toFormat)java.text.Format
java.time.format.DateTimeFormatter.toFormat(TemporalQuery)java.text.Format
java.time.format.DateTimeFormatter.toString)String
java.time.format.DateTimeFormatterBuilder.getLocalizedDateTimePattern(java.time.format.FormatStyle,java.time.format.FormatStyle,java.time.chrono.Chronology,Locale)String
java.time.format.DateTimeFormatterBuilder.parseCaseSensitive)java.time.format.DateTimeFormatterBuilder
java.time.format.DateTimeFormatterBuilder.parseCaseInsensitive)java.time.format.DateTimeFormatterBuilder
java.time.format.DateTimeFormatterBuilder.parseStrict)java.time.format.DateTimeFormatterBuilder
java.time.format.DateTimeFormatterBuilder.parseLenient)java.time.format.DateTimeFormatterBuilder
java.time.format.DateTimeFormatterBuilder.parseDefaulting(java.time.temporal.TemporalField,long)java.time.format.DateTimeFormatterBuilder
java.time.format.DateTimeFormatterBuilder.appendValue(java.time.temporal.TemporalField)java.time.format.DateTimeFormatterBuilder
java.time.format.DateTimeFormatterBuilder.appendValue(java.time.temporal.TemporalField,int)java.time.format.DateTimeFormatterBuilder
java.time.format.DateTimeFormatterBuilder.appendValue(java.time.temporal.TemporalField,int,int,java.time.format.SignStyle)java.time.format.DateTimeFormatterBuilder
java.time.format.DateTimeFormatterBuilder.appendValueReduced(java.time.temporal.TemporalField,int,int,int)java.time.format.DateTimeFormatterBuilder
java.time.format.DateTimeFormatterBuilder.appendValueReduced(java.time.temporal.TemporalField,int,int,java.time.chrono.ChronoLocalDate)java.time.format.DateTimeFormatterBuilder
java.time.format.DateTimeFormatterBuilder.appendFraction(java.time.temporal.TemporalField,int,int,boolean)java.time.format.DateTimeFormatterBuilder
java.time.format.DateTimeFormatterBuilder.appendText(java.time.temporal.TemporalField)java.time.format.DateTimeFormatterBuilder
java.time.format.DateTimeFormatterBuilder.appendText(java.time.temporal.TemporalField,java.time.format.TextStyle)java.time.format.DateTimeFormatterBuilder
java.time.format.DateTimeFormatterBuilder.appendText(java.time.temporal.TemporalField,Map)java.time.format.DateTimeFormatterBuilder
java.time.format.DateTimeFormatterBuilder.appendInstant)java.time.format.DateTimeFormatterBuilder
java.time.format.DateTimeFormatterBuilder.appendInstant(int)java.time.format.DateTimeFormatterBuilder
java.time.format.DateTimeFormatterBuilder.appendOffsetId)java.time.format.DateTimeFormatterBuilder
java.time.format.DateTimeFormatterBuilder.appendOffset(String,String)java.time.format.DateTimeFormatterBuilder
java.time.format.DateTimeFormatterBuilder.appendLocalizedOffset(java.time.format.TextStyle)java.time.format.DateTimeFormatterBuilder
java.time.format.DateTimeFormatterBuilder.appendZoneId)java.time.format.DateTimeFormatterBuilder
java.time.format.DateTimeFormatterBuilder.appendZoneRegionId)java.time.format.DateTimeFormatterBuilder
java.time.format.DateTimeFormatterBuilder.appendZoneOrOffsetId)java.time.format.DateTimeFormatterBuilder
java.time.format.DateTimeFormatterBuilder.appendZoneText(java.time.format.TextStyle)java.time.format.DateTimeFormatterBuilder
java.time.format.DateTimeFormatterBuilder.appendZoneText(java.time.format.TextStyle,Set)java.time.format.DateTimeFormatterBuilder
java.time.format.DateTimeFormatterBuilder.appendChronologyId)java.time.format.DateTimeFormatterBuilder
java.time.format.DateTimeFormatterBuilder.appendChronologyText(java.time.format.TextStyle)java.time.format.DateTimeFormatterBuilder
java.time.format.DateTimeFormatterBuilder.appendLocalized(java.time.format.FormatStyle,java.time.format.FormatStyle)java.time.format.DateTimeFormatterBuilder
java.time.format.DateTimeFormatterBuilder.appendLiteral(char)java.time.format.DateTimeFormatterBuilder
java.time.format.DateTimeFormatterBuilder.appendLiteral(String)java.time.format.DateTimeFormatterBuilder
java.time.format.DateTimeFormatterBuilder.append(java.time.format.DateTimeFormatter)java.time.format.DateTimeFormatterBuilder
java.time.format.DateTimeFormatterBuilder.appendOptional(java.time.format.DateTimeFormatter)java.time.format.DateTimeFormatterBuilder
java.time.format.DateTimeFormatterBuilder.appendPattern(String)java.time.format.DateTimeFormatterBuilder
java.time.format.DateTimeFormatterBuilder.padNext(int)java.time.format.DateTimeFormatterBuilder
java.time.format.DateTimeFormatterBuilder.padNext(int,char)java.time.format.DateTimeFormatterBuilder
java.time.format.DateTimeFormatterBuilder.optionalStart)java.time.format.DateTimeFormatterBuilder
java.time.format.DateTimeFormatterBuilder.optionalEnd)java.time.format.DateTimeFormatterBuilder
java.time.format.DateTimeFormatterBuilder.toFormatter)java.time.format.DateTimeFormatter
java.time.format.DateTimeFormatterBuilder.toFormatter(Locale)java.time.format.DateTimeFormatter
java.time.format.DateTimeParseException.getParsedString)String
java.time.format.DateTimeParseException.getErrorIndex)int
java.time.format.DecimalStyle.getAvailableLocales)java.util.Set
java.time.format.DecimalStyle.ofDefaultLocale)java.time.format.DecimalStyle
java.time.format.DecimalStyle.of(java.util.Locale)java.time.format.DecimalStyle
java.time.format.DecimalStyle.getZeroDigit)char
java.time.format.DecimalStyle.withZeroDigit(char)java.time.format.DecimalStyle
java.time.format.DecimalStyle.getPositiveSign)char
java.time.format.DecimalStyle.withPositiveSign(char)java.time.format.DecimalStyle
java.time.format.DecimalStyle.getNegativeSign)char
java.time.format.DecimalStyle.withNegativeSign(char)java.time.format.DecimalStyle
java.time.format.DecimalStyle.getDecimalSeparator)char
java.time.format.DecimalStyle.withDecimalSeparator(char)java.time.format.DecimalStyle
java.time.format.DecimalStyle.equals(Object)boolean
java.time.format.DecimalStyle.hashCode)int
java.time.format.DecimalStyle.toString)String
java.time.format.FormatStyle.valueOf(String)java.time.format.FormatStyle
java.time.format.ResolverStyle.valueOf(String)java.time.format.ResolverStyle
java.time.format.SignStyle.valueOf(String)java.time.format.SignStyle
java.time.format.TextStyle.valueOf(String)java.time.format.TextStyle
java.time.format.TextStyle.isStandalone)boolean
java.time.format.TextStyle.asStandalone)java.time.format.TextStyle
java.time.format.TextStyle.asNormal)java.time.format.TextStyle
java.time.temporal.ChronoField.valueOf(String)java.time.temporal.ChronoField
java.time.temporal.ChronoField.getDisplayName(java.util.Locale)String
java.time.temporal.ChronoField.getBaseUnit)java.time.temporal.TemporalUnit
java.time.temporal.ChronoField.getRangeUnit)java.time.temporal.TemporalUnit
java.time.temporal.ChronoField.range)java.time.temporal.ValueRange
java.time.temporal.ChronoField.isDateBased)boolean
java.time.temporal.ChronoField.isTimeBased)boolean
java.time.temporal.ChronoField.checkValidValue(long)long
java.time.temporal.ChronoField.checkValidIntValue(long)int
java.time.temporal.ChronoField.isSupportedBy(java.time.temporal.TemporalAccessor)boolean
java.time.temporal.ChronoField.rangeRefinedBy(java.time.temporal.TemporalAccessor)java.time.temporal.ValueRange
java.time.temporal.ChronoField.getFrom(java.time.temporal.TemporalAccessor)long
java.time.temporal.ChronoField.adjustInto(java.time.temporal.Temporal,long)java.time.temporal.Temporal
java.time.temporal.ChronoField.toString)String
java.time.temporal.ChronoUnit.valueOf(String)java.time.temporal.ChronoUnit
java.time.temporal.ChronoUnit.getDuration)java.time.Duration
java.time.temporal.ChronoUnit.isDurationEstimated)boolean
java.time.temporal.ChronoUnit.isDateBased)boolean
java.time.temporal.ChronoUnit.isTimeBased)boolean
java.time.temporal.ChronoUnit.isSupportedBy(java.time.temporal.Temporal)boolean
java.time.temporal.ChronoUnit.addTo(java.time.temporal.Temporal,long)java.time.temporal.Temporal
java.time.temporal.ChronoUnit.between(java.time.temporal.Temporal,java.time.temporal.Temporal)long
java.time.temporal.ChronoUnit.toString)String
java.time.temporal.Temporal.with(java.time.temporal.TemporalAdjuster)java.time.temporal.Temporal
java.time.temporal.Temporal.plus(java.time.temporal.TemporalAmount)java.time.temporal.Temporal
java.time.temporal.Temporal.minus(java.time.temporal.TemporalAmount)java.time.temporal.Temporal
java.time.temporal.Temporal.minus(long,java.time.temporal.TemporalUnit)java.time.temporal.Temporal
java.time.temporal.TemporalAccessor.range(java.time.temporal.TemporalField)java.time.temporal.ValueRange
java.time.temporal.TemporalAccessor.get(java.time.temporal.TemporalField)int
java.time.temporal.TemporalAccessor.query(java.time.temporal.TemporalQuery)Object
java.time.temporal.TemporalAdjusters.ofDateAdjuster(java.util.function.UnaryOperator)java.time.temporal.TemporalAdjuster
java.time.temporal.TemporalAdjusters.firstDayOfMonth)java.time.temporal.TemporalAdjuster
java.time.temporal.TemporalAdjusters.lastDayOfMonth)java.time.temporal.TemporalAdjuster
java.time.temporal.TemporalAdjusters.firstDayOfNextMonth)java.time.temporal.TemporalAdjuster
java.time.temporal.TemporalAdjusters.firstDayOfYear)java.time.temporal.TemporalAdjuster
java.time.temporal.TemporalAdjusters.lastDayOfYear)java.time.temporal.TemporalAdjuster
java.time.temporal.TemporalAdjusters.firstDayOfNextYear)java.time.temporal.TemporalAdjuster
java.time.temporal.TemporalAdjusters.firstInMonth(java.time.DayOfWeek)java.time.temporal.TemporalAdjuster
java.time.temporal.TemporalAdjusters.lastInMonth(java.time.DayOfWeek)java.time.temporal.TemporalAdjuster
java.time.temporal.TemporalAdjusters.dayOfWeekInMonth(int,java.time.DayOfWeek)java.time.temporal.TemporalAdjuster
java.time.temporal.TemporalAdjusters.next(java.time.DayOfWeek)java.time.temporal.TemporalAdjuster
java.time.temporal.TemporalAdjusters.nextOrSame(java.time.DayOfWeek)java.time.temporal.TemporalAdjuster
java.time.temporal.TemporalAdjusters.previous(java.time.DayOfWeek)java.time.temporal.TemporalAdjuster
java.time.temporal.TemporalAdjusters.previousOrSame(java.time.DayOfWeek)java.time.temporal.TemporalAdjuster
java.time.temporal.TemporalField.getDisplayName(java.util.Locale)String
java.time.temporal.TemporalField.resolve(java.util.Map,java.time.temporal.TemporalAccessor,java.time.format.ResolverStyle)java.time.temporal.TemporalAccessor
java.time.temporal.TemporalQueries.zoneId)java.time.temporal.TemporalQuery
java.time.temporal.TemporalQueries.chronology)java.time.temporal.TemporalQuery
java.time.temporal.TemporalQueries.precision)java.time.temporal.TemporalQuery
java.time.temporal.TemporalQueries.zone)java.time.temporal.TemporalQuery
java.time.temporal.TemporalQueries.offset)java.time.temporal.TemporalQuery
java.time.temporal.TemporalQueries.localDate)java.time.temporal.TemporalQuery
java.time.temporal.TemporalQueries.localTime)java.time.temporal.TemporalQuery
java.time.temporal.TemporalUnit.isSupportedBy(java.time.temporal.Temporal)boolean
java.time.temporal.ValueRange.of(long,long)java.time.temporal.ValueRange
java.time.temporal.ValueRange.of(long,long,long)java.time.temporal.ValueRange
java.time.temporal.ValueRange.of(long,long,long,long)java.time.temporal.ValueRange
java.time.temporal.ValueRange.isFixed)boolean
java.time.temporal.ValueRange.getMinimum)long
java.time.temporal.ValueRange.getLargestMinimum)long
java.time.temporal.ValueRange.getSmallestMaximum)long
java.time.temporal.ValueRange.getMaximum)long
java.time.temporal.ValueRange.isIntValue)boolean
java.time.temporal.ValueRange.isValidValue(long)boolean
java.time.temporal.ValueRange.isValidIntValue(long)boolean
java.time.temporal.ValueRange.checkValidValue(long,java.time.temporal.TemporalField)long
java.time.temporal.ValueRange.checkValidIntValue(long,java.time.temporal.TemporalField)int
java.time.temporal.ValueRange.equals(Object)boolean
java.time.temporal.ValueRange.hashCode)int
java.time.temporal.ValueRange.toString)String
java.time.temporal.WeekFields.of(java.util.Locale)java.time.temporal.WeekFields
java.time.temporal.WeekFields.of(java.time.DayOfWeek,int)java.time.temporal.WeekFields
java.time.temporal.WeekFields.getFirstDayOfWeek)java.time.DayOfWeek
java.time.temporal.WeekFields.getMinimalDaysInFirstWeek)int
java.time.temporal.WeekFields.dayOfWeek)java.time.temporal.TemporalField
java.time.temporal.WeekFields.weekOfMonth)java.time.temporal.TemporalField
java.time.temporal.WeekFields.weekOfYear)java.time.temporal.TemporalField
java.time.temporal.WeekFields.weekOfWeekBasedYear)java.time.temporal.TemporalField
java.time.temporal.WeekFields.weekBasedYear)java.time.temporal.TemporalField
java.time.temporal.WeekFields.equals(Object)boolean
java.time.temporal.WeekFields.hashCode)int
java.time.temporal.WeekFields.toString)String
java.time.zone.ZoneOffsetTransition.of(LocalDateTime,ZoneOffset,ZoneOffset)java.time.zone.ZoneOffsetTransition
java.time.zone.ZoneOffsetTransition.getInstant)Instant
java.time.zone.ZoneOffsetTransition.toEpochSecond)long
java.time.zone.ZoneOffsetTransition.getDateTimeBefore)LocalDateTime
java.time.zone.ZoneOffsetTransition.getDateTimeAfter)LocalDateTime
java.time.zone.ZoneOffsetTransition.getOffsetBefore)ZoneOffset
java.time.zone.ZoneOffsetTransition.getOffsetAfter)ZoneOffset
java.time.zone.ZoneOffsetTransition.getDuration)Duration
java.time.zone.ZoneOffsetTransition.isGap)boolean
java.time.zone.ZoneOffsetTransition.isOverlap)boolean
java.time.zone.ZoneOffsetTransition.isValidOffset(ZoneOffset)boolean
java.time.zone.ZoneOffsetTransition.compareTo(java.time.zone.ZoneOffsetTransition)int
java.time.zone.ZoneOffsetTransition.equals(Object)boolean
java.time.zone.ZoneOffsetTransition.hashCode)int
java.time.zone.ZoneOffsetTransition.toString)String
java.time.zone.ZoneOffsetTransitionRule.valueOf(String)TimeDefinition
java.time.zone.ZoneOffsetTransitionRule.createDateTime(LocalDateTime,ZoneOffset,ZoneOffset)LocalDateTime
java.time.zone.ZoneOffsetTransitionRule.getMonth)Month
java.time.zone.ZoneOffsetTransitionRule.getDayOfMonthIndicator)int
java.time.zone.ZoneOffsetTransitionRule.getDayOfWeek)DayOfWeek
java.time.zone.ZoneOffsetTransitionRule.getLocalTime)LocalTime
java.time.zone.ZoneOffsetTransitionRule.isMidnightEndOfDay)boolean
java.time.zone.ZoneOffsetTransitionRule.getTimeDefinition)TimeDefinition
java.time.zone.ZoneOffsetTransitionRule.getStandardOffset)ZoneOffset
java.time.zone.ZoneOffsetTransitionRule.getOffsetBefore)ZoneOffset
java.time.zone.ZoneOffsetTransitionRule.getOffsetAfter)ZoneOffset
java.time.zone.ZoneOffsetTransitionRule.createTransition(int)java.time.zone.ZoneOffsetTransition
java.time.zone.ZoneOffsetTransitionRule.equals(Object)boolean
java.time.zone.ZoneOffsetTransitionRule.hashCode)int
java.time.zone.ZoneOffsetTransitionRule.toString)String
java.time.zone.ZoneRules.of(ZoneOffset,ZoneOffset,java.util.List,java.util.List,java.util.List)java.time.zone.ZoneRules
java.time.zone.ZoneRules.of(ZoneOffset)java.time.zone.ZoneRules
java.time.zone.ZoneRules.isFixedOffset)boolean
java.time.zone.ZoneRules.getOffset(Instant)ZoneOffset
java.time.zone.ZoneRules.getOffset(LocalDateTime)ZoneOffset
java.time.zone.ZoneRules.getValidOffsets(LocalDateTime)java.util.List
java.time.zone.ZoneRules.getTransition(LocalDateTime)java.time.zone.ZoneOffsetTransition
java.time.zone.ZoneRules.getStandardOffset(Instant)ZoneOffset
java.time.zone.ZoneRules.getDaylightSavings(Instant)Duration
java.time.zone.ZoneRules.isDaylightSavings(Instant)boolean
java.time.zone.ZoneRules.isValidOffset(LocalDateTime,ZoneOffset)boolean
java.time.zone.ZoneRules.nextTransition(Instant)java.time.zone.ZoneOffsetTransition
java.time.zone.ZoneRules.previousTransition(Instant)java.time.zone.ZoneOffsetTransition
java.time.zone.ZoneRules.getTransitions)java.util.List
java.time.zone.ZoneRules.getTransitionRules)java.util.List
java.time.zone.ZoneRules.equals(Object)boolean
java.time.zone.ZoneRules.hashCode)int
java.time.zone.ZoneRules.toString)String
java.util.AbstractCollection.isEmpty)boolean
java.util.AbstractCollection.contains(Object)boolean
java.util.AbstractCollection.add(Object)boolean
java.util.AbstractCollection.remove(Object)boolean
java.util.AbstractCollection.containsAll(java.util.Collection)boolean
java.util.AbstractCollection.addAll(java.util.Collection)boolean
java.util.AbstractCollection.removeAll(java.util.Collection)boolean
java.util.AbstractCollection.retainAll(java.util.Collection)boolean
java.util.AbstractCollection.clear)void
java.util.AbstractCollection.toString)String
java.util.AbstractList.add(Object)boolean
java.util.AbstractList.set(int,Object)Object
java.util.AbstractList.add(int,Object)void
java.util.AbstractList.remove(int)Object
java.util.AbstractList.indexOf(Object)int
java.util.AbstractList.lastIndexOf(Object)int
java.util.AbstractList.clear)void
java.util.AbstractList.addAll(int,java.util.Collection)boolean
java.util.AbstractList.iterator)java.util.Iterator
java.util.AbstractList.listIterator)java.util.ListIterator
java.util.AbstractList.listIterator(int)java.util.ListIterator
java.util.AbstractList.subList(int,int)java.util.List
java.util.AbstractList.equals(Object)boolean
java.util.AbstractList.hashCode)int
java.util.AbstractList.removeRange(int,int)void
java.util.AbstractMap.getKey)Object
java.util.AbstractMap.getValue)Object
java.util.AbstractMap.setValue(Object)Object
java.util.AbstractMap.equals(Object)boolean
java.util.AbstractMap.hashCode)int
java.util.AbstractMap.toString)String
java.util.AbstractMap.getKey)Object
java.util.AbstractMap.getValue)Object
java.util.AbstractMap.setValue(Object)Object
java.util.AbstractMap.equals(Object)boolean
java.util.AbstractMap.hashCode)int
java.util.AbstractMap.toString)String
java.util.AbstractMap.size)int
java.util.AbstractMap.isEmpty)boolean
java.util.AbstractMap.containsValue(Object)boolean
java.util.AbstractMap.containsKey(Object)boolean
java.util.AbstractMap.get(Object)Object
java.util.AbstractMap.put(Object,Object)Object
java.util.AbstractMap.remove(Object)Object
java.util.AbstractMap.putAll(java.util.Map)void
java.util.AbstractMap.clear)void
java.util.AbstractMap.keySet)java.util.Set
java.util.AbstractMap.values)java.util.Collection
java.util.AbstractMap.equals(Object)boolean
java.util.AbstractMap.hashCode)int
java.util.AbstractMap.toString)String
java.util.AbstractMap.clone)Object
java.util.AbstractQueue.add(Object)boolean
java.util.AbstractQueue.remove)Object
java.util.AbstractQueue.element)Object
java.util.AbstractQueue.clear)void
java.util.AbstractQueue.addAll(java.util.Collection)boolean
java.util.AbstractSequentialList.get(int)Object
java.util.AbstractSequentialList.set(int,Object)Object
java.util.AbstractSequentialList.add(int,Object)void
java.util.AbstractSequentialList.remove(int)Object
java.util.AbstractSequentialList.addAll(int,java.util.Collection)boolean
java.util.AbstractSequentialList.iterator)java.util.Iterator
java.util.AbstractSet.equals(Object)boolean
java.util.AbstractSet.hashCode)int
java.util.AbstractSet.removeAll(java.util.Collection)boolean
java.util.ArrayDeque.addFirst(Object)void
java.util.ArrayDeque.addLast(Object)void
java.util.ArrayDeque.offerFirst(Object)boolean
java.util.ArrayDeque.offerLast(Object)boolean
java.util.ArrayDeque.removeFirst)Object
java.util.ArrayDeque.removeLast)Object
java.util.ArrayDeque.pollFirst)Object
java.util.ArrayDeque.pollLast)Object
java.util.ArrayDeque.getFirst)Object
java.util.ArrayDeque.getLast)Object
java.util.ArrayDeque.peekFirst)Object
java.util.ArrayDeque.peekLast)Object
java.util.ArrayDeque.removeFirstOccurrence(Object)boolean
java.util.ArrayDeque.removeLastOccurrence(Object)boolean
java.util.ArrayDeque.add(Object)boolean
java.util.ArrayDeque.offer(Object)boolean
java.util.ArrayDeque.remove)Object
java.util.ArrayDeque.poll)Object
java.util.ArrayDeque.element)Object
java.util.ArrayDeque.peek)Object
java.util.ArrayDeque.push(Object)void
java.util.ArrayDeque.pop)Object
java.util.ArrayDeque.size)int
java.util.ArrayDeque.isEmpty)boolean
java.util.ArrayDeque.iterator)java.util.Iterator
java.util.ArrayDeque.descendingIterator)java.util.Iterator
java.util.ArrayDeque.contains(Object)boolean
java.util.ArrayDeque.remove(Object)boolean
java.util.ArrayDeque.clear)void
java.util.ArrayDeque.clone)java.util.ArrayDeque
java.util.ArrayDeque.spliterator)java.util.Spliterator
java.util.ArrayList.trimToSize)void
java.util.ArrayList.ensureCapacity(int)void
java.util.ArrayList.size)int
java.util.ArrayList.isEmpty)boolean
java.util.ArrayList.contains(Object)boolean
java.util.ArrayList.indexOf(Object)int
java.util.ArrayList.lastIndexOf(Object)int
java.util.ArrayList.clone)Object
java.util.ArrayList.get(int)Object
java.util.ArrayList.set(int,Object)Object
java.util.ArrayList.add(Object)boolean
java.util.ArrayList.add(int,Object)void
java.util.ArrayList.remove(int)Object
java.util.ArrayList.remove(Object)boolean
java.util.ArrayList.clear)void
java.util.ArrayList.addAll(java.util.Collection)boolean
java.util.ArrayList.addAll(int,java.util.Collection)boolean
java.util.ArrayList.removeRange(int,int)void
java.util.ArrayList.removeAll(java.util.Collection)boolean
java.util.ArrayList.retainAll(java.util.Collection)boolean
java.util.ArrayList.listIterator(int)java.util.ListIterator
java.util.ArrayList.listIterator)java.util.ListIterator
java.util.ArrayList.iterator)java.util.Iterator
java.util.ArrayList.subList(int,int)java.util.List
java.util.ArrayList.forEach(java.util.function.Consumer)void
java.util.ArrayList.spliterator)java.util.Spliterator
java.util.ArrayList.removeIf(java.util.function.Predicate)boolean
java.util.ArrayList.replaceAll(java.util.function.UnaryOperator)void
java.util.ArrayList.sort(java.util.Comparator)void
java.util.Arrays.sort(int)void
java.util.Arrays.sort(int,int,int)void
java.util.Arrays.sort(long)void
java.util.Arrays.sort(long,int,int)void
java.util.Arrays.sort(short)void
java.util.Arrays.sort(short,int,int)void
java.util.Arrays.sort(char)void
java.util.Arrays.sort(char,int,int)void
java.util.Arrays.sort(byte)void
java.util.Arrays.sort(byte,int,int)void
java.util.Arrays.sort(float)void
java.util.Arrays.sort(float,int,int)void
java.util.Arrays.sort(double)void
java.util.Arrays.sort(double,int,int)void
java.util.Arrays.parallelSort(byte)void
java.util.Arrays.parallelSort(byte,int,int)void
java.util.Arrays.parallelSort(char)void
java.util.Arrays.parallelSort(char,int,int)void
java.util.Arrays.parallelSort(short)void
java.util.Arrays.parallelSort(short,int,int)void
java.util.Arrays.parallelSort(int)void
java.util.Arrays.parallelSort(int,int,int)void
java.util.Arrays.parallelSort(long)void
java.util.Arrays.parallelSort(long,int,int)void
java.util.Arrays.parallelSort(float)void
java.util.Arrays.parallelSort(float,int,int)void
java.util.Arrays.parallelSort(double)void
java.util.Arrays.parallelSort(double,int,int)void
java.util.Arrays.parallelSort(Comparable)void
java.util.Arrays.parallelSort(Comparable,int,int)void
java.util.Arrays.parallelSort(Object,java.util.Comparator)void
java.util.Arrays.parallelSort(Object,int,int,java.util.Comparator)void
java.util.Arrays.sort(Object)void
java.util.Arrays.sort(Object,int,int)void
java.util.Arrays.sort(Object,java.util.Comparator)void
java.util.Arrays.sort(Object,int,int,java.util.Comparator)void
java.util.Arrays.parallelPrefix(Object,java.util.function.BinaryOperator)void
java.util.Arrays.parallelPrefix(Object,int,int,java.util.function.BinaryOperator)void
java.util.Arrays.parallelPrefix(long,java.util.function.LongBinaryOperator)void
java.util.Arrays.parallelPrefix(long,int,int,java.util.function.LongBinaryOperator)void
java.util.Arrays.parallelPrefix(double,java.util.function.DoubleBinaryOperator)void
java.util.Arrays.parallelPrefix(double,int,int,java.util.function.DoubleBinaryOperator)void
java.util.Arrays.parallelPrefix(int,java.util.function.IntBinaryOperator)void
java.util.Arrays.parallelPrefix(int,int,int,java.util.function.IntBinaryOperator)void
java.util.Arrays.binarySearch(long,long)int
java.util.Arrays.binarySearch(long,int,int,long)int
java.util.Arrays.binarySearch(int,int)int
java.util.Arrays.binarySearch(int,int,int,int)int
java.util.Arrays.binarySearch(short,short)int
java.util.Arrays.binarySearch(short,int,int,short)int
java.util.Arrays.binarySearch(char,char)int
java.util.Arrays.binarySearch(char,int,int,char)int
java.util.Arrays.binarySearch(byte,byte)int
java.util.Arrays.binarySearch(byte,int,int,byte)int
java.util.Arrays.binarySearch(double,double)int
java.util.Arrays.binarySearch(double,int,int,double)int
java.util.Arrays.binarySearch(float,float)int
java.util.Arrays.binarySearch(float,int,int,float)int
java.util.Arrays.binarySearch(Object,Object)int
java.util.Arrays.binarySearch(Object,int,int,Object)int
java.util.Arrays.binarySearch(Object,Object,java.util.Comparator)int
java.util.Arrays.binarySearch(Object,int,int,Object,java.util.Comparator)int
java.util.Arrays.equals(long,long)boolean
java.util.Arrays.equals(int,int)boolean
java.util.Arrays.equals(short,short)boolean
java.util.Arrays.equals(char,char)boolean
java.util.Arrays.equals(byte,byte)boolean
java.util.Arrays.equals(boolean,boolean)boolean
java.util.Arrays.equals(double,double)boolean
java.util.Arrays.equals(float,float)boolean
java.util.Arrays.equals(Object,Object)boolean
java.util.Arrays.fill(long,long)void
java.util.Arrays.fill(long,int,int,long)void
java.util.Arrays.fill(int,int)void
java.util.Arrays.fill(int,int,int,int)void
java.util.Arrays.fill(short,short)void
java.util.Arrays.fill(short,int,int,short)void
java.util.Arrays.fill(char,char)void
java.util.Arrays.fill(char,int,int,char)void
java.util.Arrays.fill(byte,byte)void
java.util.Arrays.fill(byte,int,int,byte)void
java.util.Arrays.fill(boolean,boolean)void
java.util.Arrays.fill(boolean,int,int,boolean)void
java.util.Arrays.fill(double,double)void
java.util.Arrays.fill(double,int,int,double)void
java.util.Arrays.fill(float,float)void
java.util.Arrays.fill(float,int,int,float)void
java.util.Arrays.fill(Object,Object)void
java.util.Arrays.fill(Object,int,int,Object)void
java.util.Arrays.hashCode(long)int
java.util.Arrays.hashCode(int)int
java.util.Arrays.hashCode(short)int
java.util.Arrays.hashCode(char)int
java.util.Arrays.hashCode(byte)int
java.util.Arrays.hashCode(boolean)int
java.util.Arrays.hashCode(float)int
java.util.Arrays.hashCode(double)int
java.util.Arrays.hashCode(Object)int
java.util.Arrays.deepHashCode(Object)int
java.util.Arrays.deepEquals(Object,Object)boolean
java.util.Arrays.toString(long)String
java.util.Arrays.toString(int)String
java.util.Arrays.toString(short)String
java.util.Arrays.toString(char)String
java.util.Arrays.toString(byte)String
java.util.Arrays.toString(boolean)String
java.util.Arrays.toString(float)String
java.util.Arrays.toString(double)String
java.util.Arrays.toString(Object)String
java.util.Arrays.deepToString(Object)String
java.util.Arrays.setAll(Object,java.util.function.IntFunction)void
java.util.Arrays.parallelSetAll(Object,java.util.function.IntFunction)void
java.util.Arrays.setAll(int,java.util.function.IntUnaryOperator)void
java.util.Arrays.parallelSetAll(int,java.util.function.IntUnaryOperator)void
java.util.Arrays.setAll(long,java.util.function.IntToLongFunction)void
java.util.Arrays.parallelSetAll(long,java.util.function.IntToLongFunction)void
java.util.Arrays.setAll(double,java.util.function.IntToDoubleFunction)void
java.util.Arrays.parallelSetAll(double,java.util.function.IntToDoubleFunction)void
java.util.Arrays.spliterator(Object)java.util.Spliterator
java.util.Arrays.spliterator(Object,int,int)java.util.Spliterator
java.util.Arrays.stream(Object)java.util.stream.Stream
java.util.Arrays.stream(Object,int,int)java.util.stream.Stream
java.util.Arrays.stream(int)java.util.stream.IntStream
java.util.Arrays.stream(int,int,int)java.util.stream.IntStream
java.util.Arrays.stream(long)java.util.stream.LongStream
java.util.Arrays.stream(long,int,int)java.util.stream.LongStream
java.util.Arrays.stream(double)java.util.stream.DoubleStream
java.util.Arrays.stream(double,int,int)java.util.stream.DoubleStream
java.util.Base64.encode(byte,byte)int
java.util.Base64.encodeToString(byte)String
java.util.Base64.encode(java.nio.ByteBuffer)java.nio.ByteBuffer
java.util.Base64.wrap(java.io.OutputStream)java.io.OutputStream
java.util.Base64.withoutPadding)java.util.Base64.Encoder
java.util.Base64.decode(byte,byte)int
java.util.Base64.decode(java.nio.ByteBuffer)java.nio.ByteBuffer
java.util.Base64.wrap(java.io.InputStream)java.io.InputStream
java.util.Base64.getEncoder)java.util.Base64.Encoder
java.util.Base64.getUrlEncoder)java.util.Base64.Encoder
java.util.Base64.getMimeEncoder)java.util.Base64.Encoder
java.util.Base64.getMimeEncoder(int,byte)java.util.Base64.Encoder
java.util.Base64.getDecoder)java.util.Base64.Decoder
java.util.Base64.getUrlDecoder)java.util.Base64.Decoder
java.util.Base64.getMimeDecoder)java.util.Base64.Decoder
java.util.BitSet.valueOf(long)java.util.BitSet
java.util.BitSet.valueOf(java.nio.LongBuffer)java.util.BitSet
java.util.BitSet.valueOf(byte)java.util.BitSet
java.util.BitSet.valueOf(java.nio.ByteBuffer)java.util.BitSet
java.util.BitSet.flip(int)void
java.util.BitSet.flip(int,int)void
java.util.BitSet.set(int)void
java.util.BitSet.set(int,boolean)void
java.util.BitSet.set(int,int)void
java.util.BitSet.set(int,int,boolean)void
java.util.BitSet.clear(int)void
java.util.BitSet.clear(int,int)void
java.util.BitSet.clear)void
java.util.BitSet.get(int)boolean
java.util.BitSet.get(int,int)java.util.BitSet
java.util.BitSet.nextSetBit(int)int
java.util.BitSet.nextClearBit(int)int
java.util.BitSet.previousSetBit(int)int
java.util.BitSet.previousClearBit(int)int
java.util.BitSet.length)int
java.util.BitSet.isEmpty)boolean
java.util.BitSet.intersects(java.util.BitSet)boolean
java.util.BitSet.cardinality)int
java.util.BitSet.and(java.util.BitSet)void
java.util.BitSet.or(java.util.BitSet)void
java.util.BitSet.xor(java.util.BitSet)void
java.util.BitSet.andNot(java.util.BitSet)void
java.util.BitSet.hashCode)int
java.util.BitSet.size)int
java.util.BitSet.equals(Object)boolean
java.util.BitSet.clone)Object
java.util.BitSet.toString)String
java.util.BitSet.stream)java.util.stream.IntStream
java.util.Calendar.setInstant(long)java.util.Calendar.Builder
java.util.Calendar.setInstant(java.util.Date)java.util.Calendar.Builder
java.util.Calendar.set(int,int)java.util.Calendar.Builder
java.util.Calendar.setDate(int,int,int)java.util.Calendar.Builder
java.util.Calendar.setTimeOfDay(int,int,int)java.util.Calendar.Builder
java.util.Calendar.setTimeOfDay(int,int,int,int)java.util.Calendar.Builder
java.util.Calendar.setWeekDate(int,int,int)java.util.Calendar.Builder
java.util.Calendar.setTimeZone(java.util.TimeZone)java.util.Calendar.Builder
java.util.Calendar.setLenient(boolean)java.util.Calendar.Builder
java.util.Calendar.setCalendarType(String)java.util.Calendar.Builder
java.util.Calendar.setLocale(java.util.Locale)java.util.Calendar.Builder
java.util.Calendar.setWeekDefinition(int,int)java.util.Calendar.Builder
java.util.Calendar.build)java.util.Calendar
java.util.Calendar.getInstance)java.util.Calendar
java.util.Calendar.getInstance(java.util.TimeZone)java.util.Calendar
java.util.Calendar.getInstance(java.util.Locale)java.util.Calendar
java.util.Calendar.getInstance(java.util.TimeZone,java.util.Locale)java.util.Calendar
java.util.Calendar.getTime)java.util.Date
java.util.Calendar.setTime(java.util.Date)void
java.util.Calendar.getTimeInMillis)long
java.util.Calendar.setTimeInMillis(long)void
java.util.Calendar.get(int)int
java.util.Calendar.internalGet(int)int
java.util.Calendar.set(int,int)void
java.util.Calendar.set(int,int,int)void
java.util.Calendar.set(int,int,int,int,int)void
java.util.Calendar.set(int,int,int,int,int,int)void
java.util.Calendar.clear)void
java.util.Calendar.clear(int)void
java.util.Calendar.isSet(int)boolean
java.util.Calendar.getDisplayName(int,int,java.util.Locale)String
java.util.Calendar.getDisplayNames(int,int,java.util.Locale)java.util.Map
java.util.Calendar.complete)void
java.util.Calendar.getAvailableCalendarTypes)java.util.Set
java.util.Calendar.getCalendarType)String
java.util.Calendar.equals(Object)boolean
java.util.Calendar.hashCode)int
java.util.Calendar.before(Object)boolean
java.util.Calendar.after(Object)boolean
java.util.Calendar.compareTo(java.util.Calendar)int
java.util.Calendar.roll(int,int)void
java.util.Calendar.setTimeZone(java.util.TimeZone)void
java.util.Calendar.getTimeZone)java.util.TimeZone
java.util.Calendar.setLenient(boolean)void
java.util.Calendar.isLenient)boolean
java.util.Calendar.setFirstDayOfWeek(int)void
java.util.Calendar.getFirstDayOfWeek)int
java.util.Calendar.setMinimalDaysInFirstWeek(int)void
java.util.Calendar.getMinimalDaysInFirstWeek)int
java.util.Calendar.isWeekDateSupported)boolean
java.util.Calendar.getWeekYear)int
java.util.Calendar.setWeekDate(int,int,int)void
java.util.Calendar.getWeeksInWeekYear)int
java.util.Calendar.getActualMinimum(int)int
java.util.Calendar.getActualMaximum(int)int
java.util.Calendar.clone)Object
java.util.Calendar.toString)String
java.util.Calendar.toInstant)java.time.Instant
java.util.Collection.removeIf(java.util.function.Predicate)boolean
java.util.Collection.spliterator)java.util.Spliterator
java.util.Collection.stream)java.util.stream.Stream
java.util.Collection.parallelStream)java.util.stream.Stream
java.util.Collections.sort(java.util.List)void
java.util.Collections.sort(java.util.List,java.util.Comparator)void
java.util.Collections.binarySearch(java.util.List,Object)int
java.util.Collections.binarySearch(java.util.List,Object,java.util.Comparator)int
java.util.Collections.reverse(java.util.List)void
java.util.Collections.shuffle(java.util.List)void
java.util.Collections.shuffle(java.util.List,java.util.Random)void
java.util.Collections.swap(java.util.List,int,int)void
java.util.Collections.fill(java.util.List,Object)void
java.util.Collections.copy(java.util.List,java.util.List)void
java.util.Collections.min(java.util.Collection)Object
java.util.Collections.min(java.util.Collection,java.util.Comparator)Object
java.util.Collections.max(java.util.Collection)Object
java.util.Collections.max(java.util.Collection,java.util.Comparator)Object
java.util.Collections.rotate(java.util.List,int)void
java.util.Collections.replaceAll(java.util.List,Object,Object)boolean
java.util.Collections.indexOfSubList(java.util.List,java.util.List)int
java.util.Collections.lastIndexOfSubList(java.util.List,java.util.List)int
java.util.Collections.unmodifiableCollection(java.util.Collection)java.util.Collection
java.util.Collections.unmodifiableSet(java.util.Set)java.util.Set
java.util.Collections.unmodifiableSortedSet(java.util.SortedSet)java.util.SortedSet
java.util.Collections.unmodifiableNavigableSet(java.util.NavigableSet)java.util.NavigableSet
java.util.Collections.unmodifiableList(java.util.List)java.util.List
java.util.Collections.unmodifiableMap(java.util.Map)java.util.Map
java.util.Collections.unmodifiableSortedMap(java.util.SortedMap)java.util.SortedMap
java.util.Collections.unmodifiableNavigableMap(java.util.NavigableMap)java.util.NavigableMap
java.util.Collections.synchronizedCollection(java.util.Collection)java.util.Collection
java.util.Collections.synchronizedSet(java.util.Set)java.util.Set
java.util.Collections.synchronizedSortedSet(java.util.SortedSet)java.util.SortedSet
java.util.Collections.synchronizedNavigableSet(java.util.NavigableSet)java.util.NavigableSet
java.util.Collections.synchronizedList(java.util.List)java.util.List
java.util.Collections.synchronizedMap(java.util.Map)java.util.Map
java.util.Collections.synchronizedSortedMap(java.util.SortedMap)java.util.SortedMap
java.util.Collections.synchronizedNavigableMap(java.util.NavigableMap)java.util.NavigableMap
java.util.Collections.checkedCollection(java.util.Collection,Class)java.util.Collection
java.util.Collections.checkedQueue(java.util.Queue,Class)java.util.Queue
java.util.Collections.checkedSet(java.util.Set,Class)java.util.Set
java.util.Collections.checkedSortedSet(java.util.SortedSet,Class)java.util.SortedSet
java.util.Collections.checkedNavigableSet(java.util.NavigableSet,Class)java.util.NavigableSet
java.util.Collections.checkedList(java.util.List,Class)java.util.List
java.util.Collections.checkedMap(java.util.Map,Class,Class)java.util.Map
java.util.Collections.checkedSortedMap(java.util.SortedMap,Class,Class)java.util.SortedMap
java.util.Collections.checkedNavigableMap(java.util.NavigableMap,Class,Class)java.util.NavigableMap
java.util.Collections.emptyIterator)java.util.Iterator
java.util.Collections.emptyListIterator)java.util.ListIterator
java.util.Collections.emptyEnumeration)java.util.Enumeration
java.util.Collections.emptySet)java.util.Set
java.util.Collections.emptySortedSet)java.util.SortedSet
java.util.Collections.emptyNavigableSet)java.util.NavigableSet
java.util.Collections.emptyList)java.util.List
java.util.Collections.emptyMap)java.util.Map
java.util.Collections.emptySortedMap)java.util.SortedMap
java.util.Collections.emptyNavigableMap)java.util.NavigableMap
java.util.Collections.singleton(Object)java.util.Set
java.util.Collections.singletonList(Object)java.util.List
java.util.Collections.singletonMap(Object,Object)java.util.Map
java.util.Collections.nCopies(int,Object)java.util.List
java.util.Collections.reverseOrder)java.util.Comparator
java.util.Collections.reverseOrder(java.util.Comparator)java.util.Comparator
java.util.Collections.enumeration(java.util.Collection)java.util.Enumeration
java.util.Collections.list(java.util.Enumeration)java.util.ArrayList
java.util.Collections.frequency(java.util.Collection,Object)int
java.util.Collections.disjoint(java.util.Collection,java.util.Collection)boolean
java.util.Collections.newSetFromMap(java.util.Map)java.util.Set
java.util.Collections.asLifoQueue(java.util.Deque)java.util.Queue
java.util.Comparator.reversed)java.util.Comparator
java.util.Comparator.thenComparing(java.util.Comparator)java.util.Comparator
java.util.Comparator.thenComparing(java.util.function.Function,java.util.Comparator)java.util.Comparator
java.util.Comparator.thenComparing(java.util.function.Function)java.util.Comparator
java.util.Comparator.thenComparingInt(java.util.function.ToIntFunction)java.util.Comparator
java.util.Comparator.thenComparingLong(java.util.function.ToLongFunction)java.util.Comparator
java.util.Comparator.thenComparingDouble(java.util.function.ToDoubleFunction)java.util.Comparator
java.util.Comparator.reverseOrder)java.util.Comparator
java.util.Comparator.naturalOrder)java.util.Comparator
java.util.Comparator.nullsFirst(java.util.Comparator)java.util.Comparator
java.util.Comparator.nullsLast(java.util.Comparator)java.util.Comparator
java.util.Comparator.comparing(java.util.function.Function,java.util.Comparator)java.util.Comparator
java.util.Comparator.comparing(java.util.function.Function)java.util.Comparator
java.util.Comparator.comparingInt(java.util.function.ToIntFunction)java.util.Comparator
java.util.Comparator.comparingLong(java.util.function.ToLongFunction)java.util.Comparator
java.util.Comparator.comparingDouble(java.util.function.ToDoubleFunction)java.util.Comparator
java.util.Currency.getInstance(String)java.util.Currency
java.util.Currency.getInstance(java.util.Locale)java.util.Currency
java.util.Currency.getAvailableCurrencies)java.util.Set
java.util.Currency.getCurrencyCode)String
java.util.Currency.getSymbol)String
java.util.Currency.getSymbol(java.util.Locale)String
java.util.Currency.getDefaultFractionDigits)int
java.util.Currency.getNumericCode)int
java.util.Currency.getDisplayName)String
java.util.Currency.getDisplayName(java.util.Locale)String
java.util.Currency.toString)String
java.util.Date.clone)Object
java.util.Date.UTC(int,int,int,int,int,int)long
java.util.Date.parse(String)long
java.util.Date.getYear)int
java.util.Date.setYear(int)void
java.util.Date.getMonth)int
java.util.Date.setMonth(int)void
java.util.Date.getDate)int
java.util.Date.setDate(int)void
java.util.Date.getDay)int
java.util.Date.getHours)int
java.util.Date.setHours(int)void
java.util.Date.getMinutes)int
java.util.Date.setMinutes(int)void
java.util.Date.getSeconds)int
java.util.Date.setSeconds(int)void
java.util.Date.getTime)long
java.util.Date.setTime(long)void
java.util.Date.before(java.util.Date)boolean
java.util.Date.after(java.util.Date)boolean
java.util.Date.equals(Object)boolean
java.util.Date.compareTo(java.util.Date)int
java.util.Date.hashCode)int
java.util.Date.toString)String
java.util.Date.toLocaleString)String
java.util.Date.toGMTString)String
java.util.Date.getTimezoneOffset)int
java.util.Date.from(java.time.Instant)java.util.Date
java.util.Date.toInstant)java.time.Instant
java.util.DoubleSummaryStatistics.accept(double)void
java.util.DoubleSummaryStatistics.combine(java.util.DoubleSummaryStatistics)void
java.util.DoubleSummaryStatistics.getCount)long
java.util.DoubleSummaryStatistics.getSum)double
java.util.DoubleSummaryStatistics.getMin)double
java.util.DoubleSummaryStatistics.getMax)double
java.util.DoubleSummaryStatistics.getAverage)double
java.util.DoubleSummaryStatistics.toString)String
java.util.DuplicateFormatFlagsException.getFlags)String
java.util.DuplicateFormatFlagsException.getMessage)String
java.util.EnumMap.size)int
java.util.EnumMap.containsValue(Object)boolean
java.util.EnumMap.containsKey(Object)boolean
java.util.EnumMap.get(Object)Object
java.util.EnumMap.put(Enum,Object)Object
java.util.EnumMap.remove(Object)Object
java.util.EnumMap.putAll(java.util.Map)void
java.util.EnumMap.clear)void
java.util.EnumMap.keySet)java.util.Set
java.util.EnumMap.values)java.util.Collection
java.util.EnumMap.entrySet)java.util.Set
java.util.EnumMap.equals(Object)boolean
java.util.EnumMap.hashCode)int
java.util.EnumMap.clone)java.util.EnumMap
java.util.EnumSet.noneOf(Class)java.util.EnumSet
java.util.EnumSet.allOf(Class)java.util.EnumSet
java.util.EnumSet.copyOf(java.util.EnumSet)java.util.EnumSet
java.util.EnumSet.copyOf(java.util.Collection)java.util.EnumSet
java.util.EnumSet.complementOf(java.util.EnumSet)java.util.EnumSet
java.util.EnumSet.of(Enum)java.util.EnumSet
java.util.EnumSet.of(Enum,Enum)java.util.EnumSet
java.util.EnumSet.of(Enum,Enum,Enum)java.util.EnumSet
java.util.EnumSet.of(Enum,Enum,Enum,Enum)java.util.EnumSet
java.util.EnumSet.of(Enum,Enum,Enum,Enum,Enum)java.util.EnumSet
java.util.EnumSet.range(Enum,Enum)java.util.EnumSet
java.util.EnumSet.clone)java.util.EnumSet
java.util.EventListenerProxy.getListener)java.util.EventListener
java.util.EventObject.getSource)Object
java.util.EventObject.toString)String
java.util.FormatFlagsConversionMismatchException.getFlags)String
java.util.FormatFlagsConversionMismatchException.getConversion)char
java.util.FormatFlagsConversionMismatchException.getMessage)String
java.util.Formatter.valueOf(String)BigDecimalLayoutForm
java.util.Formatter.locale)java.util.Locale
java.util.Formatter.out)Appendable
java.util.Formatter.toString)String
java.util.Formatter.flush)void
java.util.Formatter.close)void
java.util.Formatter.ioException)IOException
java.util.GregorianCalendar.setGregorianChange(java.util.Date)void
java.util.GregorianCalendar.getGregorianChange)java.util.Date
java.util.GregorianCalendar.isLeapYear(int)boolean
java.util.GregorianCalendar.getCalendarType)String
java.util.GregorianCalendar.equals(Object)boolean
java.util.GregorianCalendar.hashCode)int
java.util.GregorianCalendar.add(int,int)void
java.util.GregorianCalendar.roll(int,boolean)void
java.util.GregorianCalendar.roll(int,int)void
java.util.GregorianCalendar.getMinimum(int)int
java.util.GregorianCalendar.getMaximum(int)int
java.util.GregorianCalendar.getGreatestMinimum(int)int
java.util.GregorianCalendar.getLeastMaximum(int)int
java.util.GregorianCalendar.getActualMinimum(int)int
java.util.GregorianCalendar.getActualMaximum(int)int
java.util.GregorianCalendar.clone)Object
java.util.GregorianCalendar.getTimeZone)java.util.TimeZone
java.util.GregorianCalendar.setTimeZone(java.util.TimeZone)void
java.util.GregorianCalendar.isWeekDateSupported)boolean
java.util.GregorianCalendar.getWeekYear)int
java.util.GregorianCalendar.setWeekDate(int,int,int)void
java.util.GregorianCalendar.getWeeksInWeekYear)int
java.util.GregorianCalendar.computeFields)void
java.util.GregorianCalendar.computeTime)void
java.util.GregorianCalendar.toZonedDateTime)java.time.ZonedDateTime
java.util.GregorianCalendar.from(java.time.ZonedDateTime)java.util.GregorianCalendar
java.util.HashMap.size)int
java.util.HashMap.isEmpty)boolean
java.util.HashMap.get(Object)Object
java.util.HashMap.containsKey(Object)boolean
java.util.HashMap.put(Object,Object)Object
java.util.HashMap.putAll(java.util.Map)void
java.util.HashMap.remove(Object)Object
java.util.HashMap.clear)void
java.util.HashMap.containsValue(Object)boolean
java.util.HashMap.keySet)java.util.Set
java.util.HashMap.values)java.util.Collection
java.util.HashMap.entrySet)java.util.Set
java.util.HashMap.getOrDefault(Object,Object)Object
java.util.HashMap.putIfAbsent(Object,Object)Object
java.util.HashMap.remove(Object,Object)boolean
java.util.HashMap.replace(Object,Object,Object)boolean
java.util.HashMap.replace(Object,Object)Object
java.util.HashMap.computeIfAbsent(Object,java.util.function.Function)Object
java.util.HashMap.computeIfPresent(Object,java.util.function.BiFunction)Object
java.util.HashMap.compute(Object,java.util.function.BiFunction)Object
java.util.HashMap.merge(Object,Object,java.util.function.BiFunction)Object
java.util.HashMap.forEach(java.util.function.BiConsumer)void
java.util.HashMap.replaceAll(java.util.function.BiFunction)void
java.util.HashMap.clone)Object
java.util.HashSet.iterator)java.util.Iterator
java.util.HashSet.size)int
java.util.HashSet.isEmpty)boolean
java.util.HashSet.contains(Object)boolean
java.util.HashSet.add(Object)boolean
java.util.HashSet.remove(Object)boolean
java.util.HashSet.clear)void
java.util.HashSet.clone)Object
java.util.HashSet.spliterator)java.util.Spliterator
java.util.Hashtable.containsValue(Object)boolean
java.util.Hashtable.rehash)void
java.util.Hashtable.keySet)java.util.Set
java.util.Hashtable.entrySet)java.util.Set
java.util.Hashtable.values)java.util.Collection
java.util.IdentityHashMap.size)int
java.util.IdentityHashMap.isEmpty)boolean
java.util.IdentityHashMap.get(Object)Object
java.util.IdentityHashMap.containsKey(Object)boolean
java.util.IdentityHashMap.containsValue(Object)boolean
java.util.IdentityHashMap.put(Object,Object)Object
java.util.IdentityHashMap.putAll(java.util.Map)void
java.util.IdentityHashMap.remove(Object)Object
java.util.IdentityHashMap.clear)void
java.util.IdentityHashMap.equals(Object)boolean
java.util.IdentityHashMap.hashCode)int
java.util.IdentityHashMap.clone)Object
java.util.IdentityHashMap.keySet)java.util.Set
java.util.IdentityHashMap.values)java.util.Collection
java.util.IdentityHashMap.entrySet)java.util.Set
java.util.IdentityHashMap.forEach(java.util.function.BiConsumer)void
java.util.IdentityHashMap.replaceAll(java.util.function.BiFunction)void
java.util.IllegalFormatCodePointException.getCodePoint)int
java.util.IllegalFormatCodePointException.getMessage)String
java.util.IllegalFormatConversionException.getConversion)char
java.util.IllegalFormatConversionException.getArgumentClass)Class
java.util.IllegalFormatConversionException.getMessage)String
java.util.IllegalFormatFlagsException.getFlags)String
java.util.IllegalFormatFlagsException.getMessage)String
java.util.IllegalFormatPrecisionException.getPrecision)int
java.util.IllegalFormatPrecisionException.getMessage)String
java.util.IllegalFormatWidthException.getWidth)int
java.util.IllegalFormatWidthException.getMessage)String
java.util.IllformedLocaleException.getErrorIndex)int
java.util.IntSummaryStatistics.accept(int)void
java.util.IntSummaryStatistics.combine(java.util.IntSummaryStatistics)void
java.util.IntSummaryStatistics.getCount)long
java.util.IntSummaryStatistics.getSum)long
java.util.IntSummaryStatistics.getMin)int
java.util.IntSummaryStatistics.getMax)int
java.util.IntSummaryStatistics.getAverage)double
java.util.IntSummaryStatistics.toString)String
java.util.Iterator.remove)void
java.util.Iterator.forEachRemaining(java.util.function.Consumer)void
java.util.LinkedHashMap.containsValue(Object)boolean
java.util.LinkedHashMap.get(Object)Object
java.util.LinkedHashMap.getOrDefault(Object,Object)Object
java.util.LinkedHashMap.clear)void
java.util.LinkedHashMap.removeEldestEntry(Map.Entry)boolean
java.util.LinkedHashMap.keySet)java.util.Set
java.util.LinkedHashMap.values)java.util.Collection
java.util.LinkedHashMap.entrySet)java.util.Set
java.util.LinkedHashMap.forEach(java.util.function.BiConsumer)void
java.util.LinkedHashMap.replaceAll(java.util.function.BiFunction)void
java.util.LinkedHashSet.spliterator)java.util.Spliterator
java.util.LinkedList.getFirst)Object
java.util.LinkedList.getLast)Object
java.util.LinkedList.removeFirst)Object
java.util.LinkedList.removeLast)Object
java.util.LinkedList.addFirst(Object)void
java.util.LinkedList.addLast(Object)void
java.util.LinkedList.contains(Object)boolean
java.util.LinkedList.size)int
java.util.LinkedList.add(Object)boolean
java.util.LinkedList.remove(Object)boolean
java.util.LinkedList.addAll(java.util.Collection)boolean
java.util.LinkedList.addAll(int,java.util.Collection)boolean
java.util.LinkedList.clear)void
java.util.LinkedList.get(int)Object
java.util.LinkedList.set(int,Object)Object
java.util.LinkedList.add(int,Object)void
java.util.LinkedList.remove(int)Object
java.util.LinkedList.indexOf(Object)int
java.util.LinkedList.lastIndexOf(Object)int
java.util.LinkedList.peek)Object
java.util.LinkedList.element)Object
java.util.LinkedList.poll)Object
java.util.LinkedList.remove)Object
java.util.LinkedList.offer(Object)boolean
java.util.LinkedList.offerFirst(Object)boolean
java.util.LinkedList.offerLast(Object)boolean
java.util.LinkedList.peekFirst)Object
java.util.LinkedList.peekLast)Object
java.util.LinkedList.pollFirst)Object
java.util.LinkedList.pollLast)Object
java.util.LinkedList.push(Object)void
java.util.LinkedList.pop)Object
java.util.LinkedList.removeFirstOccurrence(Object)boolean
java.util.LinkedList.removeLastOccurrence(Object)boolean
java.util.LinkedList.listIterator(int)java.util.ListIterator
java.util.LinkedList.descendingIterator)java.util.Iterator
java.util.LinkedList.clone)Object
java.util.LinkedList.spliterator)java.util.Spliterator
java.util.List.replaceAll(java.util.function.UnaryOperator)void
java.util.List.sort(java.util.Comparator)void
java.util.List.spliterator)java.util.Spliterator
java.util.ListResourceBundle.handleGetObject(String)Object
java.util.ListResourceBundle.getKeys)java.util.Enumeration
java.util.ListResourceBundle.handleKeySet)java.util.Set
java.util.Locale.getRange)String
java.util.Locale.getWeight)double
java.util.Locale.parse(String)java.util.List
java.util.Locale.parse(String,java.util.Map)java.util.List
java.util.Locale.mapEquivalents(java.util.List,java.util.Map)java.util.List
java.util.Locale.hashCode)int
java.util.Locale.equals(Object)boolean
java.util.Locale.valueOf(String)FilteringMode
java.util.Locale.valueOf(String)Category
java.util.Locale.setLocale(java.util.Locale)Builder
java.util.Locale.setLanguageTag(String)Builder
java.util.Locale.setLanguage(String)Builder
java.util.Locale.setScript(String)Builder
java.util.Locale.setRegion(String)Builder
java.util.Locale.setVariant(String)Builder
java.util.Locale.setExtension(char,String)Builder
java.util.Locale.setUnicodeLocaleKeyword(String,String)Builder
java.util.Locale.addUnicodeLocaleAttribute(String)Builder
java.util.Locale.removeUnicodeLocaleAttribute(String)Builder
java.util.Locale.clear)Builder
java.util.Locale.clearExtensions)Builder
java.util.Locale.build)java.util.Locale
java.util.Locale.getDefault)java.util.Locale
java.util.Locale.getDefault(Category)java.util.Locale
java.util.Locale.getLanguage)String
java.util.Locale.getScript)String
java.util.Locale.getCountry)String
java.util.Locale.getVariant)String
java.util.Locale.hasExtensions)boolean
java.util.Locale.stripExtensions)java.util.Locale
java.util.Locale.getExtension(char)String
java.util.Locale.getExtensionKeys)java.util.Set
java.util.Locale.getUnicodeLocaleAttributes)java.util.Set
java.util.Locale.getUnicodeLocaleType(String)String
java.util.Locale.getUnicodeLocaleKeys)java.util.Set
java.util.Locale.toString)String
java.util.Locale.toLanguageTag)String
java.util.Locale.forLanguageTag(String)java.util.Locale
java.util.Locale.getISO3Language)String
java.util.Locale.getISO3Country)String
java.util.Locale.getDisplayLanguage)String
java.util.Locale.getDisplayLanguage(java.util.Locale)String
java.util.Locale.getDisplayScript)String
java.util.Locale.getDisplayScript(java.util.Locale)String
java.util.Locale.getDisplayCountry)String
java.util.Locale.getDisplayCountry(java.util.Locale)String
java.util.Locale.getDisplayVariant)String
java.util.Locale.getDisplayVariant(java.util.Locale)String
java.util.Locale.getDisplayName)String
java.util.Locale.getDisplayName(java.util.Locale)String
java.util.Locale.clone)Object
java.util.Locale.hashCode)int
java.util.Locale.equals(Object)boolean
java.util.Locale.filter(java.util.List,java.util.Collection,FilteringMode)java.util.List
java.util.Locale.filter(java.util.List,java.util.Collection)java.util.List
java.util.Locale.filterTags(java.util.List,java.util.Collection,FilteringMode)java.util.List
java.util.Locale.filterTags(java.util.List,java.util.Collection)java.util.List
java.util.Locale.lookup(java.util.List,java.util.Collection)java.util.Locale
java.util.Locale.lookupTag(java.util.List,java.util.Collection)String
java.util.LongSummaryStatistics.accept(int)void
java.util.LongSummaryStatistics.accept(long)void
java.util.LongSummaryStatistics.combine(java.util.LongSummaryStatistics)void
java.util.LongSummaryStatistics.getCount)long
java.util.LongSummaryStatistics.getSum)long
java.util.LongSummaryStatistics.getMin)long
java.util.LongSummaryStatistics.getMax)long
java.util.LongSummaryStatistics.getAverage)double
java.util.LongSummaryStatistics.toString)String
java.util.Map.comparingByKey)java.util.Comparator
java.util.Map.comparingByValue)java.util.Comparator
java.util.Map.comparingByKey(java.util.Comparator)java.util.Comparator
java.util.Map.comparingByValue(java.util.Comparator)java.util.Comparator
java.util.Map.getOrDefault(Object,Object)Object
java.util.Map.forEach(java.util.function.BiConsumer)void
java.util.Map.replaceAll(java.util.function.BiFunction)void
java.util.Map.putIfAbsent(Object,Object)Object
java.util.Map.remove(Object,Object)boolean
java.util.Map.replace(Object,Object,Object)boolean
java.util.Map.replace(Object,Object)Object
java.util.Map.computeIfAbsent(Object,java.util.function.Function)Object
java.util.Map.computeIfPresent(Object,java.util.function.BiFunction)Object
java.util.Map.compute(Object,java.util.function.BiFunction)Object
java.util.Map.merge(Object,Object,java.util.function.BiFunction)Object
java.util.MissingFormatArgumentException.getFormatSpecifier)String
java.util.MissingFormatArgumentException.getMessage)String
java.util.MissingFormatWidthException.getFormatSpecifier)String
java.util.MissingFormatWidthException.getMessage)String
java.util.MissingResourceException.getClassName)String
java.util.MissingResourceException.getKey)String
java.util.Objects.equals(Object,Object)boolean
java.util.Objects.deepEquals(Object,Object)boolean
java.util.Objects.hashCode(Object)int
java.util.Objects.toString(Object)String
java.util.Objects.toString(Object,String)String
java.util.Objects.compare(Object,Object,java.util.Comparator)int
java.util.Objects.requireNonNull(Object)Object
java.util.Objects.requireNonNull(Object,String)Object
java.util.Objects.isNull(Object)boolean
java.util.Objects.nonNull(Object)boolean
java.util.Objects.requireNonNull(Object,java.util.function.Supplier)Object
java.util.Observable.notifyObservers)void
java.util.Observable.notifyObservers(Object)void
java.util.Optional.empty)java.util.Optional
java.util.Optional.of(Object)java.util.Optional
java.util.Optional.ofNullable(Object)java.util.Optional
java.util.Optional.get)Object
java.util.Optional.isPresent)boolean
java.util.Optional.ifPresent(java.util.function.Consumer)void
java.util.Optional.filter(java.util.function.Predicate)java.util.Optional
java.util.Optional.map(java.util.function.Function)java.util.Optional
java.util.Optional.flatMap(java.util.function.Function)java.util.Optional
java.util.Optional.orElse(Object)Object
java.util.Optional.orElseGet(java.util.function.Supplier)Object
java.util.Optional.orElseThrow(java.util.function.Supplier)Object
java.util.Optional.equals(Object)boolean
java.util.Optional.hashCode)int
java.util.Optional.toString)String
java.util.OptionalDouble.empty)java.util.OptionalDouble
java.util.OptionalDouble.of(double)java.util.OptionalDouble
java.util.OptionalDouble.getAsDouble)double
java.util.OptionalDouble.isPresent)boolean
java.util.OptionalDouble.ifPresent(java.util.function.DoubleConsumer)void
java.util.OptionalDouble.orElse(double)double
java.util.OptionalDouble.orElseGet(java.util.function.DoubleSupplier)double
java.util.OptionalDouble.orElseThrow(java.util.function.Supplier)double
java.util.OptionalDouble.equals(Object)boolean
java.util.OptionalDouble.hashCode)int
java.util.OptionalDouble.toString)String
java.util.OptionalInt.empty)java.util.OptionalInt
java.util.OptionalInt.of(int)java.util.OptionalInt
java.util.OptionalInt.getAsInt)int
java.util.OptionalInt.isPresent)boolean
java.util.OptionalInt.ifPresent(java.util.function.IntConsumer)void
java.util.OptionalInt.orElse(int)int
java.util.OptionalInt.orElseGet(java.util.function.IntSupplier)int
java.util.OptionalInt.orElseThrow(java.util.function.Supplier)int
java.util.OptionalInt.equals(Object)boolean
java.util.OptionalInt.hashCode)int
java.util.OptionalInt.toString)String
java.util.OptionalLong.empty)java.util.OptionalLong
java.util.OptionalLong.of(long)java.util.OptionalLong
java.util.OptionalLong.getAsLong)long
java.util.OptionalLong.isPresent)boolean
java.util.OptionalLong.ifPresent(java.util.function.LongConsumer)void
java.util.OptionalLong.orElse(long)long
java.util.OptionalLong.orElseGet(java.util.function.LongSupplier)long
java.util.OptionalLong.orElseThrow(java.util.function.Supplier)long
java.util.OptionalLong.equals(Object)boolean
java.util.OptionalLong.hashCode)int
java.util.OptionalLong.toString)String
java.util.PrimitiveIterator.forEachRemaining(java.util.function.LongConsumer)void
java.util.PrimitiveIterator.next)Long
java.util.PrimitiveIterator.forEachRemaining(java.util.function.Consumer)void
java.util.PrimitiveIterator.forEachRemaining(java.util.function.IntConsumer)void
java.util.PrimitiveIterator.next)Integer
java.util.PrimitiveIterator.forEachRemaining(java.util.function.Consumer)void
java.util.PrimitiveIterator.forEachRemaining(java.util.function.DoubleConsumer)void
java.util.PrimitiveIterator.next)Double
java.util.PrimitiveIterator.forEachRemaining(java.util.function.Consumer)void
java.util.PriorityQueue.add(Object)boolean
java.util.PriorityQueue.offer(Object)boolean
java.util.PriorityQueue.peek)Object
java.util.PriorityQueue.remove(Object)boolean
java.util.PriorityQueue.contains(Object)boolean
java.util.PriorityQueue.iterator)java.util.Iterator
java.util.PriorityQueue.size)int
java.util.PriorityQueue.clear)void
java.util.PriorityQueue.poll)Object
java.util.PriorityQueue.comparator)java.util.Comparator
java.util.PriorityQueue.spliterator)java.util.Spliterator
java.util.Properties.save(OutputStream,String)void
java.util.Properties.store(Writer,String)void
java.util.Properties.store(OutputStream,String)void
java.util.Properties.storeToXML(OutputStream,String)void
java.util.Properties.storeToXML(OutputStream,String,String)void
java.util.Properties.getProperty(String)String
java.util.Properties.getProperty(String,String)String
java.util.Properties.propertyNames)java.util.Enumeration
java.util.Properties.stringPropertyNames)java.util.Set
java.util.Properties.list(PrintStream)void
java.util.Properties.list(PrintWriter)void
java.util.PropertyResourceBundle.handleGetObject(String)Object
java.util.PropertyResourceBundle.getKeys)java.util.Enumeration
java.util.PropertyResourceBundle.handleKeySet)java.util.Set
java.util.Random.next(int)int
java.util.Random.nextBytes(byte)void
java.util.Random.nextInt)int
java.util.Random.nextInt(int)int
java.util.Random.nextLong)long
java.util.Random.nextBoolean)boolean
java.util.Random.nextFloat)float
java.util.Random.nextDouble)double
java.util.Random.ints(long)java.util.stream.IntStream
java.util.Random.ints)java.util.stream.IntStream
java.util.Random.ints(long,int,int)java.util.stream.IntStream
java.util.Random.ints(int,int)java.util.stream.IntStream
java.util.Random.longs(long)java.util.stream.LongStream
java.util.Random.longs)java.util.stream.LongStream
java.util.Random.longs(long,long,long)java.util.stream.LongStream
java.util.Random.longs(long,long)java.util.stream.LongStream
java.util.Random.doubles(long)java.util.stream.DoubleStream
java.util.Random.doubles)java.util.stream.DoubleStream
java.util.Random.doubles(long,double,double)java.util.stream.DoubleStream
java.util.Random.doubles(double,double)java.util.stream.DoubleStream
java.util.ResourceBundle.getControl(java.util.List)java.util.ResourceBundle.Control
java.util.ResourceBundle.getNoFallbackControl(java.util.List)java.util.ResourceBundle.Control
java.util.ResourceBundle.getFormats(String)java.util.List
java.util.ResourceBundle.getCandidateLocales(String,java.util.Locale)java.util.List
java.util.ResourceBundle.getFallbackLocale(String,java.util.Locale)java.util.Locale
java.util.ResourceBundle.newBundle(String,java.util.Locale,String,ClassLoader,boolean)java.util.ResourceBundle
java.util.ResourceBundle.getTimeToLive(String,java.util.Locale)long
java.util.ResourceBundle.needsReload(String,java.util.Locale,String,ClassLoader,java.util.ResourceBundle,long)boolean
java.util.ResourceBundle.toBundleName(String,java.util.Locale)String
java.util.ResourceBundle.toResourceName(String,String)String
java.util.ResourceBundle.getBaseBundleName)String
java.util.ResourceBundle.getString(String)String
java.util.ResourceBundle.getObject(String)Object
java.util.ResourceBundle.getLocale)java.util.Locale
java.util.ResourceBundle.setParent(java.util.ResourceBundle)void
java.util.ResourceBundle.getBundle(String)java.util.ResourceBundle
java.util.ResourceBundle.getBundle(String,java.util.ResourceBundle.Control)java.util.ResourceBundle
java.util.ResourceBundle.getBundle(String,java.util.Locale)java.util.ResourceBundle
java.util.ResourceBundle.getBundle(String,java.util.Locale,java.util.ResourceBundle.Control)java.util.ResourceBundle
java.util.ResourceBundle.getBundle(String,java.util.Locale,ClassLoader)java.util.ResourceBundle
java.util.ResourceBundle.getBundle(String,java.util.Locale,ClassLoader,java.util.ResourceBundle.Control)java.util.ResourceBundle
java.util.ResourceBundle.clearCache)void
java.util.ResourceBundle.clearCache(ClassLoader)void
java.util.ResourceBundle.containsKey(String)boolean
java.util.ResourceBundle.keySet)java.util.Set
java.util.ResourceBundle.handleKeySet)java.util.Set
java.util.Scanner.close)void
java.util.Scanner.ioException)IOException
java.util.Scanner.delimiter)java.util.regex.Pattern
java.util.Scanner.useDelimiter(java.util.regex.Pattern)java.util.Scanner
java.util.Scanner.useDelimiter(String)java.util.Scanner
java.util.Scanner.locale)java.util.Locale
java.util.Scanner.useLocale(java.util.Locale)java.util.Scanner
java.util.Scanner.radix)int
java.util.Scanner.useRadix(int)java.util.Scanner
java.util.Scanner.match)java.util.regex.MatchResult
java.util.Scanner.toString)String
java.util.Scanner.hasNext)boolean
java.util.Scanner.next)String
java.util.Scanner.remove)void
java.util.Scanner.hasNext(String)boolean
java.util.Scanner.next(String)String
java.util.Scanner.hasNext(java.util.regex.Pattern)boolean
java.util.Scanner.next(java.util.regex.Pattern)String
java.util.Scanner.hasNextLine)boolean
java.util.Scanner.nextLine)String
java.util.Scanner.findInLine(String)String
java.util.Scanner.findInLine(java.util.regex.Pattern)String
java.util.Scanner.findWithinHorizon(String,int)String
java.util.Scanner.findWithinHorizon(java.util.regex.Pattern,int)String
java.util.Scanner.skip(java.util.regex.Pattern)java.util.Scanner
java.util.Scanner.skip(String)java.util.Scanner
java.util.Scanner.hasNextBoolean)boolean
java.util.Scanner.nextBoolean)boolean
java.util.Scanner.hasNextByte)boolean
java.util.Scanner.hasNextByte(int)boolean
java.util.Scanner.nextByte)byte
java.util.Scanner.nextByte(int)byte
java.util.Scanner.hasNextShort)boolean
java.util.Scanner.hasNextShort(int)boolean
java.util.Scanner.nextShort)short
java.util.Scanner.nextShort(int)short
java.util.Scanner.hasNextInt)boolean
java.util.Scanner.hasNextInt(int)boolean
java.util.Scanner.nextInt)int
java.util.Scanner.nextInt(int)int
java.util.Scanner.hasNextLong)boolean
java.util.Scanner.hasNextLong(int)boolean
java.util.Scanner.nextLong)long
java.util.Scanner.nextLong(int)long
java.util.Scanner.hasNextFloat)boolean
java.util.Scanner.nextFloat)float
java.util.Scanner.hasNextDouble)boolean
java.util.Scanner.nextDouble)double
java.util.Scanner.hasNextBigInteger)boolean
java.util.Scanner.hasNextBigInteger(int)boolean
java.util.Scanner.nextBigInteger)java.math.BigInteger
java.util.Scanner.nextBigInteger(int)java.math.BigInteger
java.util.Scanner.hasNextBigDecimal)boolean
java.util.Scanner.nextBigDecimal)java.math.BigDecimal
java.util.Scanner.reset)java.util.Scanner
java.util.ServiceLoader.reload)void
java.util.ServiceLoader.iterator)java.util.Iterator
java.util.ServiceLoader.load(Class,ClassLoader)java.util.ServiceLoader
java.util.ServiceLoader.load(Class)java.util.ServiceLoader
java.util.ServiceLoader.loadInstalled(Class)java.util.ServiceLoader
java.util.ServiceLoader.toString)String
java.util.Set.spliterator)java.util.Spliterator
java.util.SimpleTimeZone.setStartYear(int)void
java.util.SimpleTimeZone.setStartRule(int,int,int,int)void
java.util.SimpleTimeZone.setStartRule(int,int,int)void
java.util.SimpleTimeZone.setStartRule(int,int,int,int,boolean)void
java.util.SimpleTimeZone.setEndRule(int,int,int,int)void
java.util.SimpleTimeZone.setEndRule(int,int,int)void
java.util.SimpleTimeZone.setEndRule(int,int,int,int,boolean)void
java.util.SimpleTimeZone.getOffset(long)int
java.util.SimpleTimeZone.getOffset(int,int,int,int,int,int)int
java.util.SimpleTimeZone.getRawOffset)int
java.util.SimpleTimeZone.setRawOffset(int)void
java.util.SimpleTimeZone.setDSTSavings(int)void
java.util.SimpleTimeZone.getDSTSavings)int
java.util.SimpleTimeZone.useDaylightTime)boolean
java.util.SimpleTimeZone.observesDaylightTime)boolean
java.util.SimpleTimeZone.inDaylightTime(java.util.Date)boolean
java.util.SimpleTimeZone.clone)Object
java.util.SimpleTimeZone.equals(Object)boolean
java.util.SimpleTimeZone.hasSameRules(java.util.TimeZone)boolean
java.util.SimpleTimeZone.toString)String
java.util.SortedSet.spliterator)java.util.Spliterator
java.util.Spliterator.forEachRemaining(Object)void
java.util.Spliterator.forEachRemaining(java.util.function.LongConsumer)void
java.util.Spliterator.tryAdvance(java.util.function.Consumer)boolean
java.util.Spliterator.forEachRemaining(java.util.function.Consumer)void
java.util.Spliterator.forEachRemaining(java.util.function.IntConsumer)void
java.util.Spliterator.tryAdvance(java.util.function.Consumer)boolean
java.util.Spliterator.forEachRemaining(java.util.function.Consumer)void
java.util.Spliterator.forEachRemaining(java.util.function.DoubleConsumer)void
java.util.Spliterator.tryAdvance(java.util.function.Consumer)boolean
java.util.Spliterator.forEachRemaining(java.util.function.Consumer)void
java.util.Spliterator.forEachRemaining(java.util.function.Consumer)void
java.util.Spliterator.getExactSizeIfKnown)long
java.util.Spliterator.hasCharacteristics(int)boolean
java.util.Spliterator.getComparator)java.util.Comparator
java.util.Spliterators.trySplit)java.util.Spliterator
java.util.Spliterators.estimateSize)long
java.util.Spliterators.characteristics)int
java.util.Spliterators.estimateSize)long
java.util.Spliterators.characteristics)int
java.util.Spliterators.estimateSize)long
java.util.Spliterators.characteristics)int
java.util.Spliterators.estimateSize)long
java.util.Spliterators.characteristics)int
java.util.Spliterators.emptySpliterator)java.util.Spliterator
java.util.Spliterators.spliterator(Object,int)java.util.Spliterator
java.util.Spliterators.spliterator(Object,int,int,int)java.util.Spliterator
java.util.Spliterators.spliterator(java.util.Collection,int)java.util.Spliterator
java.util.Spliterators.spliterator(java.util.Iterator,long,int)java.util.Spliterator
java.util.Spliterators.spliteratorUnknownSize(java.util.Iterator,int)java.util.Spliterator
java.util.Spliterators.iterator(java.util.Spliterator)java.util.Iterator
java.util.SplittableRandom.split)java.util.SplittableRandom
java.util.SplittableRandom.nextInt)int
java.util.SplittableRandom.nextInt(int)int
java.util.SplittableRandom.nextInt(int,int)int
java.util.SplittableRandom.nextLong)long
java.util.SplittableRandom.nextLong(long)long
java.util.SplittableRandom.nextLong(long,long)long
java.util.SplittableRandom.nextDouble)double
java.util.SplittableRandom.nextDouble(double)double
java.util.SplittableRandom.nextDouble(double,double)double
java.util.SplittableRandom.nextBoolean)boolean
java.util.SplittableRandom.ints(long)java.util.stream.IntStream
java.util.SplittableRandom.ints)java.util.stream.IntStream
java.util.SplittableRandom.ints(long,int,int)java.util.stream.IntStream
java.util.SplittableRandom.ints(int,int)java.util.stream.IntStream
java.util.SplittableRandom.longs(long)java.util.stream.LongStream
java.util.SplittableRandom.longs)java.util.stream.LongStream
java.util.SplittableRandom.longs(long,long,long)java.util.stream.LongStream
java.util.SplittableRandom.longs(long,long)java.util.stream.LongStream
java.util.SplittableRandom.doubles(long)java.util.stream.DoubleStream
java.util.SplittableRandom.doubles)java.util.stream.DoubleStream
java.util.SplittableRandom.doubles(long,double,double)java.util.stream.DoubleStream
java.util.SplittableRandom.doubles(double,double)java.util.stream.DoubleStream
java.util.Stack.push(Object)Object
java.util.Stack.empty)boolean
java.util.StringJoiner.setEmptyValue(CharSequence)java.util.StringJoiner
java.util.StringJoiner.toString)String
java.util.StringJoiner.add(CharSequence)java.util.StringJoiner
java.util.StringJoiner.merge(java.util.StringJoiner)java.util.StringJoiner
java.util.StringJoiner.length)int
java.util.StringTokenizer.hasMoreTokens)boolean
java.util.StringTokenizer.nextToken)String
java.util.StringTokenizer.nextToken(String)String
java.util.StringTokenizer.hasMoreElements)boolean
java.util.StringTokenizer.nextElement)Object
java.util.StringTokenizer.countTokens)int
java.util.Timer.schedule(java.util.TimerTask,long)void
java.util.Timer.schedule(java.util.TimerTask,java.util.Date)void
java.util.Timer.schedule(java.util.TimerTask,long,long)void
java.util.Timer.schedule(java.util.TimerTask,java.util.Date,long)void
java.util.Timer.scheduleAtFixedRate(java.util.TimerTask,long,long)void
java.util.Timer.scheduleAtFixedRate(java.util.TimerTask,java.util.Date,long)void
java.util.Timer.cancel)void
java.util.Timer.purge)int
java.util.TimerTask.cancel)boolean
java.util.TimerTask.scheduledExecutionTime)long
java.util.TimeZone.getOffset(long)int
java.util.TimeZone.getID)String
java.util.TimeZone.setID(String)void
java.util.TimeZone.getDisplayName)String
java.util.TimeZone.getDisplayName(java.util.Locale)String
java.util.TimeZone.getDisplayName(boolean,int)String
java.util.TimeZone.getDisplayName(boolean,int,java.util.Locale)String
java.util.TimeZone.getDSTSavings)int
java.util.TimeZone.observesDaylightTime)boolean
java.util.TimeZone.getTimeZone(java.time.ZoneId)java.util.TimeZone
java.util.TimeZone.toZoneId)java.time.ZoneId
java.util.TimeZone.getDefault)java.util.TimeZone
java.util.TimeZone.hasSameRules(java.util.TimeZone)boolean
java.util.TimeZone.clone)Object
java.util.TreeMap.size)int
java.util.TreeMap.containsKey(Object)boolean
java.util.TreeMap.containsValue(Object)boolean
java.util.TreeMap.get(Object)Object
java.util.TreeMap.comparator)java.util.Comparator
java.util.TreeMap.firstKey)Object
java.util.TreeMap.lastKey)Object
java.util.TreeMap.putAll(java.util.Map)void
java.util.TreeMap.put(Object,Object)Object
java.util.TreeMap.remove(Object)Object
java.util.TreeMap.clear)void
java.util.TreeMap.clone)Object
java.util.TreeMap.lowerKey(Object)Object
java.util.TreeMap.floorKey(Object)Object
java.util.TreeMap.ceilingKey(Object)Object
java.util.TreeMap.higherKey(Object)Object
java.util.TreeMap.keySet)java.util.Set
java.util.TreeMap.navigableKeySet)java.util.NavigableSet
java.util.TreeMap.descendingKeySet)java.util.NavigableSet
java.util.TreeMap.values)java.util.Collection
java.util.TreeMap.entrySet)java.util.Set
java.util.TreeMap.descendingMap)java.util.NavigableMap
java.util.TreeMap.subMap(Object,boolean,Object,boolean)java.util.NavigableMap
java.util.TreeMap.headMap(Object,boolean)java.util.NavigableMap
java.util.TreeMap.tailMap(Object,boolean)java.util.NavigableMap
java.util.TreeMap.subMap(Object,Object)java.util.SortedMap
java.util.TreeMap.headMap(Object)java.util.SortedMap
java.util.TreeMap.tailMap(Object)java.util.SortedMap
java.util.TreeMap.replace(Object,Object,Object)boolean
java.util.TreeMap.replace(Object,Object)Object
java.util.TreeMap.forEach(java.util.function.BiConsumer)void
java.util.TreeMap.replaceAll(java.util.function.BiFunction)void
java.util.TreeSet.iterator)java.util.Iterator
java.util.TreeSet.descendingIterator)java.util.Iterator
java.util.TreeSet.descendingSet)java.util.NavigableSet
java.util.TreeSet.size)int
java.util.TreeSet.isEmpty)boolean
java.util.TreeSet.contains(Object)boolean
java.util.TreeSet.add(Object)boolean
java.util.TreeSet.remove(Object)boolean
java.util.TreeSet.clear)void
java.util.TreeSet.addAll(java.util.Collection)boolean
java.util.TreeSet.subSet(Object,boolean,Object,boolean)java.util.NavigableSet
java.util.TreeSet.headSet(Object,boolean)java.util.NavigableSet
java.util.TreeSet.tailSet(Object,boolean)java.util.NavigableSet
java.util.TreeSet.subSet(Object,Object)java.util.SortedSet
java.util.TreeSet.headSet(Object)java.util.SortedSet
java.util.TreeSet.tailSet(Object)java.util.SortedSet
java.util.TreeSet.comparator)java.util.Comparator
java.util.TreeSet.first)Object
java.util.TreeSet.last)Object
java.util.TreeSet.lower(Object)Object
java.util.TreeSet.floor(Object)Object
java.util.TreeSet.ceiling(Object)Object
java.util.TreeSet.higher(Object)Object
java.util.TreeSet.pollFirst)Object
java.util.TreeSet.pollLast)Object
java.util.TreeSet.clone)Object
java.util.TreeSet.spliterator)java.util.Spliterator
java.util.UnknownFormatConversionException.getConversion)String
java.util.UnknownFormatConversionException.getMessage)String
java.util.UnknownFormatFlagsException.getFlags)String
java.util.UnknownFormatFlagsException.getMessage)String
java.util.UUID.randomUUID)java.util.UUID
java.util.UUID.nameUUIDFromBytes(byte)java.util.UUID
java.util.UUID.fromString(String)java.util.UUID
java.util.UUID.getLeastSignificantBits)long
java.util.UUID.getMostSignificantBits)long
java.util.UUID.version)int
java.util.UUID.variant)int
java.util.UUID.timestamp)long
java.util.UUID.clockSequence)int
java.util.UUID.node)long
java.util.UUID.toString)String
java.util.UUID.hashCode)int
java.util.UUID.equals(Object)boolean
java.util.UUID.compareTo(java.util.UUID)int
java.util.Vector.elements)java.util.Enumeration
java.util.Vector.contains(Object)boolean
java.util.Vector.indexOf(Object)int
java.util.Vector.remove(Object)boolean
java.util.Vector.add(int,Object)void
java.util.Vector.clear)void
java.util.Vector.spliterator)java.util.Spliterator
java.util.WeakHashMap.size)int
java.util.WeakHashMap.isEmpty)boolean
java.util.WeakHashMap.get(Object)Object
java.util.WeakHashMap.containsKey(Object)boolean
java.util.WeakHashMap.put(Object,Object)Object
java.util.WeakHashMap.putAll(java.util.Map)void
java.util.WeakHashMap.remove(Object)Object
java.util.WeakHashMap.clear)void
java.util.WeakHashMap.containsValue(Object)boolean
java.util.WeakHashMap.keySet)java.util.Set
java.util.WeakHashMap.values)java.util.Collection
java.util.WeakHashMap.entrySet)java.util.Set
java.util.WeakHashMap.forEach(java.util.function.BiConsumer)void
java.util.WeakHashMap.replaceAll(java.util.function.BiFunction)void
java.util.concurrent.AbstractExecutorService.newTaskFor(Runnable,Object)java.util.concurrent.RunnableFuture
java.util.concurrent.AbstractExecutorService.newTaskFor(java.util.concurrent.Callable)java.util.concurrent.RunnableFuture
java.util.concurrent.AbstractExecutorService.submit(Runnable)java.util.concurrent.Future
java.util.concurrent.AbstractExecutorService.submit(Runnable,Object)java.util.concurrent.Future
java.util.concurrent.AbstractExecutorService.submit(java.util.concurrent.Callable)java.util.concurrent.Future
java.util.concurrent.AbstractExecutorService.invokeAny(java.util.Collection)Object
java.util.concurrent.AbstractExecutorService.invokeAny(java.util.Collection,long,java.util.concurrent.TimeUnit)Object
java.util.concurrent.AbstractExecutorService.invokeAll(java.util.Collection)java.util.List
java.util.concurrent.AbstractExecutorService.invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit)java.util.List
java.util.concurrent.ArrayBlockingQueue.add(Object)boolean
java.util.concurrent.ArrayBlockingQueue.offer(Object)boolean
java.util.concurrent.ArrayBlockingQueue.put(Object)void
java.util.concurrent.ArrayBlockingQueue.offer(Object,long,java.util.concurrent.TimeUnit)boolean
java.util.concurrent.ArrayBlockingQueue.poll)Object
java.util.concurrent.ArrayBlockingQueue.take)Object
java.util.concurrent.ArrayBlockingQueue.poll(long,java.util.concurrent.TimeUnit)Object
java.util.concurrent.ArrayBlockingQueue.peek)Object
java.util.concurrent.ArrayBlockingQueue.size)int
java.util.concurrent.ArrayBlockingQueue.remainingCapacity)int
java.util.concurrent.ArrayBlockingQueue.remove(Object)boolean
java.util.concurrent.ArrayBlockingQueue.contains(Object)boolean
java.util.concurrent.ArrayBlockingQueue.toString)String
java.util.concurrent.ArrayBlockingQueue.clear)void
java.util.concurrent.ArrayBlockingQueue.drainTo(Collection)int
java.util.concurrent.ArrayBlockingQueue.drainTo(Collection,int)int
java.util.concurrent.ArrayBlockingQueue.iterator)Iterator
java.util.concurrent.ArrayBlockingQueue.spliterator)Spliterator
java.util.concurrent.BlockingDeque.putFirst(Object)void
java.util.concurrent.BlockingDeque.putLast(Object)void
java.util.concurrent.BlockingDeque.offerFirst(Object,long,java.util.concurrent.TimeUnit)boolean
java.util.concurrent.BlockingDeque.offerLast(Object,long,java.util.concurrent.TimeUnit)boolean
java.util.concurrent.BlockingDeque.takeFirst)Object
java.util.concurrent.BlockingDeque.takeLast)Object
java.util.concurrent.BlockingDeque.pollFirst(long,java.util.concurrent.TimeUnit)Object
java.util.concurrent.BlockingDeque.pollLast(long,java.util.concurrent.TimeUnit)Object
java.util.concurrent.BlockingDeque.put(Object)void
java.util.concurrent.BlockingDeque.offer(Object,long,java.util.concurrent.TimeUnit)boolean
java.util.concurrent.BlockingDeque.take)Object
java.util.concurrent.BlockingDeque.poll(long,java.util.concurrent.TimeUnit)Object
java.util.concurrent.BlockingQueue.put(Object)void
java.util.concurrent.BlockingQueue.offer(Object,long,java.util.concurrent.TimeUnit)boolean
java.util.concurrent.BlockingQueue.take)Object
java.util.concurrent.BlockingQueue.poll(long,java.util.concurrent.TimeUnit)Object
java.util.concurrent.Callable.call)Object
java.util.concurrent.CompletableFuture.supplyAsync(Supplier)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.supplyAsync(Supplier,java.util.concurrent.Executor)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.runAsync(Runnable)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.runAsync(Runnable,java.util.concurrent.Executor)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.completedFuture(Object)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.isDone)boolean
java.util.concurrent.CompletableFuture.get)Object
java.util.concurrent.CompletableFuture.get(long,java.util.concurrent.TimeUnit)Object
java.util.concurrent.CompletableFuture.join)Object
java.util.concurrent.CompletableFuture.getNow(Object)Object
java.util.concurrent.CompletableFuture.complete(Object)boolean
java.util.concurrent.CompletableFuture.completeExceptionally(Throwable)boolean
java.util.concurrent.CompletableFuture.thenApply(Function)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.thenApplyAsync(Function)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.thenApplyAsync(Function,java.util.concurrent.Executor)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.thenAccept(Consumer)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.thenAcceptAsync(Consumer)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.thenAcceptAsync(Consumer,java.util.concurrent.Executor)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.thenRun(Runnable)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.thenRunAsync(Runnable)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.thenRunAsync(Runnable,java.util.concurrent.Executor)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.thenCombine(java.util.concurrent.CompletionStage,BiFunction)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.thenCombineAsync(java.util.concurrent.CompletionStage,BiFunction)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.thenCombineAsync(java.util.concurrent.CompletionStage,BiFunction,java.util.concurrent.Executor)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.thenAcceptBoth(java.util.concurrent.CompletionStage,BiConsumer)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.thenAcceptBothAsync(java.util.concurrent.CompletionStage,BiConsumer)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.thenAcceptBothAsync(java.util.concurrent.CompletionStage,BiConsumer,java.util.concurrent.Executor)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.runAfterBoth(java.util.concurrent.CompletionStage,Runnable)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.runAfterBothAsync(java.util.concurrent.CompletionStage,Runnable)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.runAfterBothAsync(java.util.concurrent.CompletionStage,Runnable,java.util.concurrent.Executor)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.applyToEither(java.util.concurrent.CompletionStage,Function)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.applyToEitherAsync(java.util.concurrent.CompletionStage,Function)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.applyToEitherAsync(java.util.concurrent.CompletionStage,Function,java.util.concurrent.Executor)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.acceptEither(java.util.concurrent.CompletionStage,Consumer)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.acceptEitherAsync(java.util.concurrent.CompletionStage,Consumer)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.acceptEitherAsync(java.util.concurrent.CompletionStage,Consumer,java.util.concurrent.Executor)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.runAfterEither(java.util.concurrent.CompletionStage,Runnable)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.runAfterEitherAsync(java.util.concurrent.CompletionStage,Runnable)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.runAfterEitherAsync(java.util.concurrent.CompletionStage,Runnable,java.util.concurrent.Executor)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.thenCompose(Function)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.thenComposeAsync(Function)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.thenComposeAsync(Function,java.util.concurrent.Executor)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.whenComplete(BiConsumer)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.whenCompleteAsync(BiConsumer)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.whenCompleteAsync(BiConsumer,java.util.concurrent.Executor)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.handle(BiFunction)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.handleAsync(BiFunction)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.handleAsync(BiFunction,java.util.concurrent.Executor)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.toCompletableFuture)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.exceptionally(Function)java.util.concurrent.CompletableFuture
java.util.concurrent.CompletableFuture.cancel(boolean)boolean
java.util.concurrent.CompletableFuture.isCancelled)boolean
java.util.concurrent.CompletableFuture.isCompletedExceptionally)boolean
java.util.concurrent.CompletableFuture.obtrudeValue(Object)void
java.util.concurrent.CompletableFuture.obtrudeException(Throwable)void
java.util.concurrent.CompletableFuture.getNumberOfDependents)int
java.util.concurrent.CompletableFuture.toString)String
java.util.concurrent.CompletionService.take)java.util.concurrent.Future
java.util.concurrent.CompletionService.poll(long,java.util.concurrent.TimeUnit)java.util.concurrent.Future
java.util.concurrent.ConcurrentHashMap.getMappedValue)Object
java.util.concurrent.ConcurrentHashMap.contains(Object)boolean
java.util.concurrent.ConcurrentHashMap.remove(Object)boolean
java.util.concurrent.ConcurrentHashMap.iterator)Iterator
java.util.concurrent.ConcurrentHashMap.add(Object)boolean
java.util.concurrent.ConcurrentHashMap.addAll(Collection)boolean
java.util.concurrent.ConcurrentHashMap.hashCode)int
java.util.concurrent.ConcurrentHashMap.equals(Object)boolean
java.util.concurrent.ConcurrentHashMap.spliterator)Spliterator
java.util.concurrent.ConcurrentHashMap.forEach(Consumer)void
java.util.concurrent.ConcurrentHashMap.removeAll(Collection)boolean
java.util.concurrent.ConcurrentHashMap.size)int
java.util.concurrent.ConcurrentHashMap.containsAll(Collection)boolean
java.util.concurrent.ConcurrentHashMap.clear)void
java.util.concurrent.ConcurrentHashMap.isEmpty)boolean
java.util.concurrent.ConcurrentHashMap.toString)String
java.util.concurrent.ConcurrentHashMap.getMap)java.util.concurrent.ConcurrentHashMap
java.util.concurrent.ConcurrentHashMap.retainAll(Collection)boolean
java.util.concurrent.ConcurrentHashMap.size)int
java.util.concurrent.ConcurrentHashMap.isEmpty)boolean
java.util.concurrent.ConcurrentHashMap.get(Object)Object
java.util.concurrent.ConcurrentHashMap.containsKey(Object)boolean
java.util.concurrent.ConcurrentHashMap.containsValue(Object)boolean
java.util.concurrent.ConcurrentHashMap.put(Object,Object)Object
java.util.concurrent.ConcurrentHashMap.putAll(Map)void
java.util.concurrent.ConcurrentHashMap.remove(Object)Object
java.util.concurrent.ConcurrentHashMap.clear)void
java.util.concurrent.ConcurrentHashMap.keySet)Set
java.util.concurrent.ConcurrentHashMap.values)Collection
java.util.concurrent.ConcurrentHashMap.entrySet)Set
java.util.concurrent.ConcurrentHashMap.hashCode)int
java.util.concurrent.ConcurrentHashMap.toString)String
java.util.concurrent.ConcurrentHashMap.equals(Object)boolean
java.util.concurrent.ConcurrentHashMap.putIfAbsent(Object,Object)Object
java.util.concurrent.ConcurrentHashMap.remove(Object,Object)boolean
java.util.concurrent.ConcurrentHashMap.replace(Object,Object,Object)boolean
java.util.concurrent.ConcurrentHashMap.replace(Object,Object)Object
java.util.concurrent.ConcurrentHashMap.getOrDefault(Object,Object)Object
java.util.concurrent.ConcurrentHashMap.forEach(BiConsumer)void
java.util.concurrent.ConcurrentHashMap.replaceAll(BiFunction)void
java.util.concurrent.ConcurrentHashMap.computeIfAbsent(Object,Function)Object
java.util.concurrent.ConcurrentHashMap.computeIfPresent(Object,BiFunction)Object
java.util.concurrent.ConcurrentHashMap.compute(Object,BiFunction)Object
java.util.concurrent.ConcurrentHashMap.merge(Object,Object,BiFunction)Object
java.util.concurrent.ConcurrentHashMap.contains(Object)boolean
java.util.concurrent.ConcurrentHashMap.keys)Enumeration
java.util.concurrent.ConcurrentHashMap.elements)Enumeration
java.util.concurrent.ConcurrentHashMap.mappingCount)long
java.util.concurrent.ConcurrentHashMap.newKeySet)java.util.concurrent.ConcurrentHashMap.KeySetView
java.util.concurrent.ConcurrentHashMap.newKeySet(int)java.util.concurrent.ConcurrentHashMap.KeySetView
java.util.concurrent.ConcurrentHashMap.keySet(Object)java.util.concurrent.ConcurrentHashMap.KeySetView
java.util.concurrent.ConcurrentHashMap.forEach(long,BiConsumer)void
java.util.concurrent.ConcurrentHashMap.forEach(long,BiFunction,Consumer)void
java.util.concurrent.ConcurrentHashMap.search(long,BiFunction)Object
java.util.concurrent.ConcurrentHashMap.reduce(long,BiFunction,BiFunction)Object
java.util.concurrent.ConcurrentHashMap.reduceToDouble(long,ToDoubleBiFunction,double,DoubleBinaryOperator)double
java.util.concurrent.ConcurrentHashMap.reduceToLong(long,ToLongBiFunction,long,LongBinaryOperator)long
java.util.concurrent.ConcurrentHashMap.reduceToInt(long,ToIntBiFunction,int,IntBinaryOperator)int
java.util.concurrent.ConcurrentHashMap.forEachKey(long,Consumer)void
java.util.concurrent.ConcurrentHashMap.forEachKey(long,Function,Consumer)void
java.util.concurrent.ConcurrentHashMap.searchKeys(long,Function)Object
java.util.concurrent.ConcurrentHashMap.reduceKeys(long,BiFunction)Object
java.util.concurrent.ConcurrentHashMap.reduceKeys(long,Function,BiFunction)Object
java.util.concurrent.ConcurrentHashMap.reduceKeysToDouble(long,ToDoubleFunction,double,DoubleBinaryOperator)double
java.util.concurrent.ConcurrentHashMap.reduceKeysToLong(long,ToLongFunction,long,LongBinaryOperator)long
java.util.concurrent.ConcurrentHashMap.reduceKeysToInt(long,ToIntFunction,int,IntBinaryOperator)int
java.util.concurrent.ConcurrentHashMap.forEachValue(long,Consumer)void
java.util.concurrent.ConcurrentHashMap.forEachValue(long,Function,Consumer)void
java.util.concurrent.ConcurrentHashMap.searchValues(long,Function)Object
java.util.concurrent.ConcurrentHashMap.reduceValues(long,BiFunction)Object
java.util.concurrent.ConcurrentHashMap.reduceValues(long,Function,BiFunction)Object
java.util.concurrent.ConcurrentHashMap.reduceValuesToDouble(long,ToDoubleFunction,double,DoubleBinaryOperator)double
java.util.concurrent.ConcurrentHashMap.reduceValuesToLong(long,ToLongFunction,long,LongBinaryOperator)long
java.util.concurrent.ConcurrentHashMap.reduceValuesToInt(long,ToIntFunction,int,IntBinaryOperator)int
java.util.concurrent.ConcurrentHashMap.forEachEntry(long,Consumer)void
java.util.concurrent.ConcurrentHashMap.forEachEntry(long,Function,Consumer)void
java.util.concurrent.ConcurrentHashMap.searchEntries(long,Function)Object
java.util.concurrent.ConcurrentHashMap.reduceEntries(long,Function,BiFunction)Object
java.util.concurrent.ConcurrentHashMap.reduceEntriesToDouble(long,ToDoubleFunction,double,DoubleBinaryOperator)double
java.util.concurrent.ConcurrentHashMap.reduceEntriesToLong(long,ToLongFunction,long,LongBinaryOperator)long
java.util.concurrent.ConcurrentHashMap.reduceEntriesToInt(long,ToIntFunction,int,IntBinaryOperator)int
java.util.concurrent.ConcurrentLinkedDeque.addFirst(Object)void
java.util.concurrent.ConcurrentLinkedDeque.addLast(Object)void
java.util.concurrent.ConcurrentLinkedDeque.offerFirst(Object)boolean
java.util.concurrent.ConcurrentLinkedDeque.offerLast(Object)boolean
java.util.concurrent.ConcurrentLinkedDeque.peekFirst)Object
java.util.concurrent.ConcurrentLinkedDeque.peekLast)Object
java.util.concurrent.ConcurrentLinkedDeque.getFirst)Object
java.util.concurrent.ConcurrentLinkedDeque.getLast)Object
java.util.concurrent.ConcurrentLinkedDeque.pollFirst)Object
java.util.concurrent.ConcurrentLinkedDeque.pollLast)Object
java.util.concurrent.ConcurrentLinkedDeque.removeFirst)Object
java.util.concurrent.ConcurrentLinkedDeque.removeLast)Object
java.util.concurrent.ConcurrentLinkedDeque.offer(Object)boolean
java.util.concurrent.ConcurrentLinkedDeque.add(Object)boolean
java.util.concurrent.ConcurrentLinkedDeque.poll)Object
java.util.concurrent.ConcurrentLinkedDeque.peek)Object
java.util.concurrent.ConcurrentLinkedDeque.remove)Object
java.util.concurrent.ConcurrentLinkedDeque.pop)Object
java.util.concurrent.ConcurrentLinkedDeque.element)Object
java.util.concurrent.ConcurrentLinkedDeque.push(Object)void
java.util.concurrent.ConcurrentLinkedDeque.removeFirstOccurrence(Object)boolean
java.util.concurrent.ConcurrentLinkedDeque.removeLastOccurrence(Object)boolean
java.util.concurrent.ConcurrentLinkedDeque.contains(Object)boolean
java.util.concurrent.ConcurrentLinkedDeque.isEmpty)boolean
java.util.concurrent.ConcurrentLinkedDeque.size)int
java.util.concurrent.ConcurrentLinkedDeque.remove(Object)boolean
java.util.concurrent.ConcurrentLinkedDeque.addAll(Collection)boolean
java.util.concurrent.ConcurrentLinkedDeque.clear)void
java.util.concurrent.ConcurrentLinkedDeque.toString)String
java.util.concurrent.ConcurrentLinkedDeque.iterator)Iterator
java.util.concurrent.ConcurrentLinkedDeque.descendingIterator)Iterator
java.util.concurrent.ConcurrentLinkedDeque.spliterator)Spliterator
java.util.concurrent.ConcurrentLinkedQueue.add(Object)boolean
java.util.concurrent.ConcurrentLinkedQueue.offer(Object)boolean
java.util.concurrent.ConcurrentLinkedQueue.poll)Object
java.util.concurrent.ConcurrentLinkedQueue.peek)Object
java.util.concurrent.ConcurrentLinkedQueue.isEmpty)boolean
java.util.concurrent.ConcurrentLinkedQueue.size)int
java.util.concurrent.ConcurrentLinkedQueue.contains(Object)boolean
java.util.concurrent.ConcurrentLinkedQueue.remove(Object)boolean
java.util.concurrent.ConcurrentLinkedQueue.addAll(Collection)boolean
java.util.concurrent.ConcurrentLinkedQueue.toString)String
java.util.concurrent.ConcurrentLinkedQueue.iterator)Iterator
java.util.concurrent.ConcurrentLinkedQueue.spliterator)Spliterator
java.util.concurrent.ConcurrentMap.getOrDefault(Object,Object)Object
java.util.concurrent.ConcurrentMap.forEach(BiConsumer)void
java.util.concurrent.ConcurrentMap.replaceAll(BiFunction)void
java.util.concurrent.ConcurrentMap.computeIfAbsent(Object,Function)Object
java.util.concurrent.ConcurrentMap.computeIfPresent(Object,BiFunction)Object
java.util.concurrent.ConcurrentMap.compute(Object,BiFunction)Object
java.util.concurrent.ConcurrentMap.merge(Object,Object,BiFunction)Object
java.util.concurrent.ConcurrentSkipListMap.clone)java.util.concurrent.ConcurrentSkipListMap
java.util.concurrent.ConcurrentSkipListMap.containsKey(Object)boolean
java.util.concurrent.ConcurrentSkipListMap.get(Object)Object
java.util.concurrent.ConcurrentSkipListMap.getOrDefault(Object,Object)Object
java.util.concurrent.ConcurrentSkipListMap.put(Object,Object)Object
java.util.concurrent.ConcurrentSkipListMap.remove(Object)Object
java.util.concurrent.ConcurrentSkipListMap.containsValue(Object)boolean
java.util.concurrent.ConcurrentSkipListMap.size)int
java.util.concurrent.ConcurrentSkipListMap.isEmpty)boolean
java.util.concurrent.ConcurrentSkipListMap.clear)void
java.util.concurrent.ConcurrentSkipListMap.computeIfAbsent(Object,Function)Object
java.util.concurrent.ConcurrentSkipListMap.computeIfPresent(Object,BiFunction)Object
java.util.concurrent.ConcurrentSkipListMap.compute(Object,BiFunction)Object
java.util.concurrent.ConcurrentSkipListMap.merge(Object,Object,BiFunction)Object
java.util.concurrent.ConcurrentSkipListMap.keySet)NavigableSet
java.util.concurrent.ConcurrentSkipListMap.navigableKeySet)NavigableSet
java.util.concurrent.ConcurrentSkipListMap.values)Collection
java.util.concurrent.ConcurrentSkipListMap.entrySet)Set
java.util.concurrent.ConcurrentSkipListMap.descendingMap)java.util.concurrent.ConcurrentNavigableMap
java.util.concurrent.ConcurrentSkipListMap.descendingKeySet)NavigableSet
java.util.concurrent.ConcurrentSkipListMap.equals(Object)boolean
java.util.concurrent.ConcurrentSkipListMap.putIfAbsent(Object,Object)Object
java.util.concurrent.ConcurrentSkipListMap.remove(Object,Object)boolean
java.util.concurrent.ConcurrentSkipListMap.replace(Object,Object,Object)boolean
java.util.concurrent.ConcurrentSkipListMap.replace(Object,Object)Object
java.util.concurrent.ConcurrentSkipListMap.comparator)Comparator
java.util.concurrent.ConcurrentSkipListMap.firstKey)Object
java.util.concurrent.ConcurrentSkipListMap.lastKey)Object
java.util.concurrent.ConcurrentSkipListMap.subMap(Object,boolean,Object,boolean)java.util.concurrent.ConcurrentNavigableMap
java.util.concurrent.ConcurrentSkipListMap.headMap(Object,boolean)java.util.concurrent.ConcurrentNavigableMap
java.util.concurrent.ConcurrentSkipListMap.tailMap(Object,boolean)java.util.concurrent.ConcurrentNavigableMap
java.util.concurrent.ConcurrentSkipListMap.subMap(Object,Object)java.util.concurrent.ConcurrentNavigableMap
java.util.concurrent.ConcurrentSkipListMap.headMap(Object)java.util.concurrent.ConcurrentNavigableMap
java.util.concurrent.ConcurrentSkipListMap.tailMap(Object)java.util.concurrent.ConcurrentNavigableMap
java.util.concurrent.ConcurrentSkipListMap.lowerKey(Object)Object
java.util.concurrent.ConcurrentSkipListMap.floorKey(Object)Object
java.util.concurrent.ConcurrentSkipListMap.ceilingKey(Object)Object
java.util.concurrent.ConcurrentSkipListMap.higherKey(Object)Object
java.util.concurrent.ConcurrentSkipListMap.forEach(BiConsumer)void
java.util.concurrent.ConcurrentSkipListMap.replaceAll(BiFunction)void
java.util.concurrent.ConcurrentSkipListSet.clone)java.util.concurrent.ConcurrentSkipListSet
java.util.concurrent.ConcurrentSkipListSet.size)int
java.util.concurrent.ConcurrentSkipListSet.isEmpty)boolean
java.util.concurrent.ConcurrentSkipListSet.contains(Object)boolean
java.util.concurrent.ConcurrentSkipListSet.add(Object)boolean
java.util.concurrent.ConcurrentSkipListSet.remove(Object)boolean
java.util.concurrent.ConcurrentSkipListSet.clear)void
java.util.concurrent.ConcurrentSkipListSet.iterator)Iterator
java.util.concurrent.ConcurrentSkipListSet.descendingIterator)Iterator
java.util.concurrent.ConcurrentSkipListSet.equals(Object)boolean
java.util.concurrent.ConcurrentSkipListSet.removeAll(Collection)boolean
java.util.concurrent.ConcurrentSkipListSet.lower(Object)Object
java.util.concurrent.ConcurrentSkipListSet.floor(Object)Object
java.util.concurrent.ConcurrentSkipListSet.ceiling(Object)Object
java.util.concurrent.ConcurrentSkipListSet.higher(Object)Object
java.util.concurrent.ConcurrentSkipListSet.pollFirst)Object
java.util.concurrent.ConcurrentSkipListSet.pollLast)Object
java.util.concurrent.ConcurrentSkipListSet.comparator)Comparator
java.util.concurrent.ConcurrentSkipListSet.first)Object
java.util.concurrent.ConcurrentSkipListSet.last)Object
java.util.concurrent.ConcurrentSkipListSet.subSet(Object,boolean,Object,boolean)NavigableSet
java.util.concurrent.ConcurrentSkipListSet.headSet(Object,boolean)NavigableSet
java.util.concurrent.ConcurrentSkipListSet.tailSet(Object,boolean)NavigableSet
java.util.concurrent.ConcurrentSkipListSet.subSet(Object,Object)NavigableSet
java.util.concurrent.ConcurrentSkipListSet.headSet(Object)NavigableSet
java.util.concurrent.ConcurrentSkipListSet.tailSet(Object)NavigableSet
java.util.concurrent.ConcurrentSkipListSet.descendingSet)NavigableSet
java.util.concurrent.ConcurrentSkipListSet.spliterator)Spliterator
java.util.concurrent.CopyOnWriteArrayList.size)int
java.util.concurrent.CopyOnWriteArrayList.isEmpty)boolean
java.util.concurrent.CopyOnWriteArrayList.contains(Object)boolean
java.util.concurrent.CopyOnWriteArrayList.indexOf(Object)int
java.util.concurrent.CopyOnWriteArrayList.indexOf(Object,int)int
java.util.concurrent.CopyOnWriteArrayList.lastIndexOf(Object)int
java.util.concurrent.CopyOnWriteArrayList.lastIndexOf(Object,int)int
java.util.concurrent.CopyOnWriteArrayList.clone)Object
java.util.concurrent.CopyOnWriteArrayList.get(int)Object
java.util.concurrent.CopyOnWriteArrayList.set(int,Object)Object
java.util.concurrent.CopyOnWriteArrayList.add(Object)boolean
java.util.concurrent.CopyOnWriteArrayList.add(int,Object)void
java.util.concurrent.CopyOnWriteArrayList.remove(int)Object
java.util.concurrent.CopyOnWriteArrayList.remove(Object)boolean
java.util.concurrent.CopyOnWriteArrayList.addIfAbsent(Object)boolean
java.util.concurrent.CopyOnWriteArrayList.containsAll(Collection)boolean
java.util.concurrent.CopyOnWriteArrayList.removeAll(Collection)boolean
java.util.concurrent.CopyOnWriteArrayList.retainAll(Collection)boolean
java.util.concurrent.CopyOnWriteArrayList.addAllAbsent(Collection)int
java.util.concurrent.CopyOnWriteArrayList.clear)void
java.util.concurrent.CopyOnWriteArrayList.addAll(Collection)boolean
java.util.concurrent.CopyOnWriteArrayList.addAll(int,Collection)boolean
java.util.concurrent.CopyOnWriteArrayList.forEach(Consumer)void
java.util.concurrent.CopyOnWriteArrayList.removeIf(Predicate)boolean
java.util.concurrent.CopyOnWriteArrayList.replaceAll(UnaryOperator)void
java.util.concurrent.CopyOnWriteArrayList.sort(Comparator)void
java.util.concurrent.CopyOnWriteArrayList.toString)String
java.util.concurrent.CopyOnWriteArrayList.equals(Object)boolean
java.util.concurrent.CopyOnWriteArrayList.hashCode)int
java.util.concurrent.CopyOnWriteArrayList.iterator)Iterator
java.util.concurrent.CopyOnWriteArrayList.listIterator)ListIterator
java.util.concurrent.CopyOnWriteArrayList.listIterator(int)ListIterator
java.util.concurrent.CopyOnWriteArrayList.spliterator)Spliterator
java.util.concurrent.CopyOnWriteArrayList.subList(int,int)List
java.util.concurrent.CopyOnWriteArraySet.size)int
java.util.concurrent.CopyOnWriteArraySet.isEmpty)boolean
java.util.concurrent.CopyOnWriteArraySet.contains(Object)boolean
java.util.concurrent.CopyOnWriteArraySet.clear)void
java.util.concurrent.CopyOnWriteArraySet.remove(Object)boolean
java.util.concurrent.CopyOnWriteArraySet.add(Object)boolean
java.util.concurrent.CopyOnWriteArraySet.containsAll(Collection)boolean
java.util.concurrent.CopyOnWriteArraySet.addAll(Collection)boolean
java.util.concurrent.CopyOnWriteArraySet.removeAll(Collection)boolean
java.util.concurrent.CopyOnWriteArraySet.retainAll(Collection)boolean
java.util.concurrent.CopyOnWriteArraySet.iterator)Iterator
java.util.concurrent.CopyOnWriteArraySet.equals(Object)boolean
java.util.concurrent.CopyOnWriteArraySet.removeIf(java.util.function.Predicate)boolean
java.util.concurrent.CopyOnWriteArraySet.forEach(java.util.function.Consumer)void
java.util.concurrent.CopyOnWriteArraySet.spliterator)Spliterator
java.util.concurrent.CountDownLatch.await)void
java.util.concurrent.CountDownLatch.await(long,java.util.concurrent.TimeUnit)boolean
java.util.concurrent.CountDownLatch.countDown)void
java.util.concurrent.CountDownLatch.getCount)long
java.util.concurrent.CountDownLatch.toString)String
java.util.concurrent.CountedCompleter.onCompletion(java.util.concurrent.CountedCompleter)void
java.util.concurrent.CountedCompleter.onExceptionalCompletion(Throwable,java.util.concurrent.CountedCompleter)boolean
java.util.concurrent.CountedCompleter.getCompleter)java.util.concurrent.CountedCompleter
java.util.concurrent.CountedCompleter.getPendingCount)int
java.util.concurrent.CountedCompleter.setPendingCount(int)void
java.util.concurrent.CountedCompleter.addToPendingCount(int)void
java.util.concurrent.CountedCompleter.compareAndSetPendingCount(int,int)boolean
java.util.concurrent.CountedCompleter.decrementPendingCountUnlessZero)int
java.util.concurrent.CountedCompleter.getRoot)java.util.concurrent.CountedCompleter
java.util.concurrent.CountedCompleter.tryComplete)void
java.util.concurrent.CountedCompleter.propagateCompletion)void
java.util.concurrent.CountedCompleter.complete(Object)void
java.util.concurrent.CountedCompleter.firstComplete)java.util.concurrent.CountedCompleter
java.util.concurrent.CountedCompleter.nextComplete)java.util.concurrent.CountedCompleter
java.util.concurrent.CountedCompleter.quietlyCompleteRoot)void
java.util.concurrent.CountedCompleter.helpComplete(int)void
java.util.concurrent.CountedCompleter.exec)boolean
java.util.concurrent.CountedCompleter.getRawResult)Object
java.util.concurrent.CountedCompleter.setRawResult(Object)void
java.util.concurrent.CyclicBarrier.getParties)int
java.util.concurrent.CyclicBarrier.await)int
java.util.concurrent.CyclicBarrier.await(long,java.util.concurrent.TimeUnit)int
java.util.concurrent.CyclicBarrier.isBroken)boolean
java.util.concurrent.CyclicBarrier.reset)void
java.util.concurrent.CyclicBarrier.getNumberWaiting)int
java.util.concurrent.DelayQueue.add(java.util.concurrent.Delayed)boolean
java.util.concurrent.DelayQueue.offer(java.util.concurrent.Delayed)boolean
java.util.concurrent.DelayQueue.put(java.util.concurrent.Delayed)void
java.util.concurrent.DelayQueue.offer(java.util.concurrent.Delayed,long,java.util.concurrent.TimeUnit)boolean
java.util.concurrent.DelayQueue.poll)java.util.concurrent.Delayed
java.util.concurrent.DelayQueue.take)java.util.concurrent.Delayed
java.util.concurrent.DelayQueue.poll(long,java.util.concurrent.TimeUnit)java.util.concurrent.Delayed
java.util.concurrent.DelayQueue.peek)java.util.concurrent.Delayed
java.util.concurrent.DelayQueue.size)int
java.util.concurrent.DelayQueue.drainTo(Collection)int
java.util.concurrent.DelayQueue.drainTo(Collection,int)int
java.util.concurrent.DelayQueue.clear)void
java.util.concurrent.DelayQueue.remainingCapacity)int
java.util.concurrent.DelayQueue.remove(Object)boolean
java.util.concurrent.DelayQueue.iterator)Iterator
java.util.concurrent.Exchanger.exchange(Object)Object
java.util.concurrent.Exchanger.exchange(Object,long,java.util.concurrent.TimeUnit)Object
java.util.concurrent.ExecutorCompletionService.submit(java.util.concurrent.Callable)java.util.concurrent.Future
java.util.concurrent.ExecutorCompletionService.submit(Runnable,Object)java.util.concurrent.Future
java.util.concurrent.ExecutorCompletionService.take)java.util.concurrent.Future
java.util.concurrent.ExecutorCompletionService.poll)java.util.concurrent.Future
java.util.concurrent.ExecutorCompletionService.poll(long,java.util.concurrent.TimeUnit)java.util.concurrent.Future
java.util.concurrent.Executors.newFixedThreadPool(int)java.util.concurrent.ExecutorService
java.util.concurrent.Executors.newWorkStealingPool(int)java.util.concurrent.ExecutorService
java.util.concurrent.Executors.newWorkStealingPool)java.util.concurrent.ExecutorService
java.util.concurrent.Executors.newFixedThreadPool(int,java.util.concurrent.ThreadFactory)java.util.concurrent.ExecutorService
java.util.concurrent.Executors.newSingleThreadExecutor)java.util.concurrent.ExecutorService
java.util.concurrent.Executors.newSingleThreadExecutor(java.util.concurrent.ThreadFactory)java.util.concurrent.ExecutorService
java.util.concurrent.Executors.newCachedThreadPool)java.util.concurrent.ExecutorService
java.util.concurrent.Executors.newCachedThreadPool(java.util.concurrent.ThreadFactory)java.util.concurrent.ExecutorService
java.util.concurrent.Executors.newSingleThreadScheduledExecutor)java.util.concurrent.ScheduledExecutorService
java.util.concurrent.Executors.newSingleThreadScheduledExecutor(java.util.concurrent.ThreadFactory)java.util.concurrent.ScheduledExecutorService
java.util.concurrent.Executors.newScheduledThreadPool(int)java.util.concurrent.ScheduledExecutorService
java.util.concurrent.Executors.newScheduledThreadPool(int,java.util.concurrent.ThreadFactory)java.util.concurrent.ScheduledExecutorService
java.util.concurrent.Executors.unconfigurableExecutorService(java.util.concurrent.ExecutorService)java.util.concurrent.ExecutorService
java.util.concurrent.Executors.unconfigurableScheduledExecutorService(java.util.concurrent.ScheduledExecutorService)java.util.concurrent.ScheduledExecutorService
java.util.concurrent.Executors.defaultThreadFactory)java.util.concurrent.ThreadFactory
java.util.concurrent.Executors.privilegedThreadFactory)java.util.concurrent.ThreadFactory
java.util.concurrent.Executors.callable(Runnable,Object)java.util.concurrent.Callable
java.util.concurrent.Executors.callable(Runnable)java.util.concurrent.Callable
java.util.concurrent.Executors.callable(java.security.PrivilegedAction)java.util.concurrent.Callable
java.util.concurrent.Executors.callable(java.security.PrivilegedExceptionAction)java.util.concurrent.Callable
java.util.concurrent.Executors.privilegedCallable(java.util.concurrent.Callable)java.util.concurrent.Callable
java.util.concurrent.Executors.privilegedCallableUsingCurrentClassLoader(java.util.concurrent.Callable)java.util.concurrent.Callable
java.util.concurrent.ExecutorService.awaitTermination(long,java.util.concurrent.TimeUnit)boolean
java.util.concurrent.ExecutorService.invokeAll(java.util.Collection)java.util.List
java.util.concurrent.ExecutorService.invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit)java.util.List
java.util.concurrent.ExecutorService.invokeAny(java.util.Collection)Object
java.util.concurrent.ExecutorService.invokeAny(java.util.Collection,long,java.util.concurrent.TimeUnit)Object
java.util.concurrent.ForkJoinPool.block)boolean
java.util.concurrent.ForkJoinPool.commonPool)java.util.concurrent.ForkJoinPool
java.util.concurrent.ForkJoinPool.invoke(java.util.concurrent.ForkJoinTask)Object
java.util.concurrent.ForkJoinPool.execute(java.util.concurrent.ForkJoinTask)void
java.util.concurrent.ForkJoinPool.execute(Runnable)void
java.util.concurrent.ForkJoinPool.submit(java.util.concurrent.ForkJoinTask)java.util.concurrent.ForkJoinTask
java.util.concurrent.ForkJoinPool.submit(java.util.concurrent.Callable)java.util.concurrent.ForkJoinTask
java.util.concurrent.ForkJoinPool.submit(Runnable,Object)java.util.concurrent.ForkJoinTask
java.util.concurrent.ForkJoinPool.submit(Runnable)java.util.concurrent.ForkJoinTask
java.util.concurrent.ForkJoinPool.invokeAll(java.util.Collection)java.util.List
java.util.concurrent.ForkJoinPool.getFactory)java.util.concurrent.ForkJoinPool.ForkJoinWorkerThreadFactory
java.util.concurrent.ForkJoinPool.getParallelism)int
java.util.concurrent.ForkJoinPool.getCommonPoolParallelism)int
java.util.concurrent.ForkJoinPool.getPoolSize)int
java.util.concurrent.ForkJoinPool.getAsyncMode)boolean
java.util.concurrent.ForkJoinPool.getRunningThreadCount)int
java.util.concurrent.ForkJoinPool.getActiveThreadCount)int
java.util.concurrent.ForkJoinPool.isQuiescent)boolean
java.util.concurrent.ForkJoinPool.getStealCount)long
java.util.concurrent.ForkJoinPool.getQueuedTaskCount)long
java.util.concurrent.ForkJoinPool.getQueuedSubmissionCount)int
java.util.concurrent.ForkJoinPool.hasQueuedSubmissions)boolean
java.util.concurrent.ForkJoinPool.pollSubmission)java.util.concurrent.ForkJoinTask
java.util.concurrent.ForkJoinPool.drainTasksTo(java.util.Collection)int
java.util.concurrent.ForkJoinPool.toString)String
java.util.concurrent.ForkJoinPool.shutdown)void
java.util.concurrent.ForkJoinPool.shutdownNow)java.util.List
java.util.concurrent.ForkJoinPool.isTerminated)boolean
java.util.concurrent.ForkJoinPool.isTerminating)boolean
java.util.concurrent.ForkJoinPool.isShutdown)boolean
java.util.concurrent.ForkJoinPool.awaitTermination(long,java.util.concurrent.TimeUnit)boolean
java.util.concurrent.ForkJoinPool.awaitQuiescence(long,java.util.concurrent.TimeUnit)boolean
java.util.concurrent.ForkJoinPool.managedBlock(java.util.concurrent.ForkJoinPool.ManagedBlocker)void
java.util.concurrent.ForkJoinPool.newTaskFor(Runnable,Object)java.util.concurrent.RunnableFuture
java.util.concurrent.ForkJoinPool.newTaskFor(java.util.concurrent.Callable)java.util.concurrent.RunnableFuture
java.util.concurrent.ForkJoinTask.fork)java.util.concurrent.ForkJoinTask
java.util.concurrent.ForkJoinTask.join)Object
java.util.concurrent.ForkJoinTask.invoke)Object
java.util.concurrent.ForkJoinTask.invokeAll(java.util.concurrent.ForkJoinTask,java.util.concurrent.ForkJoinTask)void
java.util.concurrent.ForkJoinTask.invokeAll(java.util.Collection)java.util.Collection
java.util.concurrent.ForkJoinTask.cancel(boolean)boolean
java.util.concurrent.ForkJoinTask.isDone)boolean
java.util.concurrent.ForkJoinTask.isCancelled)boolean
java.util.concurrent.ForkJoinTask.isCompletedAbnormally)boolean
java.util.concurrent.ForkJoinTask.isCompletedNormally)boolean
java.util.concurrent.ForkJoinTask.getException)Throwable
java.util.concurrent.ForkJoinTask.completeExceptionally(Throwable)void
java.util.concurrent.ForkJoinTask.complete(Object)void
java.util.concurrent.ForkJoinTask.quietlyComplete)void
java.util.concurrent.ForkJoinTask.get)Object
java.util.concurrent.ForkJoinTask.get(long,java.util.concurrent.TimeUnit)Object
java.util.concurrent.ForkJoinTask.quietlyJoin)void
java.util.concurrent.ForkJoinTask.quietlyInvoke)void
java.util.concurrent.ForkJoinTask.helpQuiesce)void
java.util.concurrent.ForkJoinTask.reinitialize)void
java.util.concurrent.ForkJoinTask.getPool)java.util.concurrent.ForkJoinPool
java.util.concurrent.ForkJoinTask.inForkJoinPool)boolean
java.util.concurrent.ForkJoinTask.tryUnfork)boolean
java.util.concurrent.ForkJoinTask.getQueuedTaskCount)int
java.util.concurrent.ForkJoinTask.getSurplusQueuedTaskCount)int
java.util.concurrent.ForkJoinTask.peekNextLocalTask)java.util.concurrent.ForkJoinTask
java.util.concurrent.ForkJoinTask.pollNextLocalTask)java.util.concurrent.ForkJoinTask
java.util.concurrent.ForkJoinTask.pollTask)java.util.concurrent.ForkJoinTask
java.util.concurrent.ForkJoinTask.getForkJoinTaskTag)short
java.util.concurrent.ForkJoinTask.setForkJoinTaskTag(short)short
java.util.concurrent.ForkJoinTask.compareAndSetForkJoinTaskTag(short,short)boolean
java.util.concurrent.ForkJoinTask.adapt(Runnable)java.util.concurrent.ForkJoinTask
java.util.concurrent.ForkJoinTask.adapt(Runnable,Object)java.util.concurrent.ForkJoinTask
java.util.concurrent.ForkJoinTask.adapt(java.util.concurrent.Callable)java.util.concurrent.ForkJoinTask
java.util.concurrent.ForkJoinWorkerThread.getPool)java.util.concurrent.ForkJoinPool
java.util.concurrent.ForkJoinWorkerThread.getPoolIndex)int
java.util.concurrent.ForkJoinWorkerThread.onStart)void
java.util.concurrent.ForkJoinWorkerThread.onTermination(Throwable)void
java.util.concurrent.ForkJoinWorkerThread.run)void
java.util.concurrent.Future.get)Object
java.util.concurrent.Future.get(long,java.util.concurrent.TimeUnit)Object
java.util.concurrent.FutureTask.isCancelled)boolean
java.util.concurrent.FutureTask.isDone)boolean
java.util.concurrent.FutureTask.cancel(boolean)boolean
java.util.concurrent.FutureTask.get)Object
java.util.concurrent.FutureTask.get(long,java.util.concurrent.TimeUnit)Object
java.util.concurrent.FutureTask.done)void
java.util.concurrent.FutureTask.set(Object)void
java.util.concurrent.FutureTask.setException(Throwable)void
java.util.concurrent.FutureTask.run)void
java.util.concurrent.FutureTask.runAndReset)boolean
java.util.concurrent.LinkedBlockingDeque.addFirst(Object)void
java.util.concurrent.LinkedBlockingDeque.addLast(Object)void
java.util.concurrent.LinkedBlockingDeque.offerFirst(Object)boolean
java.util.concurrent.LinkedBlockingDeque.offerLast(Object)boolean
java.util.concurrent.LinkedBlockingDeque.putFirst(Object)void
java.util.concurrent.LinkedBlockingDeque.putLast(Object)void
java.util.concurrent.LinkedBlockingDeque.offerFirst(Object,long,java.util.concurrent.TimeUnit)boolean
java.util.concurrent.LinkedBlockingDeque.offerLast(Object,long,java.util.concurrent.TimeUnit)boolean
java.util.concurrent.LinkedBlockingDeque.removeFirst)Object
java.util.concurrent.LinkedBlockingDeque.removeLast)Object
java.util.concurrent.LinkedBlockingDeque.pollFirst)Object
java.util.concurrent.LinkedBlockingDeque.pollLast)Object
java.util.concurrent.LinkedBlockingDeque.takeFirst)Object
java.util.concurrent.LinkedBlockingDeque.takeLast)Object
java.util.concurrent.LinkedBlockingDeque.pollFirst(long,java.util.concurrent.TimeUnit)Object
java.util.concurrent.LinkedBlockingDeque.pollLast(long,java.util.concurrent.TimeUnit)Object
java.util.concurrent.LinkedBlockingDeque.getFirst)Object
java.util.concurrent.LinkedBlockingDeque.getLast)Object
java.util.concurrent.LinkedBlockingDeque.peekFirst)Object
java.util.concurrent.LinkedBlockingDeque.peekLast)Object
java.util.concurrent.LinkedBlockingDeque.removeFirstOccurrence(Object)boolean
java.util.concurrent.LinkedBlockingDeque.removeLastOccurrence(Object)boolean
java.util.concurrent.LinkedBlockingDeque.add(Object)boolean
java.util.concurrent.LinkedBlockingDeque.offer(Object)boolean
java.util.concurrent.LinkedBlockingDeque.put(Object)void
java.util.concurrent.LinkedBlockingDeque.offer(Object,long,java.util.concurrent.TimeUnit)boolean
java.util.concurrent.LinkedBlockingDeque.remove)Object
java.util.concurrent.LinkedBlockingDeque.poll)Object
java.util.concurrent.LinkedBlockingDeque.take)Object
java.util.concurrent.LinkedBlockingDeque.poll(long,java.util.concurrent.TimeUnit)Object
java.util.concurrent.LinkedBlockingDeque.element)Object
java.util.concurrent.LinkedBlockingDeque.peek)Object
java.util.concurrent.LinkedBlockingDeque.remainingCapacity)int
java.util.concurrent.LinkedBlockingDeque.drainTo(Collection)int
java.util.concurrent.LinkedBlockingDeque.drainTo(Collection,int)int
java.util.concurrent.LinkedBlockingDeque.push(Object)void
java.util.concurrent.LinkedBlockingDeque.pop)Object
java.util.concurrent.LinkedBlockingDeque.remove(Object)boolean
java.util.concurrent.LinkedBlockingDeque.size)int
java.util.concurrent.LinkedBlockingDeque.contains(Object)boolean
java.util.concurrent.LinkedBlockingDeque.toString)String
java.util.concurrent.LinkedBlockingDeque.clear)void
java.util.concurrent.LinkedBlockingDeque.iterator)Iterator
java.util.concurrent.LinkedBlockingDeque.descendingIterator)Iterator
java.util.concurrent.LinkedBlockingDeque.spliterator)Spliterator
java.util.concurrent.LinkedBlockingQueue.size)int
java.util.concurrent.LinkedBlockingQueue.remainingCapacity)int
java.util.concurrent.LinkedBlockingQueue.put(Object)void
java.util.concurrent.LinkedBlockingQueue.offer(Object,long,java.util.concurrent.TimeUnit)boolean
java.util.concurrent.LinkedBlockingQueue.offer(Object)boolean
java.util.concurrent.LinkedBlockingQueue.take)Object
java.util.concurrent.LinkedBlockingQueue.poll(long,java.util.concurrent.TimeUnit)Object
java.util.concurrent.LinkedBlockingQueue.poll)Object
java.util.concurrent.LinkedBlockingQueue.peek)Object
java.util.concurrent.LinkedBlockingQueue.remove(Object)boolean
java.util.concurrent.LinkedBlockingQueue.contains(Object)boolean
java.util.concurrent.LinkedBlockingQueue.toString)String
java.util.concurrent.LinkedBlockingQueue.clear)void
java.util.concurrent.LinkedBlockingQueue.drainTo(Collection)int
java.util.concurrent.LinkedBlockingQueue.drainTo(Collection,int)int
java.util.concurrent.LinkedBlockingQueue.iterator)Iterator
java.util.concurrent.LinkedBlockingQueue.spliterator)Spliterator
java.util.concurrent.LinkedTransferQueue.toString)String
java.util.concurrent.LinkedTransferQueue.spliterator)Spliterator
java.util.concurrent.LinkedTransferQueue.put(Object)void
java.util.concurrent.LinkedTransferQueue.offer(Object,long,java.util.concurrent.TimeUnit)boolean
java.util.concurrent.LinkedTransferQueue.offer(Object)boolean
java.util.concurrent.LinkedTransferQueue.add(Object)boolean
java.util.concurrent.LinkedTransferQueue.tryTransfer(Object)boolean
java.util.concurrent.LinkedTransferQueue.transfer(Object)void
java.util.concurrent.LinkedTransferQueue.tryTransfer(Object,long,java.util.concurrent.TimeUnit)boolean
java.util.concurrent.LinkedTransferQueue.take)Object
java.util.concurrent.LinkedTransferQueue.poll(long,java.util.concurrent.TimeUnit)Object
java.util.concurrent.LinkedTransferQueue.poll)Object
java.util.concurrent.LinkedTransferQueue.drainTo(Collection)int
java.util.concurrent.LinkedTransferQueue.drainTo(Collection,int)int
java.util.concurrent.LinkedTransferQueue.iterator)Iterator
java.util.concurrent.LinkedTransferQueue.peek)Object
java.util.concurrent.LinkedTransferQueue.isEmpty)boolean
java.util.concurrent.LinkedTransferQueue.hasWaitingConsumer)boolean
java.util.concurrent.LinkedTransferQueue.size)int
java.util.concurrent.LinkedTransferQueue.getWaitingConsumerCount)int
java.util.concurrent.LinkedTransferQueue.remove(Object)boolean
java.util.concurrent.LinkedTransferQueue.contains(Object)boolean
java.util.concurrent.LinkedTransferQueue.remainingCapacity)int
java.util.concurrent.Phaser.register)int
java.util.concurrent.Phaser.bulkRegister(int)int
java.util.concurrent.Phaser.arrive)int
java.util.concurrent.Phaser.arriveAndDeregister)int
java.util.concurrent.Phaser.arriveAndAwaitAdvance)int
java.util.concurrent.Phaser.awaitAdvance(int)int
java.util.concurrent.Phaser.awaitAdvanceInterruptibly(int)int
java.util.concurrent.Phaser.awaitAdvanceInterruptibly(int,long,java.util.concurrent.TimeUnit)int
java.util.concurrent.Phaser.forceTermination)void
java.util.concurrent.Phaser.getPhase)int
java.util.concurrent.Phaser.getRegisteredParties)int
java.util.concurrent.Phaser.getArrivedParties)int
java.util.concurrent.Phaser.getUnarrivedParties)int
java.util.concurrent.Phaser.getParent)java.util.concurrent.Phaser
java.util.concurrent.Phaser.getRoot)java.util.concurrent.Phaser
java.util.concurrent.Phaser.isTerminated)boolean
java.util.concurrent.Phaser.onAdvance(int,int)boolean
java.util.concurrent.Phaser.toString)String
java.util.concurrent.PriorityBlockingQueue.add(Object)boolean
java.util.concurrent.PriorityBlockingQueue.offer(Object)boolean
java.util.concurrent.PriorityBlockingQueue.put(Object)void
java.util.concurrent.PriorityBlockingQueue.offer(Object,long,java.util.concurrent.TimeUnit)boolean
java.util.concurrent.PriorityBlockingQueue.poll)Object
java.util.concurrent.PriorityBlockingQueue.take)Object
java.util.concurrent.PriorityBlockingQueue.poll(long,java.util.concurrent.TimeUnit)Object
java.util.concurrent.PriorityBlockingQueue.peek)Object
java.util.concurrent.PriorityBlockingQueue.comparator)Comparator
java.util.concurrent.PriorityBlockingQueue.size)int
java.util.concurrent.PriorityBlockingQueue.remainingCapacity)int
java.util.concurrent.PriorityBlockingQueue.remove(Object)boolean
java.util.concurrent.PriorityBlockingQueue.contains(Object)boolean
java.util.concurrent.PriorityBlockingQueue.toString)String
java.util.concurrent.PriorityBlockingQueue.drainTo(Collection)int
java.util.concurrent.PriorityBlockingQueue.drainTo(Collection,int)int
java.util.concurrent.PriorityBlockingQueue.clear)void
java.util.concurrent.PriorityBlockingQueue.iterator)Iterator
java.util.concurrent.PriorityBlockingQueue.spliterator)Spliterator
java.util.concurrent.RecursiveAction.getRawResult)Void
java.util.concurrent.RecursiveAction.setRawResult(Void)void
java.util.concurrent.RecursiveAction.exec)boolean
java.util.concurrent.RecursiveTask.getRawResult)Object
java.util.concurrent.RecursiveTask.setRawResult(Object)void
java.util.concurrent.RecursiveTask.exec)boolean
java.util.concurrent.ScheduledThreadPoolExecutor.decorateTask(Runnable,java.util.concurrent.RunnableScheduledFuture)java.util.concurrent.RunnableScheduledFuture
java.util.concurrent.ScheduledThreadPoolExecutor.decorateTask(java.util.concurrent.Callable,java.util.concurrent.RunnableScheduledFuture)java.util.concurrent.RunnableScheduledFuture
java.util.concurrent.ScheduledThreadPoolExecutor.schedule(Runnable,long,java.util.concurrent.TimeUnit)java.util.concurrent.ScheduledFuture
java.util.concurrent.ScheduledThreadPoolExecutor.schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit)java.util.concurrent.ScheduledFuture
java.util.concurrent.ScheduledThreadPoolExecutor.scheduleAtFixedRate(Runnable,long,long,java.util.concurrent.TimeUnit)java.util.concurrent.ScheduledFuture
java.util.concurrent.ScheduledThreadPoolExecutor.scheduleWithFixedDelay(Runnable,long,long,java.util.concurrent.TimeUnit)java.util.concurrent.ScheduledFuture
java.util.concurrent.ScheduledThreadPoolExecutor.execute(Runnable)void
java.util.concurrent.ScheduledThreadPoolExecutor.submit(Runnable)java.util.concurrent.Future
java.util.concurrent.ScheduledThreadPoolExecutor.submit(Runnable,Object)java.util.concurrent.Future
java.util.concurrent.ScheduledThreadPoolExecutor.submit(java.util.concurrent.Callable)java.util.concurrent.Future
java.util.concurrent.ScheduledThreadPoolExecutor.setContinueExistingPeriodicTasksAfterShutdownPolicy(boolean)void
java.util.concurrent.ScheduledThreadPoolExecutor.getContinueExistingPeriodicTasksAfterShutdownPolicy)boolean
java.util.concurrent.ScheduledThreadPoolExecutor.setExecuteExistingDelayedTasksAfterShutdownPolicy(boolean)void
java.util.concurrent.ScheduledThreadPoolExecutor.getExecuteExistingDelayedTasksAfterShutdownPolicy)boolean
java.util.concurrent.ScheduledThreadPoolExecutor.setRemoveOnCancelPolicy(boolean)void
java.util.concurrent.ScheduledThreadPoolExecutor.getRemoveOnCancelPolicy)boolean
java.util.concurrent.ScheduledThreadPoolExecutor.shutdown)void
java.util.concurrent.ScheduledThreadPoolExecutor.shutdownNow)java.util.List
java.util.concurrent.ScheduledThreadPoolExecutor.getQueue)java.util.concurrent.BlockingQueue
java.util.concurrent.Semaphore.acquire)void
java.util.concurrent.Semaphore.acquireUninterruptibly)void
java.util.concurrent.Semaphore.tryAcquire)boolean
java.util.concurrent.Semaphore.tryAcquire(long,java.util.concurrent.TimeUnit)boolean
java.util.concurrent.Semaphore.release)void
java.util.concurrent.Semaphore.acquire(int)void
java.util.concurrent.Semaphore.acquireUninterruptibly(int)void
java.util.concurrent.Semaphore.tryAcquire(int)boolean
java.util.concurrent.Semaphore.tryAcquire(int,long,java.util.concurrent.TimeUnit)boolean
java.util.concurrent.Semaphore.release(int)void
java.util.concurrent.Semaphore.availablePermits)int
java.util.concurrent.Semaphore.drainPermits)int
java.util.concurrent.Semaphore.reducePermits(int)void
java.util.concurrent.Semaphore.isFair)boolean
java.util.concurrent.Semaphore.hasQueuedThreads)boolean
java.util.concurrent.Semaphore.getQueueLength)int
java.util.concurrent.Semaphore.getQueuedThreads)java.util.Collection
java.util.concurrent.Semaphore.toString)String
java.util.concurrent.SynchronousQueue.put(Object)void
java.util.concurrent.SynchronousQueue.offer(Object,long,java.util.concurrent.TimeUnit)boolean
java.util.concurrent.SynchronousQueue.offer(Object)boolean
java.util.concurrent.SynchronousQueue.take)Object
java.util.concurrent.SynchronousQueue.poll(long,java.util.concurrent.TimeUnit)Object
java.util.concurrent.SynchronousQueue.poll)Object
java.util.concurrent.SynchronousQueue.isEmpty)boolean
java.util.concurrent.SynchronousQueue.size)int
java.util.concurrent.SynchronousQueue.remainingCapacity)int
java.util.concurrent.SynchronousQueue.clear)void
java.util.concurrent.SynchronousQueue.contains(Object)boolean
java.util.concurrent.SynchronousQueue.remove(Object)boolean
java.util.concurrent.SynchronousQueue.containsAll(Collection)boolean
java.util.concurrent.SynchronousQueue.removeAll(Collection)boolean
java.util.concurrent.SynchronousQueue.retainAll(Collection)boolean
java.util.concurrent.SynchronousQueue.peek)Object
java.util.concurrent.SynchronousQueue.iterator)Iterator
java.util.concurrent.SynchronousQueue.spliterator)Spliterator
java.util.concurrent.SynchronousQueue.toString)String
java.util.concurrent.SynchronousQueue.drainTo(Collection)int
java.util.concurrent.SynchronousQueue.drainTo(Collection,int)int
java.util.concurrent.ThreadLocalRandom.current)java.util.concurrent.ThreadLocalRandom
java.util.concurrent.ThreadLocalRandom.setSeed(long)void
java.util.concurrent.ThreadLocalRandom.next(int)int
java.util.concurrent.ThreadLocalRandom.nextInt)int
java.util.concurrent.ThreadLocalRandom.nextInt(int)int
java.util.concurrent.ThreadLocalRandom.nextInt(int,int)int
java.util.concurrent.ThreadLocalRandom.nextLong)long
java.util.concurrent.ThreadLocalRandom.nextLong(long)long
java.util.concurrent.ThreadLocalRandom.nextLong(long,long)long
java.util.concurrent.ThreadLocalRandom.nextDouble)double
java.util.concurrent.ThreadLocalRandom.nextDouble(double)double
java.util.concurrent.ThreadLocalRandom.nextDouble(double,double)double
java.util.concurrent.ThreadLocalRandom.nextBoolean)boolean
java.util.concurrent.ThreadLocalRandom.nextFloat)float
java.util.concurrent.ThreadLocalRandom.nextGaussian)double
java.util.concurrent.ThreadLocalRandom.ints(long)IntStream
java.util.concurrent.ThreadLocalRandom.ints)IntStream
java.util.concurrent.ThreadLocalRandom.ints(long,int,int)IntStream
java.util.concurrent.ThreadLocalRandom.ints(int,int)IntStream
java.util.concurrent.ThreadLocalRandom.longs(long)LongStream
java.util.concurrent.ThreadLocalRandom.longs)LongStream
java.util.concurrent.ThreadLocalRandom.longs(long,long,long)LongStream
java.util.concurrent.ThreadLocalRandom.longs(long,long)LongStream
java.util.concurrent.ThreadLocalRandom.doubles(long)DoubleStream
java.util.concurrent.ThreadLocalRandom.doubles)DoubleStream
java.util.concurrent.ThreadLocalRandom.doubles(long,double,double)DoubleStream
java.util.concurrent.ThreadLocalRandom.doubles(double,double)DoubleStream
java.util.concurrent.ThreadPoolExecutor.rejectedExecution(Runnable,java.util.concurrent.ThreadPoolExecutor)void
java.util.concurrent.ThreadPoolExecutor.rejectedExecution(Runnable,java.util.concurrent.ThreadPoolExecutor)void
java.util.concurrent.ThreadPoolExecutor.rejectedExecution(Runnable,java.util.concurrent.ThreadPoolExecutor)void
java.util.concurrent.ThreadPoolExecutor.rejectedExecution(Runnable,java.util.concurrent.ThreadPoolExecutor)void
java.util.concurrent.ThreadPoolExecutor.execute(Runnable)void
java.util.concurrent.ThreadPoolExecutor.shutdown)void
java.util.concurrent.ThreadPoolExecutor.shutdownNow)java.util.List
java.util.concurrent.ThreadPoolExecutor.isShutdown)boolean
java.util.concurrent.ThreadPoolExecutor.isTerminating)boolean
java.util.concurrent.ThreadPoolExecutor.isTerminated)boolean
java.util.concurrent.ThreadPoolExecutor.awaitTermination(long,java.util.concurrent.TimeUnit)boolean
java.util.concurrent.ThreadPoolExecutor.finalize)void
java.util.concurrent.ThreadPoolExecutor.setThreadFactory(java.util.concurrent.ThreadFactory)void
java.util.concurrent.ThreadPoolExecutor.getThreadFactory)java.util.concurrent.ThreadFactory
java.util.concurrent.ThreadPoolExecutor.setRejectedExecutionHandler(java.util.concurrent.RejectedExecutionHandler)void
java.util.concurrent.ThreadPoolExecutor.getRejectedExecutionHandler)java.util.concurrent.RejectedExecutionHandler
java.util.concurrent.ThreadPoolExecutor.setCorePoolSize(int)void
java.util.concurrent.ThreadPoolExecutor.getCorePoolSize)int
java.util.concurrent.ThreadPoolExecutor.prestartCoreThread)boolean
java.util.concurrent.ThreadPoolExecutor.prestartAllCoreThreads)int
java.util.concurrent.ThreadPoolExecutor.allowsCoreThreadTimeOut)boolean
java.util.concurrent.ThreadPoolExecutor.allowCoreThreadTimeOut(boolean)void
java.util.concurrent.ThreadPoolExecutor.setMaximumPoolSize(int)void
java.util.concurrent.ThreadPoolExecutor.getMaximumPoolSize)int
java.util.concurrent.ThreadPoolExecutor.setKeepAliveTime(long,java.util.concurrent.TimeUnit)void
java.util.concurrent.ThreadPoolExecutor.getKeepAliveTime(java.util.concurrent.TimeUnit)long
java.util.concurrent.ThreadPoolExecutor.getQueue)java.util.concurrent.BlockingQueue
java.util.concurrent.ThreadPoolExecutor.remove(Runnable)boolean
java.util.concurrent.ThreadPoolExecutor.purge)void
java.util.concurrent.ThreadPoolExecutor.getPoolSize)int
java.util.concurrent.ThreadPoolExecutor.getActiveCount)int
java.util.concurrent.ThreadPoolExecutor.getLargestPoolSize)int
java.util.concurrent.ThreadPoolExecutor.getTaskCount)long
java.util.concurrent.ThreadPoolExecutor.getCompletedTaskCount)long
java.util.concurrent.ThreadPoolExecutor.toString)String
java.util.concurrent.ThreadPoolExecutor.beforeExecute(Thread,Runnable)void
java.util.concurrent.ThreadPoolExecutor.afterExecute(Runnable,Throwable)void
java.util.concurrent.ThreadPoolExecutor.terminated)void
java.util.concurrent.TimeUnit.valueOf(String)java.util.concurrent.TimeUnit
java.util.concurrent.TimeUnit.convert(long,java.util.concurrent.TimeUnit)long
java.util.concurrent.TimeUnit.toNanos(long)long
java.util.concurrent.TimeUnit.toMicros(long)long
java.util.concurrent.TimeUnit.toMillis(long)long
java.util.concurrent.TimeUnit.toSeconds(long)long
java.util.concurrent.TimeUnit.toMinutes(long)long
java.util.concurrent.TimeUnit.toHours(long)long
java.util.concurrent.TimeUnit.toDays(long)long
java.util.concurrent.TimeUnit.timedWait(Object,long)void
java.util.concurrent.TimeUnit.timedJoin(Thread,long)void
java.util.concurrent.TimeUnit.sleep(long)void
java.util.concurrent.TransferQueue.transfer(Object)void
java.util.concurrent.TransferQueue.tryTransfer(Object,long,java.util.concurrent.TimeUnit)boolean
java.util.concurrent.atomic.AtomicBoolean.get)boolean
java.util.concurrent.atomic.AtomicBoolean.compareAndSet(boolean,boolean)boolean
java.util.concurrent.atomic.AtomicBoolean.weakCompareAndSet(boolean,boolean)boolean
java.util.concurrent.atomic.AtomicBoolean.set(boolean)void
java.util.concurrent.atomic.AtomicBoolean.lazySet(boolean)void
java.util.concurrent.atomic.AtomicBoolean.getAndSet(boolean)boolean
java.util.concurrent.atomic.AtomicBoolean.toString)String
java.util.concurrent.atomic.AtomicInteger.get)int
java.util.concurrent.atomic.AtomicInteger.set(int)void
java.util.concurrent.atomic.AtomicInteger.lazySet(int)void
java.util.concurrent.atomic.AtomicInteger.getAndSet(int)int
java.util.concurrent.atomic.AtomicInteger.compareAndSet(int,int)boolean
java.util.concurrent.atomic.AtomicInteger.weakCompareAndSet(int,int)boolean
java.util.concurrent.atomic.AtomicInteger.getAndIncrement)int
java.util.concurrent.atomic.AtomicInteger.getAndDecrement)int
java.util.concurrent.atomic.AtomicInteger.getAndAdd(int)int
java.util.concurrent.atomic.AtomicInteger.incrementAndGet)int
java.util.concurrent.atomic.AtomicInteger.decrementAndGet)int
java.util.concurrent.atomic.AtomicInteger.addAndGet(int)int
java.util.concurrent.atomic.AtomicInteger.getAndUpdate(java.util.function.IntUnaryOperator)int
java.util.concurrent.atomic.AtomicInteger.updateAndGet(java.util.function.IntUnaryOperator)int
java.util.concurrent.atomic.AtomicInteger.getAndAccumulate(int,java.util.function.IntBinaryOperator)int
java.util.concurrent.atomic.AtomicInteger.accumulateAndGet(int,java.util.function.IntBinaryOperator)int
java.util.concurrent.atomic.AtomicInteger.toString)String
java.util.concurrent.atomic.AtomicInteger.intValue)int
java.util.concurrent.atomic.AtomicInteger.longValue)long
java.util.concurrent.atomic.AtomicInteger.floatValue)float
java.util.concurrent.atomic.AtomicInteger.doubleValue)double
java.util.concurrent.atomic.AtomicIntegerArray.length)int
java.util.concurrent.atomic.AtomicIntegerArray.get(int)int
java.util.concurrent.atomic.AtomicIntegerArray.set(int,int)void
java.util.concurrent.atomic.AtomicIntegerArray.lazySet(int,int)void
java.util.concurrent.atomic.AtomicIntegerArray.getAndSet(int,int)int
java.util.concurrent.atomic.AtomicIntegerArray.compareAndSet(int,int,int)boolean
java.util.concurrent.atomic.AtomicIntegerArray.weakCompareAndSet(int,int,int)boolean
java.util.concurrent.atomic.AtomicIntegerArray.getAndIncrement(int)int
java.util.concurrent.atomic.AtomicIntegerArray.getAndDecrement(int)int
java.util.concurrent.atomic.AtomicIntegerArray.getAndAdd(int,int)int
java.util.concurrent.atomic.AtomicIntegerArray.incrementAndGet(int)int
java.util.concurrent.atomic.AtomicIntegerArray.decrementAndGet(int)int
java.util.concurrent.atomic.AtomicIntegerArray.addAndGet(int,int)int
java.util.concurrent.atomic.AtomicIntegerArray.getAndUpdate(int,java.util.function.IntUnaryOperator)int
java.util.concurrent.atomic.AtomicIntegerArray.updateAndGet(int,java.util.function.IntUnaryOperator)int
java.util.concurrent.atomic.AtomicIntegerArray.getAndAccumulate(int,int,java.util.function.IntBinaryOperator)int
java.util.concurrent.atomic.AtomicIntegerArray.accumulateAndGet(int,int,java.util.function.IntBinaryOperator)int
java.util.concurrent.atomic.AtomicIntegerArray.toString)String
java.util.concurrent.atomic.AtomicIntegerFieldUpdater.newUpdater(Class,String)java.util.concurrent.atomic.AtomicIntegerFieldUpdater
java.util.concurrent.atomic.AtomicIntegerFieldUpdater.getAndSet(Object,int)int
java.util.concurrent.atomic.AtomicIntegerFieldUpdater.getAndIncrement(Object)int
java.util.concurrent.atomic.AtomicIntegerFieldUpdater.getAndDecrement(Object)int
java.util.concurrent.atomic.AtomicIntegerFieldUpdater.getAndAdd(Object,int)int
java.util.concurrent.atomic.AtomicIntegerFieldUpdater.incrementAndGet(Object)int
java.util.concurrent.atomic.AtomicIntegerFieldUpdater.decrementAndGet(Object)int
java.util.concurrent.atomic.AtomicIntegerFieldUpdater.addAndGet(Object,int)int
java.util.concurrent.atomic.AtomicIntegerFieldUpdater.getAndUpdate(Object,java.util.function.IntUnaryOperator)int
java.util.concurrent.atomic.AtomicIntegerFieldUpdater.updateAndGet(Object,java.util.function.IntUnaryOperator)int
java.util.concurrent.atomic.AtomicIntegerFieldUpdater.getAndAccumulate(Object,int,java.util.function.IntBinaryOperator)int
java.util.concurrent.atomic.AtomicIntegerFieldUpdater.accumulateAndGet(Object,int,java.util.function.IntBinaryOperator)int
java.util.concurrent.atomic.AtomicLong.get)long
java.util.concurrent.atomic.AtomicLong.set(long)void
java.util.concurrent.atomic.AtomicLong.lazySet(long)void
java.util.concurrent.atomic.AtomicLong.getAndSet(long)long
java.util.concurrent.atomic.AtomicLong.compareAndSet(long,long)boolean
java.util.concurrent.atomic.AtomicLong.weakCompareAndSet(long,long)boolean
java.util.concurrent.atomic.AtomicLong.getAndIncrement)long
java.util.concurrent.atomic.AtomicLong.getAndDecrement)long
java.util.concurrent.atomic.AtomicLong.getAndAdd(long)long
java.util.concurrent.atomic.AtomicLong.incrementAndGet)long
java.util.concurrent.atomic.AtomicLong.decrementAndGet)long
java.util.concurrent.atomic.AtomicLong.addAndGet(long)long
java.util.concurrent.atomic.AtomicLong.getAndUpdate(java.util.function.LongUnaryOperator)long
java.util.concurrent.atomic.AtomicLong.updateAndGet(java.util.function.LongUnaryOperator)long
java.util.concurrent.atomic.AtomicLong.getAndAccumulate(long,java.util.function.LongBinaryOperator)long
java.util.concurrent.atomic.AtomicLong.accumulateAndGet(long,java.util.function.LongBinaryOperator)long
java.util.concurrent.atomic.AtomicLong.toString)String
java.util.concurrent.atomic.AtomicLong.intValue)int
java.util.concurrent.atomic.AtomicLong.longValue)long
java.util.concurrent.atomic.AtomicLong.floatValue)float
java.util.concurrent.atomic.AtomicLong.doubleValue)double
java.util.concurrent.atomic.AtomicLongArray.length)int
java.util.concurrent.atomic.AtomicLongArray.get(int)long
java.util.concurrent.atomic.AtomicLongArray.set(int,long)void
java.util.concurrent.atomic.AtomicLongArray.lazySet(int,long)void
java.util.concurrent.atomic.AtomicLongArray.getAndSet(int,long)long
java.util.concurrent.atomic.AtomicLongArray.compareAndSet(int,long,long)boolean
java.util.concurrent.atomic.AtomicLongArray.weakCompareAndSet(int,long,long)boolean
java.util.concurrent.atomic.AtomicLongArray.getAndIncrement(int)long
java.util.concurrent.atomic.AtomicLongArray.getAndDecrement(int)long
java.util.concurrent.atomic.AtomicLongArray.getAndAdd(int,long)long
java.util.concurrent.atomic.AtomicLongArray.incrementAndGet(int)long
java.util.concurrent.atomic.AtomicLongArray.decrementAndGet(int)long
java.util.concurrent.atomic.AtomicLongArray.addAndGet(int,long)long
java.util.concurrent.atomic.AtomicLongArray.getAndUpdate(int,java.util.function.LongUnaryOperator)long
java.util.concurrent.atomic.AtomicLongArray.updateAndGet(int,java.util.function.LongUnaryOperator)long
java.util.concurrent.atomic.AtomicLongArray.getAndAccumulate(int,long,java.util.function.LongBinaryOperator)long
java.util.concurrent.atomic.AtomicLongArray.accumulateAndGet(int,long,java.util.function.LongBinaryOperator)long
java.util.concurrent.atomic.AtomicLongArray.toString)String
java.util.concurrent.atomic.AtomicLongFieldUpdater.newUpdater(Class,String)java.util.concurrent.atomic.AtomicLongFieldUpdater
java.util.concurrent.atomic.AtomicLongFieldUpdater.getAndSet(Object,long)long
java.util.concurrent.atomic.AtomicLongFieldUpdater.getAndIncrement(Object)long
java.util.concurrent.atomic.AtomicLongFieldUpdater.getAndDecrement(Object)long
java.util.concurrent.atomic.AtomicLongFieldUpdater.getAndAdd(Object,long)long
java.util.concurrent.atomic.AtomicLongFieldUpdater.incrementAndGet(Object)long
java.util.concurrent.atomic.AtomicLongFieldUpdater.decrementAndGet(Object)long
java.util.concurrent.atomic.AtomicLongFieldUpdater.addAndGet(Object,long)long
java.util.concurrent.atomic.AtomicLongFieldUpdater.getAndUpdate(Object,java.util.function.LongUnaryOperator)long
java.util.concurrent.atomic.AtomicLongFieldUpdater.updateAndGet(Object,java.util.function.LongUnaryOperator)long
java.util.concurrent.atomic.AtomicLongFieldUpdater.getAndAccumulate(Object,long,java.util.function.LongBinaryOperator)long
java.util.concurrent.atomic.AtomicLongFieldUpdater.accumulateAndGet(Object,long,java.util.function.LongBinaryOperator)long
java.util.concurrent.atomic.AtomicMarkableReference.getReference)Object
java.util.concurrent.atomic.AtomicMarkableReference.isMarked)boolean
java.util.concurrent.atomic.AtomicMarkableReference.get(boolean)Object
java.util.concurrent.atomic.AtomicMarkableReference.weakCompareAndSet(Object,Object,boolean,boolean)boolean
java.util.concurrent.atomic.AtomicMarkableReference.compareAndSet(Object,Object,boolean,boolean)boolean
java.util.concurrent.atomic.AtomicMarkableReference.set(Object,boolean)void
java.util.concurrent.atomic.AtomicMarkableReference.attemptMark(Object,boolean)boolean
java.util.concurrent.atomic.AtomicReference.get)Object
java.util.concurrent.atomic.AtomicReference.set(Object)void
java.util.concurrent.atomic.AtomicReference.lazySet(Object)void
java.util.concurrent.atomic.AtomicReference.compareAndSet(Object,Object)boolean
java.util.concurrent.atomic.AtomicReference.weakCompareAndSet(Object,Object)boolean
java.util.concurrent.atomic.AtomicReference.getAndSet(Object)Object
java.util.concurrent.atomic.AtomicReference.getAndUpdate(java.util.function.UnaryOperator)Object
java.util.concurrent.atomic.AtomicReference.updateAndGet(java.util.function.UnaryOperator)Object
java.util.concurrent.atomic.AtomicReference.getAndAccumulate(Object,java.util.function.BinaryOperator)Object
java.util.concurrent.atomic.AtomicReference.accumulateAndGet(Object,java.util.function.BinaryOperator)Object
java.util.concurrent.atomic.AtomicReference.toString)String
java.util.concurrent.atomic.AtomicReferenceArray.length)int
java.util.concurrent.atomic.AtomicReferenceArray.get(int)Object
java.util.concurrent.atomic.AtomicReferenceArray.set(int,Object)void
java.util.concurrent.atomic.AtomicReferenceArray.lazySet(int,Object)void
java.util.concurrent.atomic.AtomicReferenceArray.getAndSet(int,Object)Object
java.util.concurrent.atomic.AtomicReferenceArray.compareAndSet(int,Object,Object)boolean
java.util.concurrent.atomic.AtomicReferenceArray.weakCompareAndSet(int,Object,Object)boolean
java.util.concurrent.atomic.AtomicReferenceArray.getAndUpdate(int,java.util.function.UnaryOperator)Object
java.util.concurrent.atomic.AtomicReferenceArray.updateAndGet(int,java.util.function.UnaryOperator)Object
java.util.concurrent.atomic.AtomicReferenceArray.getAndAccumulate(int,Object,java.util.function.BinaryOperator)Object
java.util.concurrent.atomic.AtomicReferenceArray.accumulateAndGet(int,Object,java.util.function.BinaryOperator)Object
java.util.concurrent.atomic.AtomicReferenceArray.toString)String
java.util.concurrent.atomic.AtomicReferenceFieldUpdater.newUpdater(Class,Class,String)java.util.concurrent.atomic.AtomicReferenceFieldUpdater
java.util.concurrent.atomic.AtomicReferenceFieldUpdater.getAndSet(Object,Object)Object
java.util.concurrent.atomic.AtomicReferenceFieldUpdater.getAndUpdate(Object,java.util.function.UnaryOperator)Object
java.util.concurrent.atomic.AtomicReferenceFieldUpdater.updateAndGet(Object,java.util.function.UnaryOperator)Object
java.util.concurrent.atomic.AtomicReferenceFieldUpdater.getAndAccumulate(Object,Object,java.util.function.BinaryOperator)Object
java.util.concurrent.atomic.AtomicReferenceFieldUpdater.accumulateAndGet(Object,Object,java.util.function.BinaryOperator)Object
java.util.concurrent.atomic.AtomicStampedReference.getReference)Object
java.util.concurrent.atomic.AtomicStampedReference.getStamp)int
java.util.concurrent.atomic.AtomicStampedReference.get(int)Object
java.util.concurrent.atomic.AtomicStampedReference.weakCompareAndSet(Object,Object,int,int)boolean
java.util.concurrent.atomic.AtomicStampedReference.compareAndSet(Object,Object,int,int)boolean
java.util.concurrent.atomic.AtomicStampedReference.set(Object,int)void
java.util.concurrent.atomic.AtomicStampedReference.attemptStamp(Object,int)boolean
java.util.concurrent.atomic.DoubleAccumulator.accumulate(double)void
java.util.concurrent.atomic.DoubleAccumulator.get)double
java.util.concurrent.atomic.DoubleAccumulator.reset)void
java.util.concurrent.atomic.DoubleAccumulator.getThenReset)double
java.util.concurrent.atomic.DoubleAccumulator.toString)String
java.util.concurrent.atomic.DoubleAccumulator.doubleValue)double
java.util.concurrent.atomic.DoubleAccumulator.longValue)long
java.util.concurrent.atomic.DoubleAccumulator.intValue)int
java.util.concurrent.atomic.DoubleAccumulator.floatValue)float
java.util.concurrent.atomic.DoubleAdder.add(double)void
java.util.concurrent.atomic.DoubleAdder.sum)double
java.util.concurrent.atomic.DoubleAdder.reset)void
java.util.concurrent.atomic.DoubleAdder.sumThenReset)double
java.util.concurrent.atomic.DoubleAdder.toString)String
java.util.concurrent.atomic.DoubleAdder.doubleValue)double
java.util.concurrent.atomic.DoubleAdder.longValue)long
java.util.concurrent.atomic.DoubleAdder.intValue)int
java.util.concurrent.atomic.DoubleAdder.floatValue)float
java.util.concurrent.atomic.LongAccumulator.accumulate(long)void
java.util.concurrent.atomic.LongAccumulator.get)long
java.util.concurrent.atomic.LongAccumulator.reset)void
java.util.concurrent.atomic.LongAccumulator.getThenReset)long
java.util.concurrent.atomic.LongAccumulator.toString)String
java.util.concurrent.atomic.LongAccumulator.longValue)long
java.util.concurrent.atomic.LongAccumulator.intValue)int
java.util.concurrent.atomic.LongAccumulator.floatValue)float
java.util.concurrent.atomic.LongAccumulator.doubleValue)double
java.util.concurrent.atomic.LongAdder.add(long)void
java.util.concurrent.atomic.LongAdder.increment)void
java.util.concurrent.atomic.LongAdder.decrement)void
java.util.concurrent.atomic.LongAdder.sum)long
java.util.concurrent.atomic.LongAdder.reset)void
java.util.concurrent.atomic.LongAdder.sumThenReset)long
java.util.concurrent.atomic.LongAdder.toString)String
java.util.concurrent.atomic.LongAdder.longValue)long
java.util.concurrent.atomic.LongAdder.intValue)int
java.util.concurrent.atomic.LongAdder.floatValue)float
java.util.concurrent.atomic.LongAdder.doubleValue)double
java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(Thread)void
java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread)Thread
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.signal)void
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.signalAll)void
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.awaitUninterruptibly)void
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.await)void
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.awaitNanos(long)long
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.awaitUntil(java.util.Date)boolean
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.await(long,java.util.concurrent.TimeUnit)boolean
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.hasWaiters)boolean
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.getWaitQueueLength)int
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.getWaitingThreads)java.util.Collection
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.getState)long
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.setState(long)void
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.compareAndSetState(long,long)boolean
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.tryAcquire(long)boolean
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.tryRelease(long)boolean
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.tryAcquireShared(long)long
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.tryReleaseShared(long)boolean
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.isHeldExclusively)boolean
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.acquire(long)void
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.acquireInterruptibly(long)void
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.tryAcquireNanos(long,long)boolean
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.release(long)boolean
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.acquireShared(long)void
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.acquireSharedInterruptibly(long)void
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.tryAcquireSharedNanos(long,long)boolean
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.releaseShared(long)boolean
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.hasQueuedThreads)boolean
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.hasContended)boolean
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.getFirstQueuedThread)Thread
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.isQueued(Thread)boolean
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.hasQueuedPredecessors)boolean
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.getQueueLength)int
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.getQueuedThreads)java.util.Collection
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.getExclusiveQueuedThreads)java.util.Collection
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.getSharedQueuedThreads)java.util.Collection
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.toString)String
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.owns(java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject)boolean
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.hasWaiters(java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject)boolean
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.getWaitQueueLength(java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject)int
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.getWaitingThreads(java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject)java.util.Collection
java.util.concurrent.locks.AbstractQueuedSynchronizer.signal)void
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalAll)void
java.util.concurrent.locks.AbstractQueuedSynchronizer.awaitUninterruptibly)void
java.util.concurrent.locks.AbstractQueuedSynchronizer.await)void
java.util.concurrent.locks.AbstractQueuedSynchronizer.awaitNanos(long)long
java.util.concurrent.locks.AbstractQueuedSynchronizer.awaitUntil(java.util.Date)boolean
java.util.concurrent.locks.AbstractQueuedSynchronizer.await(long,java.util.concurrent.TimeUnit)boolean
java.util.concurrent.locks.AbstractQueuedSynchronizer.hasWaiters)boolean
java.util.concurrent.locks.AbstractQueuedSynchronizer.getWaitQueueLength)int
java.util.concurrent.locks.AbstractQueuedSynchronizer.getWaitingThreads)java.util.Collection
java.util.concurrent.locks.AbstractQueuedSynchronizer.getState)int
java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(int)void
java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState(int,int)boolean
java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquire(int)boolean
java.util.concurrent.locks.AbstractQueuedSynchronizer.tryRelease(int)boolean
java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireShared(int)int
java.util.concurrent.locks.AbstractQueuedSynchronizer.tryReleaseShared(int)boolean
java.util.concurrent.locks.AbstractQueuedSynchronizer.isHeldExclusively)boolean
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(int)void
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly(int)void
java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(int,long)boolean
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(int)boolean
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireShared(int)void
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(int)void
java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(int,long)boolean
java.util.concurrent.locks.AbstractQueuedSynchronizer.releaseShared(int)boolean
java.util.concurrent.locks.AbstractQueuedSynchronizer.hasQueuedThreads)boolean
java.util.concurrent.locks.AbstractQueuedSynchronizer.hasContended)boolean
java.util.concurrent.locks.AbstractQueuedSynchronizer.getFirstQueuedThread)Thread
java.util.concurrent.locks.AbstractQueuedSynchronizer.isQueued(Thread)boolean
java.util.concurrent.locks.AbstractQueuedSynchronizer.hasQueuedPredecessors)boolean
java.util.concurrent.locks.AbstractQueuedSynchronizer.getQueueLength)int
java.util.concurrent.locks.AbstractQueuedSynchronizer.getQueuedThreads)java.util.Collection
java.util.concurrent.locks.AbstractQueuedSynchronizer.getExclusiveQueuedThreads)java.util.Collection
java.util.concurrent.locks.AbstractQueuedSynchronizer.getSharedQueuedThreads)java.util.Collection
java.util.concurrent.locks.AbstractQueuedSynchronizer.toString)String
java.util.concurrent.locks.AbstractQueuedSynchronizer.owns(java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject)boolean
java.util.concurrent.locks.AbstractQueuedSynchronizer.hasWaiters(java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject)boolean
java.util.concurrent.locks.AbstractQueuedSynchronizer.getWaitQueueLength(java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject)int
java.util.concurrent.locks.AbstractQueuedSynchronizer.getWaitingThreads(java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject)java.util.Collection
java.util.concurrent.locks.Condition.await)void
java.util.concurrent.locks.Condition.awaitNanos(long)long
java.util.concurrent.locks.Condition.await(long,java.util.concurrent.TimeUnit)boolean
java.util.concurrent.locks.Condition.awaitUntil(java.util.Date)boolean
java.util.concurrent.locks.Lock.lockInterruptibly)void
java.util.concurrent.locks.Lock.tryLock(long,java.util.concurrent.TimeUnit)boolean
java.util.concurrent.locks.LockSupport.unpark(Thread)void
java.util.concurrent.locks.LockSupport.park(Object)void
java.util.concurrent.locks.LockSupport.parkNanos(Object,long)void
java.util.concurrent.locks.LockSupport.parkUntil(Object,long)void
java.util.concurrent.locks.LockSupport.getBlocker(Thread)Object
java.util.concurrent.locks.LockSupport.park)void
java.util.concurrent.locks.LockSupport.parkNanos(long)void
java.util.concurrent.locks.LockSupport.parkUntil(long)void
java.util.concurrent.locks.ReentrantLock.lock)void
java.util.concurrent.locks.ReentrantLock.lockInterruptibly)void
java.util.concurrent.locks.ReentrantLock.tryLock)boolean
java.util.concurrent.locks.ReentrantLock.tryLock(long,java.util.concurrent.TimeUnit)boolean
java.util.concurrent.locks.ReentrantLock.unlock)void
java.util.concurrent.locks.ReentrantLock.newCondition)java.util.concurrent.locks.Condition
java.util.concurrent.locks.ReentrantLock.getHoldCount)int
java.util.concurrent.locks.ReentrantLock.isHeldByCurrentThread)boolean
java.util.concurrent.locks.ReentrantLock.isLocked)boolean
java.util.concurrent.locks.ReentrantLock.isFair)boolean
java.util.concurrent.locks.ReentrantLock.getOwner)Thread
java.util.concurrent.locks.ReentrantLock.hasQueuedThreads)boolean
java.util.concurrent.locks.ReentrantLock.hasQueuedThread(Thread)boolean
java.util.concurrent.locks.ReentrantLock.getQueueLength)int
java.util.concurrent.locks.ReentrantLock.getQueuedThreads)java.util.Collection
java.util.concurrent.locks.ReentrantLock.hasWaiters(java.util.concurrent.locks.Condition)boolean
java.util.concurrent.locks.ReentrantLock.getWaitQueueLength(java.util.concurrent.locks.Condition)int
java.util.concurrent.locks.ReentrantLock.getWaitingThreads(java.util.concurrent.locks.Condition)java.util.Collection
java.util.concurrent.locks.ReentrantLock.toString)String
java.util.concurrent.locks.ReentrantReadWriteLock.lock)void
java.util.concurrent.locks.ReentrantReadWriteLock.lockInterruptibly)void
java.util.concurrent.locks.ReentrantReadWriteLock.tryLock)boolean
java.util.concurrent.locks.ReentrantReadWriteLock.tryLock(long,java.util.concurrent.TimeUnit)boolean
java.util.concurrent.locks.ReentrantReadWriteLock.unlock)void
java.util.concurrent.locks.ReentrantReadWriteLock.newCondition)java.util.concurrent.locks.Condition
java.util.concurrent.locks.ReentrantReadWriteLock.toString)String
java.util.concurrent.locks.ReentrantReadWriteLock.isHeldByCurrentThread)boolean
java.util.concurrent.locks.ReentrantReadWriteLock.getHoldCount)int
java.util.concurrent.locks.ReentrantReadWriteLock.lock)void
java.util.concurrent.locks.ReentrantReadWriteLock.lockInterruptibly)void
java.util.concurrent.locks.ReentrantReadWriteLock.tryLock)boolean
java.util.concurrent.locks.ReentrantReadWriteLock.tryLock(long,java.util.concurrent.TimeUnit)boolean
java.util.concurrent.locks.ReentrantReadWriteLock.unlock)void
java.util.concurrent.locks.ReentrantReadWriteLock.newCondition)java.util.concurrent.locks.Condition
java.util.concurrent.locks.ReentrantReadWriteLock.toString)String
java.util.concurrent.locks.ReentrantReadWriteLock.writeLock)java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock
java.util.concurrent.locks.ReentrantReadWriteLock.readLock)java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock
java.util.concurrent.locks.ReentrantReadWriteLock.isFair)boolean
java.util.concurrent.locks.ReentrantReadWriteLock.getOwner)Thread
java.util.concurrent.locks.ReentrantReadWriteLock.getReadLockCount)int
java.util.concurrent.locks.ReentrantReadWriteLock.isWriteLocked)boolean
java.util.concurrent.locks.ReentrantReadWriteLock.isWriteLockedByCurrentThread)boolean
java.util.concurrent.locks.ReentrantReadWriteLock.getWriteHoldCount)int
java.util.concurrent.locks.ReentrantReadWriteLock.getReadHoldCount)int
java.util.concurrent.locks.ReentrantReadWriteLock.getQueuedWriterThreads)java.util.Collection
java.util.concurrent.locks.ReentrantReadWriteLock.getQueuedReaderThreads)java.util.Collection
java.util.concurrent.locks.ReentrantReadWriteLock.hasQueuedThreads)boolean
java.util.concurrent.locks.ReentrantReadWriteLock.hasQueuedThread(Thread)boolean
java.util.concurrent.locks.ReentrantReadWriteLock.getQueueLength)int
java.util.concurrent.locks.ReentrantReadWriteLock.getQueuedThreads)java.util.Collection
java.util.concurrent.locks.ReentrantReadWriteLock.hasWaiters(java.util.concurrent.locks.Condition)boolean
java.util.concurrent.locks.ReentrantReadWriteLock.getWaitQueueLength(java.util.concurrent.locks.Condition)int
java.util.concurrent.locks.ReentrantReadWriteLock.getWaitingThreads(java.util.concurrent.locks.Condition)java.util.Collection
java.util.concurrent.locks.ReentrantReadWriteLock.toString)String
java.util.concurrent.locks.StampedLock.writeLock)long
java.util.concurrent.locks.StampedLock.tryWriteLock)long
java.util.concurrent.locks.StampedLock.tryWriteLock(long,java.util.concurrent.TimeUnit)long
java.util.concurrent.locks.StampedLock.writeLockInterruptibly)long
java.util.concurrent.locks.StampedLock.readLock)long
java.util.concurrent.locks.StampedLock.tryReadLock)long
java.util.concurrent.locks.StampedLock.tryReadLock(long,java.util.concurrent.TimeUnit)long
java.util.concurrent.locks.StampedLock.readLockInterruptibly)long
java.util.concurrent.locks.StampedLock.tryOptimisticRead)long
java.util.concurrent.locks.StampedLock.validate(long)boolean
java.util.concurrent.locks.StampedLock.unlockWrite(long)void
java.util.concurrent.locks.StampedLock.unlockRead(long)void
java.util.concurrent.locks.StampedLock.unlock(long)void
java.util.concurrent.locks.StampedLock.tryConvertToWriteLock(long)long
java.util.concurrent.locks.StampedLock.tryConvertToReadLock(long)long
java.util.concurrent.locks.StampedLock.tryConvertToOptimisticRead(long)long
java.util.concurrent.locks.StampedLock.tryUnlockWrite)boolean
java.util.concurrent.locks.StampedLock.tryUnlockRead)boolean
java.util.concurrent.locks.StampedLock.isWriteLocked)boolean
java.util.concurrent.locks.StampedLock.isReadLocked)boolean
java.util.concurrent.locks.StampedLock.getReadLockCount)int
java.util.concurrent.locks.StampedLock.toString)String
java.util.concurrent.locks.StampedLock.asReadLock)java.util.concurrent.locks.Lock
java.util.concurrent.locks.StampedLock.asWriteLock)java.util.concurrent.locks.Lock
java.util.concurrent.locks.StampedLock.asReadWriteLock)java.util.concurrent.locks.ReadWriteLock
java.util.function.BiConsumer.andThen(java.util.function.BiConsumer)java.util.function.BiConsumer
java.util.function.BiFunction.andThen(java.util.function.Function)java.util.function.BiFunction
java.util.function.BinaryOperator.minBy(java.util.Comparator)java.util.function.BinaryOperator
java.util.function.BinaryOperator.maxBy(java.util.Comparator)java.util.function.BinaryOperator
java.util.function.BiPredicate.and(java.util.function.BiPredicate)java.util.function.BiPredicate
java.util.function.BiPredicate.negate)java.util.function.BiPredicate
java.util.function.BiPredicate.or(java.util.function.BiPredicate)java.util.function.BiPredicate
java.util.function.Consumer.andThen(java.util.function.Consumer)java.util.function.Consumer
java.util.function.DoubleConsumer.andThen(java.util.function.DoubleConsumer)java.util.function.DoubleConsumer
java.util.function.DoublePredicate.and(java.util.function.DoublePredicate)java.util.function.DoublePredicate
java.util.function.DoublePredicate.negate)java.util.function.DoublePredicate
java.util.function.DoublePredicate.or(java.util.function.DoublePredicate)java.util.function.DoublePredicate
java.util.function.DoubleUnaryOperator.compose(java.util.function.DoubleUnaryOperator)java.util.function.DoubleUnaryOperator
java.util.function.DoubleUnaryOperator.andThen(java.util.function.DoubleUnaryOperator)java.util.function.DoubleUnaryOperator
java.util.function.DoubleUnaryOperator.identity)java.util.function.DoubleUnaryOperator
java.util.function.Function.compose(java.util.function.Function)java.util.function.Function
java.util.function.Function.andThen(java.util.function.Function)java.util.function.Function
java.util.function.Function.identity)java.util.function.Function
java.util.function.IntConsumer.andThen(java.util.function.IntConsumer)java.util.function.IntConsumer
java.util.function.IntPredicate.and(java.util.function.IntPredicate)java.util.function.IntPredicate
java.util.function.IntPredicate.negate)java.util.function.IntPredicate
java.util.function.IntPredicate.or(java.util.function.IntPredicate)java.util.function.IntPredicate
java.util.function.IntUnaryOperator.compose(java.util.function.IntUnaryOperator)java.util.function.IntUnaryOperator
java.util.function.IntUnaryOperator.andThen(java.util.function.IntUnaryOperator)java.util.function.IntUnaryOperator
java.util.function.IntUnaryOperator.identity)java.util.function.IntUnaryOperator
java.util.function.LongConsumer.andThen(java.util.function.LongConsumer)java.util.function.LongConsumer
java.util.function.LongPredicate.and(java.util.function.LongPredicate)java.util.function.LongPredicate
java.util.function.LongPredicate.negate)java.util.function.LongPredicate
java.util.function.LongPredicate.or(java.util.function.LongPredicate)java.util.function.LongPredicate
java.util.function.LongUnaryOperator.compose(java.util.function.LongUnaryOperator)java.util.function.LongUnaryOperator
java.util.function.LongUnaryOperator.andThen(java.util.function.LongUnaryOperator)java.util.function.LongUnaryOperator
java.util.function.LongUnaryOperator.identity)java.util.function.LongUnaryOperator
java.util.function.Predicate.and(java.util.function.Predicate)java.util.function.Predicate
java.util.function.Predicate.negate)java.util.function.Predicate
java.util.function.Predicate.or(java.util.function.Predicate)java.util.function.Predicate
java.util.function.Predicate.isEqual(Object)java.util.function.Predicate
java.util.function.UnaryOperator.identity)java.util.function.UnaryOperator
java.util.jar.Attributes.equals(Object)boolean
java.util.jar.Attributes.hashCode)int
java.util.jar.Attributes.toString)String
java.util.jar.Attributes.get(Object)Object
java.util.jar.Attributes.getValue(String)String
java.util.jar.Attributes.getValue(java.util.jar.Attributes.Name)String
java.util.jar.Attributes.put(Object,Object)Object
java.util.jar.Attributes.putValue(String,String)String
java.util.jar.Attributes.remove(Object)Object
java.util.jar.Attributes.containsValue(Object)boolean
java.util.jar.Attributes.containsKey(Object)boolean
java.util.jar.Attributes.putAll(Map)void
java.util.jar.Attributes.clear)void
java.util.jar.Attributes.size)int
java.util.jar.Attributes.isEmpty)boolean
java.util.jar.Attributes.keySet)Set
java.util.jar.Attributes.values)Collection
java.util.jar.Attributes.entrySet)Set
java.util.jar.Attributes.equals(Object)boolean
java.util.jar.Attributes.hashCode)int
java.util.jar.Attributes.clone)Object
java.util.jar.JarEntry.getAttributes)java.util.jar.Attributes
java.util.jar.JarFile.getManifest)java.util.jar.Manifest
java.util.jar.JarFile.getJarEntry(String)java.util.jar.JarEntry
java.util.jar.JarFile.getEntry(String)java.util.zip.ZipEntry
java.util.jar.JarFile.entries)java.util.Enumeration
java.util.jar.JarFile.stream)java.util.stream.Stream
java.util.jar.JarInputStream.getManifest)java.util.jar.Manifest
java.util.jar.JarInputStream.getNextEntry)java.util.zip.ZipEntry
java.util.jar.JarInputStream.getNextJarEntry)java.util.jar.JarEntry
java.util.jar.JarInputStream.read(byte,int,int)int
java.util.jar.JarInputStream.createZipEntry(String)java.util.zip.ZipEntry
java.util.jar.JarOutputStream.putNextEntry(java.util.zip.ZipEntry)void
java.util.jar.Manifest.getMainAttributes)java.util.jar.Attributes
java.util.jar.Manifest.getEntries)java.util.Map
java.util.jar.Manifest.getAttributes(String)java.util.jar.Attributes
java.util.jar.Manifest.clear)void
java.util.jar.Manifest.write(OutputStream)void
java.util.jar.Manifest.read(InputStream)void
java.util.jar.Manifest.equals(Object)boolean
java.util.jar.Manifest.hashCode)int
java.util.jar.Manifest.clone)Object
java.util.jar.Pack200.unpack(InputStream,java.util.jar.JarOutputStream)void
java.util.jar.Pack200.unpack(File,java.util.jar.JarOutputStream)void
java.util.jar.Pack200.addPropertyChangeListener(java.beans.PropertyChangeListener)void
java.util.jar.Pack200.removePropertyChangeListener(java.beans.PropertyChangeListener)void
java.util.jar.Pack200.pack(java.util.jar.JarFile,OutputStream)void
java.util.jar.Pack200.pack(java.util.jar.JarInputStream,OutputStream)void
java.util.jar.Pack200.addPropertyChangeListener(java.beans.PropertyChangeListener)void
java.util.jar.Pack200.removePropertyChangeListener(java.beans.PropertyChangeListener)void
java.util.jar.Pack200.newUnpacker)java.util.jar.Pack200.Unpacker
java.util.logging.ConsoleHandler.publish(java.util.logging.LogRecord)void
java.util.logging.ConsoleHandler.close)void
java.util.logging.Formatter.getHead(java.util.logging.Handler)String
java.util.logging.Formatter.getTail(java.util.logging.Handler)String
java.util.logging.Handler.close)void
java.util.logging.Handler.getFormatter)java.util.logging.Formatter
java.util.logging.Handler.getEncoding)String
java.util.logging.Handler.getFilter)java.util.logging.Filter
java.util.logging.Handler.getErrorManager)java.util.logging.ErrorManager
java.util.logging.Handler.reportError(String,Exception,int)void
java.util.logging.Handler.getLevel)java.util.logging.Level
java.util.logging.Handler.isLoggable(java.util.logging.LogRecord)boolean
java.util.logging.Level.getResourceBundleName)String
java.util.logging.Level.getName)String
java.util.logging.Level.getLocalizedName)String
java.util.logging.Level.toString)String
java.util.logging.Level.intValue)int
java.util.logging.Level.equals(Object)boolean
java.util.logging.Level.hashCode)int
java.util.logging.Logger.getGlobal)java.util.logging.Logger
java.util.logging.Logger.getLogger(String)java.util.logging.Logger
java.util.logging.Logger.getLogger(String,String)java.util.logging.Logger
java.util.logging.Logger.getAnonymousLogger)java.util.logging.Logger
java.util.logging.Logger.getAnonymousLogger(String)java.util.logging.Logger
java.util.logging.Logger.getResourceBundle)java.util.ResourceBundle
java.util.logging.Logger.getResourceBundleName)String
java.util.logging.Logger.setFilter(java.util.logging.Filter)void
java.util.logging.Logger.getFilter)java.util.logging.Filter
java.util.logging.Logger.log(java.util.logging.LogRecord)void
java.util.logging.Logger.log(java.util.logging.Level,String)void
java.util.logging.Logger.log(java.util.logging.Level,java.util.function.Supplier)void
java.util.logging.Logger.log(java.util.logging.Level,String,Object)void
java.util.logging.Logger.log(java.util.logging.Level,String,Object)void
java.util.logging.Logger.log(java.util.logging.Level,String,Throwable)void
java.util.logging.Logger.log(java.util.logging.Level,Throwable,java.util.function.Supplier)void
java.util.logging.Logger.logp(java.util.logging.Level,String,String,String)void
java.util.logging.Logger.logp(java.util.logging.Level,String,String,java.util.function.Supplier)void
java.util.logging.Logger.logp(java.util.logging.Level,String,String,String,Object)void
java.util.logging.Logger.logp(java.util.logging.Level,String,String,String,Object)void
java.util.logging.Logger.logp(java.util.logging.Level,String,String,String,Throwable)void
java.util.logging.Logger.logp(java.util.logging.Level,String,String,Throwable,java.util.function.Supplier)void
java.util.logging.Logger.logrb(java.util.logging.Level,String,String,String,String)void
java.util.logging.Logger.logrb(java.util.logging.Level,String,String,String,String,Object)void
java.util.logging.Logger.logrb(java.util.logging.Level,String,String,String,String,Object)void
java.util.logging.Logger.logrb(java.util.logging.Level,String,String,String,String,Throwable)void
java.util.logging.Logger.logrb(java.util.logging.Level,String,String,java.util.ResourceBundle,String,Throwable)void
java.util.logging.Logger.entering(String,String)void
java.util.logging.Logger.entering(String,String,Object)void
java.util.logging.Logger.entering(String,String,Object)void
java.util.logging.Logger.exiting(String,String)void
java.util.logging.Logger.exiting(String,String,Object)void
java.util.logging.Logger.throwing(String,String,Throwable)void
java.util.logging.Logger.severe(String)void
java.util.logging.Logger.warning(String)void
java.util.logging.Logger.info(String)void
java.util.logging.Logger.config(String)void
java.util.logging.Logger.fine(String)void
java.util.logging.Logger.finer(String)void
java.util.logging.Logger.finest(String)void
java.util.logging.Logger.severe(java.util.function.Supplier)void
java.util.logging.Logger.warning(java.util.function.Supplier)void
java.util.logging.Logger.info(java.util.function.Supplier)void
java.util.logging.Logger.config(java.util.function.Supplier)void
java.util.logging.Logger.fine(java.util.function.Supplier)void
java.util.logging.Logger.finer(java.util.function.Supplier)void
java.util.logging.Logger.finest(java.util.function.Supplier)void
java.util.logging.Logger.setLevel(java.util.logging.Level)void
java.util.logging.Logger.getLevel)java.util.logging.Level
java.util.logging.Logger.isLoggable(java.util.logging.Level)boolean
java.util.logging.Logger.getName)String
java.util.logging.Logger.addHandler(java.util.logging.Handler)void
java.util.logging.Logger.removeHandler(java.util.logging.Handler)void
java.util.logging.Logger.setUseParentHandlers(boolean)void
java.util.logging.Logger.getUseParentHandlers)boolean
java.util.logging.Logger.setResourceBundle(java.util.ResourceBundle)void
java.util.logging.Logger.getParent)java.util.logging.Logger
java.util.logging.Logger.setParent(java.util.logging.Logger)void
java.util.logging.LogManager.getLogManager)java.util.logging.LogManager
java.util.logging.LogManager.addPropertyChangeListener(java.beans.PropertyChangeListener)void
java.util.logging.LogManager.removePropertyChangeListener(java.beans.PropertyChangeListener)void
java.util.logging.LogManager.addLogger(java.util.logging.Logger)boolean
java.util.logging.LogManager.getLogger(String)java.util.logging.Logger
java.util.logging.LogManager.getLoggerNames)java.util.Enumeration
java.util.logging.LogManager.readConfiguration)void
java.util.logging.LogManager.reset)void
java.util.logging.LogManager.readConfiguration(java.io.InputStream)void
java.util.logging.LogManager.getProperty(String)String
java.util.logging.LogManager.checkAccess)void
java.util.logging.LogRecord.getLoggerName)String
java.util.logging.LogRecord.setLoggerName(String)void
java.util.logging.LogRecord.getResourceBundle)java.util.ResourceBundle
java.util.logging.LogRecord.setResourceBundle(java.util.ResourceBundle)void
java.util.logging.LogRecord.getResourceBundleName)String
java.util.logging.LogRecord.setResourceBundleName(String)void
java.util.logging.LogRecord.getLevel)java.util.logging.Level
java.util.logging.LogRecord.setLevel(java.util.logging.Level)void
java.util.logging.LogRecord.getSequenceNumber)long
java.util.logging.LogRecord.setSequenceNumber(long)void
java.util.logging.LogRecord.getSourceClassName)String
java.util.logging.LogRecord.setSourceClassName(String)void
java.util.logging.LogRecord.getSourceMethodName)String
java.util.logging.LogRecord.setSourceMethodName(String)void
java.util.logging.LogRecord.getMessage)String
java.util.logging.LogRecord.setMessage(String)void
java.util.logging.LogRecord.setParameters(Object)void
java.util.logging.LogRecord.getThreadID)int
java.util.logging.LogRecord.setThreadID(int)void
java.util.logging.LogRecord.getMillis)long
java.util.logging.LogRecord.setMillis(long)void
java.util.logging.LogRecord.getThrown)Throwable
java.util.logging.LogRecord.setThrown(Throwable)void
java.util.logging.MemoryHandler.flush)void
java.util.logging.MemoryHandler.close)void
java.util.logging.MemoryHandler.getPushLevel)java.util.logging.Level
java.util.logging.MemoryHandler.isLoggable(java.util.logging.LogRecord)boolean
java.util.logging.StreamHandler.isLoggable(java.util.logging.LogRecord)boolean
java.util.logging.XMLFormatter.format(java.util.logging.LogRecord)String
java.util.logging.XMLFormatter.getHead(java.util.logging.Handler)String
java.util.logging.XMLFormatter.getTail(java.util.logging.Handler)String
java.util.prefs.AbstractPreferences.put(String,String)void
java.util.prefs.AbstractPreferences.get(String,String)String
java.util.prefs.AbstractPreferences.remove(String)void
java.util.prefs.AbstractPreferences.clear)void
java.util.prefs.AbstractPreferences.putInt(String,int)void
java.util.prefs.AbstractPreferences.getInt(String,int)int
java.util.prefs.AbstractPreferences.putLong(String,long)void
java.util.prefs.AbstractPreferences.getLong(String,long)long
java.util.prefs.AbstractPreferences.putBoolean(String,boolean)void
java.util.prefs.AbstractPreferences.getBoolean(String,boolean)boolean
java.util.prefs.AbstractPreferences.putFloat(String,float)void
java.util.prefs.AbstractPreferences.getFloat(String,float)float
java.util.prefs.AbstractPreferences.putDouble(String,double)void
java.util.prefs.AbstractPreferences.getDouble(String,double)double
java.util.prefs.AbstractPreferences.putByteArray(String,byte)void
java.util.prefs.AbstractPreferences.parent)java.util.prefs.Preferences
java.util.prefs.AbstractPreferences.node(String)java.util.prefs.Preferences
java.util.prefs.AbstractPreferences.nodeExists(String)boolean
java.util.prefs.AbstractPreferences.removeNode)void
java.util.prefs.AbstractPreferences.name)String
java.util.prefs.AbstractPreferences.absolutePath)String
java.util.prefs.AbstractPreferences.isUserNode)boolean
java.util.prefs.AbstractPreferences.addPreferenceChangeListener(java.util.prefs.PreferenceChangeListener)void
java.util.prefs.AbstractPreferences.removePreferenceChangeListener(java.util.prefs.PreferenceChangeListener)void
java.util.prefs.AbstractPreferences.addNodeChangeListener(java.util.prefs.NodeChangeListener)void
java.util.prefs.AbstractPreferences.removeNodeChangeListener(java.util.prefs.NodeChangeListener)void
java.util.prefs.AbstractPreferences.removeNodeSpi)void
java.util.prefs.AbstractPreferences.getChild(String)java.util.prefs.AbstractPreferences
java.util.prefs.AbstractPreferences.toString)String
java.util.prefs.AbstractPreferences.sync)void
java.util.prefs.AbstractPreferences.syncSpi)void
java.util.prefs.AbstractPreferences.flush)void
java.util.prefs.AbstractPreferences.flushSpi)void
java.util.prefs.AbstractPreferences.isRemoved)boolean
java.util.prefs.AbstractPreferences.exportNode(java.io.OutputStream)void
java.util.prefs.AbstractPreferences.exportSubtree(java.io.OutputStream)void
java.util.prefs.NodeChangeEvent.getParent)java.util.prefs.Preferences
java.util.prefs.NodeChangeEvent.getChild)java.util.prefs.Preferences
java.util.prefs.PreferenceChangeEvent.getNode)java.util.prefs.Preferences
java.util.prefs.PreferenceChangeEvent.getKey)String
java.util.prefs.PreferenceChangeEvent.getNewValue)String
java.util.prefs.Preferences.userNodeForPackage(Class)java.util.prefs.Preferences
java.util.prefs.Preferences.systemNodeForPackage(Class)java.util.prefs.Preferences
java.util.prefs.Preferences.userRoot)java.util.prefs.Preferences
java.util.prefs.Preferences.systemRoot)java.util.prefs.Preferences
java.util.prefs.Preferences.clear)void
java.util.prefs.Preferences.nodeExists(String)boolean
java.util.prefs.Preferences.removeNode)void
java.util.prefs.Preferences.flush)void
java.util.prefs.Preferences.sync)void
java.util.prefs.Preferences.exportNode(OutputStream)void
java.util.prefs.Preferences.exportSubtree(OutputStream)void
java.util.prefs.Preferences.importPreferences(InputStream)void
java.util.regex.Matcher.pattern)java.util.regex.Pattern
java.util.regex.Matcher.toMatchResult)java.util.regex.MatchResult
java.util.regex.Matcher.usePattern(java.util.regex.Pattern)java.util.regex.Matcher
java.util.regex.Matcher.reset)java.util.regex.Matcher
java.util.regex.Matcher.reset(CharSequence)java.util.regex.Matcher
java.util.regex.Matcher.start)int
java.util.regex.Matcher.start(int)int
java.util.regex.Matcher.start(String)int
java.util.regex.Matcher.end)int
java.util.regex.Matcher.end(int)int
java.util.regex.Matcher.end(String)int
java.util.regex.Matcher.group)String
java.util.regex.Matcher.group(int)String
java.util.regex.Matcher.group(String)String
java.util.regex.Matcher.groupCount)int
java.util.regex.Matcher.matches)boolean
java.util.regex.Matcher.find)boolean
java.util.regex.Matcher.find(int)boolean
java.util.regex.Matcher.lookingAt)boolean
java.util.regex.Matcher.quoteReplacement(String)String
java.util.regex.Matcher.appendReplacement(StringBuffer,String)java.util.regex.Matcher
java.util.regex.Matcher.appendTail(StringBuffer)StringBuffer
java.util.regex.Matcher.replaceAll(String)String
java.util.regex.Matcher.replaceFirst(String)String
java.util.regex.Matcher.region(int,int)java.util.regex.Matcher
java.util.regex.Matcher.regionStart)int
java.util.regex.Matcher.regionEnd)int
java.util.regex.Matcher.hasTransparentBounds)boolean
java.util.regex.Matcher.useTransparentBounds(boolean)java.util.regex.Matcher
java.util.regex.Matcher.hasAnchoringBounds)boolean
java.util.regex.Matcher.useAnchoringBounds(boolean)java.util.regex.Matcher
java.util.regex.Matcher.toString)String
java.util.regex.Matcher.hitEnd)boolean
java.util.regex.Matcher.requireEnd)boolean
java.util.regex.Pattern.compile(String)java.util.regex.Pattern
java.util.regex.Pattern.compile(String,int)java.util.regex.Pattern
java.util.regex.Pattern.pattern)String
java.util.regex.Pattern.toString)String
java.util.regex.Pattern.matcher(CharSequence)java.util.regex.Matcher
java.util.regex.Pattern.flags)int
java.util.regex.Pattern.matches(String,CharSequence)boolean
java.util.regex.Pattern.quote(String)String
java.util.regex.Pattern.asPredicate)java.util.function.Predicate
java.util.regex.Pattern.splitAsStream(CharSequence)java.util.stream.Stream
java.util.regex.PatternSyntaxException.getIndex)int
java.util.regex.PatternSyntaxException.getDescription)String
java.util.regex.PatternSyntaxException.getPattern)String
java.util.regex.PatternSyntaxException.getMessage)String
java.util.stream.Collector.valueOf(String)Characteristics
java.util.stream.Collectors.toCollection(Supplier)java.util.stream.Collector
java.util.stream.Collectors.toList)java.util.stream.Collector
java.util.stream.Collectors.toSet)java.util.stream.Collector
java.util.stream.Collectors.joining)java.util.stream.Collector
java.util.stream.Collectors.joining(CharSequence)java.util.stream.Collector
java.util.stream.Collectors.joining(CharSequence,CharSequence,CharSequence)java.util.stream.Collector
java.util.stream.Collectors.mapping(Function,java.util.stream.Collector)java.util.stream.Collector
java.util.stream.Collectors.collectingAndThen(java.util.stream.Collector,Function)java.util.stream.Collector
java.util.stream.Collectors.counting)java.util.stream.Collector
java.util.stream.Collectors.minBy(java.util.Comparator)java.util.stream.Collector
java.util.stream.Collectors.maxBy(java.util.Comparator)java.util.stream.Collector
java.util.stream.Collectors.summingInt(ToIntFunction)java.util.stream.Collector
java.util.stream.Collectors.summingLong(ToLongFunction)java.util.stream.Collector
java.util.stream.Collectors.summingDouble(ToDoubleFunction)java.util.stream.Collector
java.util.stream.Collectors.averagingInt(ToIntFunction)java.util.stream.Collector
java.util.stream.Collectors.averagingLong(ToLongFunction)java.util.stream.Collector
java.util.stream.Collectors.averagingDouble(ToDoubleFunction)java.util.stream.Collector
java.util.stream.Collectors.reducing(Object,BinaryOperator)java.util.stream.Collector
java.util.stream.Collectors.reducing(BinaryOperator)java.util.stream.Collector
java.util.stream.Collectors.reducing(Object,Function,BinaryOperator)java.util.stream.Collector
java.util.stream.Collectors.groupingBy(Function)java.util.stream.Collector
java.util.stream.Collectors.groupingBy(Function,java.util.stream.Collector)java.util.stream.Collector
java.util.stream.Collectors.groupingBy(Function,Supplier,java.util.stream.Collector)java.util.stream.Collector
java.util.stream.Collectors.groupingByConcurrent(Function)java.util.stream.Collector
java.util.stream.Collectors.groupingByConcurrent(Function,java.util.stream.Collector)java.util.stream.Collector
java.util.stream.Collectors.groupingByConcurrent(Function,Supplier,java.util.stream.Collector)java.util.stream.Collector
java.util.stream.Collectors.partitioningBy(Predicate)java.util.stream.Collector
java.util.stream.Collectors.partitioningBy(Predicate,java.util.stream.Collector)java.util.stream.Collector
java.util.stream.Collectors.toMap(Function,Function)java.util.stream.Collector
java.util.stream.Collectors.toMap(Function,Function,BinaryOperator)java.util.stream.Collector
java.util.stream.Collectors.toMap(Function,Function,BinaryOperator,Supplier)java.util.stream.Collector
java.util.stream.Collectors.toConcurrentMap(Function,Function)java.util.stream.Collector
java.util.stream.Collectors.toConcurrentMap(Function,Function,BinaryOperator)java.util.stream.Collector
java.util.stream.Collectors.toConcurrentMap(Function,Function,BinaryOperator,Supplier)java.util.stream.Collector
java.util.stream.Collectors.summarizingInt(ToIntFunction)java.util.stream.Collector
java.util.stream.Collectors.summarizingLong(ToLongFunction)java.util.stream.Collector
java.util.stream.Collectors.summarizingDouble(ToDoubleFunction)java.util.stream.Collector
java.util.stream.DoubleStream.add(double)java.util.stream.DoubleStream.Builder
java.util.stream.DoubleStream.builder)java.util.stream.DoubleStream.Builder
java.util.stream.DoubleStream.empty)java.util.stream.DoubleStream
java.util.stream.DoubleStream.of(double)java.util.stream.DoubleStream
java.util.stream.DoubleStream.iterate(double,DoubleUnaryOperator)java.util.stream.DoubleStream
java.util.stream.DoubleStream.generate(DoubleSupplier)java.util.stream.DoubleStream
java.util.stream.DoubleStream.concat(java.util.stream.DoubleStream,java.util.stream.DoubleStream)java.util.stream.DoubleStream
java.util.stream.IntStream.add(int)java.util.stream.IntStream.Builder
java.util.stream.IntStream.builder)java.util.stream.IntStream.Builder
java.util.stream.IntStream.empty)java.util.stream.IntStream
java.util.stream.IntStream.of(int)java.util.stream.IntStream
java.util.stream.IntStream.iterate(int,IntUnaryOperator)java.util.stream.IntStream
java.util.stream.IntStream.generate(IntSupplier)java.util.stream.IntStream
java.util.stream.IntStream.range(int,int)java.util.stream.IntStream
java.util.stream.IntStream.rangeClosed(int,int)java.util.stream.IntStream
java.util.stream.IntStream.concat(java.util.stream.IntStream,java.util.stream.IntStream)java.util.stream.IntStream
java.util.stream.LongStream.add(long)java.util.stream.LongStream.Builder
java.util.stream.LongStream.builder)java.util.stream.LongStream.Builder
java.util.stream.LongStream.empty)java.util.stream.LongStream
java.util.stream.LongStream.of(long)java.util.stream.LongStream
java.util.stream.LongStream.iterate(long,LongUnaryOperator)java.util.stream.LongStream
java.util.stream.LongStream.generate(LongSupplier)java.util.stream.LongStream
java.util.stream.LongStream.range(long,long)java.util.stream.LongStream
java.util.stream.LongStream.rangeClosed(long,long)java.util.stream.LongStream
java.util.stream.LongStream.concat(java.util.stream.LongStream,java.util.stream.LongStream)java.util.stream.LongStream
java.util.stream.Stream.add(Object)java.util.stream.Stream.Builder
java.util.stream.Stream.builder)java.util.stream.Stream.Builder
java.util.stream.Stream.empty)java.util.stream.Stream
java.util.stream.Stream.of(Object)java.util.stream.Stream
java.util.stream.Stream.iterate(Object,UnaryOperator)java.util.stream.Stream
java.util.stream.Stream.generate(Supplier)java.util.stream.Stream
java.util.stream.Stream.concat(java.util.stream.Stream,java.util.stream.Stream)java.util.stream.Stream
java.util.stream.StreamSupport.stream(java.util.Spliterator,boolean)java.util.stream.Stream
java.util.stream.StreamSupport.stream(java.util.function.Supplier,int,boolean)java.util.stream.Stream
java.util.stream.StreamSupport.intStream(java.util.Spliterator.OfInt,boolean)java.util.stream.IntStream
java.util.stream.StreamSupport.intStream(java.util.function.Supplier,int,boolean)java.util.stream.IntStream
java.util.stream.StreamSupport.longStream(java.util.Spliterator.OfLong,boolean)java.util.stream.LongStream
java.util.stream.StreamSupport.longStream(java.util.function.Supplier,int,boolean)java.util.stream.LongStream
java.util.stream.StreamSupport.doubleStream(java.util.Spliterator.OfDouble,boolean)java.util.stream.DoubleStream
java.util.stream.StreamSupport.doubleStream(java.util.function.Supplier,int,boolean)java.util.stream.DoubleStream
java.util.zip.Adler32.update(int)void
java.util.zip.Adler32.update(byte,int,int)void
java.util.zip.Adler32.update(byte)void
java.util.zip.Adler32.update(java.nio.ByteBuffer)void
java.util.zip.Adler32.reset)void
java.util.zip.Adler32.getValue)long
java.util.zip.CheckedInputStream.read)int
java.util.zip.CheckedInputStream.read(byte,int,int)int
java.util.zip.CheckedInputStream.skip(long)long
java.util.zip.CheckedInputStream.getChecksum)java.util.zip.Checksum
java.util.zip.CheckedOutputStream.write(int)void
java.util.zip.CheckedOutputStream.write(byte,int,int)void
java.util.zip.CheckedOutputStream.getChecksum)java.util.zip.Checksum
java.util.zip.CRC32.update(int)void
java.util.zip.CRC32.update(byte,int,int)void
java.util.zip.CRC32.update(byte)void
java.util.zip.CRC32.update(java.nio.ByteBuffer)void
java.util.zip.CRC32.reset)void
java.util.zip.CRC32.getValue)long
java.util.zip.Deflater.setInput(byte,int,int)void
java.util.zip.Deflater.setInput(byte)void
java.util.zip.Deflater.setDictionary(byte,int,int)void
java.util.zip.Deflater.setDictionary(byte)void
java.util.zip.Deflater.setStrategy(int)void
java.util.zip.Deflater.setLevel(int)void
java.util.zip.Deflater.needsInput)boolean
java.util.zip.Deflater.finish)void
java.util.zip.Deflater.finished)boolean
java.util.zip.Deflater.deflate(byte,int,int)int
java.util.zip.Deflater.deflate(byte)int
java.util.zip.Deflater.deflate(byte,int,int,int)int
java.util.zip.Deflater.getAdler)int
java.util.zip.Deflater.getTotalIn)int
java.util.zip.Deflater.getBytesRead)long
java.util.zip.Deflater.getTotalOut)int
java.util.zip.Deflater.getBytesWritten)long
java.util.zip.Deflater.reset)void
java.util.zip.Deflater.end)void
java.util.zip.Deflater.finalize)void
java.util.zip.DeflaterInputStream.close)void
java.util.zip.DeflaterInputStream.read)int
java.util.zip.DeflaterInputStream.read(byte,int,int)int
java.util.zip.DeflaterInputStream.skip(long)long
java.util.zip.DeflaterInputStream.available)int
java.util.zip.DeflaterInputStream.markSupported)boolean
java.util.zip.DeflaterInputStream.mark(int)void
java.util.zip.DeflaterInputStream.reset)void
java.util.zip.DeflaterOutputStream.write(int)void
java.util.zip.DeflaterOutputStream.write(byte,int,int)void
java.util.zip.DeflaterOutputStream.finish)void
java.util.zip.DeflaterOutputStream.close)void
java.util.zip.DeflaterOutputStream.deflate)void
java.util.zip.DeflaterOutputStream.flush)void
java.util.zip.GZIPInputStream.read(byte,int,int)int
java.util.zip.GZIPInputStream.close)void
java.util.zip.GZIPOutputStream.finish)void
java.util.zip.Inflater.setInput(byte,int,int)void
java.util.zip.Inflater.setInput(byte)void
java.util.zip.Inflater.setDictionary(byte,int,int)void
java.util.zip.Inflater.setDictionary(byte)void
java.util.zip.Inflater.getRemaining)int
java.util.zip.Inflater.needsInput)boolean
java.util.zip.Inflater.needsDictionary)boolean
java.util.zip.Inflater.finished)boolean
java.util.zip.Inflater.inflate(byte,int,int)int
java.util.zip.Inflater.inflate(byte)int
java.util.zip.Inflater.getAdler)int
java.util.zip.Inflater.getTotalIn)int
java.util.zip.Inflater.getBytesRead)long
java.util.zip.Inflater.getTotalOut)int
java.util.zip.Inflater.getBytesWritten)long
java.util.zip.Inflater.reset)void
java.util.zip.Inflater.end)void
java.util.zip.Inflater.finalize)void
java.util.zip.InflaterInputStream.read)int
java.util.zip.InflaterInputStream.read(byte,int,int)int
java.util.zip.InflaterInputStream.available)int
java.util.zip.InflaterInputStream.skip(long)long
java.util.zip.InflaterInputStream.close)void
java.util.zip.InflaterInputStream.fill)void
java.util.zip.InflaterInputStream.markSupported)boolean
java.util.zip.InflaterOutputStream.close)void
java.util.zip.InflaterOutputStream.flush)void
java.util.zip.InflaterOutputStream.finish)void
java.util.zip.InflaterOutputStream.write(int)void
java.util.zip.InflaterOutputStream.write(byte,int,int)void
java.util.zip.ZipEntry.getName)String
java.util.zip.ZipEntry.setTime(long)void
java.util.zip.ZipEntry.getTime)long
java.util.zip.ZipEntry.setLastModifiedTime(java.nio.file.attribute.FileTime)java.util.zip.ZipEntry
java.util.zip.ZipEntry.getLastModifiedTime)java.nio.file.attribute.FileTime
java.util.zip.ZipEntry.setLastAccessTime(java.nio.file.attribute.FileTime)java.util.zip.ZipEntry
java.util.zip.ZipEntry.getLastAccessTime)java.nio.file.attribute.FileTime
java.util.zip.ZipEntry.setCreationTime(java.nio.file.attribute.FileTime)java.util.zip.ZipEntry
java.util.zip.ZipEntry.getCreationTime)java.nio.file.attribute.FileTime
java.util.zip.ZipEntry.setSize(long)void
java.util.zip.ZipEntry.getSize)long
java.util.zip.ZipEntry.getCompressedSize)long
java.util.zip.ZipEntry.setCompressedSize(long)void
java.util.zip.ZipEntry.setCrc(long)void
java.util.zip.ZipEntry.getCrc)long
java.util.zip.ZipEntry.setMethod(int)void
java.util.zip.ZipEntry.getMethod)int
java.util.zip.ZipEntry.setExtra(byte)void
java.util.zip.ZipEntry.setComment(String)void
java.util.zip.ZipEntry.getComment)String
java.util.zip.ZipEntry.isDirectory)boolean
java.util.zip.ZipEntry.toString)String
java.util.zip.ZipEntry.hashCode)int
java.util.zip.ZipEntry.clone)Object
java.util.zip.ZipFile.getComment)String
java.util.zip.ZipFile.getEntry(String)java.util.zip.ZipEntry
java.util.zip.ZipFile.getInputStream(java.util.zip.ZipEntry)InputStream
java.util.zip.ZipFile.getName)String
java.util.zip.ZipFile.entries)java.util.Enumeration
java.util.zip.ZipFile.stream)java.util.stream.Stream
java.util.zip.ZipFile.size)int
java.util.zip.ZipFile.close)void
java.util.zip.ZipFile.finalize)void
java.util.zip.ZipInputStream.getNextEntry)java.util.zip.ZipEntry
java.util.zip.ZipInputStream.closeEntry)void
java.util.zip.ZipInputStream.available)int
java.util.zip.ZipInputStream.read(byte,int,int)int
java.util.zip.ZipInputStream.skip(long)long
java.util.zip.ZipInputStream.close)void
java.util.zip.ZipInputStream.createZipEntry(String)java.util.zip.ZipEntry
java.util.zip.ZipOutputStream.setComment(String)void
java.util.zip.ZipOutputStream.setMethod(int)void
java.util.zip.ZipOutputStream.setLevel(int)void
java.util.zip.ZipOutputStream.putNextEntry(java.util.zip.ZipEntry)void
java.util.zip.ZipOutputStream.closeEntry)void
java.util.zip.ZipOutputStream.finish)void
java.util.zip.ZipOutputStream.close)void
javax.crypto.Cipher.getInstance(String)javax.crypto.Cipher
javax.crypto.Cipher.getInstance(String,String)javax.crypto.Cipher
javax.crypto.Cipher.getInstance(String,Provider)javax.crypto.Cipher
javax.crypto.Cipher.getProvider)Provider
javax.crypto.Cipher.getAlgorithm)String
javax.crypto.Cipher.getBlockSize)int
javax.crypto.Cipher.getOutputSize(int)int
javax.crypto.Cipher.getParameters)AlgorithmParameters
javax.crypto.Cipher.getExemptionMechanism)javax.crypto.ExemptionMechanism
javax.crypto.Cipher.init(int,Key)void
javax.crypto.Cipher.init(int,Key,SecureRandom)void
javax.crypto.Cipher.init(int,Key,java.security.spec.AlgorithmParameterSpec)void
javax.crypto.Cipher.init(int,Key,java.security.spec.AlgorithmParameterSpec,SecureRandom)void
javax.crypto.Cipher.init(int,Key,AlgorithmParameters)void
javax.crypto.Cipher.init(int,Key,AlgorithmParameters,SecureRandom)void
javax.crypto.Cipher.init(int,java.security.cert.Certificate)void
javax.crypto.Cipher.init(int,java.security.cert.Certificate,SecureRandom)void
javax.crypto.Cipher.update(byte,int,int,byte)int
javax.crypto.Cipher.update(byte,int,int,byte,int)int
javax.crypto.Cipher.update(java.nio.ByteBuffer,java.nio.ByteBuffer)int
javax.crypto.Cipher.doFinal(byte,int)int
javax.crypto.Cipher.doFinal(byte,int,int,byte)int
javax.crypto.Cipher.doFinal(byte,int,int,byte,int)int
javax.crypto.Cipher.doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer)int
javax.crypto.Cipher.unwrap(byte,String,int)Key
javax.crypto.Cipher.getMaxAllowedKeyLength(String)int
javax.crypto.Cipher.getMaxAllowedParameterSpec(String)java.security.spec.AlgorithmParameterSpec
javax.crypto.Cipher.updateAAD(byte)void
javax.crypto.Cipher.updateAAD(byte,int,int)void
javax.crypto.Cipher.updateAAD(java.nio.ByteBuffer)void
javax.crypto.CipherInputStream.read)int
javax.crypto.CipherInputStream.read(byte)int
javax.crypto.CipherInputStream.read(byte,int,int)int
javax.crypto.CipherInputStream.skip(long)long
javax.crypto.CipherInputStream.available)int
javax.crypto.CipherInputStream.close)void
javax.crypto.CipherInputStream.markSupported)boolean
javax.crypto.CipherOutputStream.write(int)void
javax.crypto.CipherOutputStream.write(byte)void
javax.crypto.CipherOutputStream.write(byte,int,int)void
javax.crypto.CipherOutputStream.flush)void
javax.crypto.CipherOutputStream.close)void
javax.crypto.CipherSpi.engineSetMode(String)void
javax.crypto.CipherSpi.engineSetPadding(String)void
javax.crypto.CipherSpi.engineInit(int,Key,SecureRandom)void
javax.crypto.CipherSpi.engineInit(int,Key,java.security.spec.AlgorithmParameterSpec,SecureRandom)void
javax.crypto.CipherSpi.engineInit(int,Key,AlgorithmParameters,SecureRandom)void
javax.crypto.CipherSpi.engineUpdate(byte,int,int,byte,int)int
javax.crypto.CipherSpi.engineUpdate(java.nio.ByteBuffer,java.nio.ByteBuffer)int
javax.crypto.CipherSpi.engineDoFinal(byte,int,int,byte,int)int
javax.crypto.CipherSpi.engineDoFinal(java.nio.ByteBuffer,java.nio.ByteBuffer)int
javax.crypto.CipherSpi.engineUnwrap(byte,String,int)Key
javax.crypto.CipherSpi.engineGetKeySize(Key)int
javax.crypto.CipherSpi.engineUpdateAAD(byte,int,int)void
javax.crypto.CipherSpi.engineUpdateAAD(java.nio.ByteBuffer)void
javax.crypto.EncryptedPrivateKeyInfo.getAlgName)String
javax.crypto.EncryptedPrivateKeyInfo.getAlgParameters)AlgorithmParameters
javax.crypto.EncryptedPrivateKeyInfo.getKeySpec(javax.crypto.Cipher)java.security.spec.PKCS8EncodedKeySpec
javax.crypto.EncryptedPrivateKeyInfo.getKeySpec(Key)java.security.spec.PKCS8EncodedKeySpec
javax.crypto.EncryptedPrivateKeyInfo.getKeySpec(Key,String)java.security.spec.PKCS8EncodedKeySpec
javax.crypto.EncryptedPrivateKeyInfo.getKeySpec(Key,Provider)java.security.spec.PKCS8EncodedKeySpec
javax.crypto.ExemptionMechanism.getName)String
javax.crypto.ExemptionMechanism.getInstance(String)javax.crypto.ExemptionMechanism
javax.crypto.ExemptionMechanism.getInstance(String,String)javax.crypto.ExemptionMechanism
javax.crypto.ExemptionMechanism.getInstance(String,Provider)javax.crypto.ExemptionMechanism
javax.crypto.ExemptionMechanism.getProvider)Provider
javax.crypto.ExemptionMechanism.isCryptoAllowed(Key)boolean
javax.crypto.ExemptionMechanism.getOutputSize(int)int
javax.crypto.ExemptionMechanism.init(Key)void
javax.crypto.ExemptionMechanism.init(Key,java.security.spec.AlgorithmParameterSpec)void
javax.crypto.ExemptionMechanism.init(Key,AlgorithmParameters)void
javax.crypto.ExemptionMechanism.genExemptionBlob(byte)int
javax.crypto.ExemptionMechanism.genExemptionBlob(byte,int)int
javax.crypto.ExemptionMechanismSpi.engineInit(Key)void
javax.crypto.ExemptionMechanismSpi.engineInit(Key,java.security.spec.AlgorithmParameterSpec)void
javax.crypto.ExemptionMechanismSpi.engineInit(Key,AlgorithmParameters)void
javax.crypto.ExemptionMechanismSpi.engineGenExemptionBlob(byte,int)int
javax.crypto.KeyAgreement.getAlgorithm)String
javax.crypto.KeyAgreement.getInstance(String)javax.crypto.KeyAgreement
javax.crypto.KeyAgreement.getInstance(String,String)javax.crypto.KeyAgreement
javax.crypto.KeyAgreement.getInstance(String,Provider)javax.crypto.KeyAgreement
javax.crypto.KeyAgreement.getProvider)Provider
javax.crypto.KeyAgreement.init(Key)void
javax.crypto.KeyAgreement.init(Key,SecureRandom)void
javax.crypto.KeyAgreement.init(Key,java.security.spec.AlgorithmParameterSpec)void
javax.crypto.KeyAgreement.init(Key,java.security.spec.AlgorithmParameterSpec,SecureRandom)void
javax.crypto.KeyAgreement.doPhase(Key,boolean)Key
javax.crypto.KeyAgreement.generateSecret(byte,int)int
javax.crypto.KeyAgreement.generateSecret(String)javax.crypto.SecretKey
javax.crypto.KeyAgreementSpi.engineInit(Key,SecureRandom)void
javax.crypto.KeyAgreementSpi.engineInit(Key,java.security.spec.AlgorithmParameterSpec,SecureRandom)void
javax.crypto.KeyAgreementSpi.engineDoPhase(Key,boolean)Key
javax.crypto.KeyAgreementSpi.engineGenerateSecret(byte,int)int
javax.crypto.KeyAgreementSpi.engineGenerateSecret(String)javax.crypto.SecretKey
javax.crypto.KeyGenerator.getAlgorithm)String
javax.crypto.KeyGenerator.getInstance(String)javax.crypto.KeyGenerator
javax.crypto.KeyGenerator.getInstance(String,String)javax.crypto.KeyGenerator
javax.crypto.KeyGenerator.getInstance(String,Provider)javax.crypto.KeyGenerator
javax.crypto.KeyGenerator.getProvider)Provider
javax.crypto.KeyGenerator.init(SecureRandom)void
javax.crypto.KeyGenerator.init(java.security.spec.AlgorithmParameterSpec)void
javax.crypto.KeyGenerator.init(java.security.spec.AlgorithmParameterSpec,SecureRandom)void
javax.crypto.KeyGenerator.init(int)void
javax.crypto.KeyGenerator.init(int,SecureRandom)void
javax.crypto.KeyGenerator.generateKey)javax.crypto.SecretKey
javax.crypto.KeyGeneratorSpi.engineInit(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)void
javax.crypto.Mac.getAlgorithm)String
javax.crypto.Mac.getInstance(String)javax.crypto.Mac
javax.crypto.Mac.getInstance(String,String)javax.crypto.Mac
javax.crypto.Mac.getInstance(String,Provider)javax.crypto.Mac
javax.crypto.Mac.getProvider)Provider
javax.crypto.Mac.getMacLength)int
javax.crypto.Mac.init(Key)void
javax.crypto.Mac.init(Key,java.security.spec.AlgorithmParameterSpec)void
javax.crypto.Mac.update(byte)void
javax.crypto.Mac.update(byte)void
javax.crypto.Mac.update(byte,int,int)void
javax.crypto.Mac.update(java.nio.ByteBuffer)void
javax.crypto.Mac.doFinal(byte,int)void
javax.crypto.Mac.reset)void
javax.crypto.Mac.clone)Object
javax.crypto.MacSpi.engineInit(Key,java.security.spec.AlgorithmParameterSpec)void
javax.crypto.MacSpi.engineUpdate(java.nio.ByteBuffer)void
javax.crypto.MacSpi.clone)Object
javax.crypto.SealedObject.getAlgorithm)String
javax.crypto.SealedObject.getObject(Key)Object
javax.crypto.SealedObject.getObject(javax.crypto.Cipher)Object
javax.crypto.SealedObject.getObject(Key,String)Object
javax.crypto.SecretKeyFactory.getInstance(String)javax.crypto.SecretKeyFactory
javax.crypto.SecretKeyFactory.getInstance(String,String)javax.crypto.SecretKeyFactory
javax.crypto.SecretKeyFactory.getInstance(String,Provider)javax.crypto.SecretKeyFactory
javax.crypto.SecretKeyFactory.getProvider)Provider
javax.crypto.SecretKeyFactory.getAlgorithm)String
javax.crypto.SecretKeyFactory.generateSecret(java.security.spec.KeySpec)javax.crypto.SecretKey
javax.crypto.SecretKeyFactory.getKeySpec(javax.crypto.SecretKey,Class)java.security.spec.KeySpec
javax.crypto.SecretKeyFactory.translateKey(javax.crypto.SecretKey)javax.crypto.SecretKey
javax.crypto.SecretKeyFactorySpi.engineGenerateSecret(java.security.spec.KeySpec)javax.crypto.SecretKey
javax.crypto.SecretKeyFactorySpi.engineGetKeySpec(javax.crypto.SecretKey,Class)java.security.spec.KeySpec
javax.crypto.SecretKeyFactorySpi.engineTranslateKey(javax.crypto.SecretKey)javax.crypto.SecretKey
javax.crypto.spec.DESedeKeySpec.isParityAdjusted(byte,int)boolean
javax.crypto.spec.DESKeySpec.isParityAdjusted(byte,int)boolean
javax.crypto.spec.DESKeySpec.isWeak(byte,int)boolean
javax.crypto.spec.DHGenParameterSpec.getPrimeSize)int
javax.crypto.spec.DHGenParameterSpec.getExponentSize)int
javax.crypto.spec.DHParameterSpec.getP)java.math.BigInteger
javax.crypto.spec.DHParameterSpec.getG)java.math.BigInteger
javax.crypto.spec.DHParameterSpec.getL)int
javax.crypto.spec.DHPrivateKeySpec.getX)java.math.BigInteger
javax.crypto.spec.DHPrivateKeySpec.getP)java.math.BigInteger
javax.crypto.spec.DHPrivateKeySpec.getG)java.math.BigInteger
javax.crypto.spec.DHPublicKeySpec.getY)java.math.BigInteger
javax.crypto.spec.DHPublicKeySpec.getP)java.math.BigInteger
javax.crypto.spec.DHPublicKeySpec.getG)java.math.BigInteger
javax.crypto.spec.GCMParameterSpec.getTLen)int
javax.crypto.spec.OAEPParameterSpec.getDigestAlgorithm)String
javax.crypto.spec.OAEPParameterSpec.getMGFAlgorithm)String
javax.crypto.spec.OAEPParameterSpec.getMGFParameters)java.security.spec.AlgorithmParameterSpec
javax.crypto.spec.OAEPParameterSpec.getPSource)javax.crypto.spec.PSource
javax.crypto.spec.PBEKeySpec.clearPassword)void
javax.crypto.spec.PBEKeySpec.getIterationCount)int
javax.crypto.spec.PBEKeySpec.getKeyLength)int
javax.crypto.spec.PBEParameterSpec.getIterationCount)int
javax.crypto.spec.PBEParameterSpec.getParameterSpec)java.security.spec.AlgorithmParameterSpec
javax.crypto.spec.PSource.getAlgorithm)String
javax.crypto.spec.RC2ParameterSpec.getEffectiveKeyBits)int
javax.crypto.spec.RC2ParameterSpec.equals(Object)boolean
javax.crypto.spec.RC2ParameterSpec.hashCode)int
javax.crypto.spec.RC5ParameterSpec.getVersion)int
javax.crypto.spec.RC5ParameterSpec.getRounds)int
javax.crypto.spec.RC5ParameterSpec.getWordSize)int
javax.crypto.spec.RC5ParameterSpec.equals(Object)boolean
javax.crypto.spec.RC5ParameterSpec.hashCode)int
javax.crypto.spec.SecretKeySpec.getAlgorithm)String
javax.crypto.spec.SecretKeySpec.getFormat)String
javax.crypto.spec.SecretKeySpec.hashCode)int
javax.crypto.spec.SecretKeySpec.equals(Object)boolean
javax.microedition.khronos.egl.EGLContext.getEGL)javax.microedition.khronos.egl.EGL
javax.net.ServerSocketFactory.getDefault)javax.net.ServerSocketFactory
javax.net.ServerSocketFactory.createServerSocket)java.net.ServerSocket
javax.net.ServerSocketFactory.createServerSocket(int)java.net.ServerSocket
javax.net.ServerSocketFactory.createServerSocket(int,int)java.net.ServerSocket
javax.net.ServerSocketFactory.createServerSocket(int,int,java.net.InetAddress)java.net.ServerSocket
javax.net.SocketFactory.getDefault)javax.net.SocketFactory
javax.net.SocketFactory.createSocket)Socket
javax.net.SocketFactory.createSocket(String,int)Socket
javax.net.SocketFactory.createSocket(String,int,InetAddress,int)Socket
javax.net.SocketFactory.createSocket(InetAddress,int)Socket
javax.net.SocketFactory.createSocket(InetAddress,int,InetAddress,int)Socket
javax.net.ssl.CertPathTrustManagerParameters.getParameters)java.security.cert.CertPathParameters
javax.net.ssl.ExtendedSSLSession.getRequestedServerNames)java.util.List
javax.net.ssl.HandshakeCompletedEvent.getSession)javax.net.ssl.SSLSession
javax.net.ssl.HandshakeCompletedEvent.getCipherSuite)String
javax.net.ssl.HandshakeCompletedEvent.getPeerPrincipal)java.security.Principal
javax.net.ssl.HandshakeCompletedEvent.getLocalPrincipal)java.security.Principal
javax.net.ssl.HandshakeCompletedEvent.getSocket)javax.net.ssl.SSLSocket
javax.net.ssl.HttpsURLConnection.getPeerPrincipal)java.security.Principal
javax.net.ssl.HttpsURLConnection.getLocalPrincipal)java.security.Principal
javax.net.ssl.HttpsURLConnection.setDefaultHostnameVerifier(javax.net.ssl.HostnameVerifier)void
javax.net.ssl.HttpsURLConnection.getDefaultHostnameVerifier)javax.net.ssl.HostnameVerifier
javax.net.ssl.HttpsURLConnection.setHostnameVerifier(javax.net.ssl.HostnameVerifier)void
javax.net.ssl.HttpsURLConnection.getHostnameVerifier)javax.net.ssl.HostnameVerifier
javax.net.ssl.HttpsURLConnection.setDefaultSSLSocketFactory(javax.net.ssl.SSLSocketFactory)void
javax.net.ssl.HttpsURLConnection.getDefaultSSLSocketFactory)javax.net.ssl.SSLSocketFactory
javax.net.ssl.HttpsURLConnection.setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)void
javax.net.ssl.HttpsURLConnection.getSSLSocketFactory)javax.net.ssl.SSLSocketFactory
javax.net.ssl.KeyManagerFactory.getDefaultAlgorithm)String
javax.net.ssl.KeyManagerFactory.getAlgorithm)String
javax.net.ssl.KeyManagerFactory.getInstance(String)javax.net.ssl.KeyManagerFactory
javax.net.ssl.KeyManagerFactory.getInstance(String,String)javax.net.ssl.KeyManagerFactory
javax.net.ssl.KeyManagerFactory.getInstance(String,Provider)javax.net.ssl.KeyManagerFactory
javax.net.ssl.KeyManagerFactory.getProvider)Provider
javax.net.ssl.KeyManagerFactory.init(KeyStore,char)void
javax.net.ssl.KeyManagerFactory.init(javax.net.ssl.ManagerFactoryParameters)void
javax.net.ssl.KeyManagerFactorySpi.engineInit(KeyStore,char)void
javax.net.ssl.KeyManagerFactorySpi.engineInit(javax.net.ssl.ManagerFactoryParameters)void
javax.net.ssl.KeyStoreBuilderParameters.getParameters)java.util.List
javax.net.ssl.SNIHostName.getAsciiName)String
javax.net.ssl.SNIHostName.equals(Object)boolean
javax.net.ssl.SNIHostName.hashCode)int
javax.net.ssl.SNIHostName.toString)String
javax.net.ssl.SNIHostName.createSNIMatcher(String)javax.net.ssl.SNIMatcher
javax.net.ssl.SNIMatcher.getType)int
javax.net.ssl.SNIServerName.getType)int
javax.net.ssl.SNIServerName.equals(Object)boolean
javax.net.ssl.SNIServerName.hashCode)int
javax.net.ssl.SNIServerName.toString)String
javax.net.ssl.SSLContext.getInstance(String)javax.net.ssl.SSLContext
javax.net.ssl.SSLContext.getInstance(String,String)javax.net.ssl.SSLContext
javax.net.ssl.SSLContext.getInstance(String,Provider)javax.net.ssl.SSLContext
javax.net.ssl.SSLContext.getProtocol)String
javax.net.ssl.SSLContext.getProvider)Provider
javax.net.ssl.SSLContext.init(javax.net.ssl.KeyManager,javax.net.ssl.TrustManager,SecureRandom)void
javax.net.ssl.SSLContext.getSocketFactory)javax.net.ssl.SSLSocketFactory
javax.net.ssl.SSLContext.getServerSocketFactory)javax.net.ssl.SSLServerSocketFactory
javax.net.ssl.SSLContext.createSSLEngine)javax.net.ssl.SSLEngine
javax.net.ssl.SSLContext.createSSLEngine(String,int)javax.net.ssl.SSLEngine
javax.net.ssl.SSLContext.getServerSessionContext)javax.net.ssl.SSLSessionContext
javax.net.ssl.SSLContext.getClientSessionContext)javax.net.ssl.SSLSessionContext
javax.net.ssl.SSLContext.getDefaultSSLParameters)javax.net.ssl.SSLParameters
javax.net.ssl.SSLContext.getSupportedSSLParameters)javax.net.ssl.SSLParameters
javax.net.ssl.SSLContextSpi.engineInit(javax.net.ssl.KeyManager,javax.net.ssl.TrustManager,java.security.SecureRandom)void
javax.net.ssl.SSLContextSpi.engineGetDefaultSSLParameters)javax.net.ssl.SSLParameters
javax.net.ssl.SSLContextSpi.engineGetSupportedSSLParameters)javax.net.ssl.SSLParameters
javax.net.ssl.SSLEngine.getPeerHost)String
javax.net.ssl.SSLEngine.getPeerPort)int
javax.net.ssl.SSLEngine.wrap(java.nio.ByteBuffer,java.nio.ByteBuffer)javax.net.ssl.SSLEngineResult
javax.net.ssl.SSLEngine.wrap(java.nio.ByteBuffer,java.nio.ByteBuffer)javax.net.ssl.SSLEngineResult
javax.net.ssl.SSLEngine.wrap(java.nio.ByteBuffer,int,int,java.nio.ByteBuffer)javax.net.ssl.SSLEngineResult
javax.net.ssl.SSLEngine.unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer)javax.net.ssl.SSLEngineResult
javax.net.ssl.SSLEngine.unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer)javax.net.ssl.SSLEngineResult
javax.net.ssl.SSLEngine.unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer,int,int)javax.net.ssl.SSLEngineResult
javax.net.ssl.SSLEngine.closeInbound)void
javax.net.ssl.SSLEngine.getHandshakeSession)javax.net.ssl.SSLSession
javax.net.ssl.SSLEngine.beginHandshake)void
javax.net.ssl.SSLEngine.getSSLParameters)javax.net.ssl.SSLParameters
javax.net.ssl.SSLEngine.setSSLParameters(javax.net.ssl.SSLParameters)void
javax.net.ssl.SSLEngine.getApplicationProtocol)String
javax.net.ssl.SSLEngine.getHandshakeApplicationProtocol)String
javax.net.ssl.SSLEngine.setHandshakeApplicationProtocolSelector(java.util.function.BiFunction)void
javax.net.ssl.SSLEngine.getHandshakeApplicationProtocolSelector)java.util.function.BiFunction
javax.net.ssl.SSLEngineResult.valueOf(String)Status
javax.net.ssl.SSLEngineResult.valueOf(String)HandshakeStatus
javax.net.ssl.SSLEngineResult.getStatus)Status
javax.net.ssl.SSLEngineResult.getHandshakeStatus)HandshakeStatus
javax.net.ssl.SSLEngineResult.bytesConsumed)int
javax.net.ssl.SSLEngineResult.bytesProduced)int
javax.net.ssl.SSLEngineResult.toString)String
javax.net.ssl.SSLParameters.setCipherSuites(String)void
javax.net.ssl.SSLParameters.setProtocols(String)void
javax.net.ssl.SSLParameters.getWantClientAuth)boolean
javax.net.ssl.SSLParameters.setWantClientAuth(boolean)void
javax.net.ssl.SSLParameters.getNeedClientAuth)boolean
javax.net.ssl.SSLParameters.setNeedClientAuth(boolean)void
javax.net.ssl.SSLParameters.getAlgorithmConstraints)java.security.AlgorithmConstraints
javax.net.ssl.SSLParameters.setAlgorithmConstraints(java.security.AlgorithmConstraints)void
javax.net.ssl.SSLParameters.getEndpointIdentificationAlgorithm)String
javax.net.ssl.SSLParameters.setEndpointIdentificationAlgorithm(String)void
javax.net.ssl.SSLParameters.setServerNames(java.util.List)void
javax.net.ssl.SSLParameters.getServerNames)java.util.List
javax.net.ssl.SSLParameters.setSNIMatchers(java.util.Collection)void
javax.net.ssl.SSLParameters.getSNIMatchers)java.util.Collection
javax.net.ssl.SSLParameters.setUseCipherSuitesOrder(boolean)void
javax.net.ssl.SSLParameters.getUseCipherSuitesOrder)boolean
javax.net.ssl.SSLParameters.setApplicationProtocols(String)void
javax.net.ssl.SSLServerSocket.getSSLParameters)javax.net.ssl.SSLParameters
javax.net.ssl.SSLServerSocket.setSSLParameters(javax.net.ssl.SSLParameters)void
javax.net.ssl.SSLServerSocket.toString)String
javax.net.ssl.SSLSession.getPeerPrincipal)java.security.Principal
javax.net.ssl.SSLSessionBindingEvent.getName)String
javax.net.ssl.SSLSessionBindingEvent.getSession)javax.net.ssl.SSLSession
javax.net.ssl.SSLSessionContext.setSessionTimeout(int)void
javax.net.ssl.SSLSessionContext.setSessionCacheSize(int)void
javax.net.ssl.SSLSocket.getHandshakeSession)javax.net.ssl.SSLSession
javax.net.ssl.SSLSocket.startHandshake)void
javax.net.ssl.SSLSocket.getSSLParameters)javax.net.ssl.SSLParameters
javax.net.ssl.SSLSocket.setSSLParameters(javax.net.ssl.SSLParameters)void
javax.net.ssl.SSLSocket.getApplicationProtocol)String
javax.net.ssl.SSLSocket.getHandshakeApplicationProtocol)String
javax.net.ssl.SSLSocket.setHandshakeApplicationProtocolSelector(java.util.function.BiFunction)void
javax.net.ssl.SSLSocket.getHandshakeApplicationProtocolSelector)java.util.function.BiFunction
javax.net.ssl.SSLSocket.toString)String
javax.net.ssl.SSLSocketFactory.createSocket(java.net.Socket,String,int,boolean)java.net.Socket
javax.net.ssl.TrustManagerFactory.getDefaultAlgorithm)String
javax.net.ssl.TrustManagerFactory.getAlgorithm)String
javax.net.ssl.TrustManagerFactory.getInstance(String)javax.net.ssl.TrustManagerFactory
javax.net.ssl.TrustManagerFactory.getInstance(String,String)javax.net.ssl.TrustManagerFactory
javax.net.ssl.TrustManagerFactory.getInstance(String,Provider)javax.net.ssl.TrustManagerFactory
javax.net.ssl.TrustManagerFactory.getProvider)Provider
javax.net.ssl.TrustManagerFactory.init(KeyStore)void
javax.net.ssl.TrustManagerFactory.init(javax.net.ssl.ManagerFactoryParameters)void
javax.net.ssl.TrustManagerFactorySpi.engineInit(KeyStore)void
javax.net.ssl.TrustManagerFactorySpi.engineInit(javax.net.ssl.ManagerFactoryParameters)void
javax.net.ssl.X509ExtendedKeyManager.chooseEngineClientAlias(String,java.security.Principal,javax.net.ssl.SSLEngine)String
javax.net.ssl.X509ExtendedKeyManager.chooseEngineServerAlias(String,java.security.Principal,javax.net.ssl.SSLEngine)String
javax.net.ssl.X509ExtendedTrustManager.checkClientTrusted(java.security.cert.X509Certificate,String,java.net.Socket)void
javax.net.ssl.X509ExtendedTrustManager.checkServerTrusted(java.security.cert.X509Certificate,String,java.net.Socket)void
javax.net.ssl.X509ExtendedTrustManager.checkClientTrusted(java.security.cert.X509Certificate,String,javax.net.ssl.SSLEngine)void
javax.net.ssl.X509ExtendedTrustManager.checkServerTrusted(java.security.cert.X509Certificate,String,javax.net.ssl.SSLEngine)void
javax.net.ssl.X509TrustManager.checkClientTrusted(java.security.cert.X509Certificate,String)void
javax.net.ssl.X509TrustManager.checkServerTrusted(java.security.cert.X509Certificate,String)void
javax.security.auth.Destroyable.destroy)void
javax.security.auth.Destroyable.isDestroyed)boolean
javax.security.auth.PrivateCredentialPermission.getCredentialClass)String
javax.security.auth.PrivateCredentialPermission.implies(java.security.Permission)boolean
javax.security.auth.PrivateCredentialPermission.getActions)String
javax.security.auth.Subject.setReadOnly)void
javax.security.auth.Subject.isReadOnly)boolean
javax.security.auth.Subject.getSubject(AccessControlContext)javax.security.auth.Subject
javax.security.auth.Subject.doAs(javax.security.auth.Subject,PrivilegedAction)Object
javax.security.auth.Subject.doAs(javax.security.auth.Subject,PrivilegedExceptionAction)Object
javax.security.auth.Subject.doAsPrivileged(javax.security.auth.Subject,PrivilegedAction,AccessControlContext)Object
javax.security.auth.Subject.doAsPrivileged(javax.security.auth.Subject,PrivilegedExceptionAction,AccessControlContext)Object
javax.security.auth.Subject.getPrincipals)java.util.Set
javax.security.auth.Subject.getPrincipals(Class)java.util.Set
javax.security.auth.Subject.getPublicCredentials)java.util.Set
javax.security.auth.Subject.getPrivateCredentials)java.util.Set
javax.security.auth.Subject.getPublicCredentials(Class)java.util.Set
javax.security.auth.Subject.getPrivateCredentials(Class)java.util.Set
javax.security.auth.Subject.equals(Object)boolean
javax.security.auth.Subject.toString)String
javax.security.auth.Subject.hashCode)int
javax.security.auth.SubjectDomainCombiner.getSubject)javax.security.auth.Subject
javax.security.auth.callback.CallbackHandler.handle(javax.security.auth.callback.Callback)void
javax.security.auth.callback.PasswordCallback.getPrompt)String
javax.security.auth.callback.PasswordCallback.isEchoOn)boolean
javax.security.auth.callback.PasswordCallback.setPassword(char)void
javax.security.auth.callback.PasswordCallback.clearPassword)void
javax.security.auth.callback.UnsupportedCallbackException.getCallback)javax.security.auth.callback.Callback
javax.security.auth.x500.X500Principal.getName)String
javax.security.auth.x500.X500Principal.getName(String)String
javax.security.auth.x500.X500Principal.getName(String,java.util.Map)String
javax.security.auth.x500.X500Principal.toString)String
javax.security.auth.x500.X500Principal.equals(Object)boolean
javax.security.auth.x500.X500Principal.hashCode)int
javax.security.cert.Certificate.equals(Object)boolean
javax.security.cert.Certificate.hashCode)int
javax.security.cert.Certificate.verify(PublicKey)void
javax.security.cert.Certificate.verify(PublicKey,String)void
javax.security.cert.X509Certificate.getInstance(java.io.InputStream)javax.security.cert.X509Certificate
javax.security.cert.X509Certificate.getInstance(byte)javax.security.cert.X509Certificate
javax.security.cert.X509Certificate.checkValidity)void
javax.security.cert.X509Certificate.checkValidity(java.util.Date)void
javax.sql.CommonDataSource.getLogWriter)java.io.PrintWriter
javax.sql.CommonDataSource.setLogWriter(java.io.PrintWriter)void
javax.sql.CommonDataSource.setLoginTimeout(int)void
javax.sql.CommonDataSource.getLoginTimeout)int
javax.sql.CommonDataSource.getParentLogger)java.util.logging.Logger
javax.sql.ConnectionEvent.getSQLException)java.sql.SQLException
javax.sql.ConnectionPoolDataSource.getPooledConnection)javax.sql.PooledConnection
javax.sql.ConnectionPoolDataSource.getPooledConnection(String,String)javax.sql.PooledConnection
javax.sql.DataSource.getConnection)Connection
javax.sql.DataSource.getConnection(String,String)Connection
javax.sql.PooledConnection.getConnection)java.sql.Connection
javax.sql.PooledConnection.close)void
javax.sql.RowSet.getUrl)String
javax.sql.RowSet.setUrl(String)void
javax.sql.RowSet.setDataSourceName(String)void
javax.sql.RowSet.setUsername(String)void
javax.sql.RowSet.setPassword(String)void
javax.sql.RowSet.setTransactionIsolation(int)void
javax.sql.RowSet.getTypeMap)java.util.Map
javax.sql.RowSet.setTypeMap(java.util.Map)void
javax.sql.RowSet.setCommand(String)void
javax.sql.RowSet.setReadOnly(boolean)void
javax.sql.RowSet.getMaxFieldSize)int
javax.sql.RowSet.setMaxFieldSize(int)void
javax.sql.RowSet.getMaxRows)int
javax.sql.RowSet.setMaxRows(int)void
javax.sql.RowSet.getEscapeProcessing)boolean
javax.sql.RowSet.setEscapeProcessing(boolean)void
javax.sql.RowSet.getQueryTimeout)int
javax.sql.RowSet.setQueryTimeout(int)void
javax.sql.RowSet.setType(int)void
javax.sql.RowSet.setConcurrency(int)void
javax.sql.RowSet.setNull(int,int)void
javax.sql.RowSet.setNull(String,int)void
javax.sql.RowSet.setNull(int,int,String)void
javax.sql.RowSet.setNull(String,int,String)void
javax.sql.RowSet.setBoolean(int,boolean)void
javax.sql.RowSet.setBoolean(String,boolean)void
javax.sql.RowSet.setByte(int,byte)void
javax.sql.RowSet.setByte(String,byte)void
javax.sql.RowSet.setShort(int,short)void
javax.sql.RowSet.setShort(String,short)void
javax.sql.RowSet.setInt(int,int)void
javax.sql.RowSet.setInt(String,int)void
javax.sql.RowSet.setLong(int,long)void
javax.sql.RowSet.setLong(String,long)void
javax.sql.RowSet.setFloat(int,float)void
javax.sql.RowSet.setFloat(String,float)void
javax.sql.RowSet.setDouble(int,double)void
javax.sql.RowSet.setDouble(String,double)void
javax.sql.RowSet.setBigDecimal(int,java.math.BigDecimal)void
javax.sql.RowSet.setBigDecimal(String,java.math.BigDecimal)void
javax.sql.RowSet.setString(int,String)void
javax.sql.RowSet.setString(String,String)void
javax.sql.RowSet.setBytes(int,byte)void
javax.sql.RowSet.setBytes(String,byte)void
javax.sql.RowSet.setDate(int,Date)void
javax.sql.RowSet.setTime(int,Time)void
javax.sql.RowSet.setTimestamp(int,Timestamp)void
javax.sql.RowSet.setTimestamp(String,Timestamp)void
javax.sql.RowSet.setAsciiStream(int,java.io.InputStream,int)void
javax.sql.RowSet.setAsciiStream(String,java.io.InputStream,int)void
javax.sql.RowSet.setBinaryStream(int,java.io.InputStream,int)void
javax.sql.RowSet.setBinaryStream(String,java.io.InputStream,int)void
javax.sql.RowSet.setCharacterStream(int,java.io.Reader,int)void
javax.sql.RowSet.setCharacterStream(String,java.io.Reader,int)void
javax.sql.RowSet.setAsciiStream(int,java.io.InputStream)void
javax.sql.RowSet.setAsciiStream(String,java.io.InputStream)void
javax.sql.RowSet.setBinaryStream(int,java.io.InputStream)void
javax.sql.RowSet.setBinaryStream(String,java.io.InputStream)void
javax.sql.RowSet.setCharacterStream(int,java.io.Reader)void
javax.sql.RowSet.setCharacterStream(String,java.io.Reader)void
javax.sql.RowSet.setNCharacterStream(int,java.io.Reader)void
javax.sql.RowSet.setObject(int,Object,int,int)void
javax.sql.RowSet.setObject(String,Object,int,int)void
javax.sql.RowSet.setObject(int,Object,int)void
javax.sql.RowSet.setObject(String,Object,int)void
javax.sql.RowSet.setObject(String,Object)void
javax.sql.RowSet.setObject(int,Object)void
javax.sql.RowSet.setRef(int,Ref)void
javax.sql.RowSet.setBlob(int,Blob)void
javax.sql.RowSet.setBlob(int,java.io.InputStream,long)void
javax.sql.RowSet.setBlob(int,java.io.InputStream)void
javax.sql.RowSet.setBlob(String,java.io.InputStream,long)void
javax.sql.RowSet.setBlob(String,Blob)void
javax.sql.RowSet.setBlob(String,java.io.InputStream)void
javax.sql.RowSet.setClob(int,Clob)void
javax.sql.RowSet.setClob(int,java.io.Reader,long)void
javax.sql.RowSet.setClob(int,java.io.Reader)void
javax.sql.RowSet.setClob(String,java.io.Reader,long)void
javax.sql.RowSet.setClob(String,Clob)void
javax.sql.RowSet.setClob(String,java.io.Reader)void
javax.sql.RowSet.setArray(int,Array)void
javax.sql.RowSet.setDate(int,Date,java.util.Calendar)void
javax.sql.RowSet.setDate(String,Date)void
javax.sql.RowSet.setDate(String,Date,java.util.Calendar)void
javax.sql.RowSet.setTime(int,Time,java.util.Calendar)void
javax.sql.RowSet.setTime(String,Time)void
javax.sql.RowSet.setTime(String,Time,java.util.Calendar)void
javax.sql.RowSet.setTimestamp(int,Timestamp,java.util.Calendar)void
javax.sql.RowSet.setTimestamp(String,Timestamp,java.util.Calendar)void
javax.sql.RowSet.clearParameters)void
javax.sql.RowSet.execute)void
javax.sql.RowSet.setSQLXML(int,SQLXML)void
javax.sql.RowSet.setSQLXML(String,SQLXML)void
javax.sql.RowSet.setRowId(int,RowId)void
javax.sql.RowSet.setRowId(String,RowId)void
javax.sql.RowSet.setNString(int,String)void
javax.sql.RowSet.setNString(String,String)void
javax.sql.RowSet.setNCharacterStream(int,java.io.Reader,long)void
javax.sql.RowSet.setNCharacterStream(String,java.io.Reader,long)void
javax.sql.RowSet.setNCharacterStream(String,java.io.Reader)void
javax.sql.RowSet.setNClob(String,NClob)void
javax.sql.RowSet.setNClob(String,java.io.Reader,long)void
javax.sql.RowSet.setNClob(String,java.io.Reader)void
javax.sql.RowSet.setNClob(int,java.io.Reader,long)void
javax.sql.RowSet.setNClob(int,NClob)void
javax.sql.RowSet.setNClob(int,java.io.Reader)void
javax.sql.RowSet.setURL(int,java.net.URL)void
javax.sql.RowSetInternal.getConnection)Connection
javax.sql.RowSetInternal.setMetaData(javax.sql.RowSetMetaData)void
javax.sql.RowSetInternal.getOriginal)ResultSet
javax.sql.RowSetInternal.getOriginalRow)ResultSet
javax.sql.RowSetMetaData.setColumnCount(int)void
javax.sql.RowSetMetaData.setAutoIncrement(int,boolean)void
javax.sql.RowSetMetaData.setCaseSensitive(int,boolean)void
javax.sql.RowSetMetaData.setSearchable(int,boolean)void
javax.sql.RowSetMetaData.setCurrency(int,boolean)void
javax.sql.RowSetMetaData.setNullable(int,int)void
javax.sql.RowSetMetaData.setSigned(int,boolean)void
javax.sql.RowSetMetaData.setColumnDisplaySize(int,int)void
javax.sql.RowSetMetaData.setColumnLabel(int,String)void
javax.sql.RowSetMetaData.setColumnName(int,String)void
javax.sql.RowSetMetaData.setSchemaName(int,String)void
javax.sql.RowSetMetaData.setPrecision(int,int)void
javax.sql.RowSetMetaData.setScale(int,int)void
javax.sql.RowSetMetaData.setTableName(int,String)void
javax.sql.RowSetMetaData.setCatalogName(int,String)void
javax.sql.RowSetMetaData.setColumnType(int,int)void
javax.sql.RowSetMetaData.setColumnTypeName(int,String)void
javax.sql.RowSetReader.readData(javax.sql.RowSetInternal)void
javax.sql.RowSetWriter.writeData(javax.sql.RowSetInternal)boolean
javax.sql.StatementEvent.getStatement)java.sql.PreparedStatement
javax.sql.StatementEvent.getSQLException)java.sql.SQLException
javax.xml.datatype.DatatypeConfigurationException.printStackTrace)void
javax.xml.datatype.DatatypeConfigurationException.printStackTrace(java.io.PrintStream)void
javax.xml.datatype.DatatypeConfigurationException.printStackTrace(java.io.PrintWriter)void
javax.xml.datatype.DatatypeConstants.toString)String
javax.xml.datatype.DatatypeConstants.getId)int
javax.xml.datatype.DatatypeFactory.newInstance)javax.xml.datatype.DatatypeFactory
javax.xml.datatype.DatatypeFactory.newInstance(String,ClassLoader)javax.xml.datatype.DatatypeFactory
javax.xml.datatype.DatatypeFactory.newDuration(boolean,int,int,int,int,int,int)javax.xml.datatype.Duration
javax.xml.datatype.DatatypeFactory.newDurationDayTime(String)javax.xml.datatype.Duration
javax.xml.datatype.DatatypeFactory.newDurationDayTime(long)javax.xml.datatype.Duration
javax.xml.datatype.DatatypeFactory.newDurationDayTime(boolean,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)javax.xml.datatype.Duration
javax.xml.datatype.DatatypeFactory.newDurationDayTime(boolean,int,int,int,int)javax.xml.datatype.Duration
javax.xml.datatype.DatatypeFactory.newDurationYearMonth(String)javax.xml.datatype.Duration
javax.xml.datatype.DatatypeFactory.newDurationYearMonth(long)javax.xml.datatype.Duration
javax.xml.datatype.DatatypeFactory.newDurationYearMonth(boolean,java.math.BigInteger,java.math.BigInteger)javax.xml.datatype.Duration
javax.xml.datatype.DatatypeFactory.newDurationYearMonth(boolean,int,int)javax.xml.datatype.Duration
javax.xml.datatype.DatatypeFactory.newXMLGregorianCalendarDate(int,int,int,int)javax.xml.datatype.XMLGregorianCalendar
javax.xml.datatype.DatatypeFactory.newXMLGregorianCalendarTime(int,int,int,int)javax.xml.datatype.XMLGregorianCalendar
javax.xml.datatype.DatatypeFactory.newXMLGregorianCalendarTime(int,int,int,java.math.BigDecimal,int)javax.xml.datatype.XMLGregorianCalendar
javax.xml.datatype.DatatypeFactory.newXMLGregorianCalendarTime(int,int,int,int,int)javax.xml.datatype.XMLGregorianCalendar
javax.xml.datatype.Duration.getXMLSchemaType)javax.xml.namespace.QName
javax.xml.datatype.Duration.getYears)int
javax.xml.datatype.Duration.getMonths)int
javax.xml.datatype.Duration.getDays)int
javax.xml.datatype.Duration.getHours)int
javax.xml.datatype.Duration.getMinutes)int
javax.xml.datatype.Duration.getSeconds)int
javax.xml.datatype.Duration.getTimeInMillis(java.util.Calendar)long
javax.xml.datatype.Duration.getTimeInMillis(java.util.Date)long
javax.xml.datatype.Duration.addTo(java.util.Date)void
javax.xml.datatype.Duration.subtract(javax.xml.datatype.Duration)javax.xml.datatype.Duration
javax.xml.datatype.Duration.multiply(int)javax.xml.datatype.Duration
javax.xml.datatype.Duration.isLongerThan(javax.xml.datatype.Duration)boolean
javax.xml.datatype.Duration.isShorterThan(javax.xml.datatype.Duration)boolean
javax.xml.datatype.Duration.equals(Object)boolean
javax.xml.datatype.Duration.toString)String
javax.xml.datatype.XMLGregorianCalendar.setTime(int,int,int)void
javax.xml.datatype.XMLGregorianCalendar.setTime(int,int,int,java.math.BigDecimal)void
javax.xml.datatype.XMLGregorianCalendar.setTime(int,int,int,int)void
javax.xml.datatype.XMLGregorianCalendar.getMillisecond)int
javax.xml.datatype.XMLGregorianCalendar.equals(Object)boolean
javax.xml.datatype.XMLGregorianCalendar.hashCode)int
javax.xml.datatype.XMLGregorianCalendar.toString)String
javax.xml.namespace.QName.getNamespaceURI)String
javax.xml.namespace.QName.getLocalPart)String
javax.xml.namespace.QName.getPrefix)String
javax.xml.namespace.QName.equals(Object)boolean
javax.xml.namespace.QName.hashCode)int
javax.xml.namespace.QName.toString)String
javax.xml.namespace.QName.valueOf(String)javax.xml.namespace.QName
javax.xml.parsers.DocumentBuilder.reset)void
javax.xml.parsers.DocumentBuilder.parse(InputStream)org.w3c.dom.Document
javax.xml.parsers.DocumentBuilder.parse(InputStream,String)org.w3c.dom.Document
javax.xml.parsers.DocumentBuilder.parse(String)org.w3c.dom.Document
javax.xml.parsers.DocumentBuilder.parse(File)org.w3c.dom.Document
javax.xml.parsers.DocumentBuilder.parse(InputSource)org.w3c.dom.Document
javax.xml.parsers.DocumentBuilder.getSchema)javax.xml.validation.Schema
javax.xml.parsers.DocumentBuilder.isXIncludeAware)boolean
javax.xml.parsers.DocumentBuilderFactory.newInstance)javax.xml.parsers.DocumentBuilderFactory
javax.xml.parsers.DocumentBuilderFactory.newInstance(String,ClassLoader)javax.xml.parsers.DocumentBuilderFactory
javax.xml.parsers.DocumentBuilderFactory.newDocumentBuilder)javax.xml.parsers.DocumentBuilder
javax.xml.parsers.DocumentBuilderFactory.setNamespaceAware(boolean)void
javax.xml.parsers.DocumentBuilderFactory.setValidating(boolean)void
javax.xml.parsers.DocumentBuilderFactory.setIgnoringElementContentWhitespace(boolean)void
javax.xml.parsers.DocumentBuilderFactory.setExpandEntityReferences(boolean)void
javax.xml.parsers.DocumentBuilderFactory.setIgnoringComments(boolean)void
javax.xml.parsers.DocumentBuilderFactory.setCoalescing(boolean)void
javax.xml.parsers.DocumentBuilderFactory.isNamespaceAware)boolean
javax.xml.parsers.DocumentBuilderFactory.isValidating)boolean
javax.xml.parsers.DocumentBuilderFactory.isIgnoringElementContentWhitespace)boolean
javax.xml.parsers.DocumentBuilderFactory.isExpandEntityReferences)boolean
javax.xml.parsers.DocumentBuilderFactory.isIgnoringComments)boolean
javax.xml.parsers.DocumentBuilderFactory.isCoalescing)boolean
javax.xml.parsers.DocumentBuilderFactory.setAttribute(String,Object)void
javax.xml.parsers.DocumentBuilderFactory.getAttribute(String)Object
javax.xml.parsers.DocumentBuilderFactory.setFeature(String,boolean)void
javax.xml.parsers.DocumentBuilderFactory.getFeature(String)boolean
javax.xml.parsers.DocumentBuilderFactory.getSchema)javax.xml.validation.Schema
javax.xml.parsers.DocumentBuilderFactory.setSchema(javax.xml.validation.Schema)void
javax.xml.parsers.DocumentBuilderFactory.setXIncludeAware(boolean)void
javax.xml.parsers.DocumentBuilderFactory.isXIncludeAware)boolean
javax.xml.parsers.FactoryConfigurationError.getMessage)String
javax.xml.parsers.FactoryConfigurationError.getException)Exception
javax.xml.parsers.SAXParser.reset)void
javax.xml.parsers.SAXParser.parse(InputStream,HandlerBase)void
javax.xml.parsers.SAXParser.parse(InputStream,HandlerBase,String)void
javax.xml.parsers.SAXParser.parse(InputStream,org.xml.sax.helpers.DefaultHandler)void
javax.xml.parsers.SAXParser.parse(InputStream,org.xml.sax.helpers.DefaultHandler,String)void
javax.xml.parsers.SAXParser.parse(String,HandlerBase)void
javax.xml.parsers.SAXParser.parse(String,org.xml.sax.helpers.DefaultHandler)void
javax.xml.parsers.SAXParser.parse(File,HandlerBase)void
javax.xml.parsers.SAXParser.parse(File,org.xml.sax.helpers.DefaultHandler)void
javax.xml.parsers.SAXParser.parse(InputSource,HandlerBase)void
javax.xml.parsers.SAXParser.parse(InputSource,org.xml.sax.helpers.DefaultHandler)void
javax.xml.parsers.SAXParser.getParser)Parser
javax.xml.parsers.SAXParser.getXMLReader)XMLReader
javax.xml.parsers.SAXParser.setProperty(String,Object)void
javax.xml.parsers.SAXParser.getProperty(String)Object
javax.xml.parsers.SAXParser.getSchema)javax.xml.validation.Schema
javax.xml.parsers.SAXParser.isXIncludeAware)boolean
javax.xml.parsers.SAXParserFactory.newInstance)javax.xml.parsers.SAXParserFactory
javax.xml.parsers.SAXParserFactory.newInstance(String,ClassLoader)javax.xml.parsers.SAXParserFactory
javax.xml.parsers.SAXParserFactory.newSAXParser)javax.xml.parsers.SAXParser
javax.xml.parsers.SAXParserFactory.setNamespaceAware(boolean)void
javax.xml.parsers.SAXParserFactory.setValidating(boolean)void
javax.xml.parsers.SAXParserFactory.isNamespaceAware)boolean
javax.xml.parsers.SAXParserFactory.isValidating)boolean
javax.xml.parsers.SAXParserFactory.setFeature(String,boolean)void
javax.xml.parsers.SAXParserFactory.getFeature(String)boolean
javax.xml.parsers.SAXParserFactory.getSchema)javax.xml.validation.Schema
javax.xml.parsers.SAXParserFactory.setSchema(javax.xml.validation.Schema)void
javax.xml.parsers.SAXParserFactory.setXIncludeAware(boolean)void
javax.xml.parsers.SAXParserFactory.isXIncludeAware)boolean
javax.xml.transform.ErrorListener.warning(javax.xml.transform.TransformerException)void
javax.xml.transform.ErrorListener.error(javax.xml.transform.TransformerException)void
javax.xml.transform.ErrorListener.fatalError(javax.xml.transform.TransformerException)void
javax.xml.transform.Templates.newTransformer)javax.xml.transform.Transformer
javax.xml.transform.Transformer.reset)void
javax.xml.transform.Transformer.transform(javax.xml.transform.Source,javax.xml.transform.Result)void
javax.xml.transform.Transformer.setOutputProperty(String,String)void
javax.xml.transform.Transformer.getOutputProperty(String)String
javax.xml.transform.Transformer.setErrorListener(javax.xml.transform.ErrorListener)void
javax.xml.transform.TransformerException.getLocator)javax.xml.transform.SourceLocator
javax.xml.transform.TransformerException.setLocator(javax.xml.transform.SourceLocator)void
javax.xml.transform.TransformerException.getException)Throwable
javax.xml.transform.TransformerException.getCause)Throwable
javax.xml.transform.TransformerException.getMessageAndLocation)String
javax.xml.transform.TransformerException.getLocationAsString)String
javax.xml.transform.TransformerException.printStackTrace)void
javax.xml.transform.TransformerException.printStackTrace(java.io.PrintStream)void
javax.xml.transform.TransformerException.printStackTrace(java.io.PrintWriter)void
javax.xml.transform.TransformerFactory.newInstance)javax.xml.transform.TransformerFactory
javax.xml.transform.TransformerFactory.newInstance(String,ClassLoader)javax.xml.transform.TransformerFactory
javax.xml.transform.TransformerFactory.newTransformer(javax.xml.transform.Source)javax.xml.transform.Transformer
javax.xml.transform.TransformerFactory.newTransformer)javax.xml.transform.Transformer
javax.xml.transform.TransformerFactory.newTemplates(javax.xml.transform.Source)javax.xml.transform.Templates
javax.xml.transform.TransformerFactory.getAssociatedStylesheet(javax.xml.transform.Source,String,String,String)javax.xml.transform.Source
javax.xml.transform.TransformerFactory.setFeature(String,boolean)void
javax.xml.transform.TransformerFactoryConfigurationError.getMessage)String
javax.xml.transform.TransformerFactoryConfigurationError.getException)Exception
javax.xml.transform.URIResolver.resolve(String,String)javax.xml.transform.Source
javax.xml.transform.dom.DOMResult.setNode(org.w3c.dom.Node)void
javax.xml.transform.dom.DOMResult.getNode)org.w3c.dom.Node
javax.xml.transform.dom.DOMResult.setNextSibling(org.w3c.dom.Node)void
javax.xml.transform.dom.DOMResult.getNextSibling)org.w3c.dom.Node
javax.xml.transform.dom.DOMResult.setSystemId(String)void
javax.xml.transform.dom.DOMResult.getSystemId)String
javax.xml.transform.dom.DOMSource.setNode(org.w3c.dom.Node)void
javax.xml.transform.dom.DOMSource.getNode)org.w3c.dom.Node
javax.xml.transform.dom.DOMSource.setSystemId(String)void
javax.xml.transform.dom.DOMSource.getSystemId)String
javax.xml.transform.sax.SAXResult.setHandler(org.xml.sax.ContentHandler)void
javax.xml.transform.sax.SAXResult.getHandler)org.xml.sax.ContentHandler
javax.xml.transform.sax.SAXResult.setLexicalHandler(org.xml.sax.ext.LexicalHandler)void
javax.xml.transform.sax.SAXResult.getLexicalHandler)org.xml.sax.ext.LexicalHandler
javax.xml.transform.sax.SAXResult.setSystemId(String)void
javax.xml.transform.sax.SAXResult.getSystemId)String
javax.xml.transform.sax.SAXSource.setXMLReader(org.xml.sax.XMLReader)void
javax.xml.transform.sax.SAXSource.getXMLReader)org.xml.sax.XMLReader
javax.xml.transform.sax.SAXSource.setInputSource(org.xml.sax.InputSource)void
javax.xml.transform.sax.SAXSource.getInputSource)org.xml.sax.InputSource
javax.xml.transform.sax.SAXSource.setSystemId(String)void
javax.xml.transform.sax.SAXSource.getSystemId)String
javax.xml.transform.sax.SAXSource.sourceToInputSource(javax.xml.transform.Source)org.xml.sax.InputSource
javax.xml.transform.sax.SAXTransformerFactory.newTransformerHandler(Source)javax.xml.transform.sax.TransformerHandler
javax.xml.transform.sax.SAXTransformerFactory.newTransformerHandler(Templates)javax.xml.transform.sax.TransformerHandler
javax.xml.transform.sax.SAXTransformerFactory.newTransformerHandler)javax.xml.transform.sax.TransformerHandler
javax.xml.transform.sax.SAXTransformerFactory.newTemplatesHandler)javax.xml.transform.sax.TemplatesHandler
javax.xml.transform.sax.SAXTransformerFactory.newXMLFilter(Source)org.xml.sax.XMLFilter
javax.xml.transform.sax.SAXTransformerFactory.newXMLFilter(Templates)org.xml.sax.XMLFilter
javax.xml.transform.sax.TransformerHandler.setResult(javax.xml.transform.Result)void
javax.xml.transform.stream.StreamResult.setOutputStream(OutputStream)void
javax.xml.transform.stream.StreamResult.getOutputStream)OutputStream
javax.xml.transform.stream.StreamResult.setWriter(Writer)void
javax.xml.transform.stream.StreamResult.getWriter)Writer
javax.xml.transform.stream.StreamResult.setSystemId(String)void
javax.xml.transform.stream.StreamResult.setSystemId(File)void
javax.xml.transform.stream.StreamResult.getSystemId)String
javax.xml.transform.stream.StreamSource.setInputStream(InputStream)void
javax.xml.transform.stream.StreamSource.getInputStream)InputStream
javax.xml.transform.stream.StreamSource.setReader(Reader)void
javax.xml.transform.stream.StreamSource.getReader)Reader
javax.xml.transform.stream.StreamSource.setPublicId(String)void
javax.xml.transform.stream.StreamSource.getPublicId)String
javax.xml.transform.stream.StreamSource.setSystemId(String)void
javax.xml.transform.stream.StreamSource.getSystemId)String
javax.xml.transform.stream.StreamSource.setSystemId(File)void
javax.xml.validation.SchemaFactory.newInstance(String)javax.xml.validation.SchemaFactory
javax.xml.validation.SchemaFactory.newInstance(String,String,ClassLoader)javax.xml.validation.SchemaFactory
javax.xml.validation.SchemaFactory.getFeature(String)boolean
javax.xml.validation.SchemaFactory.setFeature(String,boolean)void
javax.xml.validation.SchemaFactory.setProperty(String,Object)void
javax.xml.validation.SchemaFactory.getProperty(String)Object
javax.xml.validation.SchemaFactory.newSchema(javax.xml.transform.Source)javax.xml.validation.Schema
javax.xml.validation.SchemaFactory.newSchema(java.io.File)javax.xml.validation.Schema
javax.xml.validation.SchemaFactory.newSchema(java.net.URL)javax.xml.validation.Schema
javax.xml.validation.SchemaFactory.newSchema(javax.xml.transform.Source)javax.xml.validation.Schema
javax.xml.validation.SchemaFactory.newSchema)javax.xml.validation.Schema
javax.xml.validation.Validator.validate(javax.xml.transform.Source)void
javax.xml.validation.Validator.validate(javax.xml.transform.Source,javax.xml.transform.Result)void
javax.xml.validation.Validator.getFeature(String)boolean
javax.xml.validation.Validator.setFeature(String,boolean)void
javax.xml.validation.Validator.setProperty(String,Object)void
javax.xml.validation.Validator.getProperty(String)Object
javax.xml.validation.ValidatorHandler.getFeature(String)boolean
javax.xml.validation.ValidatorHandler.setFeature(String,boolean)void
javax.xml.validation.ValidatorHandler.setProperty(String,Object)void
javax.xml.validation.ValidatorHandler.getProperty(String)Object
javax.xml.xpath.XPath.compile(String)javax.xml.xpath.XPathExpression
javax.xml.xpath.XPath.evaluate(String,Object,javax.xml.namespace.QName)Object
javax.xml.xpath.XPath.evaluate(String,Object)String
javax.xml.xpath.XPath.evaluate(String,org.xml.sax.InputSource,javax.xml.namespace.QName)Object
javax.xml.xpath.XPath.evaluate(String,org.xml.sax.InputSource)String
javax.xml.xpath.XPathException.getCause)Throwable
javax.xml.xpath.XPathException.printStackTrace(java.io.PrintStream)void
javax.xml.xpath.XPathException.printStackTrace)void
javax.xml.xpath.XPathException.printStackTrace(java.io.PrintWriter)void
javax.xml.xpath.XPathExpression.evaluate(Object,javax.xml.namespace.QName)Object
javax.xml.xpath.XPathExpression.evaluate(Object)String
javax.xml.xpath.XPathExpression.evaluate(org.xml.sax.InputSource,javax.xml.namespace.QName)Object
javax.xml.xpath.XPathExpression.evaluate(org.xml.sax.InputSource)String
javax.xml.xpath.XPathFactory.newInstance)javax.xml.xpath.XPathFactory
javax.xml.xpath.XPathFactory.newInstance(String)javax.xml.xpath.XPathFactory
javax.xml.xpath.XPathFactory.newInstance(String,String,ClassLoader)javax.xml.xpath.XPathFactory
javax.xml.xpath.XPathFactory.setFeature(String,boolean)void
javax.xml.xpath.XPathFactory.getFeature(String)boolean
javax.xml.xpath.XPathFunction.evaluate(java.util.List)Object
org.apache.http.conn.scheme.HostNameResolver.resolve(String)java.net.InetAddress
org.apache.http.conn.scheme.LayeredSocketFactory.createSocket(java.net.Socket,String,int,boolean)java.net.Socket
org.apache.http.conn.scheme.SocketFactory.createSocket)Socket
org.apache.http.conn.scheme.SocketFactory.connectSocket(Socket,String,int,InetAddress,int,org.apache.http.params.HttpParams)Socket
org.apache.http.conn.scheme.SocketFactory.isSecure(Socket)boolean
org.apache.http.conn.ssl.AbstractVerifier.verify(String,SSLSocket)void
org.apache.http.conn.ssl.AbstractVerifier.verify(String,SSLSession)boolean
org.apache.http.conn.ssl.AbstractVerifier.verify(String,java.security.cert.X509Certificate)void
org.apache.http.conn.ssl.AbstractVerifier.verify(String,String,String,boolean)void
org.apache.http.conn.ssl.AbstractVerifier.acceptableCountryWildcard(String)boolean
org.apache.http.conn.ssl.AbstractVerifier.countDots(String)int
org.apache.http.conn.ssl.AllowAllHostnameVerifier.verify(String,String,String)void
org.apache.http.conn.ssl.AllowAllHostnameVerifier.toString)String
org.apache.http.conn.ssl.BrowserCompatHostnameVerifier.verify(String,String,String)void
org.apache.http.conn.ssl.BrowserCompatHostnameVerifier.toString)String
org.apache.http.conn.ssl.SSLSocketFactory.getSocketFactory)org.apache.http.conn.ssl.SSLSocketFactory
org.apache.http.conn.ssl.SSLSocketFactory.createSocket)Socket
org.apache.http.conn.ssl.SSLSocketFactory.connectSocket(Socket,String,int,InetAddress,int,org.apache.http.params.HttpParams)Socket
org.apache.http.conn.ssl.SSLSocketFactory.isSecure(Socket)boolean
org.apache.http.conn.ssl.SSLSocketFactory.createSocket(Socket,String,int,boolean)Socket
org.apache.http.conn.ssl.SSLSocketFactory.setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier)void
org.apache.http.conn.ssl.SSLSocketFactory.getHostnameVerifier)org.apache.http.conn.ssl.X509HostnameVerifier
org.apache.http.conn.ssl.StrictHostnameVerifier.verify(String,String,String)void
org.apache.http.conn.ssl.StrictHostnameVerifier.toString)String
org.apache.http.conn.ssl.X509HostnameVerifier.verify(String,SSLSocket)void
org.apache.http.conn.ssl.X509HostnameVerifier.verify(String,java.security.cert.X509Certificate)void
org.apache.http.conn.ssl.X509HostnameVerifier.verify(String,String,String)void
org.apache.http.params.HttpConnectionParams.getSoTimeout(org.apache.http.params.HttpParams)int
org.apache.http.params.HttpConnectionParams.setSoTimeout(org.apache.http.params.HttpParams,int)void
org.apache.http.params.HttpConnectionParams.getTcpNoDelay(org.apache.http.params.HttpParams)boolean
org.apache.http.params.HttpConnectionParams.setTcpNoDelay(org.apache.http.params.HttpParams,boolean)void
org.apache.http.params.HttpConnectionParams.getSocketBufferSize(org.apache.http.params.HttpParams)int
org.apache.http.params.HttpConnectionParams.setSocketBufferSize(org.apache.http.params.HttpParams,int)void
org.apache.http.params.HttpConnectionParams.getLinger(org.apache.http.params.HttpParams)int
org.apache.http.params.HttpConnectionParams.setLinger(org.apache.http.params.HttpParams,int)void
org.apache.http.params.HttpConnectionParams.getConnectionTimeout(org.apache.http.params.HttpParams)int
org.apache.http.params.HttpConnectionParams.setConnectionTimeout(org.apache.http.params.HttpParams,int)void
org.apache.http.params.HttpConnectionParams.isStaleCheckingEnabled(org.apache.http.params.HttpParams)boolean
org.apache.http.params.HttpConnectionParams.setStaleCheckingEnabled(org.apache.http.params.HttpParams,boolean)void
org.json.JSONArray.length)int
org.json.JSONArray.put(boolean)org.json.JSONArray
org.json.JSONArray.put(double)org.json.JSONArray
org.json.JSONArray.put(int)org.json.JSONArray
org.json.JSONArray.put(long)org.json.JSONArray
org.json.JSONArray.put(Object)org.json.JSONArray
org.json.JSONArray.put(int,boolean)org.json.JSONArray
org.json.JSONArray.put(int,double)org.json.JSONArray
org.json.JSONArray.put(int,int)org.json.JSONArray
org.json.JSONArray.put(int,long)org.json.JSONArray
org.json.JSONArray.put(int,Object)org.json.JSONArray
org.json.JSONArray.isNull(int)boolean
org.json.JSONArray.get(int)Object
org.json.JSONArray.opt(int)Object
org.json.JSONArray.remove(int)Object
org.json.JSONArray.getBoolean(int)boolean
org.json.JSONArray.optBoolean(int)boolean
org.json.JSONArray.optBoolean(int,boolean)boolean
org.json.JSONArray.getDouble(int)double
org.json.JSONArray.optDouble(int)double
org.json.JSONArray.optDouble(int,double)double
org.json.JSONArray.getInt(int)int
org.json.JSONArray.optInt(int)int
org.json.JSONArray.optInt(int,int)int
org.json.JSONArray.getLong(int)long
org.json.JSONArray.optLong(int)long
org.json.JSONArray.optLong(int,long)long
org.json.JSONArray.getString(int)String
org.json.JSONArray.optString(int)String
org.json.JSONArray.optString(int,String)String
org.json.JSONArray.getJSONArray(int)org.json.JSONArray
org.json.JSONArray.optJSONArray(int)org.json.JSONArray
org.json.JSONArray.getJSONObject(int)org.json.JSONObject
org.json.JSONArray.optJSONObject(int)org.json.JSONObject
org.json.JSONArray.toJSONObject(org.json.JSONArray)org.json.JSONObject
org.json.JSONArray.join(String)String
org.json.JSONArray.toString)String
org.json.JSONArray.toString(int)String
org.json.JSONArray.equals(Object)boolean
org.json.JSONArray.hashCode)int
org.json.JSONObject.length)int
org.json.JSONObject.put(String,boolean)org.json.JSONObject
org.json.JSONObject.put(String,double)org.json.JSONObject
org.json.JSONObject.put(String,int)org.json.JSONObject
org.json.JSONObject.put(String,long)org.json.JSONObject
org.json.JSONObject.put(String,Object)org.json.JSONObject
org.json.JSONObject.putOpt(String,Object)org.json.JSONObject
org.json.JSONObject.accumulate(String,Object)org.json.JSONObject
org.json.JSONObject.remove(String)Object
org.json.JSONObject.isNull(String)boolean
org.json.JSONObject.has(String)boolean
org.json.JSONObject.get(String)Object
org.json.JSONObject.opt(String)Object
org.json.JSONObject.getBoolean(String)boolean
org.json.JSONObject.optBoolean(String)boolean
org.json.JSONObject.optBoolean(String,boolean)boolean
org.json.JSONObject.getDouble(String)double
org.json.JSONObject.optDouble(String)double
org.json.JSONObject.optDouble(String,double)double
org.json.JSONObject.getInt(String)int
org.json.JSONObject.optInt(String)int
org.json.JSONObject.optInt(String,int)int
org.json.JSONObject.getLong(String)long
org.json.JSONObject.optLong(String)long
org.json.JSONObject.optLong(String,long)long
org.json.JSONObject.getString(String)String
org.json.JSONObject.optString(String)String
org.json.JSONObject.optString(String,String)String
org.json.JSONObject.getJSONArray(String)org.json.JSONArray
org.json.JSONObject.optJSONArray(String)org.json.JSONArray
org.json.JSONObject.getJSONObject(String)org.json.JSONObject
org.json.JSONObject.optJSONObject(String)org.json.JSONObject
org.json.JSONObject.toJSONArray(org.json.JSONArray)org.json.JSONArray
org.json.JSONObject.keys)java.util.Iterator
org.json.JSONObject.names)org.json.JSONArray
org.json.JSONObject.toString)String
org.json.JSONObject.toString(int)String
org.json.JSONObject.numberToString(Number)String
org.json.JSONObject.quote(String)String
org.json.JSONObject.wrap(Object)Object
org.json.JSONStringer.array)org.json.JSONStringer
org.json.JSONStringer.endArray)org.json.JSONStringer
org.json.JSONStringer.object)org.json.JSONStringer
org.json.JSONStringer.endObject)org.json.JSONStringer
org.json.JSONStringer.value(Object)org.json.JSONStringer
org.json.JSONStringer.value(boolean)org.json.JSONStringer
org.json.JSONStringer.value(double)org.json.JSONStringer
org.json.JSONStringer.value(long)org.json.JSONStringer
org.json.JSONStringer.key(String)org.json.JSONStringer
org.json.JSONStringer.toString)String
org.json.JSONTokener.nextValue)Object
org.json.JSONTokener.nextString(char)String
org.json.JSONTokener.syntaxError(String)org.json.JSONException
org.json.JSONTokener.toString)String
org.json.JSONTokener.more)boolean
org.json.JSONTokener.next)char
org.json.JSONTokener.next(char)char
org.json.JSONTokener.nextClean)char
org.json.JSONTokener.next(int)String
org.json.JSONTokener.nextTo(String)String
org.json.JSONTokener.nextTo(char)String
org.json.JSONTokener.skipPast(String)void
org.json.JSONTokener.skipTo(char)char
org.json.JSONTokener.back)void
org.json.JSONTokener.dehexchar(char)int
org.w3c.dom.Attr.setValue(String)void
org.w3c.dom.CharacterData.getData)String
org.w3c.dom.CharacterData.setData(String)void
org.w3c.dom.CharacterData.substringData(int,int)String
org.w3c.dom.CharacterData.appendData(String)void
org.w3c.dom.CharacterData.insertData(int,String)void
org.w3c.dom.CharacterData.deleteData(int,int)void
org.w3c.dom.CharacterData.replaceData(int,int,String)void
org.w3c.dom.Document.createElement(String)org.w3c.dom.Element
org.w3c.dom.Document.createCDATASection(String)org.w3c.dom.CDATASection
org.w3c.dom.Document.createProcessingInstruction(String,String)org.w3c.dom.ProcessingInstruction
org.w3c.dom.Document.createAttribute(String)org.w3c.dom.Attr
org.w3c.dom.Document.createEntityReference(String)org.w3c.dom.EntityReference
org.w3c.dom.Document.importNode(org.w3c.dom.Node,boolean)org.w3c.dom.Node
org.w3c.dom.Document.createElementNS(String,String)org.w3c.dom.Element
org.w3c.dom.Document.createAttributeNS(String,String)org.w3c.dom.Attr
org.w3c.dom.Document.setXmlStandalone(boolean)void
org.w3c.dom.Document.setXmlVersion(String)void
org.w3c.dom.Document.adoptNode(org.w3c.dom.Node)org.w3c.dom.Node
org.w3c.dom.Document.renameNode(org.w3c.dom.Node,String,String)org.w3c.dom.Node
org.w3c.dom.DOMConfiguration.setParameter(String,Object)void
org.w3c.dom.DOMConfiguration.getParameter(String)Object
org.w3c.dom.DOMImplementation.createDocumentType(String,String,String)org.w3c.dom.DocumentType
org.w3c.dom.DOMImplementation.createDocument(String,String,org.w3c.dom.DocumentType)org.w3c.dom.Document
org.w3c.dom.Element.setAttribute(String,String)void
org.w3c.dom.Element.removeAttribute(String)void
org.w3c.dom.Element.setAttributeNode(org.w3c.dom.Attr)org.w3c.dom.Attr
org.w3c.dom.Element.removeAttributeNode(org.w3c.dom.Attr)org.w3c.dom.Attr
org.w3c.dom.Element.getAttributeNS(String,String)String
org.w3c.dom.Element.setAttributeNS(String,String,String)void
org.w3c.dom.Element.removeAttributeNS(String,String)void
org.w3c.dom.Element.getAttributeNodeNS(String,String)org.w3c.dom.Attr
org.w3c.dom.Element.setAttributeNodeNS(org.w3c.dom.Attr)org.w3c.dom.Attr
org.w3c.dom.Element.getElementsByTagNameNS(String,String)org.w3c.dom.NodeList
org.w3c.dom.Element.hasAttributeNS(String,String)boolean
org.w3c.dom.Element.setIdAttribute(String,boolean)void
org.w3c.dom.Element.setIdAttributeNS(String,String,boolean)void
org.w3c.dom.Element.setIdAttributeNode(org.w3c.dom.Attr,boolean)void
org.w3c.dom.NamedNodeMap.setNamedItem(org.w3c.dom.Node)org.w3c.dom.Node
org.w3c.dom.NamedNodeMap.removeNamedItem(String)org.w3c.dom.Node
org.w3c.dom.NamedNodeMap.getNamedItemNS(String,String)org.w3c.dom.Node
org.w3c.dom.NamedNodeMap.setNamedItemNS(org.w3c.dom.Node)org.w3c.dom.Node
org.w3c.dom.NamedNodeMap.removeNamedItemNS(String,String)org.w3c.dom.Node
org.w3c.dom.Node.getNodeValue)String
org.w3c.dom.Node.setNodeValue(String)void
org.w3c.dom.Node.insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)org.w3c.dom.Node
org.w3c.dom.Node.replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)org.w3c.dom.Node
org.w3c.dom.Node.removeChild(org.w3c.dom.Node)org.w3c.dom.Node
org.w3c.dom.Node.appendChild(org.w3c.dom.Node)org.w3c.dom.Node
org.w3c.dom.Node.setPrefix(String)void
org.w3c.dom.Node.compareDocumentPosition(org.w3c.dom.Node)short
org.w3c.dom.Node.getTextContent)String
org.w3c.dom.Node.setTextContent(String)void
org.w3c.dom.ProcessingInstruction.setData(String)void
org.w3c.dom.Text.splitText(int)org.w3c.dom.Text
org.w3c.dom.Text.replaceWholeText(String)org.w3c.dom.Text
org.w3c.dom.ls.DOMImplementationLS.createLSParser(short,String)org.w3c.dom.ls.LSParser
org.w3c.dom.ls.LSParser.parse(org.w3c.dom.ls.LSInput)Document
org.w3c.dom.ls.LSParser.parseURI(String)Document
org.w3c.dom.ls.LSParser.parseWithContext(org.w3c.dom.ls.LSInput,Node,short)Node
org.w3c.dom.ls.LSSerializer.write(Node,org.w3c.dom.ls.LSOutput)boolean
org.w3c.dom.ls.LSSerializer.writeToURI(Node,String)boolean
org.w3c.dom.ls.LSSerializer.writeToString(Node)String
org.xml.sax.ContentHandler.startDocument)void
org.xml.sax.ContentHandler.endDocument)void
org.xml.sax.ContentHandler.startPrefixMapping(String,String)void
org.xml.sax.ContentHandler.endPrefixMapping(String)void
org.xml.sax.ContentHandler.startElement(String,String,String,org.xml.sax.Attributes)void
org.xml.sax.ContentHandler.endElement(String,String,String)void
org.xml.sax.ContentHandler.characters(char,int,int)void
org.xml.sax.ContentHandler.ignorableWhitespace(char,int,int)void
org.xml.sax.ContentHandler.processingInstruction(String,String)void
org.xml.sax.ContentHandler.skippedEntity(String)void
org.xml.sax.DocumentHandler.startDocument)void
org.xml.sax.DocumentHandler.endDocument)void
org.xml.sax.DocumentHandler.startElement(String,org.xml.sax.AttributeList)void
org.xml.sax.DocumentHandler.endElement(String)void
org.xml.sax.DocumentHandler.characters(char,int,int)void
org.xml.sax.DocumentHandler.ignorableWhitespace(char,int,int)void
org.xml.sax.DocumentHandler.processingInstruction(String,String)void
org.xml.sax.DTDHandler.notationDecl(String,String,String)void
org.xml.sax.DTDHandler.unparsedEntityDecl(String,String,String,String)void
org.xml.sax.EntityResolver.resolveEntity(String,String)org.xml.sax.InputSource
org.xml.sax.ErrorHandler.warning(org.xml.sax.SAXParseException)void
org.xml.sax.ErrorHandler.error(org.xml.sax.SAXParseException)void
org.xml.sax.ErrorHandler.fatalError(org.xml.sax.SAXParseException)void
org.xml.sax.HandlerBase.resolveEntity(String,String)org.xml.sax.InputSource
org.xml.sax.HandlerBase.notationDecl(String,String,String)void
org.xml.sax.HandlerBase.unparsedEntityDecl(String,String,String,String)void
org.xml.sax.HandlerBase.setDocumentLocator(org.xml.sax.Locator)void
org.xml.sax.HandlerBase.startDocument)void
org.xml.sax.HandlerBase.endDocument)void
org.xml.sax.HandlerBase.startElement(String,org.xml.sax.AttributeList)void
org.xml.sax.HandlerBase.endElement(String)void
org.xml.sax.HandlerBase.characters(char,int,int)void
org.xml.sax.HandlerBase.ignorableWhitespace(char,int,int)void
org.xml.sax.HandlerBase.processingInstruction(String,String)void
org.xml.sax.HandlerBase.warning(org.xml.sax.SAXParseException)void
org.xml.sax.HandlerBase.error(org.xml.sax.SAXParseException)void
org.xml.sax.HandlerBase.fatalError(org.xml.sax.SAXParseException)void
org.xml.sax.InputSource.setPublicId(String)void
org.xml.sax.InputSource.getPublicId)String
org.xml.sax.InputSource.setSystemId(String)void
org.xml.sax.InputSource.getSystemId)String
org.xml.sax.InputSource.setByteStream(java.io.InputStream)void
org.xml.sax.InputSource.getByteStream)java.io.InputStream
org.xml.sax.InputSource.setEncoding(String)void
org.xml.sax.InputSource.getEncoding)String
org.xml.sax.InputSource.setCharacterStream(java.io.Reader)void
org.xml.sax.InputSource.getCharacterStream)java.io.Reader
org.xml.sax.Parser.setLocale(java.util.Locale)void
org.xml.sax.Parser.parse(org.xml.sax.InputSource)void
org.xml.sax.Parser.parse(String)void
org.xml.sax.SAXException.getMessage)String
org.xml.sax.SAXException.getException)Exception
org.xml.sax.SAXException.toString)String
org.xml.sax.SAXParseException.getPublicId)String
org.xml.sax.SAXParseException.getSystemId)String
org.xml.sax.SAXParseException.getLineNumber)int
org.xml.sax.SAXParseException.getColumnNumber)int
org.xml.sax.XMLReader.getFeature(String)boolean
org.xml.sax.XMLReader.setFeature(String,boolean)void
org.xml.sax.XMLReader.getProperty(String)Object
org.xml.sax.XMLReader.setProperty(String,Object)void
org.xml.sax.XMLReader.parse(org.xml.sax.InputSource)void
org.xml.sax.XMLReader.parse(String)void
org.xml.sax.ext.Attributes2Impl.isDeclared(int)boolean
org.xml.sax.ext.Attributes2Impl.isDeclared(String,String)boolean
org.xml.sax.ext.Attributes2Impl.isDeclared(String)boolean
org.xml.sax.ext.Attributes2Impl.isSpecified(int)boolean
org.xml.sax.ext.Attributes2Impl.isSpecified(String,String)boolean
org.xml.sax.ext.Attributes2Impl.isSpecified(String)boolean
org.xml.sax.ext.Attributes2Impl.setAttributes(org.xml.sax.Attributes)void
org.xml.sax.ext.Attributes2Impl.addAttribute(String,String,String,String,String)void
org.xml.sax.ext.Attributes2Impl.removeAttribute(int)void
org.xml.sax.ext.Attributes2Impl.setDeclared(int,boolean)void
org.xml.sax.ext.Attributes2Impl.setSpecified(int,boolean)void
org.xml.sax.ext.DeclHandler.elementDecl(String,String)void
org.xml.sax.ext.DeclHandler.attributeDecl(String,String,String,String,String)void
org.xml.sax.ext.DeclHandler.internalEntityDecl(String,String)void
org.xml.sax.ext.DeclHandler.externalEntityDecl(String,String,String)void
org.xml.sax.ext.DefaultHandler2.startCDATA)void
org.xml.sax.ext.DefaultHandler2.endCDATA)void
org.xml.sax.ext.DefaultHandler2.startDTD(String,String,String)void
org.xml.sax.ext.DefaultHandler2.endDTD)void
org.xml.sax.ext.DefaultHandler2.startEntity(String)void
org.xml.sax.ext.DefaultHandler2.endEntity(String)void
org.xml.sax.ext.DefaultHandler2.comment(char,int,int)void
org.xml.sax.ext.DefaultHandler2.attributeDecl(String,String,String,String,String)void
org.xml.sax.ext.DefaultHandler2.elementDecl(String,String)void
org.xml.sax.ext.DefaultHandler2.externalEntityDecl(String,String,String)void
org.xml.sax.ext.DefaultHandler2.internalEntityDecl(String,String)void
org.xml.sax.ext.DefaultHandler2.getExternalSubset(String,String)org.xml.sax.InputSource
org.xml.sax.ext.DefaultHandler2.resolveEntity(String,String,String,String)org.xml.sax.InputSource
org.xml.sax.ext.DefaultHandler2.resolveEntity(String,String)org.xml.sax.InputSource
org.xml.sax.ext.EntityResolver2.getExternalSubset(String,String)InputSource
org.xml.sax.ext.EntityResolver2.resolveEntity(String,String,String,String)InputSource
org.xml.sax.ext.LexicalHandler.startDTD(String,String,String)void
org.xml.sax.ext.LexicalHandler.endDTD)void
org.xml.sax.ext.LexicalHandler.startEntity(String)void
org.xml.sax.ext.LexicalHandler.endEntity(String)void
org.xml.sax.ext.LexicalHandler.startCDATA)void
org.xml.sax.ext.LexicalHandler.endCDATA)void
org.xml.sax.ext.LexicalHandler.comment(char,int,int)void
org.xml.sax.ext.Locator2Impl.getXMLVersion)String
org.xml.sax.ext.Locator2Impl.getEncoding)String
org.xml.sax.ext.Locator2Impl.setXMLVersion(String)void
org.xml.sax.ext.Locator2Impl.setEncoding(String)void
org.xml.sax.helpers.AttributeListImpl.setAttributeList(org.xml.sax.AttributeList)void
org.xml.sax.helpers.AttributeListImpl.addAttribute(String,String,String)void
org.xml.sax.helpers.AttributeListImpl.removeAttribute(String)void
org.xml.sax.helpers.AttributeListImpl.clear)void
org.xml.sax.helpers.AttributeListImpl.getLength)int
org.xml.sax.helpers.AttributeListImpl.getName(int)String
org.xml.sax.helpers.AttributeListImpl.getType(int)String
org.xml.sax.helpers.AttributeListImpl.getValue(int)String
org.xml.sax.helpers.AttributeListImpl.getType(String)String
org.xml.sax.helpers.AttributeListImpl.getValue(String)String
org.xml.sax.helpers.AttributesImpl.getLength)int
org.xml.sax.helpers.AttributesImpl.getURI(int)String
org.xml.sax.helpers.AttributesImpl.getLocalName(int)String
org.xml.sax.helpers.AttributesImpl.getQName(int)String
org.xml.sax.helpers.AttributesImpl.getType(int)String
org.xml.sax.helpers.AttributesImpl.getValue(int)String
org.xml.sax.helpers.AttributesImpl.getIndex(String,String)int
org.xml.sax.helpers.AttributesImpl.getIndex(String)int
org.xml.sax.helpers.AttributesImpl.getType(String,String)String
org.xml.sax.helpers.AttributesImpl.getType(String)String
org.xml.sax.helpers.AttributesImpl.getValue(String,String)String
org.xml.sax.helpers.AttributesImpl.getValue(String)String
org.xml.sax.helpers.AttributesImpl.clear)void
org.xml.sax.helpers.AttributesImpl.setAttributes(org.xml.sax.Attributes)void
org.xml.sax.helpers.AttributesImpl.addAttribute(String,String,String,String,String)void
org.xml.sax.helpers.AttributesImpl.setAttribute(int,String,String,String,String,String)void
org.xml.sax.helpers.AttributesImpl.removeAttribute(int)void
org.xml.sax.helpers.AttributesImpl.setURI(int,String)void
org.xml.sax.helpers.AttributesImpl.setLocalName(int,String)void
org.xml.sax.helpers.AttributesImpl.setQName(int,String)void
org.xml.sax.helpers.AttributesImpl.setType(int,String)void
org.xml.sax.helpers.AttributesImpl.setValue(int,String)void
org.xml.sax.helpers.DefaultHandler.resolveEntity(String,String)InputSource
org.xml.sax.helpers.DefaultHandler.notationDecl(String,String,String)void
org.xml.sax.helpers.DefaultHandler.unparsedEntityDecl(String,String,String,String)void
org.xml.sax.helpers.DefaultHandler.setDocumentLocator(Locator)void
org.xml.sax.helpers.DefaultHandler.startDocument)void
org.xml.sax.helpers.DefaultHandler.endDocument)void
org.xml.sax.helpers.DefaultHandler.startPrefixMapping(String,String)void
org.xml.sax.helpers.DefaultHandler.endPrefixMapping(String)void
org.xml.sax.helpers.DefaultHandler.startElement(String,String,String,Attributes)void
org.xml.sax.helpers.DefaultHandler.endElement(String,String,String)void
org.xml.sax.helpers.DefaultHandler.characters(char,int,int)void
org.xml.sax.helpers.DefaultHandler.ignorableWhitespace(char,int,int)void
org.xml.sax.helpers.DefaultHandler.processingInstruction(String,String)void
org.xml.sax.helpers.DefaultHandler.skippedEntity(String)void
org.xml.sax.helpers.DefaultHandler.warning(SAXParseException)void
org.xml.sax.helpers.DefaultHandler.error(SAXParseException)void
org.xml.sax.helpers.DefaultHandler.fatalError(SAXParseException)void
org.xml.sax.helpers.LocatorImpl.getPublicId)String
org.xml.sax.helpers.LocatorImpl.getSystemId)String
org.xml.sax.helpers.LocatorImpl.getLineNumber)int
org.xml.sax.helpers.LocatorImpl.getColumnNumber)int
org.xml.sax.helpers.LocatorImpl.setPublicId(String)void
org.xml.sax.helpers.LocatorImpl.setSystemId(String)void
org.xml.sax.helpers.LocatorImpl.setLineNumber(int)void
org.xml.sax.helpers.LocatorImpl.setColumnNumber(int)void
org.xml.sax.helpers.NamespaceSupport.reset)void
org.xml.sax.helpers.NamespaceSupport.pushContext)void
org.xml.sax.helpers.NamespaceSupport.popContext)void
org.xml.sax.helpers.NamespaceSupport.declarePrefix(String,String)boolean
org.xml.sax.helpers.NamespaceSupport.getURI(String)String
org.xml.sax.helpers.NamespaceSupport.getPrefixes)java.util.Enumeration
org.xml.sax.helpers.NamespaceSupport.getPrefix(String)String
org.xml.sax.helpers.NamespaceSupport.getPrefixes(String)java.util.Enumeration
org.xml.sax.helpers.NamespaceSupport.getDeclaredPrefixes)java.util.Enumeration
org.xml.sax.helpers.NamespaceSupport.setNamespaceDeclUris(boolean)void
org.xml.sax.helpers.NamespaceSupport.isNamespaceDeclUris)boolean
org.xml.sax.helpers.ParserAdapter.setFeature(String,boolean)void
org.xml.sax.helpers.ParserAdapter.getFeature(String)boolean
org.xml.sax.helpers.ParserAdapter.setProperty(String,Object)void
org.xml.sax.helpers.ParserAdapter.getProperty(String)Object
org.xml.sax.helpers.ParserAdapter.setEntityResolver(EntityResolver)void
org.xml.sax.helpers.ParserAdapter.getEntityResolver)EntityResolver
org.xml.sax.helpers.ParserAdapter.setDTDHandler(DTDHandler)void
org.xml.sax.helpers.ParserAdapter.getDTDHandler)DTDHandler
org.xml.sax.helpers.ParserAdapter.setContentHandler(ContentHandler)void
org.xml.sax.helpers.ParserAdapter.getContentHandler)ContentHandler
org.xml.sax.helpers.ParserAdapter.setErrorHandler(ErrorHandler)void
org.xml.sax.helpers.ParserAdapter.getErrorHandler)ErrorHandler
org.xml.sax.helpers.ParserAdapter.parse(String)void
org.xml.sax.helpers.ParserAdapter.parse(InputSource)void
org.xml.sax.helpers.ParserAdapter.setDocumentLocator(Locator)void
org.xml.sax.helpers.ParserAdapter.startDocument)void
org.xml.sax.helpers.ParserAdapter.endDocument)void
org.xml.sax.helpers.ParserAdapter.startElement(String,AttributeList)void
org.xml.sax.helpers.ParserAdapter.endElement(String)void
org.xml.sax.helpers.ParserAdapter.characters(char,int,int)void
org.xml.sax.helpers.ParserAdapter.ignorableWhitespace(char,int,int)void
org.xml.sax.helpers.ParserAdapter.processingInstruction(String,String)void
org.xml.sax.helpers.ParserFactory.makeParser)org.xml.sax.Parser
org.xml.sax.helpers.ParserFactory.makeParser(String)org.xml.sax.Parser
org.xml.sax.helpers.XMLFilterImpl.setParent(XMLReader)void
org.xml.sax.helpers.XMLFilterImpl.getParent)XMLReader
org.xml.sax.helpers.XMLFilterImpl.setFeature(String,boolean)void
org.xml.sax.helpers.XMLFilterImpl.getFeature(String)boolean
org.xml.sax.helpers.XMLFilterImpl.setProperty(String,Object)void
org.xml.sax.helpers.XMLFilterImpl.getProperty(String)Object
org.xml.sax.helpers.XMLFilterImpl.setEntityResolver(EntityResolver)void
org.xml.sax.helpers.XMLFilterImpl.getEntityResolver)EntityResolver
org.xml.sax.helpers.XMLFilterImpl.setDTDHandler(DTDHandler)void
org.xml.sax.helpers.XMLFilterImpl.getDTDHandler)DTDHandler
org.xml.sax.helpers.XMLFilterImpl.setContentHandler(ContentHandler)void
org.xml.sax.helpers.XMLFilterImpl.getContentHandler)ContentHandler
org.xml.sax.helpers.XMLFilterImpl.setErrorHandler(ErrorHandler)void
org.xml.sax.helpers.XMLFilterImpl.getErrorHandler)ErrorHandler
org.xml.sax.helpers.XMLFilterImpl.parse(InputSource)void
org.xml.sax.helpers.XMLFilterImpl.parse(String)void
org.xml.sax.helpers.XMLFilterImpl.resolveEntity(String,String)InputSource
org.xml.sax.helpers.XMLFilterImpl.notationDecl(String,String,String)void
org.xml.sax.helpers.XMLFilterImpl.unparsedEntityDecl(String,String,String,String)void
org.xml.sax.helpers.XMLFilterImpl.setDocumentLocator(Locator)void
org.xml.sax.helpers.XMLFilterImpl.startDocument)void
org.xml.sax.helpers.XMLFilterImpl.endDocument)void
org.xml.sax.helpers.XMLFilterImpl.startPrefixMapping(String,String)void
org.xml.sax.helpers.XMLFilterImpl.endPrefixMapping(String)void
org.xml.sax.helpers.XMLFilterImpl.startElement(String,String,String,Attributes)void
org.xml.sax.helpers.XMLFilterImpl.endElement(String,String,String)void
org.xml.sax.helpers.XMLFilterImpl.characters(char,int,int)void
org.xml.sax.helpers.XMLFilterImpl.ignorableWhitespace(char,int,int)void
org.xml.sax.helpers.XMLFilterImpl.processingInstruction(String,String)void
org.xml.sax.helpers.XMLFilterImpl.skippedEntity(String)void
org.xml.sax.helpers.XMLFilterImpl.warning(SAXParseException)void
org.xml.sax.helpers.XMLFilterImpl.error(SAXParseException)void
org.xml.sax.helpers.XMLFilterImpl.fatalError(SAXParseException)void
org.xml.sax.helpers.XMLReaderAdapter.setLocale(java.util.Locale)void
org.xml.sax.helpers.XMLReaderAdapter.setEntityResolver(EntityResolver)void
org.xml.sax.helpers.XMLReaderAdapter.setDTDHandler(DTDHandler)void
org.xml.sax.helpers.XMLReaderAdapter.setDocumentHandler(DocumentHandler)void
org.xml.sax.helpers.XMLReaderAdapter.setErrorHandler(ErrorHandler)void
org.xml.sax.helpers.XMLReaderAdapter.parse(String)void
org.xml.sax.helpers.XMLReaderAdapter.parse(InputSource)void
org.xml.sax.helpers.XMLReaderAdapter.setDocumentLocator(Locator)void
org.xml.sax.helpers.XMLReaderAdapter.startDocument)void
org.xml.sax.helpers.XMLReaderAdapter.endDocument)void
org.xml.sax.helpers.XMLReaderAdapter.startPrefixMapping(String,String)void
org.xml.sax.helpers.XMLReaderAdapter.endPrefixMapping(String)void
org.xml.sax.helpers.XMLReaderAdapter.startElement(String,String,String,Attributes)void
org.xml.sax.helpers.XMLReaderAdapter.endElement(String,String,String)void
org.xml.sax.helpers.XMLReaderAdapter.characters(char,int,int)void
org.xml.sax.helpers.XMLReaderAdapter.ignorableWhitespace(char,int,int)void
org.xml.sax.helpers.XMLReaderAdapter.processingInstruction(String,String)void
org.xml.sax.helpers.XMLReaderAdapter.skippedEntity(String)void
org.xml.sax.helpers.XMLReaderFactory.createXMLReader)org.xml.sax.XMLReader
org.xml.sax.helpers.XMLReaderFactory.createXMLReader(String)org.xml.sax.XMLReader
org.xmlpull.v1.XmlPullParser.setFeature(String,boolean)void
org.xmlpull.v1.XmlPullParser.setProperty(String,Object)void
org.xmlpull.v1.XmlPullParser.setInput(Reader)void
org.xmlpull.v1.XmlPullParser.setInput(InputStream,String)void
org.xmlpull.v1.XmlPullParser.defineEntityReplacementText(String,String)void
org.xmlpull.v1.XmlPullParser.getNamespaceCount(int)int
org.xmlpull.v1.XmlPullParser.getNamespacePrefix(int)String
org.xmlpull.v1.XmlPullParser.getNamespaceUri(int)String
org.xmlpull.v1.XmlPullParser.isWhitespace)boolean
org.xmlpull.v1.XmlPullParser.isEmptyElementTag)boolean
org.xmlpull.v1.XmlPullParser.getEventType)int
org.xmlpull.v1.XmlPullParser.next)int
org.xmlpull.v1.XmlPullParser.nextToken)int
org.xmlpull.v1.XmlPullParser.require(int,String,String)void
org.xmlpull.v1.XmlPullParser.nextText)String
org.xmlpull.v1.XmlPullParser.nextTag)int
org.xmlpull.v1.XmlPullParserException.getDetail)Throwable
org.xmlpull.v1.XmlPullParserException.getLineNumber)int
org.xmlpull.v1.XmlPullParserException.getColumnNumber)int
org.xmlpull.v1.XmlPullParserException.printStackTrace)void
org.xmlpull.v1.XmlPullParserFactory.setFeature(String,boolean)void
org.xmlpull.v1.XmlPullParserFactory.getFeature(String)boolean
org.xmlpull.v1.XmlPullParserFactory.setNamespaceAware(boolean)void
org.xmlpull.v1.XmlPullParserFactory.isNamespaceAware)boolean
org.xmlpull.v1.XmlPullParserFactory.setValidating(boolean)void
org.xmlpull.v1.XmlPullParserFactory.isValidating)boolean
org.xmlpull.v1.XmlPullParserFactory.newPullParser)org.xmlpull.v1.XmlPullParser
org.xmlpull.v1.XmlPullParserFactory.newSerializer)org.xmlpull.v1.XmlSerializer
org.xmlpull.v1.XmlPullParserFactory.newInstance)org.xmlpull.v1.XmlPullParserFactory
org.xmlpull.v1.XmlPullParserFactory.newInstance(String,Class)org.xmlpull.v1.XmlPullParserFactory
org.xmlpull.v1.XmlSerializer.setFeature(String,boolean)void
org.xmlpull.v1.XmlSerializer.setProperty(String,Object)void
org.xmlpull.v1.XmlSerializer.setOutput(OutputStream,String)void
org.xmlpull.v1.XmlSerializer.setOutput(Writer)void
org.xmlpull.v1.XmlSerializer.startDocument(String,Boolean)void
org.xmlpull.v1.XmlSerializer.endDocument)void
org.xmlpull.v1.XmlSerializer.setPrefix(String,String)void
org.xmlpull.v1.XmlSerializer.getPrefix(String,boolean)String
org.xmlpull.v1.XmlSerializer.startTag(String,String)org.xmlpull.v1.XmlSerializer
org.xmlpull.v1.XmlSerializer.attribute(String,String,String)org.xmlpull.v1.XmlSerializer
org.xmlpull.v1.XmlSerializer.endTag(String,String)org.xmlpull.v1.XmlSerializer
org.xmlpull.v1.XmlSerializer.text(String)org.xmlpull.v1.XmlSerializer
org.xmlpull.v1.XmlSerializer.text(char,int,int)org.xmlpull.v1.XmlSerializer
org.xmlpull.v1.XmlSerializer.cdsect(String)void
org.xmlpull.v1.XmlSerializer.entityRef(String)void
org.xmlpull.v1.XmlSerializer.processingInstruction(String)void
org.xmlpull.v1.XmlSerializer.comment(String)void
org.xmlpull.v1.XmlSerializer.docdecl(String)void
org.xmlpull.v1.XmlSerializer.ignorableWhitespace(String)void
org.xmlpull.v1.XmlSerializer.flush)void
org.xmlpull.v1.sax2.Driver.getLength)int
org.xmlpull.v1.sax2.Driver.getURI(int)String
org.xmlpull.v1.sax2.Driver.getLocalName(int)String
org.xmlpull.v1.sax2.Driver.getQName(int)String
org.xmlpull.v1.sax2.Driver.getType(int)String
org.xmlpull.v1.sax2.Driver.getValue(int)String
org.xmlpull.v1.sax2.Driver.getIndex(String,String)int
org.xmlpull.v1.sax2.Driver.getIndex(String)int
org.xmlpull.v1.sax2.Driver.getType(String,String)String
org.xmlpull.v1.sax2.Driver.getType(String)String
org.xmlpull.v1.sax2.Driver.getValue(String,String)String
org.xmlpull.v1.sax2.Driver.getValue(String)String
org.xmlpull.v1.sax2.Driver.getPublicId)String
org.xmlpull.v1.sax2.Driver.getSystemId)String
org.xmlpull.v1.sax2.Driver.getLineNumber)int
org.xmlpull.v1.sax2.Driver.getColumnNumber)int
org.xmlpull.v1.sax2.Driver.getFeature(String)boolean
org.xmlpull.v1.sax2.Driver.setFeature(String,boolean)void
org.xmlpull.v1.sax2.Driver.getProperty(String)Object
org.xmlpull.v1.sax2.Driver.setProperty(String,Object)void
org.xmlpull.v1.sax2.Driver.setEntityResolver(EntityResolver)void
org.xmlpull.v1.sax2.Driver.getEntityResolver)EntityResolver
org.xmlpull.v1.sax2.Driver.setDTDHandler(DTDHandler)void
org.xmlpull.v1.sax2.Driver.getDTDHandler)DTDHandler
org.xmlpull.v1.sax2.Driver.setContentHandler(ContentHandler)void
org.xmlpull.v1.sax2.Driver.getContentHandler)ContentHandler
org.xmlpull.v1.sax2.Driver.setErrorHandler(ErrorHandler)void
org.xmlpull.v1.sax2.Driver.getErrorHandler)ErrorHandler
org.xmlpull.v1.sax2.Driver.parse(InputSource)void
org.xmlpull.v1.sax2.Driver.parse(String)void
org.xmlpull.v1.sax2.Driver.parseSubTree(org.xmlpull.v1.XmlPullParser)void
org.xmlpull.v1.sax2.Driver.startElement(String,String,String)void
